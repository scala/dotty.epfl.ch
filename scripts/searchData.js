pages = [{"l":"api/index.html#","e":false,"i":"","n":"Scala 3","t":"Scala 3","d":"","k":"static","x":""},
{"l":"api/scala.html#","e":false,"i":"","n":"scala","t":"scala","d":"","k":"package","x":"Core Scala types. They are always available without an explicit import."},
{"l":"api/scala.html#&-0","e":false,"i":"","n":"&","t":"& = [X0, X1] =>> X0 & X1","d":"scala","k":"type","x":"The intersection of two types."},
{"l":"api/scala.html#+:-0","e":false,"i":"","n":"+:","t":"+:: +:.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#:+-0","e":false,"i":"","n":":+","t":":+: :+.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#::-0","e":false,"i":"","n":"::","t":"::[+A] = ::[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#::-0","e":false,"i":"","n":"::","t":"::: ::.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#AbstractMethodError-0","e":false,"i":"","n":"AbstractMethodError","t":"AbstractMethodError = AbstractMethodError","d":"scala","k":"type","x":""},
{"l":"api/scala.html#AnyRef-0","e":false,"i":"","n":"AnyRef","t":"AnyRef: Specializable","d":"scala","k":"val","x":""},
{"l":"api/scala.html#ArrayIndexOutOfBoundsException-0","e":false,"i":"","n":"ArrayIndexOutOfBoundsException","t":"ArrayIndexOutOfBoundsException = ArrayIndexOutOfBoundsException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#BigDecimal-0","e":false,"i":"","n":"BigDecimal","t":"BigDecimal = BigDecimal","d":"scala","k":"type","x":""},
{"l":"api/scala.html#BigDecimal-0","e":false,"i":"","n":"BigDecimal","t":"BigDecimal: BigDecimal.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#BigInt-0","e":false,"i":"","n":"BigInt","t":"BigInt = BigInt","d":"scala","k":"type","x":""},
{"l":"api/scala.html#BigInt-0","e":false,"i":"","n":"BigInt","t":"BigInt: BigInt.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#BufferedIterator-0","e":false,"i":"","n":"BufferedIterator","t":"BufferedIterator[+A] = BufferedIterator[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#ClassCastException-0","e":false,"i":"","n":"ClassCastException","t":"ClassCastException = ClassCastException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Cloneable-0","e":false,"i":"","n":"Cloneable","t":"Cloneable = Cloneable","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Either-0","e":false,"i":"","n":"Either","t":"Either[+A, +B] = Either[A, B]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Either-0","e":false,"i":"","n":"Either","t":"Either: Either.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#EmptyTuple-0","e":false,"i":"","n":"EmptyTuple","t":"EmptyTuple = EmptyTuple.type","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Equiv-0","e":false,"i":"","n":"Equiv","t":"Equiv[T] = Equiv[T]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Equiv-0","e":false,"i":"","n":"Equiv","t":"Equiv: Equiv.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#Error-0","e":false,"i":"","n":"Error","t":"Error = Error","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Exception-0","e":false,"i":"","n":"Exception","t":"Exception = Exception","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Fractional-0","e":false,"i":"","n":"Fractional","t":"Fractional[T] = Fractional[T]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Fractional-0","e":false,"i":"","n":"Fractional","t":"Fractional: Fractional.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#IArray-0","e":false,"i":"","n":"IArray","t":"IArray[+T]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#IllegalArgumentException-0","e":false,"i":"","n":"IllegalArgumentException","t":"IllegalArgumentException = IllegalArgumentException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#IndexOutOfBoundsException-0","e":false,"i":"","n":"IndexOutOfBoundsException","t":"IndexOutOfBoundsException = IndexOutOfBoundsException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#IndexedSeq-0","e":false,"i":"","n":"IndexedSeq","t":"IndexedSeq[+A] = IndexedSeq[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#IndexedSeq-0","e":false,"i":"","n":"IndexedSeq","t":"IndexedSeq: IndexedSeq.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#Integral-0","e":false,"i":"","n":"Integral","t":"Integral[T] = Integral[T]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Integral-0","e":false,"i":"","n":"Integral","t":"Integral: Integral.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#InterruptedException-0","e":false,"i":"","n":"InterruptedException","t":"InterruptedException = InterruptedException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Iterable-0","e":false,"i":"","n":"Iterable","t":"Iterable[+A] = Iterable[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Iterable-0","e":false,"i":"","n":"Iterable","t":"Iterable: Iterable.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#IterableOnce-0","e":false,"i":"","n":"IterableOnce","t":"IterableOnce[+A] = IterableOnce[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Iterator-0","e":false,"i":"","n":"Iterator","t":"Iterator[+A] = Iterator[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Iterator-0","e":false,"i":"","n":"Iterator","t":"Iterator: Iterator.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#LazyList-0","e":false,"i":"","n":"LazyList","t":"LazyList[+A] = LazyList[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#LazyList-0","e":false,"i":"","n":"LazyList","t":"LazyList: LazyList.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#Left-0","e":false,"i":"","n":"Left","t":"Left[+A, +B] = Left[A, B]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Left-0","e":false,"i":"","n":"Left","t":"Left: Left.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#List-0","e":false,"i":"","n":"List","t":"List[+A] = List[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#List-0","e":false,"i":"","n":"List","t":"List: List.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#Nil-0","e":false,"i":"","n":"Nil","t":"Nil: Nil.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#NoSuchElementException-0","e":false,"i":"","n":"NoSuchElementException","t":"NoSuchElementException = NoSuchElementException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#NullPointerException-0","e":false,"i":"","n":"NullPointerException","t":"NullPointerException = NullPointerException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#NumberFormatException-0","e":false,"i":"","n":"NumberFormatException","t":"NumberFormatException = NumberFormatException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Numeric-0","e":false,"i":"","n":"Numeric","t":"Numeric[T] = Numeric[T]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Numeric-0","e":false,"i":"","n":"Numeric","t":"Numeric: Numeric.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#Ordered-0","e":false,"i":"","n":"Ordered","t":"Ordered[T] = Ordered[T]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Ordered-0","e":false,"i":"","n":"Ordered","t":"Ordered: Ordered.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#Ordering-0","e":false,"i":"","n":"Ordering","t":"Ordering[T] = Ordering[T]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Ordering-0","e":false,"i":"","n":"Ordering","t":"Ordering: Ordering.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#PartialOrdering-0","e":false,"i":"","n":"PartialOrdering","t":"PartialOrdering[T] = PartialOrdering[T]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#PartiallyOrdered-0","e":false,"i":"","n":"PartiallyOrdered","t":"PartiallyOrdered[T] = PartiallyOrdered[T]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Range-0","e":false,"i":"","n":"Range","t":"Range = Range","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Range-0","e":false,"i":"","n":"Range","t":"Range: Range.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#Right-0","e":false,"i":"","n":"Right","t":"Right[+A, +B] = Right[A, B]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Right-0","e":false,"i":"","n":"Right","t":"Right: Right.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#RuntimeException-0","e":false,"i":"","n":"RuntimeException","t":"RuntimeException = RuntimeException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Seq-0","e":false,"i":"","n":"Seq","t":"Seq[+A] = Seq[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Seq-0","e":false,"i":"","n":"Seq","t":"Seq: Seq.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#Serializable-0","e":false,"i":"","n":"Serializable","t":"Serializable = Serializable","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Stream-0","e":false,"i":"","n":"Stream","t":"Stream[+A] = Stream[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Stream-0","e":false,"i":"","n":"Stream","t":"Stream: Stream.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#StringBuilder-0","e":false,"i":"","n":"StringBuilder","t":"StringBuilder = StringBuilder","d":"scala","k":"type","x":""},
{"l":"api/scala.html#StringBuilder-0","e":false,"i":"","n":"StringBuilder","t":"StringBuilder: StringBuilder.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#StringIndexOutOfBoundsException-0","e":false,"i":"","n":"StringIndexOutOfBoundsException","t":"StringIndexOutOfBoundsException = StringIndexOutOfBoundsException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Throwable-0","e":false,"i":"","n":"Throwable","t":"Throwable = Throwable","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Traversable-0","e":false,"i":"","n":"Traversable","t":"Traversable[+A] = Iterable[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Traversable-0","e":false,"i":"","n":"Traversable","t":"Traversable: Iterable.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#TraversableOnce-0","e":false,"i":"","n":"TraversableOnce","t":"TraversableOnce[+A] = IterableOnce[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#UnsupportedOperationException-0","e":false,"i":"","n":"UnsupportedOperationException","t":"UnsupportedOperationException = UnsupportedOperationException","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Vector-0","e":false,"i":"","n":"Vector","t":"Vector[+A] = Vector[A]","d":"scala","k":"type","x":""},
{"l":"api/scala.html#Vector-0","e":false,"i":"","n":"Vector","t":"Vector: Vector.type","d":"scala","k":"val","x":""},
{"l":"api/scala.html#|-0","e":false,"i":"","n":"|","t":"| = [X0, X1] =>> X0 | X1","d":"scala","k":"type","x":"The union of two types."},
{"l":"api/scala/annotation.html#","e":false,"i":"","n":"scala.annotation","t":"scala.annotation","d":"","k":"package","x":""},
{"l":"api/scala/annotation/meta.html#","e":false,"i":"","n":"scala.annotation.meta","t":"scala.annotation.meta","d":"","k":"package","x":"When defining a field, the Scala compiler creates up to four accessors\nfor it: a getter, a setter, and if the field is annotated with\n@BeanProperty, a bean getter and a bean setter."},
{"l":"api/scala/annotation/meta/beanGetter.html#","e":false,"i":"","n":"beanGetter","t":"beanGetter extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"Consult the documentation in package scala.annotation.meta.\n"},
{"l":"api/scala/annotation/meta/beanSetter.html#","e":false,"i":"","n":"beanSetter","t":"beanSetter extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"Consult the documentation in package scala.annotation.meta.\n"},
{"l":"api/scala/annotation/meta/companionClass.html#","e":false,"i":"","n":"companionClass","t":"companionClass extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"When defining an implicit class, the Scala compiler creates an implicit\nconversion method for it. Annotations @companionClass and @companionMethod\ncontrol where an annotation on the implicit class will go. By default, annotations\non an implicit class end up only on the class."},
{"l":"api/scala/annotation/meta/companionMethod.html#","e":false,"i":"","n":"companionMethod","t":"companionMethod extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"When defining an implicit class, the Scala compiler creates an implicit\nconversion method for it. Annotations @companionClass and @companionMethod\ncontrol where an annotation on the implicit class will go. By default, annotations\non an implicit class end up only on the class."},
{"l":"api/scala/annotation/meta/companionObject.html#","e":false,"i":"","n":"companionObject","t":"companionObject extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"Currently unused; intended as an annotation target for classes such as case classes\nthat automatically generate a companion object\n"},
{"l":"api/scala/annotation/meta/field.html#","e":false,"i":"","n":"field","t":"field extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"Consult the documentation in package scala.annotation.meta.\n"},
{"l":"api/scala/annotation/meta/getter.html#","e":false,"i":"","n":"getter","t":"getter extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"Consult the documentation in package scala.annotation.meta.\n"},
{"l":"api/scala/annotation/meta/languageFeature.html#","e":false,"i":"","n":"languageFeature","t":"languageFeature(feature: String, enableRequired: Boolean) extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"An annotation giving particulars for a language feature in object scala.language.\n"},
{"l":"api/scala/annotation/meta/param.html#","e":false,"i":"","n":"param","t":"param extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"Consult the documentation in package scala.annotation.meta.\n"},
{"l":"api/scala/annotation/meta/setter.html#","e":false,"i":"","n":"setter","t":"setter extends StaticAnnotation","d":"scala.annotation.meta","k":"class","x":"Consult the documentation in package scala.annotation.meta.\n"},
{"l":"api/scala/annotation/unchecked.html#","e":false,"i":"","n":"scala.annotation.unchecked","t":"scala.annotation.unchecked","d":"","k":"package","x":""},
{"l":"api/scala/annotation/unchecked/uncheckedCaptures.html#","e":false,"i":"","n":"uncheckedCaptures","t":"uncheckedCaptures extends StaticAnnotation","d":"scala.annotation.unchecked","k":"class","x":""},
{"l":"api/scala/annotation/unchecked/uncheckedStable.html#","e":false,"i":"","n":"uncheckedStable","t":"uncheckedStable extends StaticAnnotation","d":"scala.annotation.unchecked","k":"class","x":"An annotation for values that are assumed to be stable even though their\ntypes are volatile.\n"},
{"l":"api/scala/annotation/unchecked/uncheckedVariance.html#","e":false,"i":"","n":"uncheckedVariance","t":"uncheckedVariance extends StaticAnnotation","d":"scala.annotation.unchecked","k":"class","x":"An annotation for type arguments for which one wants to suppress variance checking.\n"},
{"l":"api/scala/annotation/Annotation.html#","e":false,"i":"","n":"Annotation","t":"Annotation","d":"scala.annotation","k":"class","x":"A base class for annotations."},
{"l":"api/scala/annotation/ClassfileAnnotation.html#","e":false,"i":"","n":"ClassfileAnnotation","t":"ClassfileAnnotation extends ConstantAnnotation","d":"scala.annotation","k":"trait","x":"A base class for classfile annotations. These are stored as\nJava annotations\nin classfiles.\n"},
{"l":"api/scala/annotation/ConstantAnnotation.html#","e":false,"i":"","n":"ConstantAnnotation","t":"ConstantAnnotation extends StaticAnnotation","d":"scala.annotation","k":"trait","x":"Annotation classes extending this trait only accept constant values as arguments."},
{"l":"api/scala/annotation/MacroAnnotation.html#","e":false,"i":"","n":"MacroAnnotation","t":"MacroAnnotation extends StaticAnnotation","d":"scala.annotation","k":"trait","x":""},
{"l":"api/scala/annotation/MacroAnnotation.html#transform-fffff3ad","e":false,"i":"","n":"transform","t":"transform(using Quotes)(definition: x$1.reflect.Definition, companion: Option[x$1.reflect.Definition]): List[x$1.reflect.Definition]","d":"scala.annotation.MacroAnnotation","k":"def","x":""},
{"l":"api/scala/annotation/RefiningAnnotation.html#","e":false,"i":"","n":"RefiningAnnotation","t":"RefiningAnnotation extends StaticAnnotation","d":"scala.annotation","k":"trait","x":""},
{"l":"api/scala/annotation/StaticAnnotation.html#","e":false,"i":"","n":"StaticAnnotation","t":"StaticAnnotation extends Annotation","d":"scala.annotation","k":"trait","x":"A base class for static annotations. These are available to the Scala type checker or Scala\nreflection, even across different compilation units."},
{"l":"api/scala/annotation/TypeConstraint.html#","e":false,"i":"","n":"TypeConstraint","t":"TypeConstraint extends Annotation","d":"scala.annotation","k":"trait","x":"A marker for annotations that, when applied to a type, should be treated\nas a constraint on the annotated type."},
{"l":"api/scala/annotation/alpha.html#","e":false,"i":"","n":"alpha","t":"alpha(externalName: String) extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/capability.html#","e":false,"i":"","n":"capability","t":"capability extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/compileTimeOnly.html#","e":false,"i":"","n":"compileTimeOnly","t":"compileTimeOnly(message: String) extends StaticAnnotation","d":"scala.annotation","k":"class","x":"An annotation that designates that an annottee should not be referred to after\ntype checking (which includes macro expansion)."},
{"l":"api/scala/annotation/constructorOnly.html#","e":false,"i":"","n":"constructorOnly","t":"constructorOnly extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/elidable.html#","e":false,"i":"","n":"elidable","t":"elidable(val level: Int) extends ConstantAnnotation","d":"scala.annotation","k":"class","x":"An annotation for methods whose bodies may be excluded\nfrom compiler-generated bytecode."},
{"l":"api/scala/annotation/elidable.html#level-0","e":false,"i":"","n":"level","t":"level: Int","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#","e":false,"i":"","n":"elidable","t":"elidable","d":"scala.annotation","k":"object","x":"This useless appearing code was necessary to allow people to use\nnamed constants for the elidable annotation.  This is what it takes\nto convince the compiler to fold the constants: otherwise when it's\ntime to check an elision level it's staring at a tree like"},
{"l":"api/scala/annotation/elidable$.html#ALL-0","e":false,"i":"","n":"ALL","t":"ALL: -2147483648","d":"scala.annotation.elidable","k":"val","x":"The levels ALL and OFF are confusing in this context because\nthe sentiment being expressed when using the annotation is at cross\npurposes with the one being expressed via -Xelide-below.  This\nconfusion reaches its zenith at level OFF, where the annotation means\nnever elide this method but -Xelide-below OFF is how you would\nsay elide everything possible."},
{"l":"api/scala/annotation/elidable$.html#ASSERTION-0","e":false,"i":"","n":"ASSERTION","t":"ASSERTION: 2000","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#CONFIG-0","e":false,"i":"","n":"CONFIG","t":"CONFIG: 700","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#FINE-0","e":false,"i":"","n":"FINE","t":"FINE: 500","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#FINER-0","e":false,"i":"","n":"FINER","t":"FINER: 400","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#FINEST-0","e":false,"i":"","n":"FINEST","t":"FINEST: 300","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#INFO-0","e":false,"i":"","n":"INFO","t":"INFO: 800","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#MAXIMUM-0","e":false,"i":"","n":"MAXIMUM","t":"MAXIMUM: 2147483647","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#MINIMUM-0","e":false,"i":"","n":"MINIMUM","t":"MINIMUM: -2147483648","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#OFF-0","e":false,"i":"","n":"OFF","t":"OFF: 2147483647","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#SEVERE-0","e":false,"i":"","n":"SEVERE","t":"SEVERE: 1000","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#WARNING-0","e":false,"i":"","n":"WARNING","t":"WARNING: 900","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/elidable$.html#byName-0","e":false,"i":"","n":"byName","t":"byName: Map[String, Int]","d":"scala.annotation.elidable","k":"val","x":""},
{"l":"api/scala/annotation/experimental.html#","e":false,"i":"","n":"experimental","t":"experimental(message: String) extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/experimental.html#<init>-fffff49f","e":false,"i":"","n":"this","t":"this()","d":"scala.annotation.experimental","k":"def","x":""},
{"l":"api/scala/annotation/implicitAmbiguous.html#","e":false,"i":"","n":"implicitAmbiguous","t":"implicitAmbiguous(msg: String) extends ConstantAnnotation","d":"scala.annotation","k":"class","x":"To customize the error message that's emitted when an implicit search finds\nmultiple ambiguous values, annotate at least one of the implicit values\n@implicitAmbiguous. Assuming the implicit value is a method with type\nparameters X1,..., XN, the error message will be the result of replacing\nall occurrences of ${Xi} in the string msg with the string representation\nof the corresponding type argument Ti."},
{"l":"api/scala/annotation/implicitNotFound.html#","e":false,"i":"","n":"implicitNotFound","t":"implicitNotFound(msg: String) extends ConstantAnnotation","d":"scala.annotation","k":"class","x":"To customize the error message that's emitted when an implicit of type\nC[T1,..., TN] cannot be found, annotate the class C with @implicitNotFound.\nAssuming C has type parameters X1, ..., XN, the error message will be the\nresult of replacing all occurrences of ${Xi} in the string msg with the\nstring representation of the corresponding type argument Ti.\nThe annotation is effectively inherited by subtypes if they are not annotated."},
{"l":"api/scala/annotation/init$.html#","e":false,"i":"","n":"init","t":"init","d":"scala.annotation","k":"object","x":""},
{"l":"api/scala/annotation/init$.html#region-957","e":false,"i":"","n":"region","t":"region[T](v: T): T","d":"scala.annotation.init","k":"def","x":""},
{"l":"api/scala/annotation/init$$widen.html#","e":false,"i":"","n":"widen","t":"widen(height: Int) extends StaticAnnotation","d":"scala.annotation.init","k":"class","x":""},
{"l":"api/scala/annotation/nowarn.html#","e":false,"i":"","n":"nowarn","t":"nowarn(value: String) extends ConstantAnnotation","d":"scala.annotation","k":"class","x":"An annotation for local warning suppression."},
{"l":"api/scala/annotation/publicInBinary.html#","e":false,"i":"","n":"publicInBinary","t":"publicInBinary extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/retains.html#","e":false,"i":"","n":"retains","t":"retains[Elems] extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/retainsByName.html#","e":false,"i":"","n":"retainsByName","t":"retainsByName[Elems] extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/retainsCap.html#","e":false,"i":"","n":"retainsCap","t":"retainsCap extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/showAsInfix.html#","e":false,"i":"","n":"showAsInfix","t":"showAsInfix(enabled: Boolean) extends StaticAnnotation","d":"scala.annotation","k":"class","x":"This annotation configures how Scala prints two-parameter generic types."},
{"l":"api/scala/annotation/static.html#","e":false,"i":"","n":"static","t":"static extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/strictfp.html#","e":false,"i":"","n":"strictfp","t":"strictfp extends StaticAnnotation","d":"scala.annotation","k":"class","x":"If this annotation is present on a method or its enclosing class,\nthe strictfp flag will be emitted.\n"},
{"l":"api/scala/annotation/switch.html#","e":false,"i":"","n":"switch","t":"switch extends StaticAnnotation","d":"scala.annotation","k":"class","x":"An annotation to be applied to a match expression.  If present,\nthe compiler will verify that the match has been compiled to a\ntableswitch or lookupswitch\nand issue a warning if it instead compiles into a series of conditional expressions.\nExample usage:"},
{"l":"api/scala/annotation/tailrec.html#","e":false,"i":"","n":"tailrec","t":"tailrec extends StaticAnnotation","d":"scala.annotation","k":"class","x":"A method annotation which verifies that the method will be compiled\nwith tail call optimization."},
{"l":"api/scala/annotation/targetName.html#","e":false,"i":"","n":"targetName","t":"targetName(name: String) extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/threadUnsafe.html#","e":false,"i":"","n":"threadUnsafe","t":"threadUnsafe extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/transparentTrait.html#","e":false,"i":"","n":"transparentTrait","t":"transparentTrait extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/unroll.html#","e":false,"i":"","n":"unroll","t":"unroll extends StaticAnnotation","d":"scala.annotation","k":"class","x":""},
{"l":"api/scala/annotation/unspecialized.html#","e":false,"i":"","n":"unspecialized","t":"unspecialized extends StaticAnnotation","d":"scala.annotation","k":"class","x":"A method annotation which suppresses the creation of\nadditional specialized forms based on enclosing specialized\ntype parameters.\n"},
{"l":"api/scala/annotation/unused.html#","e":false,"i":"","n":"unused","t":"unused(message: String) extends StaticAnnotation","d":"scala.annotation","k":"class","x":"Mark an element unused for a given context."},
{"l":"api/scala/annotation/unused.html#<init>-2cd","e":false,"i":"","n":"this","t":"this()","d":"scala.annotation.unused","k":"def","x":""},
{"l":"api/scala/annotation/varargs.html#","e":false,"i":"","n":"varargs","t":"varargs extends StaticAnnotation","d":"scala.annotation","k":"class","x":"A method annotation which instructs the compiler to generate a\nJava varargs-style forwarder method for interop. This annotation can\nonly be applied to methods with repeated parameters.\n"},
{"l":"api/scala/beans.html#","e":false,"i":"","n":"scala.beans","t":"scala.beans","d":"","k":"package","x":""},
{"l":"api/scala/beans/BeanProperty.html#","e":false,"i":"","n":"BeanProperty","t":"BeanProperty extends StaticAnnotation","d":"scala.beans","k":"class","x":"When attached to a field, this annotation adds a setter and a getter\nmethod following the Java Bean convention. For example:"},
{"l":"api/scala/beans/BooleanBeanProperty.html#","e":false,"i":"","n":"BooleanBeanProperty","t":"BooleanBeanProperty extends StaticAnnotation","d":"scala.beans","k":"class","x":"This annotation has the same functionality as\nscala.beans.BeanProperty, but the generated Bean getter will be\nnamed isFieldName instead of getFieldName.\n"},
{"l":"api/scala/caps.html#","e":false,"i":"","n":"scala.caps","t":"scala.caps","d":"","k":"package","x":""},
{"l":"api/scala/caps.html#Exclusive-0","e":false,"i":"","n":"Exclusive","t":"Exclusive = ExclusiveCapability","d":"scala.caps","k":"type","x":""},
{"l":"api/scala/caps.html#Shared-0","e":false,"i":"","n":"Shared","t":"Shared = SharedCapability","d":"scala.caps","k":"type","x":""},
{"l":"api/scala/caps/CapSet.html#","e":false,"i":"","n":"CapSet","t":"CapSet","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/Capability.html#","e":false,"i":"","n":"Capability","t":"Capability","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/Classifier.html#","e":false,"i":"","n":"Classifier","t":"Classifier","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/Contains.html#","e":false,"i":"","n":"Contains","t":"Contains[+C >: CapSet <: CapSet, R <: Singleton]","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/Contains$.html#","e":false,"i":"","n":"Contains","t":"Contains","d":"scala.caps","k":"object","x":""},
{"l":"api/scala/caps/Contains$.html#containsImpl-fffff17b","e":false,"i":"","n":"containsImpl","t":"containsImpl[C >: CapSet <: CapSet, R <: Singleton]: containsImpl[C, R]","d":"scala.caps.Contains","k":"given","x":""},
{"l":"api/scala/caps/Control.html#","e":false,"i":"","n":"Control","t":"Control extends SharedCapability, Classifier","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/ExclusiveCapability.html#","e":false,"i":"","n":"ExclusiveCapability","t":"ExclusiveCapability extends Capability, Classifier","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/Exists.html#","e":false,"i":"","n":"Exists","t":"Exists extends Capability","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/Mutable.html#","e":false,"i":"","n":"Mutable","t":"Mutable extends ExclusiveCapability, Classifier","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/Read.html#","e":false,"i":"","n":"Read","t":"Read extends Mutable, Classifier","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/SharedCapability.html#","e":false,"i":"","n":"SharedCapability","t":"SharedCapability extends Capability, Classifier","d":"scala.caps","k":"trait","x":""},
{"l":"api/scala/caps/cap$.html#","e":false,"i":"","n":"cap","t":"cap extends Capability","d":"scala.caps","k":"object","x":""},
{"l":"api/scala/caps/consume.html#","e":false,"i":"","n":"consume","t":"consume extends StaticAnnotation","d":"scala.caps","k":"class","x":""},
{"l":"api/scala/caps/internal$.html#","e":false,"i":"","n":"internal","t":"internal","d":"scala.caps","k":"object","x":""},
{"l":"api/scala/caps/internal$.html#erasedValue-fffff7c4","e":false,"i":"","n":"erasedValue","t":"erasedValue[T]: T","d":"scala.caps.internal","k":"def","x":""},
{"l":"api/scala/caps/internal$$inferredDepFun.html#","e":false,"i":"","n":"inferredDepFun","t":"inferredDepFun extends StaticAnnotation","d":"scala.caps.internal","k":"class","x":""},
{"l":"api/scala/caps/internal$$refineOverride.html#","e":false,"i":"","n":"refineOverride","t":"refineOverride extends StaticAnnotation","d":"scala.caps.internal","k":"class","x":""},
{"l":"api/scala/caps/internal$$rootCapability.html#","e":false,"i":"","n":"rootCapability","t":"rootCapability extends StaticAnnotation","d":"scala.caps.internal","k":"class","x":""},
{"l":"api/scala/caps/unsafe$.html#","e":false,"i":"","n":"unsafe","t":"unsafe","d":"scala.caps","k":"object","x":""},
{"l":"api/scala/caps/unsafe$.html#unsafeAssumePure-957","e":false,"i":"extension [T](x: T)","n":"unsafeAssumePure","t":"unsafeAssumePure: T","d":"scala.caps.unsafe","k":"def","x":""},
{"l":"api/scala/caps/unsafe$.html#unsafeAssumeSeparate-d26","e":false,"i":"","n":"unsafeAssumeSeparate","t":"unsafeAssumeSeparate(op: Any): op.type","d":"scala.caps.unsafe","k":"def","x":""},
{"l":"api/scala/caps/unsafe$.html#unsafeErasedValue-fffff7c4","e":false,"i":"","n":"unsafeErasedValue","t":"unsafeErasedValue[T]: T","d":"scala.caps.unsafe","k":"def","x":""},
{"l":"api/scala/caps/unsafe$$untrackedCaptures.html#","e":false,"i":"","n":"untrackedCaptures","t":"untrackedCaptures extends StaticAnnotation","d":"scala.caps.unsafe","k":"class","x":""},
{"l":"api/scala/caps/use.html#","e":false,"i":"","n":"use","t":"use extends StaticAnnotation","d":"scala.caps","k":"class","x":""},
{"l":"api/scala/collection.html#","e":false,"i":"","n":"scala.collection","t":"scala.collection","d":"","k":"package","x":""},
{"l":"api/scala/collection.html#ArrayLike-0","e":false,"i":"","n":"ArrayLike","t":"ArrayLike[A] = SeqOps[A, Seq, Seq[A]]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#GenIterable-0","e":false,"i":"","n":"GenIterable","t":"GenIterable[+X] = Iterable[X]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#GenIterable-0","e":false,"i":"","n":"GenIterable","t":"GenIterable: Iterable.type","d":"scala.collection","k":"val","x":""},
{"l":"api/scala/collection.html#GenMap-0","e":false,"i":"","n":"GenMap","t":"GenMap[K, +V] = Map[K, V]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#GenMap-0","e":false,"i":"","n":"GenMap","t":"GenMap: Map.type","d":"scala.collection","k":"val","x":""},
{"l":"api/scala/collection.html#GenSeq-0","e":false,"i":"","n":"GenSeq","t":"GenSeq[+X] = Seq[X]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#GenSeq-0","e":false,"i":"","n":"GenSeq","t":"GenSeq: Seq.type","d":"scala.collection","k":"val","x":""},
{"l":"api/scala/collection.html#GenSet-0","e":false,"i":"","n":"GenSet","t":"GenSet[X] = Set[X]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#GenSet-0","e":false,"i":"","n":"GenSet","t":"GenSet: Set.type","d":"scala.collection","k":"val","x":""},
{"l":"api/scala/collection.html#GenTraversable-0","e":false,"i":"","n":"GenTraversable","t":"GenTraversable[+X] = Iterable[X]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#GenTraversable-0","e":false,"i":"","n":"GenTraversable","t":"GenTraversable: Iterable.type","d":"scala.collection","k":"val","x":""},
{"l":"api/scala/collection.html#GenTraversableOnce-0","e":false,"i":"","n":"GenTraversableOnce","t":"GenTraversableOnce[+X] = IterableOnce[X]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#GenTraversableOnce-0","e":false,"i":"","n":"GenTraversableOnce","t":"GenTraversableOnce: IterableOnce.type","d":"scala.collection","k":"val","x":""},
{"l":"api/scala/collection.html#SeqLike-0","e":false,"i":"","n":"SeqLike","t":"SeqLike[A, T] = SeqOps[A, Seq, T]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#Traversable-0","e":false,"i":"","n":"Traversable","t":"Traversable[+X] = Iterable[X]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#Traversable-0","e":false,"i":"","n":"Traversable","t":"Traversable: Iterable.type","d":"scala.collection","k":"val","x":""},
{"l":"api/scala/collection.html#TraversableOnce-0","e":false,"i":"","n":"TraversableOnce","t":"TraversableOnce[+X] = IterableOnce[X]","d":"scala.collection","k":"type","x":""},
{"l":"api/scala/collection.html#TraversableOnce-0","e":false,"i":"","n":"TraversableOnce","t":"TraversableOnce: IterableOnce.type","d":"scala.collection","k":"val","x":""},
{"l":"api/scala/collection/concurrent.html#","e":false,"i":"","n":"scala.collection.concurrent","t":"scala.collection.concurrent","d":"","k":"package","x":""},
{"l":"api/scala/collection/concurrent/Map.html#","e":false,"i":"","n":"Map","t":"Map[K, V] extends Map[K, V]","d":"scala.collection.concurrent","k":"trait","x":"A template trait for mutable maps that allow concurrent access."},
{"l":"api/scala/collection/concurrent/Map.html#putIfAbsent-fffffa63","e":false,"i":"","n":"putIfAbsent","t":"putIfAbsent(k: K, v: V): Option[V]","d":"scala.collection.concurrent.Map","k":"def","x":"Associates the given key with a given value, unless the key was already\nassociated with some other value."},
{"l":"api/scala/collection/concurrent/Map.html#remove-fffff7fa","e":false,"i":"","n":"remove","t":"remove(k: K, v: V): Boolean","d":"scala.collection.concurrent.Map","k":"def","x":"Removes the entry for the specified key if it's currently mapped to the\nspecified value."},
{"l":"api/scala/collection/concurrent/Map.html#replace-fffff147","e":false,"i":"","n":"replace","t":"replace(k: K, oldvalue: V, newvalue: V): Boolean","d":"scala.collection.concurrent.Map","k":"def","x":"Replaces the entry for the given key only if it was previously mapped to\na given value."},
{"l":"api/scala/collection/concurrent/Map.html#replace-fffffa63","e":false,"i":"","n":"replace","t":"replace(k: K, v: V): Option[V]","d":"scala.collection.concurrent.Map","k":"def","x":"Replaces the entry for the given key only if it was previously mapped\nto some value."},
{"l":"api/scala/collection/concurrent/TrieMap.html#","e":false,"i":"","n":"TrieMap","t":"TrieMap[K, V] extends AbstractMap[K, V], Map[K, V], MapOps[K, V, TrieMap, TrieMap[K, V]], MapFactoryDefaults[K, V, TrieMap, Iterable], DefaultSerializable","d":"scala.collection.concurrent","k":"class","x":"A concurrent hash-trie or TrieMap is a concurrent thread-safe lock-free\nimplementation of a hash array mapped trie. It is used to implement the\nconcurrent map abstraction. It has particularly scalable concurrent insert\nand remove operations and is memory-efficient. It supports O(1), atomic,\nlock-free snapshots which are used to implement linearizable lock-free size,\niterator and clear operations. The cost of evaluating the (lazy) snapshot is\ndistributed across subsequent updates, thus making snapshot evaluation horizontally scalable."},
{"l":"api/scala/collection/concurrent/TrieMap.html#addOne-fffff7c1","e":false,"i":"","n":"addOne","t":"addOne(kv: (K, V)): this.type","d":"scala.collection.concurrent.TrieMap","k":"def","x":"Adds a single element to this concurrent map.\n"},
{"l":"api/scala/collection/concurrent/TrieMap.html#computeHash-fffffaf4","e":false,"i":"","n":"computeHash","t":"computeHash(k: K): Int","d":"scala.collection.concurrent.TrieMap","k":"def","x":""},
{"l":"api/scala/collection/concurrent/TrieMap.html#equality-0","e":false,"i":"","n":"equality","t":"equality: Equiv[K]","d":"scala.collection.concurrent.TrieMap","k":"def","x":""},
{"l":"api/scala/collection/concurrent/TrieMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(k: K): Option[V]","d":"scala.collection.concurrent.TrieMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/concurrent/TrieMap.html#hashing-0","e":false,"i":"","n":"hashing","t":"hashing: Hashing[K]","d":"scala.collection.concurrent.TrieMap","k":"def","x":""},
{"l":"api/scala/collection/concurrent/TrieMap.html#isReadOnly-0","e":false,"i":"","n":"isReadOnly","t":"isReadOnly: Boolean","d":"scala.collection.concurrent.TrieMap","k":"def","x":""},
{"l":"api/scala/collection/concurrent/TrieMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.concurrent.TrieMap","k":"def","x":"An scala.collection.Iterator over the elements of this concurrent map."},
{"l":"api/scala/collection/concurrent/TrieMap.html#lookup-d26","e":false,"i":"","n":"lookup","t":"lookup(k: K): V","d":"scala.collection.concurrent.TrieMap","k":"def","x":""},
{"l":"api/scala/collection/concurrent/TrieMap.html#nonReadOnly-0","e":false,"i":"","n":"nonReadOnly","t":"nonReadOnly: Boolean","d":"scala.collection.concurrent.TrieMap","k":"def","x":""},
{"l":"api/scala/collection/concurrent/TrieMap.html#putIfAbsent-fffffa63","e":false,"i":"","n":"putIfAbsent","t":"putIfAbsent(k: K, v: V): Option[V]","d":"scala.collection.concurrent.TrieMap","k":"def","x":"Associates the given key with a given value, unless the key was already\nassociated with some other value."},
{"l":"api/scala/collection/concurrent/TrieMap.html#readOnlySnapshot-ffffff94","e":false,"i":"","n":"readOnlySnapshot","t":"readOnlySnapshot(): Map[K, V]","d":"scala.collection.concurrent.TrieMap","k":"def","x":"Returns a read-only snapshot of this TrieMap.\nThis operation is lock-free and linearizable."},
{"l":"api/scala/collection/concurrent/TrieMap.html#remove-fffff7fa","e":false,"i":"","n":"remove","t":"remove(k: K, v: V): Boolean","d":"scala.collection.concurrent.TrieMap","k":"def","x":"Removes the entry for the specified key if it's currently mapped to the\nspecified value."},
{"l":"api/scala/collection/concurrent/TrieMap.html#replace-fffff147","e":false,"i":"","n":"replace","t":"replace(k: K, oldvalue: V, newvalue: V): Boolean","d":"scala.collection.concurrent.TrieMap","k":"def","x":"Replaces the entry for the given key only if it was previously mapped to\na given value."},
{"l":"api/scala/collection/concurrent/TrieMap.html#replace-fffffa63","e":false,"i":"","n":"replace","t":"replace(k: K, v: V): Option[V]","d":"scala.collection.concurrent.TrieMap","k":"def","x":"Replaces the entry for the given key only if it was previously mapped\nto some value."},
{"l":"api/scala/collection/concurrent/TrieMap.html#snapshot-fffff433","e":false,"i":"","n":"snapshot","t":"snapshot(): TrieMap[K, V]","d":"scala.collection.concurrent.TrieMap","k":"def","x":"Returns a snapshot of this TrieMap.\nThis operation is lock-free and linearizable."},
{"l":"api/scala/collection/concurrent/TrieMap.html#string-0","e":false,"i":"","n":"string","t":"string: String","d":"scala.collection.concurrent.TrieMap","k":"def","x":""},
{"l":"api/scala/collection/concurrent/TrieMap.html#subtractOne-9c0","e":false,"i":"","n":"subtractOne","t":"subtractOne(k: K): this.type","d":"scala.collection.concurrent.TrieMap","k":"def","x":"Removes a single element from this concurrent map.\n"},
{"l":"api/scala/collection/concurrent/TrieMap.html#<init>-d53","e":false,"i":"","n":"this","t":"this(hashf: Hashing[K], ef: Equiv[K])","d":"scala.collection.concurrent.TrieMap","k":"def","x":""},
{"l":"api/scala/collection/concurrent/TrieMap.html#<init>-fffff6c1","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.concurrent.TrieMap","k":"def","x":""},
{"l":"api/scala/collection/concurrent/TrieMap$.html#","e":false,"i":"","n":"TrieMap","t":"TrieMap extends MapFactory[TrieMap]","d":"scala.collection.concurrent","k":"object","x":""},
{"l":"api/scala/collection/concurrent/TrieMap$.html#empty-fffff6c1","e":false,"i":"","n":"empty","t":"empty[K, V]: TrieMap[K, V]","d":"scala.collection.concurrent.TrieMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/concurrent/TrieMap$.html#from-baa","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): TrieMap[K, V]","d":"scala.collection.concurrent.TrieMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/concurrent/TrieMap$.html#inodeupdater-0","e":false,"i":"","n":"inodeupdater","t":"inodeupdater: AtomicReferenceFieldUpdater[INodeBase[_, _], MainNode[_, _]]","d":"scala.collection.concurrent.TrieMap","k":"val","x":""},
{"l":"api/scala/collection/concurrent/TrieMap$.html#newBuilder-90","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: GrowableBuilder[(K, V), TrieMap[K, V]]","d":"scala.collection.concurrent.TrieMap","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/concurrent/TrieMap$$MangledHashing.html#","e":false,"i":"","n":"MangledHashing","t":"MangledHashing[K] extends Hashing[K]","d":"scala.collection.concurrent.TrieMap","k":"class","x":""},
{"l":"api/scala/collection/concurrent/TrieMap$$MangledHashing.html#hash-fffffaf4","e":false,"i":"","n":"hash","t":"hash(k: K): Int","d":"scala.collection.concurrent.TrieMap.MangledHashing","k":"def","x":""},
{"l":"api/scala/collection/convert.html#","e":false,"i":"","n":"scala.collection.convert","t":"scala.collection.convert","d":"","k":"package","x":""},
{"l":"api/scala/collection/convert/AsJavaConverters.html#","e":false,"i":"","n":"AsJavaConverters","t":"AsJavaConverters","d":"scala.collection.convert","k":"trait","x":"Defines converter methods from Scala to Java collections.\nThese methods are available through the scala.jdk.javaapi.CollectionConverters object.\n"},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-d13","e":false,"i":"","n":"asJava","t":"asJava[A](i: Iterator[A]): Iterator[A]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala Iterator to a Java Iterator."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-fffff3af","e":false,"i":"","n":"asJava","t":"asJava[A](i: Iterable[A]): Iterable[A]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala Iterable to a Java Iterable."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-89d","e":false,"i":"","n":"asJava","t":"asJava[A](b: Buffer[A]): List[A]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala mutable Buffer to a Java List."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-fffff2de","e":false,"i":"","n":"asJava","t":"asJava[A](s: Seq[A]): List[A]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala mutable Seq to a Java List."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-fffff0a6","e":false,"i":"","n":"asJava","t":"asJava[A](s: Seq[A]): List[A]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala Seq to a Java List."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-eff","e":false,"i":"","n":"asJava","t":"asJava[A](s: Set[A]): Set[A]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala mutable Set to a Java Set."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-fffff837","e":false,"i":"","n":"asJava","t":"asJava[A](s: Set[A]): Set[A]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala Set to a Java Set."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-fffffa5e","e":false,"i":"","n":"asJava","t":"asJava[K, V](m: Map[K, V]): Map[K, V]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala mutable Map to a Java Map."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-fffff296","e":false,"i":"","n":"asJava","t":"asJava[K, V](m: Map[K, V]): Map[K, V]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala Map to a Java Map."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJava-fffffba9","e":false,"i":"","n":"asJava","t":"asJava[K, V](m: Map[K, V]): ConcurrentMap[K, V]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala mutable concurrent.Map to a Java ConcurrentMap."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJavaCollection-7","e":false,"i":"","n":"asJavaCollection","t":"asJavaCollection[A](i: Iterable[A]): Collection[A]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala Iterable to an immutable Java Collection."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJavaDictionary-fffff554","e":false,"i":"","n":"asJavaDictionary","t":"asJavaDictionary[K, V](m: Map[K, V]): Dictionary[K, V]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala mutable Map to a Java Dictionary."},
{"l":"api/scala/collection/convert/AsJavaConverters.html#asJavaEnumeration-782","e":false,"i":"","n":"asJavaEnumeration","t":"asJavaEnumeration[A](i: Iterator[A]): Enumeration[A]","d":"scala.collection.convert.AsJavaConverters","k":"def","x":"Converts a Scala Iterator to a Java Enumeration."},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#","e":false,"i":"","n":"AsJavaExtensions","t":"AsJavaExtensions","d":"scala.collection.convert","k":"trait","x":"Defines asJava extension methods, available through scala.jdk.CollectionConverters."},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#BufferHasAsJava-cec","e":false,"i":"","n":"BufferHasAsJava","t":"BufferHasAsJava[A](b: Buffer[A]): BufferHasAsJava[A]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#ConcurrentMapHasAsJava-3e7","e":false,"i":"","n":"ConcurrentMapHasAsJava","t":"ConcurrentMapHasAsJava[K, V](m: Map[K, V]): ConcurrentMapHasAsJava[K, V]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#IterableHasAsJava-590","e":false,"i":"","n":"IterableHasAsJava","t":"IterableHasAsJava[A](i: Iterable[A]): IterableHasAsJava[A]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#IteratorHasAsJava-fffffb98","e":false,"i":"","n":"IteratorHasAsJava","t":"IteratorHasAsJava[A](i: Iterator[A]): IteratorHasAsJava[A]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#MapHasAsJava-fffff5db","e":false,"i":"","n":"MapHasAsJava","t":"MapHasAsJava[K, V](m: Map[K, V]): MapHasAsJava[K, V]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#MutableMapHasAsJava-fffff177","e":false,"i":"","n":"MutableMapHasAsJava","t":"MutableMapHasAsJava[K, V](m: Map[K, V]): MutableMapHasAsJava[K, V]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#MutableSeqHasAsJava-a92","e":false,"i":"","n":"MutableSeqHasAsJava","t":"MutableSeqHasAsJava[A](s: Seq[A]): MutableSeqHasAsJava[A]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#MutableSetHasAsJava-fffffccc","e":false,"i":"","n":"MutableSetHasAsJava","t":"MutableSetHasAsJava[A](s: Set[A]): MutableSetHasAsJava[A]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#SeqHasAsJava-e3a","e":false,"i":"","n":"SeqHasAsJava","t":"SeqHasAsJava[A](s: Seq[A]): SeqHasAsJava[A]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions.html#SetHasAsJava-fffff15a","e":false,"i":"","n":"SetHasAsJava","t":"SetHasAsJava[A](s: Set[A]): SetHasAsJava[A]","d":"scala.collection.convert.AsJavaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$BufferHasAsJava.html#","e":false,"i":"","n":"BufferHasAsJava","t":"BufferHasAsJava[A](b: Buffer[A])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$BufferHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: List[A]","d":"scala.collection.convert.AsJavaExtensions.BufferHasAsJava","k":"def","x":"Converts a Scala Buffer to a Java List, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$ConcurrentMapHasAsJava.html#","e":false,"i":"","n":"ConcurrentMapHasAsJava","t":"ConcurrentMapHasAsJava[K, V](m: Map[K, V])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$ConcurrentMapHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ConcurrentMap[K, V]","d":"scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava","k":"def","x":"Converts a Scala concurrent.Map to a Java ConcurrentMap, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$IterableHasAsJava.html#","e":false,"i":"","n":"IterableHasAsJava","t":"IterableHasAsJava[A](i: Iterable[A])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$IterableHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Iterable[A]","d":"scala.collection.convert.AsJavaExtensions.IterableHasAsJava","k":"def","x":"Converts a Scala Iterable to a Java Iterable, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$IterableHasAsJava.html#asJavaCollection-0","e":false,"i":"","n":"asJavaCollection","t":"asJavaCollection: Collection[A]","d":"scala.collection.convert.AsJavaExtensions.IterableHasAsJava","k":"def","x":"Converts a Scala Iterator to a Java Collection, see\nscala.jdk.javaapi.CollectionConverters.asJavaCollection.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$IteratorHasAsJava.html#","e":false,"i":"","n":"IteratorHasAsJava","t":"IteratorHasAsJava[A](i: Iterator[A])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$IteratorHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Iterator[A]","d":"scala.collection.convert.AsJavaExtensions.IteratorHasAsJava","k":"def","x":"Converts a Scala Iterator to a Java Iterator, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$IteratorHasAsJava.html#asJavaEnumeration-0","e":false,"i":"","n":"asJavaEnumeration","t":"asJavaEnumeration: Enumeration[A]","d":"scala.collection.convert.AsJavaExtensions.IteratorHasAsJava","k":"def","x":"Converts a Scala Iterator to a Java Enumeration, see\nscala.jdk.javaapi.CollectionConverters.asJavaEnumeration.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$MapHasAsJava.html#","e":false,"i":"","n":"MapHasAsJava","t":"MapHasAsJava[K, V](m: Map[K, V])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$MapHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Map[K, V]","d":"scala.collection.convert.AsJavaExtensions.MapHasAsJava","k":"def","x":"Converts a Scala Map to a Java Map, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$MutableMapHasAsJava.html#","e":false,"i":"","n":"MutableMapHasAsJava","t":"MutableMapHasAsJava[K, V](m: Map[K, V])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$MutableMapHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Map[K, V]","d":"scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava","k":"def","x":"Converts a Scala mutable.Map to a Java Map, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$MutableMapHasAsJava.html#asJavaDictionary-0","e":false,"i":"","n":"asJavaDictionary","t":"asJavaDictionary: Dictionary[K, V]","d":"scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava","k":"def","x":"Converts a Scala mutable.Map to a Java Map, see\nscala.jdk.javaapi.CollectionConverters.asJavaDictionary.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$MutableSeqHasAsJava.html#","e":false,"i":"","n":"MutableSeqHasAsJava","t":"MutableSeqHasAsJava[A](s: Seq[A])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$MutableSeqHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: List[A]","d":"scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava","k":"def","x":"Converts a Scala Seq to a Java List, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$MutableSetHasAsJava.html#","e":false,"i":"","n":"MutableSetHasAsJava","t":"MutableSetHasAsJava[A](s: Set[A])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$MutableSetHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Set[A]","d":"scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava","k":"def","x":"Converts a Scala mutable.Set to a Java Set, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$SeqHasAsJava.html#","e":false,"i":"","n":"SeqHasAsJava","t":"SeqHasAsJava[A](s: Seq[A])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$SeqHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: List[A]","d":"scala.collection.convert.AsJavaExtensions.SeqHasAsJava","k":"def","x":"Converts a Scala Seq to a Java List, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsJavaExtensions$SetHasAsJava.html#","e":false,"i":"","n":"SetHasAsJava","t":"SetHasAsJava[A](s: Set[A])","d":"scala.collection.convert.AsJavaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsJavaExtensions$SetHasAsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Set[A]","d":"scala.collection.convert.AsJavaExtensions.SetHasAsJava","k":"def","x":"Converts a Scala Set to a Java Set, see\nscala.jdk.javaapi.CollectionConverters.asJava.\n"},
{"l":"api/scala/collection/convert/AsScalaConverters.html#","e":false,"i":"","n":"AsScalaConverters","t":"AsScalaConverters","d":"scala.collection.convert","k":"trait","x":"Defines converter methods from Java to Scala collections.\nThese methods are available through the scala.jdk.javaapi.CollectionConverters object.\n"},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-fffff9f7","e":false,"i":"","n":"asScala","t":"asScala[A](i: Iterator[A]): Iterator[A]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java Iterator to a Scala Iterator."},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-fffff100","e":false,"i":"","n":"asScala","t":"asScala[A](e: Enumeration[A]): Iterator[A]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java Enumeration to a Scala Iterator."},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-d63","e":false,"i":"","n":"asScala","t":"asScala[A](i: Iterable[A]): Iterable[A]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java Iterable to a Scala Iterable."},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-60b","e":false,"i":"","n":"asScala","t":"asScala[A](c: Collection[A]): Iterable[A]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java Collection to a Scala Iterable."},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-fffff421","e":false,"i":"","n":"asScala","t":"asScala[A](l: List[A]): Buffer[A]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java List to a Scala mutable Buffer."},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-fffffa63","e":false,"i":"","n":"asScala","t":"asScala[A](s: Set[A]): Set[A]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java Set to a Scala mutable Set."},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-fffff676","e":false,"i":"","n":"asScala","t":"asScala[K, V](m: Map[K, V]): Map[K, V]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java Map to a Scala mutable Map."},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-fffffdcd","e":false,"i":"","n":"asScala","t":"asScala[K, V](m: ConcurrentMap[K, V]): Map[K, V]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java ConcurrentMap to a Scala mutable ConcurrentMap."},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-654","e":false,"i":"","n":"asScala","t":"asScala[K, V](d: Dictionary[K, V]): Map[K, V]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java Dictionary to a Scala mutable Map."},
{"l":"api/scala/collection/convert/AsScalaConverters.html#asScala-fffff13f","e":false,"i":"","n":"asScala","t":"asScala(p: Properties): Map[String, String]","d":"scala.collection.convert.AsScalaConverters","k":"def","x":"Converts a Java Properties to a Scala mutable Map[String, String]."},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#","e":false,"i":"","n":"AsScalaExtensions","t":"AsScalaExtensions","d":"scala.collection.convert","k":"trait","x":"Defines asScala extension methods, available through scala.jdk.CollectionConverters."},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#CollectionHasAsScala-ffffffd2","e":false,"i":"","n":"CollectionHasAsScala","t":"CollectionHasAsScala[A](c: Collection[A]): CollectionHasAsScala[A]","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#ConcurrentMapHasAsScala-fffff8b6","e":false,"i":"","n":"ConcurrentMapHasAsScala","t":"ConcurrentMapHasAsScala[K, V](m: ConcurrentMap[K, V]): ConcurrentMapHasAsScala[K, V]","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#DictionaryHasAsScala-931","e":false,"i":"","n":"DictionaryHasAsScala","t":"DictionaryHasAsScala[K, V](d: Dictionary[K, V]): DictionaryHasAsScala[K, V]","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#EnumerationHasAsScala-5ae","e":false,"i":"","n":"EnumerationHasAsScala","t":"EnumerationHasAsScala[A](e: Enumeration[A]): EnumerationHasAsScala[A]","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#IterableHasAsScala-67e","e":false,"i":"","n":"IterableHasAsScala","t":"IterableHasAsScala[A](i: Iterable[A]): IterableHasAsScala[A]","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#IteratorHasAsScala-fffffc12","e":false,"i":"","n":"IteratorHasAsScala","t":"IteratorHasAsScala[A](i: Iterator[A]): IteratorHasAsScala[A]","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#ListHasAsScala-fffffa92","e":false,"i":"","n":"ListHasAsScala","t":"ListHasAsScala[A](l: List[A]): ListHasAsScala[A]","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#MapHasAsScala-f37","e":false,"i":"","n":"MapHasAsScala","t":"MapHasAsScala[K, V](m: Map[K, V]): MapHasAsScala[K, V]","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#PropertiesHasAsScala-ac3","e":false,"i":"","n":"PropertiesHasAsScala","t":"PropertiesHasAsScala(i: Properties): PropertiesHasAsScala","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions.html#SetHasAsScala-324","e":false,"i":"","n":"SetHasAsScala","t":"SetHasAsScala[A](s: Set[A]): SetHasAsScala[A]","d":"scala.collection.convert.AsScalaExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$CollectionHasAsScala.html#","e":false,"i":"","n":"CollectionHasAsScala","t":"CollectionHasAsScala[A](c: Collection[A])","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$CollectionHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Iterable[A]","d":"scala.collection.convert.AsScalaExtensions.CollectionHasAsScala","k":"def","x":"Converts a Java Collection to a Scala Iterable, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala.html#","e":false,"i":"","n":"ConcurrentMapHasAsScala","t":"ConcurrentMapHasAsScala[K, V](m: ConcurrentMap[K, V])","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Map[K, V]","d":"scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala","k":"def","x":"Converts a Java ConcurrentMap to a Scala concurrent.Map, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/AsScalaExtensions$DictionaryHasAsScala.html#","e":false,"i":"","n":"DictionaryHasAsScala","t":"DictionaryHasAsScala[K, V](d: Dictionary[K, V])","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$DictionaryHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Map[K, V]","d":"scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala","k":"def","x":"Converts a Java Dictionary to a Scala Map, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/AsScalaExtensions$EnumerationHasAsScala.html#","e":false,"i":"","n":"EnumerationHasAsScala","t":"EnumerationHasAsScala[A](e: Enumeration[A])","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$EnumerationHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Iterator[A]","d":"scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala","k":"def","x":"Converts a Java Enumeration to a Scala Iterator, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/AsScalaExtensions$IterableHasAsScala.html#","e":false,"i":"","n":"IterableHasAsScala","t":"IterableHasAsScala[A](i: Iterable[A])","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$IterableHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Iterable[A]","d":"scala.collection.convert.AsScalaExtensions.IterableHasAsScala","k":"def","x":"Converts a Java Iterable to a Scala Iterable, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/AsScalaExtensions$IteratorHasAsScala.html#","e":false,"i":"","n":"IteratorHasAsScala","t":"IteratorHasAsScala[A](i: Iterator[A])","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$IteratorHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Iterator[A]","d":"scala.collection.convert.AsScalaExtensions.IteratorHasAsScala","k":"def","x":"Converts a Java Iterator to a Scala Iterator, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/AsScalaExtensions$ListHasAsScala.html#","e":false,"i":"","n":"ListHasAsScala","t":"ListHasAsScala[A](l: List[A])","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$ListHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Buffer[A]","d":"scala.collection.convert.AsScalaExtensions.ListHasAsScala","k":"def","x":"Converts a Java List to a Scala Buffer, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/AsScalaExtensions$MapHasAsScala.html#","e":false,"i":"","n":"MapHasAsScala","t":"MapHasAsScala[K, V](m: Map[K, V])","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$MapHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Map[K, V]","d":"scala.collection.convert.AsScalaExtensions.MapHasAsScala","k":"def","x":"Converts a Java Map to a Scala Map, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/AsScalaExtensions$PropertiesHasAsScala.html#","e":false,"i":"","n":"PropertiesHasAsScala","t":"PropertiesHasAsScala(i: Properties)","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$PropertiesHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Map[String, String]","d":"scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala","k":"def","x":"Converts a Java Properties to a Scala Map, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/AsScalaExtensions$SetHasAsScala.html#","e":false,"i":"","n":"SetHasAsScala","t":"SetHasAsScala[A](s: Set[A])","d":"scala.collection.convert.AsScalaExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/AsScalaExtensions$SetHasAsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Set[A]","d":"scala.collection.convert.AsScalaExtensions.SetHasAsScala","k":"def","x":"Converts a Java Set to a Scala Set, see\nscala.jdk.javaapi.CollectionConverters.asScala.\n"},
{"l":"api/scala/collection/convert/ImplicitConversions$.html#","e":false,"i":"","n":"ImplicitConversions","t":"ImplicitConversions extends ToScalaImplicits, ToJavaImplicits","d":"scala.collection.convert","k":"object","x":"Convenience for miscellaneous implicit conversions between Java and Scala collections API."},
{"l":"api/scala/collection/convert/ImplicitConversionsToJava$.html#","e":false,"i":"","n":"ImplicitConversionsToJava","t":"ImplicitConversionsToJava extends ToJavaImplicits","d":"scala.collection.convert","k":"object","x":"Convenience for miscellaneous implicit conversions from Scala to Java collections API."},
{"l":"api/scala/collection/convert/ImplicitConversionsToScala$.html#","e":false,"i":"","n":"ImplicitConversionsToScala","t":"ImplicitConversionsToScala extends ToScalaImplicits","d":"scala.collection.convert","k":"object","x":"Convenience for miscellaneous implicit conversions from Java to Scala collections API."},
{"l":"api/scala/collection/convert/StreamExtensions.html#","e":false,"i":"","n":"StreamExtensions","t":"StreamExtensions","d":"scala.collection.convert","k":"trait","x":"Defines extension methods to create Java Streams for Scala collections, available through\nscala.jdk.javaapi.StreamConverters.\n"},
{"l":"api/scala/collection/convert/StreamExtensions.html#AnyArrayHasSeqParStream-fffffaf2","e":false,"i":"","n":"AnyArrayHasSeqParStream","t":"AnyArrayHasSeqParStream[A <: AnyRef](a: Array[A]): AnyArrayHasSeqParStream[A]","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#ByteArrayHasSeqParStream-fffff1b4","e":false,"i":"","n":"ByteArrayHasSeqParStream","t":"ByteArrayHasSeqParStream(a: Array[Byte]): ByteArrayHasSeqParStream","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#CharArrayHasSeqParStream-fffffc50","e":false,"i":"","n":"CharArrayHasSeqParStream","t":"CharArrayHasSeqParStream(a: Array[Char]): CharArrayHasSeqParStream","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#DoubleArrayHasSeqParStream-5c6","e":false,"i":"","n":"DoubleArrayHasSeqParStream","t":"DoubleArrayHasSeqParStream(a: Array[Double]): DoubleArrayHasSeqParStream","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#DoubleStreamHasToScala-298","e":false,"i":"","n":"DoubleStreamHasToScala","t":"DoubleStreamHasToScala(stream: DoubleStream): DoubleStreamHasToScala","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#FloatArrayHasSeqParStream-cd2","e":false,"i":"","n":"FloatArrayHasSeqParStream","t":"FloatArrayHasSeqParStream(a: Array[Float]): FloatArrayHasSeqParStream","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#IntArrayHasSeqParStream-b32","e":false,"i":"","n":"IntArrayHasSeqParStream","t":"IntArrayHasSeqParStream(a: Array[Int]): IntArrayHasSeqParStream","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#IntStreamHasToScala-ac8","e":false,"i":"","n":"IntStreamHasToScala","t":"IntStreamHasToScala(stream: IntStream): IntStreamHasToScala","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#IterableHasSeqStream-df8","e":false,"i":"","n":"IterableHasSeqStream","t":"IterableHasSeqStream[A](cc: IterableOnce[A]): IterableHasSeqStream[A]","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#IterableNonGenericHasParStream-ffffff27","e":false,"i":"","n":"IterableNonGenericHasParStream","t":"IterableNonGenericHasParStream[A, C <: IterableOnce[_]](c: C)(implicit ev: C <:< IterableOnce[A]): IterableNonGenericHasParStream[A, C]","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#LongArrayHasSeqParStream-9c","e":false,"i":"","n":"LongArrayHasSeqParStream","t":"LongArrayHasSeqParStream(a: Array[Long]): LongArrayHasSeqParStream","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#LongStreamHasToScala-fffff56e","e":false,"i":"","n":"LongStreamHasToScala","t":"LongStreamHasToScala(stream: LongStream): LongStreamHasToScala","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#MapHasParKeyValueStream-fffff633","e":false,"i":"","n":"MapHasParKeyValueStream","t":"MapHasParKeyValueStream[K, V, CC <: ([X, Y] =>> MapOps[X, Y, Map, _])](cc: CC[K, V]): MapHasParKeyValueStream[K, V, CC]","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#MapHasSeqKeyValueStream-d71","e":false,"i":"","n":"MapHasSeqKeyValueStream","t":"MapHasSeqKeyValueStream[K, V, CC <: ([X, Y] =>> MapOps[X, Y, Map, _])](cc: CC[K, V]): MapHasSeqKeyValueStream[K, V, CC]","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#ShortArrayHasSeqParStream-d2","e":false,"i":"","n":"ShortArrayHasSeqParStream","t":"ShortArrayHasSeqParStream(a: Array[Short]): ShortArrayHasSeqParStream","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#StepperHasParStream-fffffa47","e":false,"i":"","n":"StepperHasParStream","t":"StepperHasParStream[A](stepper: Stepper[A] & EfficientSplit): StepperHasParStream[A]","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#StepperHasSeqStream-ffffff85","e":false,"i":"","n":"StepperHasSeqStream","t":"StepperHasSeqStream[A](stepper: Stepper[A]): StepperHasSeqStream[A]","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#StreamHasToScala-7a5","e":false,"i":"","n":"StreamHasToScala","t":"StreamHasToScala[A](stream: Stream[A]): StreamHasToScala[A]","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions.html#StringHasSeqParStream-fffff2cf","e":false,"i":"","n":"StringHasSeqParStream","t":"StringHasSeqParStream(s: String): StringHasSeqParStream","d":"scala.collection.convert.StreamExtensions","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.html#","e":false,"i":"","n":"AnyArrayHasSeqParStream","t":"AnyArrayHasSeqParStream[A <: AnyRef](a: Array[A])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.html#asJavaParStream-0","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream: Stream[A]","d":"scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream","k":"def","x":"Create a parallel Java Stream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.html#asJavaSeqStream-0","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream: Stream[A]","d":"scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream","k":"def","x":"Create a sequential Java Stream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream.html#","e":false,"i":"","n":"ByteArrayHasSeqParStream","t":"ByteArrayHasSeqParStream(a: Array[Byte])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream.html#asJavaParStream-0","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream: IntStream","d":"scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream","k":"def","x":"Create a parallel Java IntStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$ByteArrayHasSeqParStream.html#asJavaSeqStream-0","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream: IntStream","d":"scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream","k":"def","x":"Create a sequential Java IntStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$CharArrayHasSeqParStream.html#","e":false,"i":"","n":"CharArrayHasSeqParStream","t":"CharArrayHasSeqParStream(a: Array[Char])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$CharArrayHasSeqParStream.html#asJavaParStream-0","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream: IntStream","d":"scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream","k":"def","x":"Create a parallel Java IntStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$CharArrayHasSeqParStream.html#asJavaSeqStream-0","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream: IntStream","d":"scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream","k":"def","x":"Create a sequential Java IntStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream.html#","e":false,"i":"","n":"DoubleArrayHasSeqParStream","t":"DoubleArrayHasSeqParStream(a: Array[Double])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream.html#asJavaParStream-0","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream: DoubleStream","d":"scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream","k":"def","x":"Create a parallel Java DoubleStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$DoubleArrayHasSeqParStream.html#asJavaSeqStream-0","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream: DoubleStream","d":"scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream","k":"def","x":"Create a sequential Java DoubleStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$DoubleStreamHasToScala.html#","e":false,"i":"","n":"DoubleStreamHasToScala","t":"DoubleStreamHasToScala(stream: DoubleStream)","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$DoubleStreamHasToScala.html#toScala-fffff373","e":false,"i":"","n":"toScala","t":"toScala[C1](factory: Factory[Double, C1])(implicit info: AccumulatorFactoryInfo[Double, C1]): C1","d":"scala.collection.convert.StreamExtensions.DoubleStreamHasToScala","k":"def","x":"Copy the elements of this stream into a Scala collection."},
{"l":"api/scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.html#","e":false,"i":"","n":"FloatArrayHasSeqParStream","t":"FloatArrayHasSeqParStream(a: Array[Float])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.html#asJavaParStream-0","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream: DoubleStream","d":"scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream","k":"def","x":"Create a parallel Java DoubleStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$FloatArrayHasSeqParStream.html#asJavaSeqStream-0","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream: DoubleStream","d":"scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream","k":"def","x":"Create a sequential Java DoubleStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$IntArrayHasSeqParStream.html#","e":false,"i":"","n":"IntArrayHasSeqParStream","t":"IntArrayHasSeqParStream(a: Array[Int])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$IntArrayHasSeqParStream.html#asJavaParStream-0","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream: IntStream","d":"scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream","k":"def","x":"Create a parallel Java IntStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$IntArrayHasSeqParStream.html#asJavaSeqStream-0","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream: IntStream","d":"scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream","k":"def","x":"Create a sequential Java IntStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$IntStreamHasToScala.html#","e":false,"i":"","n":"IntStreamHasToScala","t":"IntStreamHasToScala(stream: IntStream)","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$IntStreamHasToScala.html#toScala-fffff373","e":false,"i":"","n":"toScala","t":"toScala[C1](factory: Factory[Int, C1])(implicit info: AccumulatorFactoryInfo[Int, C1]): C1","d":"scala.collection.convert.StreamExtensions.IntStreamHasToScala","k":"def","x":"Copy the elements of this stream into a Scala collection."},
{"l":"api/scala/collection/convert/StreamExtensions$IterableHasSeqStream.html#","e":false,"i":"","n":"IterableHasSeqStream","t":"IterableHasSeqStream[A](cc: IterableOnce[A])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$IterableHasSeqStream.html#asJavaSeqStream-819","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[A, S, St], st: StepperShape[A, St]): S","d":"scala.collection.convert.StreamExtensions.IterableHasSeqStream","k":"def","x":"Create a sequential Java Stream for this collection. If the\ncollection contains primitive values, a corresponding specialized Stream is returned (e.g.,\nIntStream).\n"},
{"l":"api/scala/collection/convert/StreamExtensions$IterableNonGenericHasParStream.html#","e":false,"i":"","n":"IterableNonGenericHasParStream","t":"IterableNonGenericHasParStream[A, C <: IterableOnce[_]](c: C)(implicit ev: C <:< IterableOnce[A])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$IterableNonGenericHasParStream.html#asJavaParStream-fffff24f","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[A, S, St], st: StepperShape[A, St], isEfficient: C <:< IterableOnceWithEfficientStepper): S","d":"scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream","k":"def","x":"Create a parallel Java Stream for this collection. If the\ncollection contains primitive values, a corresponding specialized Stream is returned (e.g.,\nIntStream).\n"},
{"l":"api/scala/collection/convert/StreamExtensions$LongArrayHasSeqParStream.html#","e":false,"i":"","n":"LongArrayHasSeqParStream","t":"LongArrayHasSeqParStream(a: Array[Long])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$LongArrayHasSeqParStream.html#asJavaParStream-0","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream: LongStream","d":"scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream","k":"def","x":"Create a parallel Java LongStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$LongArrayHasSeqParStream.html#asJavaSeqStream-0","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream: LongStream","d":"scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream","k":"def","x":"Create a sequential Java LongStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$LongStreamHasToScala.html#","e":false,"i":"","n":"LongStreamHasToScala","t":"LongStreamHasToScala(stream: LongStream)","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$LongStreamHasToScala.html#toScala-fffff373","e":false,"i":"","n":"toScala","t":"toScala[C1](factory: Factory[Long, C1])(implicit info: AccumulatorFactoryInfo[Long, C1]): C1","d":"scala.collection.convert.StreamExtensions.LongStreamHasToScala","k":"def","x":"Copy the elements of this stream into a Scala collection."},
{"l":"api/scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.html#","e":false,"i":"","n":"MapHasParKeyValueStream","t":"MapHasParKeyValueStream[K, V, CC <: ([X, Y] =>> MapOps[X, Y, Map, _])](cc: CC[K, V])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.html#asJavaParKeyStream-fffff24f","e":false,"i":"","n":"asJavaParKeyStream","t":"asJavaParKeyStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[K, S, St], st: StepperShape[K, St], isEfficient: CC[K, V] <:< MapOpsWithEfficientKeyStepper): S","d":"scala.collection.convert.StreamExtensions.MapHasParKeyValueStream","k":"def","x":"Create a parallel Java Stream for the keys of this map. If\nthe keys are primitive values, a corresponding specialized Stream is returned (e.g.,\nIntStream).\n"},
{"l":"api/scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.html#asJavaParStream-fffff24f","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[(K, V), S, St], st: StepperShape[(K, V), St], isEfficient: CC[K, V] <:< MapOpsWithEfficientStepper): S","d":"scala.collection.convert.StreamExtensions.MapHasParKeyValueStream","k":"def","x":"Create a parallel Java Stream for the (key, value) pairs of\nthis map.\n"},
{"l":"api/scala/collection/convert/StreamExtensions$MapHasParKeyValueStream.html#asJavaParValueStream-fffff24f","e":false,"i":"","n":"asJavaParValueStream","t":"asJavaParValueStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[V, S, St], st: StepperShape[V, St], isEfficient: CC[K, V] <:< MapOpsWithEfficientValueStepper): S","d":"scala.collection.convert.StreamExtensions.MapHasParKeyValueStream","k":"def","x":"Create a parallel Java Stream for the values of this map. If\nthe values are primitives, a corresponding specialized Stream is returned (e.g.,\nIntStream).\n"},
{"l":"api/scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.html#","e":false,"i":"","n":"MapHasSeqKeyValueStream","t":"MapHasSeqKeyValueStream[K, V, CC <: ([X, Y] =>> MapOps[X, Y, Map, _])](cc: CC[K, V])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.html#asJavaSeqKeyStream-819","e":false,"i":"","n":"asJavaSeqKeyStream","t":"asJavaSeqKeyStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[K, S, St], st: StepperShape[K, St]): S","d":"scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream","k":"def","x":"Create a sequential Java Stream for the keys of this map. If\nthe keys are primitive values, a corresponding specialized Stream is returned (e.g.,\nIntStream).\n"},
{"l":"api/scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.html#asJavaSeqStream-819","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[(K, V), S, St], st: StepperShape[(K, V), St]): S","d":"scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream","k":"def","x":"Create a sequential Java Stream for the (key, value) pairs of\nthis map.\n"},
{"l":"api/scala/collection/convert/StreamExtensions$MapHasSeqKeyValueStream.html#asJavaSeqValueStream-819","e":false,"i":"","n":"asJavaSeqValueStream","t":"asJavaSeqValueStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[V, S, St], st: StepperShape[V, St]): S","d":"scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream","k":"def","x":"Create a sequential Java Stream for the values of this map. If\nthe values are primitives, a corresponding specialized Stream is returned (e.g.,\nIntStream).\n"},
{"l":"api/scala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream.html#","e":false,"i":"","n":"ShortArrayHasSeqParStream","t":"ShortArrayHasSeqParStream(a: Array[Short])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream.html#asJavaParStream-0","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream: IntStream","d":"scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream","k":"def","x":"Create a parallel Java IntStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$ShortArrayHasSeqParStream.html#asJavaSeqStream-0","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream: IntStream","d":"scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream","k":"def","x":"Create a sequential Java IntStream for this array."},
{"l":"api/scala/collection/convert/StreamExtensions$StepperHasParStream.html#","e":false,"i":"","n":"StepperHasParStream","t":"StepperHasParStream[A](stepper: Stepper[A] & EfficientSplit)","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$StepperHasParStream.html#asJavaParStream-819","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[A, S, St], st: StepperShape[A, St]): S","d":"scala.collection.convert.StreamExtensions.StepperHasParStream","k":"def","x":"Create a parallel Java Stream for this stepper. If the\nstepper yields primitive values, a corresponding specialized Stream is returned (e.g.,\nIntStream).\n"},
{"l":"api/scala/collection/convert/StreamExtensions$StepperHasSeqStream.html#","e":false,"i":"","n":"StepperHasSeqStream","t":"StepperHasSeqStream[A](stepper: Stepper[A])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$StepperHasSeqStream.html#asJavaSeqStream-819","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream[S <: BaseStream[_, _], St <: Stepper[_]](implicit s: StreamShape[A, S, St], st: StepperShape[A, St]): S","d":"scala.collection.convert.StreamExtensions.StepperHasSeqStream","k":"def","x":"Create a sequential Java Stream for this stepper. If the\nstepper yields primitive values, a corresponding specialized Stream is returned (e.g.,\nIntStream).\n"},
{"l":"api/scala/collection/convert/StreamExtensions$StreamHasToScala.html#","e":false,"i":"","n":"StreamHasToScala","t":"StreamHasToScala[A](stream: Stream[A])","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$StreamHasToScala.html#asJavaPrimitiveStream-942","e":false,"i":"","n":"asJavaPrimitiveStream","t":"asJavaPrimitiveStream[S](implicit unboxer: StreamUnboxer[A, S]): S","d":"scala.collection.convert.StreamExtensions.StreamHasToScala","k":"def","x":"Convert a generic Java Stream wrapping a primitive type to a corresponding primitive\nStream.\n"},
{"l":"api/scala/collection/convert/StreamExtensions$StreamHasToScala.html#toScala-fffff373","e":false,"i":"","n":"toScala","t":"toScala[C1](factory: Factory[A, C1])(implicit info: AccumulatorFactoryInfo[A, C1]): C1","d":"scala.collection.convert.StreamExtensions.StreamHasToScala","k":"def","x":"Copy the elements of this stream into a Scala collection."},
{"l":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html#","e":false,"i":"","n":"StringHasSeqParStream","t":"StringHasSeqParStream(s: String)","d":"scala.collection.convert.StreamExtensions","k":"class","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html#asJavaParCharStream-0","e":false,"i":"","n":"asJavaParCharStream","t":"asJavaParCharStream: IntStream","d":"scala.collection.convert.StreamExtensions.StringHasSeqParStream","k":"def","x":"A parallel stream on the characters of a string. See also asJavaParCodePointStream."},
{"l":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html#asJavaParCodePointStream-0","e":false,"i":"","n":"asJavaParCodePointStream","t":"asJavaParCodePointStream: IntStream","d":"scala.collection.convert.StreamExtensions.StringHasSeqParStream","k":"def","x":"A parallel stream on the code points of a string. See also asJavaParCharStream."},
{"l":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html#asJavaParStream-0","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream: IntStream","d":"scala.collection.convert.StreamExtensions.StringHasSeqParStream","k":"def","x":"A parallel stream on the characters of a string, same as asJavaParCharStream. See also\nasJavaParCodePointStream.\n"},
{"l":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html#asJavaSeqCharStream-0","e":false,"i":"","n":"asJavaSeqCharStream","t":"asJavaSeqCharStream: IntStream","d":"scala.collection.convert.StreamExtensions.StringHasSeqParStream","k":"def","x":"A sequential stream on the characters of a string. See also  asJavaSeqCodePointStream."},
{"l":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html#asJavaSeqCodePointStream-0","e":false,"i":"","n":"asJavaSeqCodePointStream","t":"asJavaSeqCodePointStream: IntStream","d":"scala.collection.convert.StreamExtensions.StringHasSeqParStream","k":"def","x":"A sequential stream on the code points of a string. See also asJavaSeqCharStream."},
{"l":"api/scala/collection/convert/StreamExtensions$StringHasSeqParStream.html#asJavaSeqStream-0","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream: IntStream","d":"scala.collection.convert.StreamExtensions.StringHasSeqParStream","k":"def","x":"A sequential stream on the characters of a string, same as asJavaSeqCharStream. See also\nasJavaSeqCodePointStream.\n"},
{"l":"api/scala/collection/convert/StreamExtensions$.html#","e":false,"i":"","n":"StreamExtensions","t":"StreamExtensions","d":"scala.collection.convert","k":"object","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html#","e":false,"i":"","n":"AccumulatorFactoryInfo","t":"AccumulatorFactoryInfo extends LowPriorityAccumulatorFactoryInfo","d":"scala.collection.convert.StreamExtensions","k":"object","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html#anyAccumulatorFactoryInfo-fffffde2","e":false,"i":"","n":"anyAccumulatorFactoryInfo","t":"anyAccumulatorFactoryInfo[A]: AccumulatorFactoryInfo[A, AnyAccumulator[A]]","d":"scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html#doubleAccumulatorFactoryInfo-0","e":false,"i":"","n":"doubleAccumulatorFactoryInfo","t":"doubleAccumulatorFactoryInfo: AccumulatorFactoryInfo[Double, DoubleAccumulator]","d":"scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html#intAccumulatorFactoryInfo-0","e":false,"i":"","n":"intAccumulatorFactoryInfo","t":"intAccumulatorFactoryInfo: AccumulatorFactoryInfo[Int, IntAccumulator]","d":"scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html#jDoubleAccumulatorFactoryInfo-0","e":false,"i":"","n":"jDoubleAccumulatorFactoryInfo","t":"jDoubleAccumulatorFactoryInfo: AccumulatorFactoryInfo[Double, IntAccumulator]","d":"scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html#jIntegerAccumulatorFactoryInfo-0","e":false,"i":"","n":"jIntegerAccumulatorFactoryInfo","t":"jIntegerAccumulatorFactoryInfo: AccumulatorFactoryInfo[Integer, IntAccumulator]","d":"scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html#jLongAccumulatorFactoryInfo-0","e":false,"i":"","n":"jLongAccumulatorFactoryInfo","t":"jLongAccumulatorFactoryInfo: AccumulatorFactoryInfo[Long, IntAccumulator]","d":"scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo$.html#longAccumulatorFactoryInfo-0","e":false,"i":"","n":"longAccumulatorFactoryInfo","t":"longAccumulatorFactoryInfo: AccumulatorFactoryInfo[Long, LongAccumulator]","d":"scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo.html#","e":false,"i":"","n":"AccumulatorFactoryInfo","t":"AccumulatorFactoryInfo[A, C]","d":"scala.collection.convert.StreamExtensions","k":"trait","x":"An implicit AccumulatorFactoryInfo connects primitive element types to the corresponding\nspecialized scala.jdk.Accumulator factory. This is used in the stream.toScala extension methods\nto ensure collecting a primitive stream into a primitive accumulator does not box."},
{"l":"api/scala/collection/convert/StreamExtensions$$AccumulatorFactoryInfo.html#companion-0","e":false,"i":"","n":"companion","t":"companion: AnyRef","d":"scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$LowPriorityAccumulatorFactoryInfo.html#","e":false,"i":"","n":"LowPriorityAccumulatorFactoryInfo","t":"LowPriorityAccumulatorFactoryInfo","d":"scala.collection.convert.StreamExtensions","k":"trait","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$LowPriorityAccumulatorFactoryInfo.html#noAccumulatorFactoryInfo-601","e":false,"i":"","n":"noAccumulatorFactoryInfo","t":"noAccumulatorFactoryInfo[A, C]: AccumulatorFactoryInfo[A, C]","d":"scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#","e":false,"i":"","n":"StreamShape","t":"StreamShape extends StreamShapeLowPriority1","d":"scala.collection.convert.StreamExtensions","k":"object","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#byteStreamShape-0","e":false,"i":"","n":"byteStreamShape","t":"byteStreamShape: StreamShape[Byte, IntStream, IntStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#charStreamShape-0","e":false,"i":"","n":"charStreamShape","t":"charStreamShape: StreamShape[Char, IntStream, IntStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#doubleStreamShape-0","e":false,"i":"","n":"doubleStreamShape","t":"doubleStreamShape: StreamShape[Double, DoubleStream, DoubleStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#floatStreamShape-0","e":false,"i":"","n":"floatStreamShape","t":"floatStreamShape: StreamShape[Float, DoubleStream, DoubleStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#intStreamShape-0","e":false,"i":"","n":"intStreamShape","t":"intStreamShape: StreamShape[Int, IntStream, IntStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#jByteStreamShape-0","e":false,"i":"","n":"jByteStreamShape","t":"jByteStreamShape: StreamShape[Byte, IntStream, IntStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#jCharacterStreamShape-0","e":false,"i":"","n":"jCharacterStreamShape","t":"jCharacterStreamShape: StreamShape[Character, IntStream, IntStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#jDoubleStreamShape-0","e":false,"i":"","n":"jDoubleStreamShape","t":"jDoubleStreamShape: StreamShape[Double, DoubleStream, DoubleStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#jFloatStreamShape-0","e":false,"i":"","n":"jFloatStreamShape","t":"jFloatStreamShape: StreamShape[Float, DoubleStream, DoubleStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#jIntegerStreamShape-0","e":false,"i":"","n":"jIntegerStreamShape","t":"jIntegerStreamShape: StreamShape[Integer, IntStream, IntStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#jLongStreamShape-0","e":false,"i":"","n":"jLongStreamShape","t":"jLongStreamShape: StreamShape[Long, LongStream, LongStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#jShortStreamShape-0","e":false,"i":"","n":"jShortStreamShape","t":"jShortStreamShape: StreamShape[Short, IntStream, IntStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#longStreamShape-0","e":false,"i":"","n":"longStreamShape","t":"longStreamShape: StreamShape[Long, LongStream, LongStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape$.html#shortStreamShape-0","e":false,"i":"","n":"shortStreamShape","t":"shortStreamShape: StreamShape[Short, IntStream, IntStepper]","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape.html#","e":false,"i":"","n":"StreamShape","t":"StreamShape[T, S <: BaseStream[_, _], St <: Stepper[_]]","d":"scala.collection.convert.StreamExtensions","k":"trait","x":"An implicit StreamShape instance connects element types with the corresponding specialized\nStream and Stepper types. This is used in asJavaStream extension methods to create\ngeneric or primitive streams according to the element type.\n"},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShape.html#fromStepper-8","e":false,"i":"","n":"fromStepper","t":"fromStepper(st: St, par: Boolean): S","d":"scala.collection.convert.StreamExtensions.StreamShape","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShapeLowPriority1.html#","e":false,"i":"","n":"StreamShapeLowPriority1","t":"StreamShapeLowPriority1","d":"scala.collection.convert.StreamExtensions","k":"trait","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamShapeLowPriority1.html#anyStreamShape-c91","e":false,"i":"","n":"anyStreamShape","t":"anyStreamShape[T]: StreamShape[T, Stream[T], Stepper[T]]","d":"scala.collection.convert.StreamExtensions.StreamShapeLowPriority1","k":"def","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html#","e":false,"i":"","n":"StreamUnboxer","t":"StreamUnboxer","d":"scala.collection.convert.StreamExtensions","k":"object","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html#doubleStreamUnboxer-0","e":false,"i":"","n":"doubleStreamUnboxer","t":"doubleStreamUnboxer: StreamUnboxer[Double, DoubleStream]","d":"scala.collection.convert.StreamExtensions.StreamUnboxer","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html#intStreamUnboxer-0","e":false,"i":"","n":"intStreamUnboxer","t":"intStreamUnboxer: StreamUnboxer[Int, IntStream]","d":"scala.collection.convert.StreamExtensions.StreamUnboxer","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html#javaDoubleStreamUnboxer-0","e":false,"i":"","n":"javaDoubleStreamUnboxer","t":"javaDoubleStreamUnboxer: StreamUnboxer[Double, DoubleStream]","d":"scala.collection.convert.StreamExtensions.StreamUnboxer","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html#javaIntegerStreamUnboxer-0","e":false,"i":"","n":"javaIntegerStreamUnboxer","t":"javaIntegerStreamUnboxer: StreamUnboxer[Integer, IntStream]","d":"scala.collection.convert.StreamExtensions.StreamUnboxer","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html#javaLongStreamUnboxer-0","e":false,"i":"","n":"javaLongStreamUnboxer","t":"javaLongStreamUnboxer: StreamUnboxer[Long, LongStream]","d":"scala.collection.convert.StreamExtensions.StreamUnboxer","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer$.html#longStreamUnboxer-0","e":false,"i":"","n":"longStreamUnboxer","t":"longStreamUnboxer: StreamUnboxer[Long, LongStream]","d":"scala.collection.convert.StreamExtensions.StreamUnboxer","k":"val","x":""},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer.html#","e":false,"i":"","n":"StreamUnboxer","t":"StreamUnboxer[A, S]","d":"scala.collection.convert.StreamExtensions","k":"trait","x":"Connects a stream element type A to the corresponding, potentially specialized, Stream type.\nUsed in the stream.asJavaPrimitiveStream extension method.\n"},
{"l":"api/scala/collection/convert/StreamExtensions$$StreamUnboxer.html#apply-fffffdc1","e":false,"i":"","n":"apply","t":"apply(s: Stream[A]): S","d":"scala.collection.convert.StreamExtensions.StreamUnboxer","k":"def","x":""},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#","e":false,"i":"","n":"ToJavaImplicits","t":"ToJavaImplicits","d":"scala.collection.convert","k":"trait","x":"Defines implicit conversions from Scala to Java collections."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#buffer AsJavaList-89d","e":false,"i":"","n":"`buffer AsJavaList`","t":"`buffer AsJavaList`[A](b: Buffer[A]): List[A]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala mutable Buffer to a Java List."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#collection asJava-7","e":false,"i":"","n":"`collection asJava`","t":"`collection asJava`[A](it: Iterable[A]): Collection[A]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala Iterable to an immutable Java Collection."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#dictionary asJava-fffff554","e":false,"i":"","n":"`dictionary asJava`","t":"`dictionary asJava`[K, V](m: Map[K, V]): Dictionary[K, V]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala mutable Map to a Java Dictionary."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#enumeration asJava-782","e":false,"i":"","n":"`enumeration asJava`","t":"`enumeration asJava`[A](it: Iterator[A]): Enumeration[A]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala Iterator to a Java Enumeration."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#iterable asJava-fffff3af","e":false,"i":"","n":"`iterable asJava`","t":"`iterable asJava`[A](i: Iterable[A]): Iterable[A]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala Iterable to a Java Iterable."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#iterator asJava-d13","e":false,"i":"","n":"`iterator asJava`","t":"`iterator asJava`[A](it: Iterator[A]): Iterator[A]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala Iterator to a Java Iterator."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#map AsJavaConcurrentMap-fffffba9","e":false,"i":"","n":"`map AsJavaConcurrentMap`","t":"`map AsJavaConcurrentMap`[K, V](m: Map[K, V]): ConcurrentMap[K, V]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala mutable concurrent.Map to a Java ConcurrentMap."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#map AsJavaMap-fffff296","e":false,"i":"","n":"`map AsJavaMap`","t":"`map AsJavaMap`[K, V](m: Map[K, V]): Map[K, V]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala Map to a Java Map."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#mutableMap AsJavaMap-fffffa5e","e":false,"i":"","n":"`mutableMap AsJavaMap`","t":"`mutableMap AsJavaMap`[K, V](m: Map[K, V]): Map[K, V]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala mutable Map to a Java Map."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#mutableSeq AsJavaList-fffff2de","e":false,"i":"","n":"`mutableSeq AsJavaList`","t":"`mutableSeq AsJavaList`[A](seq: Seq[A]): List[A]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala mutable Seq to a Java List."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#mutableSet AsJavaSet-eff","e":false,"i":"","n":"`mutableSet AsJavaSet`","t":"`mutableSet AsJavaSet`[A](s: Set[A]): Set[A]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala mutable Set to a Java Set."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#seq AsJavaList-fffff0a6","e":false,"i":"","n":"`seq AsJavaList`","t":"`seq AsJavaList`[A](seq: Seq[A]): List[A]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala Seq to a Java List."},
{"l":"api/scala/collection/convert/ToJavaImplicits.html#set AsJavaSet-fffff837","e":false,"i":"","n":"`set AsJavaSet`","t":"`set AsJavaSet`[A](s: Set[A]): Set[A]","d":"scala.collection.convert.ToJavaImplicits","k":"def","x":"Implicitly converts a Scala Set to a Java Set."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#","e":false,"i":"","n":"ToScalaImplicits","t":"ToScalaImplicits","d":"scala.collection.convert","k":"trait","x":"Defines implicit converter methods from Java to Scala collections."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#collection AsScalaIterable-60b","e":false,"i":"","n":"`collection AsScalaIterable`","t":"`collection AsScalaIterable`[A](i: Collection[A]): Iterable[A]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java Collection to an Scala Iterable."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#dictionary AsScalaMap-654","e":false,"i":"","n":"`dictionary AsScalaMap`","t":"`dictionary AsScalaMap`[K, V](p: Dictionary[K, V]): Map[K, V]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java Dictionary to a Scala mutable Map."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#enumeration AsScalaIterator-fffff100","e":false,"i":"","n":"`enumeration AsScalaIterator`","t":"`enumeration AsScalaIterator`[A](i: Enumeration[A]): Iterator[A]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java Enumeration to a Scala Iterator."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#iterable AsScalaIterable-d63","e":false,"i":"","n":"`iterable AsScalaIterable`","t":"`iterable AsScalaIterable`[A](i: Iterable[A]): Iterable[A]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java Iterable to a Scala Iterable."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#iterator asScala-fffff9f7","e":false,"i":"","n":"`iterator asScala`","t":"`iterator asScala`[A](it: Iterator[A]): Iterator[A]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java Iterator to a Scala Iterator."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#list asScalaBuffer-fffff421","e":false,"i":"","n":"`list asScalaBuffer`","t":"`list asScalaBuffer`[A](l: List[A]): Buffer[A]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java List to a Scala mutable Buffer."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#map AsScalaConcurrentMap-fffffdcd","e":false,"i":"","n":"`map AsScalaConcurrentMap`","t":"`map AsScalaConcurrentMap`[K, V](m: ConcurrentMap[K, V]): Map[K, V]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java ConcurrentMap to a Scala mutable ConcurrentMap."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#map AsScala-fffff676","e":false,"i":"","n":"`map AsScala`","t":"`map AsScala`[K, V](m: Map[K, V]): Map[K, V]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java Map to a Scala mutable Map."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#properties AsScalaMap-fffff13f","e":false,"i":"","n":"`properties AsScalaMap`","t":"`properties AsScalaMap`(p: Properties): Map[String, String]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java Properties to a Scala mutable Map[String, String]."},
{"l":"api/scala/collection/convert/ToScalaImplicits.html#set asScala-fffffa63","e":false,"i":"","n":"`set asScala`","t":"`set asScala`[A](s: Set[A]): Set[A]","d":"scala.collection.convert.ToScalaImplicits","k":"def","x":"Implicitly converts a Java Set to a Scala mutable Set."},
{"l":"api/scala/collection/generic.html#","e":false,"i":"","n":"scala.collection.generic","t":"scala.collection.generic","d":"","k":"package","x":""},
{"l":"api/scala/collection/generic.html#CanBuildFrom-0","e":false,"i":"","n":"CanBuildFrom","t":"CanBuildFrom[-From, -A, +C] = BuildFrom[From, A, C]","d":"scala.collection.generic","k":"type","x":""},
{"l":"api/scala/collection/generic.html#Clearable-0","e":false,"i":"","n":"Clearable","t":"Clearable = Clearable","d":"scala.collection.generic","k":"type","x":""},
{"l":"api/scala/collection/generic.html#Growable-0","e":false,"i":"","n":"Growable","t":"Growable[-A] = Growable[A]","d":"scala.collection.generic","k":"type","x":""},
{"l":"api/scala/collection/generic.html#IsTraversableLike-0","e":false,"i":"","n":"IsTraversableLike","t":"IsTraversableLike[Repr] = IsIterable[Repr]","d":"scala.collection.generic","k":"type","x":""},
{"l":"api/scala/collection/generic.html#IsTraversableOnce-0","e":false,"i":"","n":"IsTraversableOnce","t":"IsTraversableOnce[Repr] = IsIterableOnce[Repr]","d":"scala.collection.generic","k":"type","x":""},
{"l":"api/scala/collection/generic.html#Shrinkable-0","e":false,"i":"","n":"Shrinkable","t":"Shrinkable[-A] = Shrinkable[A]","d":"scala.collection.generic","k":"type","x":""},
{"l":"api/scala/collection/generic/DefaultSerializable.html#","e":false,"i":"","n":"DefaultSerializable","t":"DefaultSerializable extends Serializable","d":"scala.collection.generic","k":"trait","x":"Mix-in trait to enable DefaultSerializationProxy for the standard collection types. Depending on the type\nit is mixed into, it will dynamically choose iterableFactory, mapFactory, sortedIterableFactory or\nsortedMapFactory for deserialization into the respective CC type. Override writeReplace or implement\nit directly without using this trait if you need a non-standard factory or if you want to use a different\nserialization scheme.\n"},
{"l":"api/scala/collection/generic/DefaultSerializationProxy.html#","e":false,"i":"","n":"DefaultSerializationProxy","t":"DefaultSerializationProxy[A](factory: Factory[A, Any], coll: Iterable[A]) extends Serializable","d":"scala.collection.generic","k":"class","x":"The default serialization proxy for collection implementations."},
{"l":"api/scala/collection/generic/IsIterable.html#","e":false,"i":"","n":"IsIterable","t":"IsIterable[Repr] extends IsIterableOnce[Repr]","d":"scala.collection.generic","k":"trait","x":"A trait which can be used to avoid code duplication when defining extension\nmethods that should be applicable both to existing Scala collections (i.e.,\ntypes extending Iterable) as well as other (potentially user-defined)\ntypes that could be converted to a Scala collection type. This trait\nmakes it possible to treat Scala collections and types that can be implicitly\nconverted to a collection type uniformly. For example, one can provide\nextension methods that work both on collection types and on Strings (Strings\ndo not extend Iterable, but can be converted to Iterable)"},
{"l":"api/scala/collection/generic/IsIterable.html#C-0","e":false,"i":"","n":"C","t":"C","d":"scala.collection.generic.IsIterable","k":"type","x":"The type returned by transformation operations that preserve the same elements\ntype (e.g. filter, take)."},
{"l":"api/scala/collection/generic/IsIterable.html#apply-fffff62b","e":false,"i":"","n":"apply","t":"apply(coll: Repr): IterableOps[A, Iterable, C]","d":"scala.collection.generic.IsIterable","k":"def","x":"A conversion from the type Repr to IterableOps[A, Iterable, C]"},
{"l":"api/scala/collection/generic/IsIterable.html#conversion-0","e":false,"i":"","n":"conversion","t":"conversion: Repr => IterableOps[A, Iterable, C]","d":"scala.collection.generic.IsIterable","k":"val","x":""},
{"l":"api/scala/collection/generic/IsIterable$.html#","e":false,"i":"","n":"IsIterable","t":"IsIterable extends IsIterableLowPriority","d":"scala.collection.generic","k":"object","x":""},
{"l":"api/scala/collection/generic/IsIterable$.html#bitSetOpsIsIterable-fffffd2a","e":false,"i":"","n":"bitSetOpsIsIterable","t":"bitSetOpsIsIterable[C0 <: BitSet & BitSetOps[C0]]: IsIterable[C0] { type A = Int; type C = C0;  }","d":"scala.collection.generic.IsIterable","k":"def","x":""},
{"l":"api/scala/collection/generic/IsIterable$.html#iterableOpsIsIterable-589","e":false,"i":"","n":"iterableOpsIsIterable","t":"iterableOpsIsIterable[A0, CC0 <: ([X] =>> IterableOps[X, Iterable, CC0[X]])]: IsIterable[CC0[A0]] { type A = A0; type C = CC0[A0];  }","d":"scala.collection.generic.IsIterable","k":"def","x":""},
{"l":"api/scala/collection/generic/IsIterableLowPriority.html#","e":false,"i":"","n":"IsIterableLowPriority","t":"IsIterableLowPriority","d":"scala.collection.generic","k":"trait","x":""},
{"l":"api/scala/collection/generic/IsIterableLowPriority.html#isMapLikeIsIterable-fffff6d7","e":false,"i":"","n":"isMapLikeIsIterable","t":"isMapLikeIsIterable[Repr](implicit isMapLike: IsMap[Repr]): IsIterable[Repr] { type A = isMapLike.A; type C = isMapLike.C;  }","d":"scala.collection.generic.IsIterableLowPriority","k":"def","x":""},
{"l":"api/scala/collection/generic/IsIterableLowPriority.html#isSeqLikeIsIterable-fffff8f4","e":false,"i":"","n":"isSeqLikeIsIterable","t":"isSeqLikeIsIterable[Repr](implicit isSeqLike: IsSeq[Repr]): IsIterable[Repr] { type A = isSeqLike.A; type C = isSeqLike.C;  }","d":"scala.collection.generic.IsIterableLowPriority","k":"def","x":""},
{"l":"api/scala/collection/generic/IsIterableOnce.html#","e":false,"i":"","n":"IsIterableOnce","t":"IsIterableOnce[Repr]","d":"scala.collection.generic","k":"trait","x":"Type class witnessing that a collection representation type Repr has\nelements of type A and has a conversion to IterableOnce[A]."},
{"l":"api/scala/collection/generic/IsIterableOnce.html#A-0","e":false,"i":"","n":"A","t":"A","d":"scala.collection.generic.IsIterableOnce","k":"type","x":"The type of elements we can traverse over (e.g. Int)."},
{"l":"api/scala/collection/generic/IsIterableOnce.html#apply-fffff628","e":false,"i":"","n":"apply","t":"apply(coll: Repr): IterableOnce[A]","d":"scala.collection.generic.IsIterableOnce","k":"def","x":"A conversion from the representation type Repr to a IterableOnce[A]."},
{"l":"api/scala/collection/generic/IsIterableOnce.html#conversion-0","e":false,"i":"","n":"conversion","t":"conversion: Repr => IterableOnce[A]","d":"scala.collection.generic.IsIterableOnce","k":"val","x":""},
{"l":"api/scala/collection/generic/IsIterableOnce$.html#","e":false,"i":"","n":"IsIterableOnce","t":"IsIterableOnce extends IsIterableOnceLowPriority","d":"scala.collection.generic","k":"object","x":""},
{"l":"api/scala/collection/generic/IsIterableOnce$.html#iterableOnceIsIterableOnce-baa","e":false,"i":"","n":"iterableOnceIsIterableOnce","t":"iterableOnceIsIterableOnce[CC0 <: (IterableOnce), A0]: IsIterableOnce[CC0[A0]] { type A = A0;  }","d":"scala.collection.generic.IsIterableOnce","k":"def","x":""},
{"l":"api/scala/collection/generic/IsIterableOnceLowPriority.html#","e":false,"i":"","n":"IsIterableOnceLowPriority","t":"IsIterableOnceLowPriority","d":"scala.collection.generic","k":"trait","x":""},
{"l":"api/scala/collection/generic/IsIterableOnceLowPriority.html#isIterableLikeIsIterableOnce-fffff7b2","e":false,"i":"","n":"isIterableLikeIsIterableOnce","t":"isIterableLikeIsIterableOnce[Repr](implicit isIterableLike: IsIterable[Repr]): IsIterableOnce[Repr] { type A = isIterableLike.A;  }","d":"scala.collection.generic.IsIterableOnceLowPriority","k":"def","x":""},
{"l":"api/scala/collection/generic/IsMap.html#","e":false,"i":"","n":"IsMap","t":"IsMap[Repr] extends IsIterable[Repr]","d":"scala.collection.generic","k":"trait","x":"Type class witnessing that a collection type Repr\nhas keys of type K, values of type V and has a conversion to\nMapOps[K, V, Iterable, C], for some types K, V and C."},
{"l":"api/scala/collection/generic/IsMap.html#A-0","e":false,"i":"","n":"A","t":"A = (K, V)","d":"scala.collection.generic.IsMap","k":"type","x":"The type of elements we can traverse over (e.g. Int)."},
{"l":"api/scala/collection/generic/IsMap.html#K-0","e":false,"i":"","n":"K","t":"K","d":"scala.collection.generic.IsMap","k":"type","x":"The type of keys"},
{"l":"api/scala/collection/generic/IsMap.html#V-0","e":false,"i":"","n":"V","t":"V","d":"scala.collection.generic.IsMap","k":"type","x":"The type of values"},
{"l":"api/scala/collection/generic/IsMap$.html#","e":false,"i":"","n":"IsMap","t":"IsMap","d":"scala.collection.generic","k":"object","x":""},
{"l":"api/scala/collection/generic/IsMap$.html#Tupled-0","e":false,"i":"","n":"Tupled","t":"Tupled[F[_]] = { type Ap = [X, Y] =>> F[(X, Y)];  }","d":"scala.collection.generic.IsMap","k":"type","x":"Convenient type level function that takes a unary type constructor F[_]\nand returns a binary type constructor that tuples its parameters and passes\nthem to F."},
{"l":"api/scala/collection/generic/IsMap$.html#anyRefMapIsMap-fffff1e5","e":false,"i":"","n":"anyRefMapIsMap","t":"anyRefMapIsMap[K0 <: AnyRef, V0]: IsMap[AnyRefMap[K0, V0]] { type K = K0; type V = V0; type C = AnyRefMap[K0, V0];  }","d":"scala.collection.generic.IsMap","k":"def","x":""},
{"l":"api/scala/collection/generic/IsMap$.html#intMapIsMap-fffff9a4","e":false,"i":"","n":"intMapIsMap","t":"intMapIsMap[V0]: IsMap[IntMap[V0]] { type K = Int; type V = V0; type C = IntMap[V0];  }","d":"scala.collection.generic.IsMap","k":"def","x":""},
{"l":"api/scala/collection/generic/IsMap$.html#longMapIsMap-fffff9a4","e":false,"i":"","n":"longMapIsMap","t":"longMapIsMap[V0]: IsMap[LongMap[V0]] { type K = Long; type V = V0; type C = LongMap[V0];  }","d":"scala.collection.generic.IsMap","k":"def","x":""},
{"l":"api/scala/collection/generic/IsMap$.html#mapOpsIsMap-fffffa26","e":false,"i":"","n":"mapOpsIsMap","t":"mapOpsIsMap[CC0 <: ([X, Y] =>> MapOps[X, Y, Tupled[Iterable]#<none>, CC0[X, Y]]), K0, V0]: IsMap[CC0[K0, V0]] { type K = K0; type V = V0; type C = CC0[this.K, this.V];  }","d":"scala.collection.generic.IsMap","k":"def","x":""},
{"l":"api/scala/collection/generic/IsMap$.html#mapViewIsMap-fffffa26","e":false,"i":"","n":"mapViewIsMap","t":"mapViewIsMap[CC0 <: (MapView), K0, V0]: IsMap[CC0[K0, V0]] { type K = K0; type V = V0; type C = View[(K0, V0)];  }","d":"scala.collection.generic.IsMap","k":"def","x":""},
{"l":"api/scala/collection/generic/IsMap$.html#mutableLongMapIsMap-fffff9a4","e":false,"i":"","n":"mutableLongMapIsMap","t":"mutableLongMapIsMap[V0]: IsMap[LongMap[V0]] { type K = Long; type V = V0; type C = LongMap[V0];  }","d":"scala.collection.generic.IsMap","k":"def","x":""},
{"l":"api/scala/collection/generic/IsSeq.html#","e":false,"i":"","n":"IsSeq","t":"IsSeq[Repr] extends IsIterable[Repr]","d":"scala.collection.generic","k":"trait","x":"Type class witnessing that a collection representation type Repr has\nelements of type A and has a conversion to SeqOps[A, Iterable, C], for\nsome types A and C."},
{"l":"api/scala/collection/generic/IsSeq.html#apply-fffff5a8","e":false,"i":"","n":"apply","t":"apply(coll: Repr): SeqOps[A, Iterable, C]","d":"scala.collection.generic.IsSeq","k":"def","x":"A conversion from the type Repr to SeqOps[A, Iterable, C]\n"},
{"l":"api/scala/collection/generic/IsSeq.html#conversion-0","e":false,"i":"","n":"conversion","t":"conversion: Repr => SeqOps[A, Iterable, C]","d":"scala.collection.generic.IsSeq","k":"val","x":""},
{"l":"api/scala/collection/generic/IsSeq$.html#","e":false,"i":"","n":"IsSeq","t":"IsSeq","d":"scala.collection.generic","k":"object","x":""},
{"l":"api/scala/collection/generic/IsSeq$.html#arrayIsSeq-382","e":false,"i":"","n":"arrayIsSeq","t":"arrayIsSeq[A0 : ClassTag]: IsSeq[Array[A0]] { type A = A0; type C = Array[A0];  }","d":"scala.collection.generic.IsSeq","k":"def","x":""},
{"l":"api/scala/collection/generic/IsSeq$.html#rangeIsSeq-fffff0a7","e":false,"i":"","n":"rangeIsSeq","t":"rangeIsSeq[C0 <: Range]: IsSeq[C0] { type A = Int; type C = IndexedSeq[Int];  }","d":"scala.collection.generic.IsSeq","k":"def","x":""},
{"l":"api/scala/collection/generic/IsSeq$.html#seqOpsIsSeq-fffff8e8","e":false,"i":"","n":"seqOpsIsSeq","t":"seqOpsIsSeq[CC0 <: ([X] =>> SeqOps[X, Iterable, CC0[X]]), A0]: IsSeq[CC0[A0]] { type A = A0; type C = CC0[A0];  }","d":"scala.collection.generic.IsSeq","k":"def","x":""},
{"l":"api/scala/collection/generic/IsSeq$.html#seqViewIsSeq-fffff8e8","e":false,"i":"","n":"seqViewIsSeq","t":"seqViewIsSeq[CC0 <: (SeqView), A0]: IsSeq[CC0[A0]] { type A = A0; type C = View[A0];  }","d":"scala.collection.generic.IsSeq","k":"def","x":""},
{"l":"api/scala/collection/generic/IsSeq$.html#stringIsSeq-0","e":false,"i":"","n":"stringIsSeq","t":"stringIsSeq: IsSeq[String] { type A = Char; type C = String;  }","d":"scala.collection.generic.IsSeq","k":"val","x":""},
{"l":"api/scala/collection/generic/IsSeq$.html#stringViewIsSeq-0","e":false,"i":"","n":"stringViewIsSeq","t":"stringViewIsSeq: IsSeq[StringView] { type A = Char; type C = View[Char];  }","d":"scala.collection.generic.IsSeq","k":"val","x":""},
{"l":"api/scala/collection/generic/Subtractable.html#","e":false,"i":"","n":"Subtractable","t":"Subtractable[A, +Repr <: Subtractable[A, Repr]]","d":"scala.collection.generic","k":"trait","x":"This trait represents collection-like objects that can be reduced\nusing a '+' operator. It defines variants of - and --\nas convenience methods in terms of single-element removal -.\n"},
{"l":"api/scala/collection/generic/Subtractable.html#--fffff03a","e":false,"i":"","n":"-","t":"-(elem: A): Repr","d":"scala.collection.generic.Subtractable","k":"def","x":"Creates a new collection from this collection with an element removed."},
{"l":"api/scala/collection/generic/Subtractable.html#--7bc","e":false,"i":"","n":"-","t":"-(elem1: A, elem2: A, elems: A*): Repr","d":"scala.collection.generic.Subtractable","k":"def","x":"Creates a new collection from this collection with some elements removed."},
{"l":"api/scala/collection/generic/Subtractable.html#---fffff3f2","e":false,"i":"","n":"--","t":"--(xs: IterableOnce[A]): Repr","d":"scala.collection.generic.Subtractable","k":"def","x":"Creates a new collection from this collection by removing all elements of another\ncollection.\n"},
{"l":"api/scala/collection/generic/Subtractable.html#repr-0","e":false,"i":"","n":"repr","t":"repr: Repr","d":"scala.collection.generic.Subtractable","k":"def","x":"The representation object of type Repr which contains the collection's elements\n"},
{"l":"api/scala/collection/immutable.html#","e":false,"i":"","n":"scala.collection.immutable","t":"scala.collection.immutable","d":"","k":"package","x":""},
{"l":"api/scala/collection/immutable.html#DefaultMap-0","e":false,"i":"","n":"DefaultMap","t":"DefaultMap[K, +V] = Map[K, V]","d":"scala.collection.immutable","k":"type","x":""},
{"l":"api/scala/collection/immutable.html#StringOps-0","e":false,"i":"","n":"StringOps","t":"StringOps = StringOps","d":"scala.collection.immutable","k":"type","x":""},
{"l":"api/scala/collection/immutable.html#StringOps-0","e":false,"i":"","n":"StringOps","t":"StringOps: StringOps.type","d":"scala.collection.immutable","k":"val","x":""},
{"l":"api/scala/collection/immutable.html#StringView-0","e":false,"i":"","n":"StringView","t":"StringView = StringView","d":"scala.collection.immutable","k":"type","x":""},
{"l":"api/scala/collection/immutable.html#StringView-0","e":false,"i":"","n":"StringView","t":"StringView: StringView.type","d":"scala.collection.immutable","k":"val","x":""},
{"l":"api/scala/collection/immutable.html#Traversable-0","e":false,"i":"","n":"Traversable","t":"Traversable[+X] = Iterable[X]","d":"scala.collection.immutable","k":"type","x":""},
{"l":"api/scala/collection/immutable.html#Traversable-0","e":false,"i":"","n":"Traversable","t":"Traversable: Iterable.type","d":"scala.collection.immutable","k":"val","x":""},
{"l":"api/scala/collection/immutable/$colon$colon$.html#","e":false,"i":"","n":"::","t":"::[+A](head: A, var next: List[A]) extends List[A]","d":"scala.collection.immutable","k":"class","x":""},
{"l":"api/scala/collection/immutable/AbstractMap.html#","e":false,"i":"","n":"AbstractMap","t":"AbstractMap[K, +V] extends AbstractMap[K, V], Map[K, V]","d":"scala.collection.immutable","k":"class","x":"Explicit instantiation of the Map trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/immutable/AbstractSeq.html#","e":false,"i":"","n":"AbstractSeq","t":"AbstractSeq[+A] extends AbstractSeq[A], Seq[A]","d":"scala.collection.immutable","k":"class","x":"Explicit instantiation of the Seq trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/immutable/AbstractSet.html#","e":false,"i":"","n":"AbstractSet","t":"AbstractSet[A] extends AbstractSet[A], Set[A]","d":"scala.collection.immutable","k":"class","x":"Explicit instantiation of the Set trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/immutable/ArraySeq.html#","e":false,"i":"","n":"ArraySeq","t":"ArraySeq[+A] extends AbstractSeq[A], IndexedSeq[A], IndexedSeqOps[A, ArraySeq, ArraySeq[A]], StrictOptimizedSeqOps[A, ArraySeq, ArraySeq[A]], EvidenceIterableFactoryDefaults[A, ArraySeq, ClassTag], Serializable","d":"scala.collection.immutable","k":"class","x":"An immutable array."},
{"l":"api/scala/collection/immutable/ArraySeq.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.immutable.ArraySeq","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq.html#stepper-190","e":false,"i":"","n":"stepper","t":"stepper[S <: Stepper[_]](implicit shape: StepperShape[A, S]): S & EfficientSplit","d":"scala.collection.immutable.ArraySeq","k":"def","x":"Returns a scala.collection.Stepper for the elements of this collection."},
{"l":"api/scala/collection/immutable/ArraySeq.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[_]","d":"scala.collection.immutable.ArraySeq","k":"def","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$.html#","e":false,"i":"","n":"ArraySeq","t":"ArraySeq extends StrictOptimizedClassTagSeqFactory[ArraySeq]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/ArraySeq$.html#empty-fffff12e","e":false,"i":"","n":"empty","t":"empty[A : ClassTag]: ArraySeq[A]","d":"scala.collection.immutable.ArraySeq","k":"def","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$.html#from-fffff735","e":false,"i":"","n":"from","t":"from[A](it: IterableOnce[A])(implicit tag: ClassTag[A]): ArraySeq[A]","d":"scala.collection.immutable.ArraySeq","k":"def","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$.html#newBuilder-b57","e":false,"i":"","n":"newBuilder","t":"newBuilder[A : ClassTag]: Builder[A, ArraySeq[A]]","d":"scala.collection.immutable.ArraySeq","k":"def","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$.html#unsafeWrapArray-fffffab6","e":false,"i":"","n":"unsafeWrapArray","t":"unsafeWrapArray[T](x: Array[T]): ArraySeq[T]","d":"scala.collection.immutable.ArraySeq","k":"def","x":"Wrap an existing Array into an ArraySeq of the proper primitive specialization type\nwithout copying. Any changes to wrapped array will break the expected immutability."},
{"l":"api/scala/collection/immutable/ArraySeq$.html#untagged-0","e":false,"i":"","n":"untagged","t":"untagged: SeqFactory[ArraySeq]","d":"scala.collection.immutable.ArraySeq","k":"val","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofBoolean.html#","e":false,"i":"","n":"ofBoolean","t":"ofBoolean(val unsafeArray: Array[Boolean]) extends ArraySeq[Boolean]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofBoolean.html#apply-ffffff99","e":false,"i":"","n":"apply","t":"apply(i: Int): Boolean","d":"scala.collection.immutable.ArraySeq.ofBoolean","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofBoolean.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofBoolean","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofBoolean.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[Boolean]","d":"scala.collection.immutable.ArraySeq.ofBoolean","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofByte.html#","e":false,"i":"","n":"ofByte","t":"ofByte(val unsafeArray: Array[Byte]) extends ArraySeq[Byte]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofByte.html#apply-fffffb37","e":false,"i":"","n":"apply","t":"apply(i: Int): Byte","d":"scala.collection.immutable.ArraySeq.ofByte","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofByte.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofByte","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofByte.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[Byte]","d":"scala.collection.immutable.ArraySeq.ofByte","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofChar.html#","e":false,"i":"","n":"ofChar","t":"ofChar(val unsafeArray: Array[Char]) extends ArraySeq[Char]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofChar.html#apply-fffffd85","e":false,"i":"","n":"apply","t":"apply(i: Int): Char","d":"scala.collection.immutable.ArraySeq.ofChar","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofChar.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofChar","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofChar.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[Char]","d":"scala.collection.immutable.ArraySeq.ofChar","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofDouble.html#","e":false,"i":"","n":"ofDouble","t":"ofDouble(val unsafeArray: Array[Double]) extends ArraySeq[Double]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofDouble.html#apply-640","e":false,"i":"","n":"apply","t":"apply(i: Int): Double","d":"scala.collection.immutable.ArraySeq.ofDouble","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofDouble.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofDouble","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofDouble.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[Double]","d":"scala.collection.immutable.ArraySeq.ofDouble","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofFloat.html#","e":false,"i":"","n":"ofFloat","t":"ofFloat(val unsafeArray: Array[Float]) extends ArraySeq[Float]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofFloat.html#apply-fffffe0d","e":false,"i":"","n":"apply","t":"apply(i: Int): Float","d":"scala.collection.immutable.ArraySeq.ofFloat","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofFloat.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofFloat","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofFloat.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[Float]","d":"scala.collection.immutable.ArraySeq.ofFloat","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofInt.html#","e":false,"i":"","n":"ofInt","t":"ofInt(val unsafeArray: Array[Int]) extends ArraySeq[Int]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofInt.html#apply-fffffbe0","e":false,"i":"","n":"apply","t":"apply(i: Int): Int","d":"scala.collection.immutable.ArraySeq.ofInt","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofInt.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofInt","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofInt.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[Int]","d":"scala.collection.immutable.ArraySeq.ofInt","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofLong.html#","e":false,"i":"","n":"ofLong","t":"ofLong(val unsafeArray: Array[Long]) extends ArraySeq[Long]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofLong.html#apply-fffff0ab","e":false,"i":"","n":"apply","t":"apply(i: Int): Long","d":"scala.collection.immutable.ArraySeq.ofLong","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofLong.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofLong","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofLong.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[Long]","d":"scala.collection.immutable.ArraySeq.ofLong","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofRef.html#","e":false,"i":"","n":"ofRef","t":"ofRef[T <: AnyRef](val unsafeArray: Array[T]) extends ArraySeq[T]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofRef.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): T","d":"scala.collection.immutable.ArraySeq.ofRef","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofRef.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: ClassTag[T]","d":"scala.collection.immutable.ArraySeq.ofRef","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofRef.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofRef","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofRef.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[T]","d":"scala.collection.immutable.ArraySeq.ofRef","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofShort.html#","e":false,"i":"","n":"ofShort","t":"ofShort(val unsafeArray: Array[Short]) extends ArraySeq[Short]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofShort.html#apply-fffff02d","e":false,"i":"","n":"apply","t":"apply(i: Int): Short","d":"scala.collection.immutable.ArraySeq.ofShort","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofShort.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofShort","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofShort.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[Short]","d":"scala.collection.immutable.ArraySeq.ofShort","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofUnit.html#","e":false,"i":"","n":"ofUnit","t":"ofUnit(val unsafeArray: Array[Unit]) extends ArraySeq[Unit]","d":"scala.collection.immutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/immutable/ArraySeq$$ofUnit.html#apply-fffff3b3","e":false,"i":"","n":"apply","t":"apply(i: Int): Unit","d":"scala.collection.immutable.ArraySeq.ofUnit","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofUnit.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.ArraySeq.ofUnit","k":"def","x":"The length (number of elements) of the immutable array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/ArraySeq$$ofUnit.html#unsafeArray-0","e":false,"i":"","n":"unsafeArray","t":"unsafeArray: Array[Unit]","d":"scala.collection.immutable.ArraySeq.ofUnit","k":"val","x":"The wrapped mutable Array that backs this ArraySeq. Any changes to this array will break\nthe expected immutability. Its element type does not have to be equal to the element type of this ArraySeq.\nA primitive ArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an\narray of a supertype or subtype of the element type."},
{"l":"api/scala/collection/immutable/BitSet.html#","e":false,"i":"","n":"BitSet","t":"BitSet extends AbstractSet[Int], SortedSet[Int], SortedSetOps[Int, SortedSet, BitSet], StrictOptimizedSortedSetOps[Int, SortedSet, BitSet], BitSet, BitSetOps[BitSet], Serializable","d":"scala.collection.immutable","k":"class","x":"A class for immutable bitsets."},
{"l":"api/scala/collection/immutable/BitSet.html#bitSetFactory-0","e":false,"i":"","n":"bitSetFactory","t":"bitSetFactory: BitSet.type","d":"scala.collection.immutable.BitSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/BitSet.html#excl-82","e":false,"i":"","n":"excl","t":"excl(elem: Int): BitSet","d":"scala.collection.immutable.BitSet","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/collection/immutable/BitSet.html#incl-82","e":false,"i":"","n":"incl","t":"incl(elem: Int): BitSet","d":"scala.collection.immutable.BitSet","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/collection/immutable/BitSet$.html#","e":false,"i":"","n":"BitSet","t":"BitSet extends SpecificIterableFactory[Int, BitSet]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/BitSet$.html#empty-0","e":false,"i":"","n":"empty","t":"empty: BitSet","d":"scala.collection.immutable.BitSet","k":"val","x":""},
{"l":"api/scala/collection/immutable/BitSet$.html#fromBitMask-ae3","e":false,"i":"","n":"fromBitMask","t":"fromBitMask(elems: Array[Long]): BitSet","d":"scala.collection.immutable.BitSet","k":"def","x":"A bitset containing all the bits in an array"},
{"l":"api/scala/collection/immutable/BitSet$.html#fromBitMaskNoCopy-ae3","e":false,"i":"","n":"fromBitMaskNoCopy","t":"fromBitMaskNoCopy(elems: Array[Long]): BitSet","d":"scala.collection.immutable.BitSet","k":"def","x":"A bitset containing all the bits in an array, wrapping the existing\narray without copying.\n"},
{"l":"api/scala/collection/immutable/BitSet$.html#fromSpecific-fffff34e","e":false,"i":"","n":"fromSpecific","t":"fromSpecific(it: IterableOnce[Int]): BitSet","d":"scala.collection.immutable.BitSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/BitSet$.html#newBuilder-0","e":false,"i":"","n":"newBuilder","t":"newBuilder: Builder[Int, BitSet]","d":"scala.collection.immutable.BitSet","k":"def","x":"Get a Builder for the collection. For non-strict collection types this will use an intermediate buffer.\nBuilding collections with fromSpecific is preferred because it can be lazy for lazy collections."},
{"l":"api/scala/collection/immutable/BitSet$$BitSet1.html#","e":false,"i":"","n":"BitSet1","t":"BitSet1(val elems: Long) extends BitSet","d":"scala.collection.immutable.BitSet","k":"class","x":""},
{"l":"api/scala/collection/immutable/BitSet$$BitSet1.html#elems-0","e":false,"i":"","n":"elems","t":"elems: Long","d":"scala.collection.immutable.BitSet.BitSet1","k":"val","x":""},
{"l":"api/scala/collection/immutable/BitSet$$BitSet2.html#","e":false,"i":"","n":"BitSet2","t":"BitSet2(val elems0: Long, val elems1: Long) extends BitSet","d":"scala.collection.immutable.BitSet","k":"class","x":""},
{"l":"api/scala/collection/immutable/BitSet$$BitSet2.html#elems0-0","e":false,"i":"","n":"elems0","t":"elems0: Long","d":"scala.collection.immutable.BitSet.BitSet2","k":"val","x":""},
{"l":"api/scala/collection/immutable/BitSet$$BitSet2.html#elems1-0","e":false,"i":"","n":"elems1","t":"elems1: Long","d":"scala.collection.immutable.BitSet.BitSet2","k":"val","x":""},
{"l":"api/scala/collection/immutable/BitSet$$BitSetN.html#","e":false,"i":"","n":"BitSetN","t":"BitSetN(val elems: Array[Long]) extends BitSet","d":"scala.collection.immutable.BitSet","k":"class","x":""},
{"l":"api/scala/collection/immutable/BitSet$$BitSetN.html#elems-0","e":false,"i":"","n":"elems","t":"elems: Array[Long]","d":"scala.collection.immutable.BitSet.BitSetN","k":"val","x":""},
{"l":"api/scala/collection/immutable/HashMap.html#","e":false,"i":"","n":"HashMap","t":"HashMap[K, +V] extends AbstractMap[K, V], StrictOptimizedMapOps[K, V, HashMap, HashMap[K, V]], MapFactoryDefaults[K, V, HashMap, Iterable], DefaultSerializable","d":"scala.collection.immutable","k":"class","x":"This class implements immutable maps using a Compressed Hash-Array Mapped Prefix-tree.\nSee paper https://michael.steindorfer.name/publications/oopsla15.pdf for more details.\n"},
{"l":"api/scala/collection/immutable/HashMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.HashMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/HashMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.HashMap","k":"def","x":"An scala.collection.Iterator over the elements of this immutable champ hash map."},
{"l":"api/scala/collection/immutable/HashMap.html#merged-fffff381","e":false,"i":"","n":"merged","t":"merged[V1 >: V](that: HashMap[K, V1])(mergef: ((K, V), (K, V1)) => (K, V1)): HashMap[K, V1]","d":"scala.collection.immutable.HashMap","k":"def","x":"Merges this HashMap with an other HashMap by combining all key-value pairs of both maps, and delegating to a merge\nfunction to resolve any key collisions between the two HashMaps.\n"},
{"l":"api/scala/collection/immutable/HashMap.html#removed-60d","e":false,"i":"","n":"removed","t":"removed(key: K): HashMap[K, V]","d":"scala.collection.immutable.HashMap","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/HashMap.html#<init>-fffff4ec","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.immutable.HashMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/HashMap.html#updated-4d1","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): HashMap[K, V1]","d":"scala.collection.immutable.HashMap","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/HashMap$.html#","e":false,"i":"","n":"HashMap","t":"HashMap extends MapFactory[HashMap]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/HashMap$.html#empty-fffff4ec","e":false,"i":"","n":"empty","t":"empty[K, V]: HashMap[K, V]","d":"scala.collection.immutable.HashMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/immutable/HashMap$.html#from-fffffee3","e":false,"i":"","n":"from","t":"from[K, V](source: IterableOnce[(K, V)]): HashMap[K, V]","d":"scala.collection.immutable.HashMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/immutable/HashMap$.html#newBuilder-5d2","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: ReusableBuilder[(K, V), HashMap[K, V]]","d":"scala.collection.immutable.HashMap","k":"def","x":"Create a new Builder which can be reused after calling result() without an\nintermediate call to clear() in order to build multiple related results.\n"},
{"l":"api/scala/collection/immutable/HashSet.html#","e":false,"i":"","n":"HashSet","t":"HashSet[A] extends AbstractSet[A], StrictOptimizedSetOps[A, HashSet, HashSet[A]], IterableFactoryDefaults[A, HashSet], DefaultSerializable","d":"scala.collection.immutable","k":"class","x":"This class implements immutable sets using a Compressed Hash-Array Mapped Prefix-tree.\nSee paper https://michael.steindorfer.name/publications/oopsla15.pdf for more details.\n"},
{"l":"api/scala/collection/immutable/HashSet.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(element: A): Boolean","d":"scala.collection.immutable.HashSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/HashSet.html#excl-d13","e":false,"i":"","n":"excl","t":"excl(element: A): HashSet[A]","d":"scala.collection.immutable.HashSet","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/collection/immutable/HashSet.html#incl-d13","e":false,"i":"","n":"incl","t":"incl(element: A): HashSet[A]","d":"scala.collection.immutable.HashSet","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/collection/immutable/HashSet.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.immutable.HashSet","k":"def","x":"An scala.collection.Iterator over the elements of this immutable champ hash set."},
{"l":"api/scala/collection/immutable/HashSet.html#<init>-c31","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.immutable.HashSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/HashSet$.html#","e":false,"i":"","n":"HashSet","t":"HashSet extends IterableFactory[HashSet]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/HashSet$.html#empty-c31","e":false,"i":"","n":"empty","t":"empty[A]: HashSet[A]","d":"scala.collection.immutable.HashSet","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/immutable/HashSet$.html#from-20a","e":false,"i":"","n":"from","t":"from[A](source: IterableOnce[A]): HashSet[A]","d":"scala.collection.immutable.HashSet","k":"def","x":"Creates a target immutable champ hash set from an existing source collection\n"},
{"l":"api/scala/collection/immutable/HashSet$.html#newBuilder-fffffad1","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: ReusableBuilder[A, HashSet[A]]","d":"scala.collection.immutable.HashSet","k":"def","x":"Create a new Builder which can be reused after calling result() without an\nintermediate call to clear() in order to build multiple related results.\n"},
{"l":"api/scala/collection/immutable/IndexedSeq.html#","e":false,"i":"","n":"IndexedSeq","t":"IndexedSeq[+A] extends Seq[A], IndexedSeq[A], IndexedSeqOps[A, IndexedSeq, IndexedSeq[A]], IterableFactoryDefaults[A, IndexedSeq]","d":"scala.collection.immutable","k":"trait","x":"Base trait for immutable indexed sequences that have efficient apply and length"},
{"l":"api/scala/collection/immutable/IndexedSeq$.html#","e":false,"i":"","n":"IndexedSeq","t":"IndexedSeq extends Delegate[IndexedSeq]","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/IndexedSeqDefaults$.html#","e":false,"i":"","n":"IndexedSeqDefaults","t":"IndexedSeqDefaults","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/IndexedSeqDefaults$.html#defaultApplyPreferredMaxLength-0","e":false,"i":"","n":"defaultApplyPreferredMaxLength","t":"defaultApplyPreferredMaxLength: Int","d":"scala.collection.immutable.IndexedSeqDefaults","k":"val","x":""},
{"l":"api/scala/collection/immutable/IndexedSeqOps.html#","e":false,"i":"","n":"IndexedSeqOps","t":"IndexedSeqOps[+A, +CC[_], +C] extends SeqOps[A, CC, C], IndexedSeqOps[A, CC, C]","d":"scala.collection.immutable","k":"trait","x":"Base trait for immutable indexed Seq operations"},
{"l":"api/scala/collection/immutable/IntMap$.html#","e":false,"i":"","n":"IntMap","t":"IntMap","d":"scala.collection.immutable","k":"object","x":"A companion object for integer maps."},
{"l":"api/scala/collection/immutable/IntMap$.html#apply-e85","e":false,"i":"","n":"apply","t":"apply[T](elems: (Int, T)*): IntMap[T]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap$.html#buildFromIntMap-fffff061","e":false,"i":"","n":"buildFromIntMap","t":"buildFromIntMap[V]: BuildFrom[IntMap[_], (Int, V), IntMap[V]]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap$.html#empty-390","e":false,"i":"","n":"empty","t":"empty[T]: IntMap[T]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap$.html#from-fffffe97","e":false,"i":"","n":"from","t":"from[V](coll: IterableOnce[(Int, V)]): IntMap[V]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap$.html#iterableFactory-fffffc73","e":false,"i":"","n":"iterableFactory","t":"iterableFactory[V]: Factory[(Int, V), IntMap[V]]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[V]: Builder[(Int, V), IntMap[V]]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap$.html#singleton-f18","e":false,"i":"","n":"singleton","t":"singleton[T](key: Int, value: T): IntMap[T]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap$.html#toBuildFrom-fffff904","e":false,"i":"","n":"toBuildFrom","t":"toBuildFrom[V](factory: IntMap.type): BuildFrom[Any, (Int, V), IntMap[V]]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap$.html#toFactory-fffff1d6","e":false,"i":"","n":"toFactory","t":"toFactory[V](dummy: IntMap.type): Factory[(Int, V), IntMap[V]]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap.html#","e":false,"i":"","n":"IntMap","t":"IntMap[+T] extends AbstractMap[Int, T], StrictOptimizedMapOps[Int, T, Map, IntMap[T]], Serializable","d":"scala.collection.immutable","k":"class","x":"Specialised immutable map structure for integer keys, based on\nFast Mergeable Integer Maps\nby Okasaki and Gill. Essentially a trie based on binary digits of the integers."},
{"l":"api/scala/collection/immutable/IntMap.html#++-fffff811","e":false,"i":"","n":"++","t":"++[S >: T](that: IntMap[S]): IntMap[S]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap.html#collect-fffff181","e":false,"i":"","n":"collect","t":"collect[V2](pf: PartialFunction[(Int, T), (Int, V2)]): IntMap[V2]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap.html#firstKey-0","e":false,"i":"","n":"firstKey","t":"firstKey: Int","d":"scala.collection.immutable.IntMap","k":"def","x":"The entry with the lowest key value considered in unsigned order.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#flatMap-561","e":false,"i":"","n":"flatMap","t":"flatMap[V2](f: ((Int, T)) => IterableOnce[(Int, V2)]): IntMap[V2]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap.html#foreachKey-58c","e":false,"i":"","n":"foreachKey","t":"foreachKey[U](f: Int => U): Unit","d":"scala.collection.immutable.IntMap","k":"def","x":"Loop over the keys of the map. The same as keys.foreach(f), but may\nbe more efficient.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#foreachValue-58c","e":false,"i":"","n":"foreachValue","t":"foreachValue[U](f: T => U): Unit","d":"scala.collection.immutable.IntMap","k":"def","x":"Loop over the values of the map. The same as values.foreach(f), but may\nbe more efficient.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#get-fffff2e4","e":false,"i":"","n":"get","t":"get(key: Int): Option[T]","d":"scala.collection.immutable.IntMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#intersection-fffff811","e":false,"i":"","n":"intersection","t":"intersection[R](that: IntMap[R]): IntMap[T]","d":"scala.collection.immutable.IntMap","k":"def","x":"Left biased intersection. Returns the map that has all the same mappings\nas this but only for keys which are present in the other map.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#intersectionWith-fffff11d","e":false,"i":"","n":"intersectionWith","t":"intersectionWith[S, R](that: IntMap[S], f: (Int, T, S) => R): IntMap[R]","d":"scala.collection.immutable.IntMap","k":"def","x":"Forms the intersection of these two maps with a combining function. The\nresulting map is a map that has only keys present in both maps and has\nvalues produced from the original mappings by combining them with f.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(Int, T)]","d":"scala.collection.immutable.IntMap","k":"def","x":"Iterator over key, value pairs of the map in unsigned order of the keys.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#lastKey-0","e":false,"i":"","n":"lastKey","t":"lastKey: Int","d":"scala.collection.immutable.IntMap","k":"def","x":"The entry with the highest key value considered in unsigned order.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#map-561","e":false,"i":"","n":"map","t":"map[V2](f: ((Int, T)) => (Int, V2)): IntMap[V2]","d":"scala.collection.immutable.IntMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/IntMap.html#modifyOrRemove-980","e":false,"i":"","n":"modifyOrRemove","t":"modifyOrRemove[S](f: (Int, T) => Option[S]): IntMap[S]","d":"scala.collection.immutable.IntMap","k":"def","x":"A combined transform and filter function. Returns an IntMap such that\nfor each (key, value) mapping in this map, if f(key, value) == None\nthe map contains no mapping for key, and if f(key, value).\n"},
{"l":"api/scala/collection/immutable/IntMap.html#removed-b5a","e":false,"i":"","n":"removed","t":"removed(key: Int): IntMap[T]","d":"scala.collection.immutable.IntMap","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#unionWith-6fe","e":false,"i":"","n":"unionWith","t":"unionWith[S >: T](that: IntMap[S], f: (Int, S, S) => S): IntMap[S]","d":"scala.collection.immutable.IntMap","k":"def","x":"Forms a union map with that map, using the combining function to resolve conflicts.\n"},
{"l":"api/scala/collection/immutable/IntMap.html#updateWith-fffffcf8","e":false,"i":"","n":"updateWith","t":"updateWith[S >: T](key: Int, value: S, f: (T, S) => S): IntMap[S]","d":"scala.collection.immutable.IntMap","k":"def","x":"Updates the map, using the provided function to resolve conflicts if the key is already present."},
{"l":"api/scala/collection/immutable/Iterable.html#","e":false,"i":"","n":"Iterable","t":"Iterable[+A] extends Iterable[A], IterableOps[A, Iterable, Iterable[A]], IterableFactoryDefaults[A, Iterable]","d":"scala.collection.immutable","k":"trait","x":"A trait for collections that are guaranteed immutable.\n"},
{"l":"api/scala/collection/immutable/Iterable$.html#","e":false,"i":"","n":"Iterable","t":"Iterable extends Delegate[Iterable]","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/LazyList.html#","e":false,"i":"","n":"LazyList","t":"LazyList[+A] extends AbstractSeq[A], LinearSeq[A], LinearSeqOps[A, LazyList, LazyList[A]], IterableFactoryDefaults[A, LazyList], Serializable","d":"scala.collection.immutable","k":"class","x":"This class implements an immutable linked list. We call it \"lazy\"\nbecause it computes its elements only when they are needed."},
{"l":"api/scala/collection/immutable/LazyList.html#force-0","e":false,"i":"","n":"force","t":"force: this.type","d":"scala.collection.immutable.LazyList","k":"def","x":"Evaluates all undefined elements of the lazy list."},
{"l":"api/scala/collection/immutable/LazyList.html#lazyAppendedAll-fffff347","e":false,"i":"","n":"lazyAppendedAll","t":"lazyAppendedAll[B >: A](suffix: => IterableOnce[B]): LazyList[B]","d":"scala.collection.immutable.LazyList","k":"def","x":"The lazy list resulting from the concatenation of this lazy list with the argument lazy list."},
{"l":"api/scala/collection/immutable/LazyList$.html#","e":false,"i":"","n":"LazyList","t":"LazyList extends SeqFactory[LazyList]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/LazyList$.html#continually-fffff347","e":false,"i":"","n":"continually","t":"continually[A](elem: => A): LazyList[A]","d":"scala.collection.immutable.LazyList","k":"def","x":"Create an infinite LazyList containing the given element expression (which\nis computed for each occurrence).\n"},
{"l":"api/scala/collection/immutable/LazyList$.html#empty-a15","e":false,"i":"","n":"empty","t":"empty[A]: LazyList[A]","d":"scala.collection.immutable.LazyList","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/immutable/LazyList$.html#from-f5c","e":false,"i":"","n":"from","t":"from[A](coll: IterableOnce[A]): LazyList[A]","d":"scala.collection.immutable.LazyList","k":"def","x":"Creates a target lazy list from an existing source collection\n"},
{"l":"api/scala/collection/immutable/LazyList$.html#from-fffff806","e":false,"i":"","n":"from","t":"from(start: Int, step: Int): LazyList[Int]","d":"scala.collection.immutable.LazyList","k":"def","x":"Create an infinite LazyList starting at start and incrementing by\nstep step.\n"},
{"l":"api/scala/collection/immutable/LazyList$.html#from-75f","e":false,"i":"","n":"from","t":"from(start: Int): LazyList[Int]","d":"scala.collection.immutable.LazyList","k":"def","x":"Create an infinite LazyList starting at start and incrementing by 1.\n"},
{"l":"api/scala/collection/immutable/LazyList$.html#iterate-fffff834","e":false,"i":"","n":"iterate","t":"iterate[A](start: => A)(f: A => A): LazyList[A]","d":"scala.collection.immutable.LazyList","k":"def","x":"An infinite LazyList that repeatedly applies a given function to a start value.\n"},
{"l":"api/scala/collection/immutable/LazyList$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, LazyList[A]]","d":"scala.collection.immutable.LazyList","k":"def","x":"The builder returned by this method only evaluates elements\nof collections added to it as needed.\n"},
{"l":"api/scala/collection/immutable/LazyList$.html#toDeferrer-271","e":false,"i":"","n":"toDeferrer","t":"toDeferrer[A](l: => LazyList[A]): Deferrer[A]","d":"scala.collection.immutable.LazyList","k":"def","x":""},
{"l":"api/scala/collection/immutable/LazyList$$$hash$colon$colon$$.html#","e":false,"i":"","n":"#::","t":"#::","d":"scala.collection.immutable.LazyList","k":"object","x":""},
{"l":"api/scala/collection/immutable/LazyList$$$hash$colon$colon$$.html#unapply-fffff8d2","e":false,"i":"","n":"unapply","t":"unapply[A](s: LazyList[A]): Option[(A, LazyList[A])]","d":"scala.collection.immutable.LazyList.#::","k":"def","x":""},
{"l":"api/scala/collection/immutable/LazyList$$Deferrer.html#","e":false,"i":"","n":"Deferrer","t":"Deferrer[A] extends AnyVal","d":"scala.collection.immutable.LazyList","k":"class","x":""},
{"l":"api/scala/collection/immutable/LazyList$$Deferrer.html##::-fffff347","e":false,"i":"","n":"#::","t":"#::[B >: A](elem: => B): LazyList[B]","d":"scala.collection.immutable.LazyList.Deferrer","k":"def","x":"Construct a LazyList consisting of a given first element followed by elements\nfrom another LazyList.\n"},
{"l":"api/scala/collection/immutable/LazyList$$Deferrer.html##:::-5b1","e":false,"i":"","n":"#:::","t":"#:::[B >: A](prefix: LazyList[B]): LazyList[B]","d":"scala.collection.immutable.LazyList.Deferrer","k":"def","x":"Construct a LazyList consisting of the concatenation of the given LazyList and\nanother LazyList.\n"},
{"l":"api/scala/collection/immutable/LazyList$$SerializationProxy.html#","e":false,"i":"","n":"SerializationProxy","t":"SerializationProxy[A](var coll: LazyList[A]) extends Serializable","d":"scala.collection.immutable.LazyList","k":"class","x":"This serialization proxy is used for LazyLists which start with a sequence of evaluated cons cells.\nThe forced sequence is serialized in a compact, sequential format, followed by the unevaluated tail, which uses\nstandard Java serialization to store the complete structure of unevaluated thunks. This allows the serialization\nof long evaluated lazy lists without exhausting the stack through recursive serialization of cons cells.\n"},
{"l":"api/scala/collection/immutable/LazyList$$cons$.html#","e":false,"i":"","n":"cons","t":"cons","d":"scala.collection.immutable.LazyList","k":"object","x":"An alternative way of building and matching lazy lists using LazyList.cons(hd, tl).\n"},
{"l":"api/scala/collection/immutable/LazyList$$cons$.html#apply-fd5","e":false,"i":"","n":"apply","t":"apply[A](hd: => A, tl: => LazyList[A]): LazyList[A]","d":"scala.collection.immutable.LazyList.cons","k":"def","x":"A lazy list consisting of a given first element and remaining elements"},
{"l":"api/scala/collection/immutable/LazyList$$cons$.html#unapply-fffff8d2","e":false,"i":"","n":"unapply","t":"unapply[A](xs: LazyList[A]): Option[(A, LazyList[A])]","d":"scala.collection.immutable.LazyList.cons","k":"def","x":"Maps a lazy list to its head and tail"},
{"l":"api/scala/collection/immutable/LinearSeq.html#","e":false,"i":"","n":"LinearSeq","t":"LinearSeq[+A] extends Seq[A], LinearSeq[A], LinearSeqOps[A, LinearSeq, LinearSeq[A]], IterableFactoryDefaults[A, LinearSeq]","d":"scala.collection.immutable","k":"trait","x":"Base trait for immutable linear sequences that have efficient head and tail"},
{"l":"api/scala/collection/immutable/LinearSeq$.html#","e":false,"i":"","n":"LinearSeq","t":"LinearSeq extends Delegate[LinearSeq]","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/LinearSeqOps.html#","e":false,"i":"","n":"LinearSeqOps","t":"LinearSeqOps[+A, +CC <: (LinearSeq), +C <: LinearSeq[A] & LinearSeqOps[A, CC, C]] extends SeqOps[A, CC, C], LinearSeqOps[A, CC, C]","d":"scala.collection.immutable","k":"trait","x":""},
{"l":"api/scala/collection/immutable/List.html#","e":false,"i":"","n":"List","t":"List[+A] extends AbstractSeq[A], LinearSeq[A], LinearSeqOps[A, List, List[A]], StrictOptimizedLinearSeqOps[A, List, List[A]], StrictOptimizedSeqOps[A, List, List[A]], IterableFactoryDefaults[A, List], DefaultSerializable","d":"scala.collection.immutable","k":"class","x":"A class for immutable linked lists representing ordered collections\nof elements of type A."},
{"l":"api/scala/collection/immutable/List.html#::-c0e","e":false,"i":"","n":"::","t":"::[B >: A](elem: B): List[B]","d":"scala.collection.immutable.List","k":"def","x":"Adds an element at the beginning of this list."},
{"l":"api/scala/collection/immutable/List.html#:::-fffff631","e":false,"i":"","n":":::","t":":::[B >: A](prefix: List[B]): List[B]","d":"scala.collection.immutable.List","k":"def","x":"Adds the elements of a given list in front of this list."},
{"l":"api/scala/collection/immutable/List.html#mapConserve-fffff812","e":false,"i":"","n":"mapConserve","t":"mapConserve[B >: A <: AnyRef](f: A => B): List[B]","d":"scala.collection.immutable.List","k":"def","x":"Builds a new list by applying a function to all elements of this list.\nLike xs map f, but returns xs unchanged if function\nf maps all elements to themselves (as determined by eq).\n"},
{"l":"api/scala/collection/immutable/List.html#reverse_:::-fffff631","e":false,"i":"","n":"reverse_:::","t":"reverse_:::[B >: A](prefix: List[B]): List[B]","d":"scala.collection.immutable.List","k":"def","x":"Adds the elements of a given list in reverse order in front of this list.\nxs reverse_::: ys is equivalent to\nxs.reverse ::: ys but is more efficient.\n"},
{"l":"api/scala/collection/immutable/List$.html#","e":false,"i":"","n":"List","t":"List extends StrictOptimizedSeqFactory[List]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/List$.html#empty-601","e":false,"i":"","n":"empty","t":"empty[A]: List[A]","d":"scala.collection.immutable.List","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/immutable/List$.html#from-fffff6c8","e":false,"i":"","n":"from","t":"from[B](coll: IterableOnce[B]): List[B]","d":"scala.collection.immutable.List","k":"def","x":"Creates a target list from an existing source collection\n"},
{"l":"api/scala/collection/immutable/List$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, List[A]]","d":"scala.collection.immutable.List","k":"def","x":""},
{"l":"api/scala/collection/immutable/ListMap.html#","e":false,"i":"","n":"ListMap","t":"ListMap[K, +V] extends AbstractMap[K, V], SeqMap[K, V], StrictOptimizedMapOps[K, V, ListMap, ListMap[K, V]], MapFactoryDefaults[K, V, ListMap, Iterable], DefaultSerializable","d":"scala.collection.immutable","k":"class","x":"This class implements immutable maps using a list-based data structure. List map iterators and\ntraversal methods visit key-value pairs in the order they were first inserted."},
{"l":"api/scala/collection/immutable/ListMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.ListMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/ListMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.ListMap","k":"def","x":"An scala.collection.Iterator over the elements of this list map."},
{"l":"api/scala/collection/immutable/ListMap.html#removed-c7d","e":false,"i":"","n":"removed","t":"removed(key: K): ListMap[K, V]","d":"scala.collection.immutable.ListMap","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/ListMap.html#updated-b41","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): ListMap[K, V1]","d":"scala.collection.immutable.ListMap","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/ListMap$.html#","e":false,"i":"","n":"ListMap","t":"ListMap extends MapFactory[ListMap]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/ListMap$.html#empty-b5c","e":false,"i":"","n":"empty","t":"empty[K, V]: ListMap[K, V]","d":"scala.collection.immutable.ListMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/immutable/ListMap$.html#from-fffff553","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): ListMap[K, V]","d":"scala.collection.immutable.ListMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/immutable/ListMap$.html#newBuilder-5d2","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: ReusableBuilder[(K, V), ListMap[K, V]]","d":"scala.collection.immutable.ListMap","k":"def","x":"Returns a new ListMap builder"},
{"l":"api/scala/collection/immutable/ListSet.html#","e":false,"i":"","n":"ListSet","t":"ListSet[A] extends AbstractSet[A], StrictOptimizedSetOps[A, ListSet, ListSet[A]], IterableFactoryDefaults[A, ListSet], DefaultSerializable","d":"scala.collection.immutable","k":"class","x":"This class implements immutable sets using a list-based data structure. List set iterators and\ntraversal methods visit elements in the order they were first inserted."},
{"l":"api/scala/collection/immutable/ListSet.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.immutable.ListSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/ListSet.html#excl-383","e":false,"i":"","n":"excl","t":"excl(elem: A): ListSet[A]","d":"scala.collection.immutable.ListSet","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/collection/immutable/ListSet.html#incl-383","e":false,"i":"","n":"incl","t":"incl(elem: A): ListSet[A]","d":"scala.collection.immutable.ListSet","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/collection/immutable/ListSet.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.immutable.ListSet","k":"def","x":"An scala.collection.Iterator over the elements of this list set."},
{"l":"api/scala/collection/immutable/ListSet$.html#","e":false,"i":"","n":"ListSet","t":"ListSet extends IterableFactory[ListSet]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/ListSet$.html#empty-2a1","e":false,"i":"","n":"empty","t":"empty[A]: ListSet[A]","d":"scala.collection.immutable.ListSet","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/immutable/ListSet$.html#from-87a","e":false,"i":"","n":"from","t":"from[E](it: IterableOnce[E]): ListSet[E]","d":"scala.collection.immutable.ListSet","k":"def","x":"Creates a target list set from an existing source collection\n"},
{"l":"api/scala/collection/immutable/ListSet$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, ListSet[A]]","d":"scala.collection.immutable.ListSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap$.html#","e":false,"i":"","n":"LongMap","t":"LongMap","d":"scala.collection.immutable","k":"object","x":"A companion object for long maps."},
{"l":"api/scala/collection/immutable/LongMap$.html#apply-4a8","e":false,"i":"","n":"apply","t":"apply[T](elems: (Long, T)*): LongMap[T]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap$.html#buildFromLongMap-fffff061","e":false,"i":"","n":"buildFromLongMap","t":"buildFromLongMap[V]: BuildFrom[LongMap[_], (Long, V), LongMap[V]]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap$.html#empty-fd","e":false,"i":"","n":"empty","t":"empty[T]: LongMap[T]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap$.html#from-6d6","e":false,"i":"","n":"from","t":"from[V](coll: IterableOnce[(Long, V)]): LongMap[V]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap$.html#iterableFactory-fffffc73","e":false,"i":"","n":"iterableFactory","t":"iterableFactory[V]: Factory[(Long, V), LongMap[V]]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[V]: Builder[(Long, V), LongMap[V]]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap$.html#singleton-fffff7d4","e":false,"i":"","n":"singleton","t":"singleton[T](key: Long, value: T): LongMap[T]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap$.html#toBuildFrom-f77","e":false,"i":"","n":"toBuildFrom","t":"toBuildFrom[V](factory: LongMap.type): BuildFrom[Any, (Long, V), LongMap[V]]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap$.html#toFactory-fffff909","e":false,"i":"","n":"toFactory","t":"toFactory[V](dummy: LongMap.type): Factory[(Long, V), LongMap[V]]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap.html#","e":false,"i":"","n":"LongMap","t":"LongMap[+T] extends AbstractMap[Long, T], StrictOptimizedMapOps[Long, T, Map, LongMap[T]], Serializable","d":"scala.collection.immutable","k":"class","x":"Specialised immutable map structure for long keys, based on\nFast Mergeable Long Maps\nby Okasaki and Gill. Essentially a trie based on binary digits of the integers."},
{"l":"api/scala/collection/immutable/LongMap.html#++-fffffec9","e":false,"i":"","n":"++","t":"++[S >: T](that: LongMap[S]): LongMap[S]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap.html#collect-12c","e":false,"i":"","n":"collect","t":"collect[V2](pf: PartialFunction[(Long, T), (Long, V2)]): LongMap[V2]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap.html#firstKey-0","e":false,"i":"","n":"firstKey","t":"firstKey: Long","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap.html#flatMap-fffff94c","e":false,"i":"","n":"flatMap","t":"flatMap[V2](f: ((Long, T)) => IterableOnce[(Long, V2)]): LongMap[V2]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap.html#foreachKey-58c","e":false,"i":"","n":"foreachKey","t":"foreachKey[U](f: Long => U): Unit","d":"scala.collection.immutable.LongMap","k":"def","x":"Loop over the keys of the map. The same as keys.foreach(f), but may\nbe more efficient.\n"},
{"l":"api/scala/collection/immutable/LongMap.html#foreachValue-58c","e":false,"i":"","n":"foreachValue","t":"foreachValue[U](f: T => U): Unit","d":"scala.collection.immutable.LongMap","k":"def","x":"Loop over the values of the map. The same as values.foreach(f), but may\nbe more efficient.\n"},
{"l":"api/scala/collection/immutable/LongMap.html#get-681","e":false,"i":"","n":"get","t":"get(key: Long): Option[T]","d":"scala.collection.immutable.LongMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/LongMap.html#intersection-fffffec9","e":false,"i":"","n":"intersection","t":"intersection[R](that: LongMap[R]): LongMap[T]","d":"scala.collection.immutable.LongMap","k":"def","x":"Left biased intersection. Returns the map that has all the same mappings as this but only for keys\nwhich are present in the other map.\n"},
{"l":"api/scala/collection/immutable/LongMap.html#intersectionWith-fffff7e1","e":false,"i":"","n":"intersectionWith","t":"intersectionWith[S, R](that: LongMap[S], f: (Long, T, S) => R): LongMap[R]","d":"scala.collection.immutable.LongMap","k":"def","x":"Forms the intersection of these two maps with a combining function. The\nresulting map is a map that has only keys present in both maps and has\nvalues produced from the original mappings by combining them with f.\n"},
{"l":"api/scala/collection/immutable/LongMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(Long, T)]","d":"scala.collection.immutable.LongMap","k":"def","x":"Iterator over key, value pairs of the map in unsigned order of the keys.\n"},
{"l":"api/scala/collection/immutable/LongMap.html#lastKey-0","e":false,"i":"","n":"lastKey","t":"lastKey: Long","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap.html#map-fffff94c","e":false,"i":"","n":"map","t":"map[V2](f: ((Long, T)) => (Long, V2)): LongMap[V2]","d":"scala.collection.immutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/LongMap.html#modifyOrRemove-fffff90d","e":false,"i":"","n":"modifyOrRemove","t":"modifyOrRemove[S](f: (Long, T) => Option[S]): LongMap[S]","d":"scala.collection.immutable.LongMap","k":"def","x":"A combined transform and filter function. Returns an LongMap such that\nfor each (key, value) mapping in this map, if f(key, value) == None\nthe map contains no mapping for key, and if f(key, value).\n"},
{"l":"api/scala/collection/immutable/LongMap.html#removed-fffff250","e":false,"i":"","n":"removed","t":"removed(key: Long): LongMap[T]","d":"scala.collection.immutable.LongMap","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/LongMap.html#unionWith-982","e":false,"i":"","n":"unionWith","t":"unionWith[S >: T](that: LongMap[S], f: (Long, S, S) => S): LongMap[S]","d":"scala.collection.immutable.LongMap","k":"def","x":"Forms a union map with that map, using the combining function to resolve conflicts.\n"},
{"l":"api/scala/collection/immutable/LongMap.html#updateWith-fffff956","e":false,"i":"","n":"updateWith","t":"updateWith[S >: T](key: Long, value: S, f: (T, S) => S): LongMap[S]","d":"scala.collection.immutable.LongMap","k":"def","x":"Updates the map, using the provided function to resolve conflicts if the key is already present."},
{"l":"api/scala/collection/immutable/Map.html#","e":false,"i":"","n":"Map","t":"Map[K, +V] extends Iterable[(K, V)], Map[K, V], MapOps[K, V, Map, Map[K, V]], MapFactoryDefaults[K, V, Map, Iterable]","d":"scala.collection.immutable","k":"trait","x":"Base type of immutable Maps"},
{"l":"api/scala/collection/immutable/Map.html#withDefault-f68","e":false,"i":"","n":"withDefault","t":"withDefault[V1 >: V](d: K => V1): Map[K, V1]","d":"scala.collection.immutable.Map","k":"def","x":"The same map with a given default function.\nNote: The default is only used for apply. Other methods like get, contains, iterator, keys, etc.\nare not affected by withDefault."},
{"l":"api/scala/collection/immutable/Map.html#withDefaultValue-bec","e":false,"i":"","n":"withDefaultValue","t":"withDefaultValue[V1 >: V](d: V1): Map[K, V1]","d":"scala.collection.immutable.Map","k":"def","x":"The same map with a given default value.\nNote: The default is only used for apply. Other methods like get, contains, iterator, keys, etc.\nare not affected by withDefaultValue."},
{"l":"api/scala/collection/immutable/Map$.html#","e":false,"i":"","n":"Map","t":"Map extends MapFactory[Map]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/Map$.html#empty-ffffffda","e":false,"i":"","n":"empty","t":"empty[K, V]: Map[K, V]","d":"scala.collection.immutable.Map","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/immutable/Map$.html#from-fffffd51","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): Map[K, V]","d":"scala.collection.immutable.Map","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/immutable/Map$.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), Map[K, V]]","d":"scala.collection.immutable.Map","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/immutable/Map$$Map1.html#","e":false,"i":"","n":"Map1","t":"Map1[K, +V](key1: K, value1: V) extends AbstractMap[K, V], StrictOptimizedIterableOps[(K, V), Iterable, Map[K, V]], Serializable","d":"scala.collection.immutable.Map","k":"class","x":""},
{"l":"api/scala/collection/immutable/Map$$Map1.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.Map.Map1","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/Map$$Map1.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.Map.Map1","k":"def","x":"An scala.collection.Iterator over the elements of this immutable map."},
{"l":"api/scala/collection/immutable/Map$$Map1.html#removed-fffff97b","e":false,"i":"","n":"removed","t":"removed(key: K): Map[K, V]","d":"scala.collection.immutable.Map.Map1","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/Map$$Map1.html#updated-a3f","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): Map[K, V1]","d":"scala.collection.immutable.Map.Map1","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/Map$$Map2.html#","e":false,"i":"","n":"Map2","t":"Map2[K, +V](key1: K, value1: V, key2: K, value2: V) extends AbstractMap[K, V], StrictOptimizedIterableOps[(K, V), Iterable, Map[K, V]], Serializable","d":"scala.collection.immutable.Map","k":"class","x":""},
{"l":"api/scala/collection/immutable/Map$$Map2.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.Map.Map2","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/Map$$Map2.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.Map.Map2","k":"def","x":"An scala.collection.Iterator over the elements of this immutable map."},
{"l":"api/scala/collection/immutable/Map$$Map2.html#removed-fffff97b","e":false,"i":"","n":"removed","t":"removed(key: K): Map[K, V]","d":"scala.collection.immutable.Map.Map2","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/Map$$Map2.html#updated-a3f","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): Map[K, V1]","d":"scala.collection.immutable.Map.Map2","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/Map$$Map3.html#","e":false,"i":"","n":"Map3","t":"Map3[K, +V](key1: K, value1: V, key2: K, value2: V, key3: K, value3: V) extends AbstractMap[K, V], StrictOptimizedIterableOps[(K, V), Iterable, Map[K, V]], Serializable","d":"scala.collection.immutable.Map","k":"class","x":""},
{"l":"api/scala/collection/immutable/Map$$Map3.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.Map.Map3","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/Map$$Map3.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.Map.Map3","k":"def","x":"An scala.collection.Iterator over the elements of this immutable map."},
{"l":"api/scala/collection/immutable/Map$$Map3.html#removed-fffff97b","e":false,"i":"","n":"removed","t":"removed(key: K): Map[K, V]","d":"scala.collection.immutable.Map.Map3","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/Map$$Map3.html#updated-a3f","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): Map[K, V1]","d":"scala.collection.immutable.Map.Map3","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/Map$$Map4.html#","e":false,"i":"","n":"Map4","t":"Map4[K, +V](key1: K, value1: V, key2: K, value2: V, key3: K, value3: V, key4: K, value4: V) extends AbstractMap[K, V], StrictOptimizedIterableOps[(K, V), Iterable, Map[K, V]], Serializable","d":"scala.collection.immutable.Map","k":"class","x":""},
{"l":"api/scala/collection/immutable/Map$$Map4.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.Map.Map4","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/Map$$Map4.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.Map.Map4","k":"def","x":"An scala.collection.Iterator over the elements of this immutable map."},
{"l":"api/scala/collection/immutable/Map$$Map4.html#removed-fffff97b","e":false,"i":"","n":"removed","t":"removed(key: K): Map[K, V]","d":"scala.collection.immutable.Map.Map4","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/Map$$Map4.html#updated-a3f","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): Map[K, V1]","d":"scala.collection.immutable.Map.Map4","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/Map$$WithDefault.html#","e":false,"i":"","n":"WithDefault","t":"WithDefault[K, +V](val underlying: Map[K, V], val defaultValue: K => V) extends AbstractMap[K, V], MapOps[K, V, Map, WithDefault[K, V]], Serializable","d":"scala.collection.immutable.Map","k":"class","x":""},
{"l":"api/scala/collection/immutable/Map$$WithDefault.html#defaultValue-0","e":false,"i":"","n":"defaultValue","t":"defaultValue: K => V","d":"scala.collection.immutable.Map.WithDefault","k":"val","x":""},
{"l":"api/scala/collection/immutable/Map$$WithDefault.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.Map.WithDefault","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/Map$$WithDefault.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.Map.WithDefault","k":"def","x":"An scala.collection.Iterator over the elements of this immutable map."},
{"l":"api/scala/collection/immutable/Map$$WithDefault.html#removed-fffff216","e":false,"i":"","n":"removed","t":"removed(key: K): WithDefault[K, V]","d":"scala.collection.immutable.Map.WithDefault","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/Map$$WithDefault.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: Map[K, V]","d":"scala.collection.immutable.Map.WithDefault","k":"val","x":""},
{"l":"api/scala/collection/immutable/Map$$WithDefault.html#updated-fd2","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): WithDefault[K, V1]","d":"scala.collection.immutable.Map.WithDefault","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/MapOps.html#","e":false,"i":"","n":"MapOps","t":"MapOps[K, +V, +CC <: ([X, Y] =>> MapOps[X, Y, CC, _]), +C <: MapOps[K, V, CC, C]] extends IterableOps[(K, V), Iterable, C], MapOps[K, V, CC, C]","d":"scala.collection.immutable","k":"trait","x":"Base trait of immutable Maps implementations"},
{"l":"api/scala/collection/immutable/MapOps.html#--fffff737","e":false,"i":"","n":"-","t":"-(key: K): C","d":"scala.collection.immutable.MapOps","k":"def","x":"Alias for removed"},
{"l":"api/scala/collection/immutable/MapOps.html#--fb9","e":false,"i":"","n":"-","t":"-(key1: K, key2: K, keys: K*): C","d":"scala.collection.immutable.MapOps","k":"def","x":""},
{"l":"api/scala/collection/immutable/MapOps.html#coll-0","e":false,"i":"","n":"coll","t":"coll: C & CC[K, V]","d":"scala.collection.immutable.MapOps","k":"def","x":""},
{"l":"api/scala/collection/immutable/MapOps.html#removed-fffff737","e":false,"i":"","n":"removed","t":"removed(key: K): C","d":"scala.collection.immutable.MapOps","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/MapOps.html#removedAll-fffff6ef","e":false,"i":"","n":"removedAll","t":"removedAll(keys: IterableOnce[K]): C","d":"scala.collection.immutable.MapOps","k":"def","x":"Creates a new immutable map from this immutable map by removing all elements of another\ncollection."},
{"l":"api/scala/collection/immutable/MapOps.html#transform-249","e":false,"i":"","n":"transform","t":"transform[W](f: (K, V) => W): CC[K, W]","d":"scala.collection.immutable.MapOps","k":"def","x":"This function transforms all the values of mappings contained\nin this map with function f.\n"},
{"l":"api/scala/collection/immutable/MapOps.html#updated-fffffff3","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): CC[K, V1]","d":"scala.collection.immutable.MapOps","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/MapOps.html#updatedWith-3bd","e":false,"i":"","n":"updatedWith","t":"updatedWith[V1 >: V](key: K)(remappingFunction: Option[V] => Option[V1]): CC[K, V1]","d":"scala.collection.immutable.MapOps","k":"def","x":"Update a mapping for the specified key and its current optionally mapped value\n(Some if there is current mapping, None if not)."},
{"l":"api/scala/collection/immutable/Nil$.html#","e":false,"i":"","n":"Nil","t":"Nil extends List[Nothing]","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/NumericRange.html#","e":false,"i":"","n":"NumericRange","t":"NumericRange[T](val start: T, val end: T, val step: T, val isInclusive: Boolean)(implicit num: Integral[T]) extends AbstractSeq[T], IndexedSeq[T], IndexedSeqOps[T, IndexedSeq, IndexedSeq[T]], StrictOptimizedSeqOps[T, IndexedSeq, IndexedSeq[T]], IterableFactoryDefaults[T, IndexedSeq], Serializable","d":"scala.collection.immutable","k":"class","x":"NumericRange is a more generic version of the\nRange class which works with arbitrary types.\nIt must be supplied with an Integral implementation of the\nrange type."},
{"l":"api/scala/collection/immutable/NumericRange.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): T","d":"scala.collection.immutable.NumericRange","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/NumericRange.html#by-fffffcf1","e":false,"i":"","n":"by","t":"by(newStep: T): NumericRange[T]","d":"scala.collection.immutable.NumericRange","k":"def","x":"Create a new range with the start and end values of this range and\na new step.\n"},
{"l":"api/scala/collection/immutable/NumericRange.html#containsTyped-4ad","e":false,"i":"","n":"containsTyped","t":"containsTyped(x: T): Boolean","d":"scala.collection.immutable.NumericRange","k":"def","x":""},
{"l":"api/scala/collection/immutable/NumericRange.html#copy-d0b","e":false,"i":"","n":"copy","t":"copy(start: T, end: T, step: T): NumericRange[T]","d":"scala.collection.immutable.NumericRange","k":"def","x":"Create a copy of this range.\n"},
{"l":"api/scala/collection/immutable/NumericRange.html#end-0","e":false,"i":"","n":"end","t":"end: T","d":"scala.collection.immutable.NumericRange","k":"val","x":""},
{"l":"api/scala/collection/immutable/NumericRange.html#hashCode-0","e":false,"i":"","n":"hashCode","t":"hashCode: Int","d":"scala.collection.immutable.NumericRange","k":"val","x":"Calculates a hash code value for the object."},
{"l":"api/scala/collection/immutable/NumericRange.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.collection.immutable.NumericRange","k":"val","x":"Tests whether the numeric range is empty."},
{"l":"api/scala/collection/immutable/NumericRange.html#isInclusive-0","e":false,"i":"","n":"isInclusive","t":"isInclusive: Boolean","d":"scala.collection.immutable.NumericRange","k":"val","x":""},
{"l":"api/scala/collection/immutable/NumericRange.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.NumericRange","k":"val","x":"The length (number of elements) of the numeric range. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/NumericRange.html#start-0","e":false,"i":"","n":"start","t":"start: T","d":"scala.collection.immutable.NumericRange","k":"val","x":""},
{"l":"api/scala/collection/immutable/NumericRange.html#step-0","e":false,"i":"","n":"step","t":"step: T","d":"scala.collection.immutable.NumericRange","k":"val","x":""},
{"l":"api/scala/collection/immutable/NumericRange$.html#","e":false,"i":"","n":"NumericRange","t":"NumericRange","d":"scala.collection.immutable","k":"object","x":"A companion object for numeric ranges.\n"},
{"l":"api/scala/collection/immutable/NumericRange$.html#apply-ef0","e":false,"i":"","n":"apply","t":"apply[T](start: T, end: T, step: T)(implicit num: Integral[T]): Exclusive[T]","d":"scala.collection.immutable.NumericRange","k":"def","x":""},
{"l":"api/scala/collection/immutable/NumericRange$.html#count-4d3","e":false,"i":"","n":"count","t":"count[T](start: T, end: T, step: T, isInclusive: Boolean)(implicit num: Integral[T]): Int","d":"scala.collection.immutable.NumericRange","k":"def","x":"Calculates the number of elements in a range given start, end, step, and\nwhether or not it is inclusive.  Throws an exception if step == 0 or\nthe number of elements exceeds the maximum Int.\n"},
{"l":"api/scala/collection/immutable/NumericRange$.html#inclusive-fffffa3e","e":false,"i":"","n":"inclusive","t":"inclusive[T](start: T, end: T, step: T)(implicit num: Integral[T]): Inclusive[T]","d":"scala.collection.immutable.NumericRange","k":"def","x":""},
{"l":"api/scala/collection/immutable/NumericRange$$Exclusive.html#","e":false,"i":"","n":"Exclusive","t":"Exclusive[T](start: T, end: T, step: T)(implicit num: Integral[T]) extends NumericRange[T]","d":"scala.collection.immutable.NumericRange","k":"class","x":""},
{"l":"api/scala/collection/immutable/NumericRange$$Exclusive.html#inclusive-0","e":false,"i":"","n":"inclusive","t":"inclusive: Inclusive[T]","d":"scala.collection.immutable.NumericRange.Exclusive","k":"def","x":""},
{"l":"api/scala/collection/immutable/NumericRange$$Inclusive.html#","e":false,"i":"","n":"Inclusive","t":"Inclusive[T](start: T, end: T, step: T)(implicit num: Integral[T]) extends NumericRange[T]","d":"scala.collection.immutable.NumericRange","k":"class","x":""},
{"l":"api/scala/collection/immutable/NumericRange$$Inclusive.html#exclusive-0","e":false,"i":"","n":"exclusive","t":"exclusive: Exclusive[T]","d":"scala.collection.immutable.NumericRange.Inclusive","k":"def","x":""},
{"l":"api/scala/collection/immutable/Queue.html#","e":false,"i":"","n":"Queue","t":"Queue[+A] extends AbstractSeq[A], LinearSeq[A], LinearSeqOps[A, Queue, Queue[A]], StrictOptimizedLinearSeqOps[A, Queue, Queue[A]], StrictOptimizedSeqOps[A, Queue, Queue[A]], IterableFactoryDefaults[A, Queue], DefaultSerializable","d":"scala.collection.immutable","k":"class","x":"Queue objects implement data structures that allow to\ninsert and retrieve elements in a first-in-first-out (FIFO) manner."},
{"l":"api/scala/collection/immutable/Queue.html#dequeue-0","e":false,"i":"","n":"dequeue","t":"dequeue: (A, Queue[A])","d":"scala.collection.immutable.Queue","k":"def","x":"Returns a tuple with the first element in the queue,\nand a new queue with this element removed.\n"},
{"l":"api/scala/collection/immutable/Queue.html#dequeueOption-0","e":false,"i":"","n":"dequeueOption","t":"dequeueOption: Option[(A, Queue[A])]","d":"scala.collection.immutable.Queue","k":"def","x":"Optionally retrieves the first element and a queue of the remaining elements.\n"},
{"l":"api/scala/collection/immutable/Queue.html#enqueue-ba1","e":false,"i":"","n":"enqueue","t":"enqueue[B >: A](elem: B): Queue[B]","d":"scala.collection.immutable.Queue","k":"def","x":"Creates a new queue with element added at the end\nof the old queue.\n"},
{"l":"api/scala/collection/immutable/Queue.html#enqueue-606","e":false,"i":"","n":"enqueue","t":"enqueue[B >: A](iter: Iterable[B]): Queue[B]","d":"scala.collection.immutable.Queue","k":"def","x":"Creates a new queue with all elements provided by an Iterable object\nadded at the end of the old queue."},
{"l":"api/scala/collection/immutable/Queue.html#enqueueAll-606","e":false,"i":"","n":"enqueueAll","t":"enqueueAll[B >: A](iter: Iterable[B]): Queue[B]","d":"scala.collection.immutable.Queue","k":"def","x":"Creates a new queue with all elements provided by an Iterable object\nadded at the end of the old queue."},
{"l":"api/scala/collection/immutable/Queue.html#front-0","e":false,"i":"","n":"front","t":"front: A","d":"scala.collection.immutable.Queue","k":"def","x":"Returns the first element in the queue, or throws an error if there\nis no element contained in the queue.\n"},
{"l":"api/scala/collection/immutable/Queue$.html#","e":false,"i":"","n":"Queue","t":"Queue extends StrictOptimizedSeqFactory[Queue]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/Queue$.html#empty-fffff00e","e":false,"i":"","n":"empty","t":"empty[A]: Queue[A]","d":"scala.collection.immutable.Queue","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/immutable/Queue$.html#from-fffff827","e":false,"i":"","n":"from","t":"from[A](source: IterableOnce[A]): Queue[A]","d":"scala.collection.immutable.Queue","k":"def","x":"Creates a target immutable queue from an existing source collection\n"},
{"l":"api/scala/collection/immutable/Queue$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, Queue[A]]","d":"scala.collection.immutable.Queue","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range.html#","e":false,"i":"","n":"Range","t":"Range(val start: Int, val end: Int, val step: Int) extends AbstractSeq[Int], IndexedSeq[Int], IndexedSeqOps[Int, IndexedSeq, IndexedSeq[Int]], StrictOptimizedSeqOps[Int, IndexedSeq, IndexedSeq[Int]], IterableFactoryDefaults[Int, IndexedSeq], Serializable","d":"scala.collection.immutable","k":"class","x":"The Range class represents integer values in range\n[start;end) with non-zero step value step.\nIt's a special case of an indexed sequence.\nFor example:"},
{"l":"api/scala/collection/immutable/Range.html#apply-fffffbe0","e":false,"i":"","n":"apply","t":"apply(idx: Int): Int","d":"scala.collection.immutable.Range","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/Range.html#by-fffff730","e":false,"i":"","n":"by","t":"by(step: Int): Range","d":"scala.collection.immutable.Range","k":"def","x":"Create a new range with the start and end values of this range and\na new step.\n"},
{"l":"api/scala/collection/immutable/Range.html#contains-ffffff99","e":false,"i":"","n":"contains","t":"contains(x: Int): Boolean","d":"scala.collection.immutable.Range","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range.html#end-0","e":false,"i":"","n":"end","t":"end: Int","d":"scala.collection.immutable.Range","k":"val","x":""},
{"l":"api/scala/collection/immutable/Range.html#inclusive-0","e":false,"i":"","n":"inclusive","t":"inclusive: Range","d":"scala.collection.immutable.Range","k":"def","x":"Make range inclusive.\n"},
{"l":"api/scala/collection/immutable/Range.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.collection.immutable.Range","k":"val","x":"Tests whether the range is empty."},
{"l":"api/scala/collection/immutable/Range.html#isInclusive-0","e":false,"i":"","n":"isInclusive","t":"isInclusive: Boolean","d":"scala.collection.immutable.Range","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.immutable.Range","k":"def","x":"The length (number of elements) of the range. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/immutable/Range.html#start-0","e":false,"i":"","n":"start","t":"start: Int","d":"scala.collection.immutable.Range","k":"val","x":""},
{"l":"api/scala/collection/immutable/Range.html#step-0","e":false,"i":"","n":"step","t":"step: Int","d":"scala.collection.immutable.Range","k":"val","x":""},
{"l":"api/scala/collection/immutable/Range$.html#","e":false,"i":"","n":"Range","t":"Range","d":"scala.collection.immutable","k":"object","x":"Companion object for ranges.\n"},
{"l":"api/scala/collection/immutable/Range$.html#apply-fffffbe4","e":false,"i":"","n":"apply","t":"apply(start: Int, end: Int, step: Int): Exclusive","d":"scala.collection.immutable.Range","k":"def","x":"Make a range from start until end (exclusive) with given step value."},
{"l":"api/scala/collection/immutable/Range$.html#apply-9ab","e":false,"i":"","n":"apply","t":"apply(start: Int, end: Int): Exclusive","d":"scala.collection.immutable.Range","k":"def","x":"Make a range from start until end (exclusive) with step value 1.\n"},
{"l":"api/scala/collection/immutable/Range$.html#count-fffff3ce","e":false,"i":"","n":"count","t":"count(start: Int, end: Int, step: Int, isInclusive: Boolean): Int","d":"scala.collection.immutable.Range","k":"def","x":"Counts the number of range elements.\nprecondition:  step != 0\nIf the size of the range exceeds Int.MaxValue, the\nresult will be negative.\n"},
{"l":"api/scala/collection/immutable/Range$.html#count-ffffffc0","e":false,"i":"","n":"count","t":"count(start: Int, end: Int, step: Int): Int","d":"scala.collection.immutable.Range","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$.html#inclusive-732","e":false,"i":"","n":"inclusive","t":"inclusive(start: Int, end: Int, step: Int): Inclusive","d":"scala.collection.immutable.Range","k":"def","x":"Make an inclusive range from start to end with given step value."},
{"l":"api/scala/collection/immutable/Range$.html#inclusive-4f9","e":false,"i":"","n":"inclusive","t":"inclusive(start: Int, end: Int): Inclusive","d":"scala.collection.immutable.Range","k":"def","x":"Make an inclusive range from start to end with step value 1.\n"},
{"l":"api/scala/collection/immutable/Range$$BigDecimal$.html#","e":false,"i":"","n":"BigDecimal","t":"BigDecimal","d":"scala.collection.immutable.Range","k":"object","x":""},
{"l":"api/scala/collection/immutable/Range$$BigDecimal$.html#apply-fffffbff","e":false,"i":"","n":"apply","t":"apply(start: BigDecimal, end: BigDecimal, step: BigDecimal): Exclusive[BigDecimal]","d":"scala.collection.immutable.Range.BigDecimal","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$BigDecimal$.html#bigDecAsIntegral-0","e":false,"i":"","n":"bigDecAsIntegral","t":"bigDecAsIntegral: BigDecimalAsIfIntegral","d":"scala.collection.immutable.Range.BigDecimal","k":"val","x":""},
{"l":"api/scala/collection/immutable/Range$$BigDecimal$.html#inclusive-74d","e":false,"i":"","n":"inclusive","t":"inclusive(start: BigDecimal, end: BigDecimal, step: BigDecimal): Inclusive[BigDecimal]","d":"scala.collection.immutable.Range.BigDecimal","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$BigInt$.html#","e":false,"i":"","n":"BigInt","t":"BigInt","d":"scala.collection.immutable.Range","k":"object","x":""},
{"l":"api/scala/collection/immutable/Range$$BigInt$.html#apply-fffff3dd","e":false,"i":"","n":"apply","t":"apply(start: BigInt, end: BigInt, step: BigInt): Exclusive[BigInt]","d":"scala.collection.immutable.Range.BigInt","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$BigInt$.html#inclusive-f2b","e":false,"i":"","n":"inclusive","t":"inclusive(start: BigInt, end: BigInt, step: BigInt): Inclusive[BigInt]","d":"scala.collection.immutable.Range.BigInt","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$Exclusive.html#","e":false,"i":"","n":"Exclusive","t":"Exclusive(start: Int, end: Int, step: Int) extends Range","d":"scala.collection.immutable.Range","k":"class","x":""},
{"l":"api/scala/collection/immutable/Range$$Exclusive.html#isInclusive-0","e":false,"i":"","n":"isInclusive","t":"isInclusive: Boolean","d":"scala.collection.immutable.Range.Exclusive","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$Inclusive.html#","e":false,"i":"","n":"Inclusive","t":"Inclusive(start: Int, end: Int, step: Int) extends Range","d":"scala.collection.immutable.Range","k":"class","x":""},
{"l":"api/scala/collection/immutable/Range$$Inclusive.html#isInclusive-0","e":false,"i":"","n":"isInclusive","t":"isInclusive: Boolean","d":"scala.collection.immutable.Range.Inclusive","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$Int$.html#","e":false,"i":"","n":"Int","t":"Int","d":"scala.collection.immutable.Range","k":"object","x":""},
{"l":"api/scala/collection/immutable/Range$$Int$.html#apply-fffff857","e":false,"i":"","n":"apply","t":"apply(start: Int, end: Int, step: Int): Exclusive[Int]","d":"scala.collection.immutable.Range.Int","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$Int$.html#inclusive-3a5","e":false,"i":"","n":"inclusive","t":"inclusive(start: Int, end: Int, step: Int): Inclusive[Int]","d":"scala.collection.immutable.Range.Int","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$Long$.html#","e":false,"i":"","n":"Long","t":"Long","d":"scala.collection.immutable.Range","k":"object","x":""},
{"l":"api/scala/collection/immutable/Range$$Long$.html#apply-19c","e":false,"i":"","n":"apply","t":"apply(start: Long, end: Long, step: Long): Exclusive[Long]","d":"scala.collection.immutable.Range.Long","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$Long$.html#inclusive-fffffcea","e":false,"i":"","n":"inclusive","t":"inclusive(start: Long, end: Long, step: Long): Inclusive[Long]","d":"scala.collection.immutable.Range.Long","k":"def","x":""},
{"l":"api/scala/collection/immutable/Range$$Partial.html#","e":false,"i":"","n":"Partial","t":"Partial[T, U](f: T => U) extends AnyVal","d":"scala.collection.immutable.Range","k":"class","x":""},
{"l":"api/scala/collection/immutable/Range$$Partial.html#by-d26","e":false,"i":"","n":"by","t":"by(x: T): U","d":"scala.collection.immutable.Range.Partial","k":"def","x":""},
{"l":"api/scala/collection/immutable/Seq.html#","e":false,"i":"","n":"Seq","t":"Seq[+A] extends Iterable[A], Seq[A], SeqOps[A, Seq, Seq[A]], IterableFactoryDefaults[A, Seq]","d":"scala.collection.immutable","k":"trait","x":""},
{"l":"api/scala/collection/immutable/Seq$.html#","e":false,"i":"","n":"Seq","t":"Seq extends Delegate[Seq]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/SeqMap.html#","e":false,"i":"","n":"SeqMap","t":"SeqMap[K, +V] extends Map[K, V], SeqMap[K, V], MapOps[K, V, SeqMap, SeqMap[K, V]], MapFactoryDefaults[K, V, SeqMap, Iterable]","d":"scala.collection.immutable","k":"trait","x":"A base trait for ordered, immutable maps."},
{"l":"api/scala/collection/immutable/SeqMap$.html#","e":false,"i":"","n":"SeqMap","t":"SeqMap extends MapFactory[SeqMap]","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/SeqMap$.html#empty-d3f","e":false,"i":"","n":"empty","t":"empty[K, V]: SeqMap[K, V]","d":"scala.collection.immutable.SeqMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/immutable/SeqMap$.html#from-fffff868","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): SeqMap[K, V]","d":"scala.collection.immutable.SeqMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/immutable/SeqMap$.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), SeqMap[K, V]]","d":"scala.collection.immutable.SeqMap","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/immutable/SeqOps.html#","e":false,"i":"","n":"SeqOps","t":"SeqOps[+A, +CC[_], +C] extends SeqOps[A, CC, C]","d":"scala.collection.immutable","k":"trait","x":""},
{"l":"api/scala/collection/immutable/Set.html#","e":false,"i":"","n":"Set","t":"Set[A] extends Iterable[A], Set[A], SetOps[A, Set, Set[A]], IterableFactoryDefaults[A, Set]","d":"scala.collection.immutable","k":"trait","x":"Base trait for immutable set collections"},
{"l":"api/scala/collection/immutable/Set$.html#","e":false,"i":"","n":"Set","t":"Set extends IterableFactory[Set]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/Set$.html#empty-fffffe9f","e":false,"i":"","n":"empty","t":"empty[A]: Set[A]","d":"scala.collection.immutable.Set","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/immutable/Set$.html#from-fffff8f8","e":false,"i":"","n":"from","t":"from[E](it: IterableOnce[E]): Set[E]","d":"scala.collection.immutable.Set","k":"def","x":"Creates a target immutable set from an existing source collection\n"},
{"l":"api/scala/collection/immutable/Set$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, Set[A]]","d":"scala.collection.immutable.Set","k":"def","x":""},
{"l":"api/scala/collection/immutable/Set$$Set1.html#","e":false,"i":"","n":"Set1","t":"Set1[A] extends AbstractSet[A], StrictOptimizedIterableOps[A, Set, Set[A]], Serializable","d":"scala.collection.immutable.Set","k":"class","x":"An optimized representation for immutable sets of size 1"},
{"l":"api/scala/collection/immutable/Set$$Set1.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.immutable.Set.Set1","k":"def","x":""},
{"l":"api/scala/collection/immutable/Set$$Set1.html#excl-fffff081","e":false,"i":"","n":"excl","t":"excl(elem: A): Set[A]","d":"scala.collection.immutable.Set.Set1","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/collection/immutable/Set$$Set1.html#incl-fffff081","e":false,"i":"","n":"incl","t":"incl(elem: A): Set[A]","d":"scala.collection.immutable.Set.Set1","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/collection/immutable/Set$$Set1.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.immutable.Set.Set1","k":"def","x":"An scala.collection.Iterator over the elements of this immutable set."},
{"l":"api/scala/collection/immutable/Set$$Set2.html#","e":false,"i":"","n":"Set2","t":"Set2[A] extends AbstractSet[A], StrictOptimizedIterableOps[A, Set, Set[A]], Serializable","d":"scala.collection.immutable.Set","k":"class","x":"An optimized representation for immutable sets of size 2"},
{"l":"api/scala/collection/immutable/Set$$Set2.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.immutable.Set.Set2","k":"def","x":""},
{"l":"api/scala/collection/immutable/Set$$Set2.html#excl-fffff081","e":false,"i":"","n":"excl","t":"excl(elem: A): Set[A]","d":"scala.collection.immutable.Set.Set2","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/collection/immutable/Set$$Set2.html#incl-fffff081","e":false,"i":"","n":"incl","t":"incl(elem: A): Set[A]","d":"scala.collection.immutable.Set.Set2","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/collection/immutable/Set$$Set2.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.immutable.Set.Set2","k":"def","x":"An scala.collection.Iterator over the elements of this immutable set."},
{"l":"api/scala/collection/immutable/Set$$Set3.html#","e":false,"i":"","n":"Set3","t":"Set3[A] extends AbstractSet[A], StrictOptimizedIterableOps[A, Set, Set[A]], Serializable","d":"scala.collection.immutable.Set","k":"class","x":"An optimized representation for immutable sets of size 3"},
{"l":"api/scala/collection/immutable/Set$$Set3.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.immutable.Set.Set3","k":"def","x":""},
{"l":"api/scala/collection/immutable/Set$$Set3.html#excl-fffff081","e":false,"i":"","n":"excl","t":"excl(elem: A): Set[A]","d":"scala.collection.immutable.Set.Set3","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/collection/immutable/Set$$Set3.html#incl-fffff081","e":false,"i":"","n":"incl","t":"incl(elem: A): Set[A]","d":"scala.collection.immutable.Set.Set3","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/collection/immutable/Set$$Set3.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.immutable.Set.Set3","k":"def","x":"An scala.collection.Iterator over the elements of this immutable set."},
{"l":"api/scala/collection/immutable/Set$$Set4.html#","e":false,"i":"","n":"Set4","t":"Set4[A] extends AbstractSet[A], StrictOptimizedIterableOps[A, Set, Set[A]], Serializable","d":"scala.collection.immutable.Set","k":"class","x":"An optimized representation for immutable sets of size 4"},
{"l":"api/scala/collection/immutable/Set$$Set4.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.immutable.Set.Set4","k":"def","x":""},
{"l":"api/scala/collection/immutable/Set$$Set4.html#excl-fffff081","e":false,"i":"","n":"excl","t":"excl(elem: A): Set[A]","d":"scala.collection.immutable.Set.Set4","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/collection/immutable/Set$$Set4.html#incl-fffff081","e":false,"i":"","n":"incl","t":"incl(elem: A): Set[A]","d":"scala.collection.immutable.Set.Set4","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/collection/immutable/Set$$Set4.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.immutable.Set.Set4","k":"def","x":"An scala.collection.Iterator over the elements of this immutable set."},
{"l":"api/scala/collection/immutable/SetOps.html#","e":false,"i":"","n":"SetOps","t":"SetOps[A, +CC[X], +C <: SetOps[A, CC, C]] extends SetOps[A, CC, C]","d":"scala.collection.immutable","k":"trait","x":"Base trait for immutable set operations"},
{"l":"api/scala/collection/immutable/SetOps.html#diff-fffffa4a","e":false,"i":"","n":"diff","t":"diff(that: Set[A]): C","d":"scala.collection.immutable.SetOps","k":"def","x":"Computes the difference of this set and another set.\n"},
{"l":"api/scala/collection/immutable/SetOps.html#excl-fffffa71","e":false,"i":"","n":"excl","t":"excl(elem: A): C","d":"scala.collection.immutable.SetOps","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/collection/immutable/SetOps.html#incl-fffffa71","e":false,"i":"","n":"incl","t":"incl(elem: A): C","d":"scala.collection.immutable.SetOps","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/collection/immutable/SetOps.html#removedAll-fffffa29","e":false,"i":"","n":"removedAll","t":"removedAll(that: IterableOnce[A]): C","d":"scala.collection.immutable.SetOps","k":"def","x":"Creates a new immutable set from this immutable set by removing all elements of another\ncollection.\n"},
{"l":"api/scala/collection/immutable/SortedMap.html#","e":false,"i":"","n":"SortedMap","t":"SortedMap[K, +V] extends Map[K, V], SortedMap[K, V], SortedMapOps[K, V, SortedMap, SortedMap[K, V]], SortedMapFactoryDefaults[K, V, SortedMap, Iterable, Map]","d":"scala.collection.immutable","k":"trait","x":"An immutable map whose key-value pairs are sorted according to an scala.math.Ordering on the keys."},
{"l":"api/scala/collection/immutable/SortedMap$.html#","e":false,"i":"","n":"SortedMap","t":"SortedMap extends Delegate[SortedMap]","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/SortedMap$$WithDefault.html#","e":false,"i":"","n":"WithDefault","t":"WithDefault[K, +V](underlying: SortedMap[K, V], defaultValue: K => V) extends WithDefault[K, V], SortedMap[K, V], SortedMapOps[K, V, SortedMap, WithDefault[K, V]], Serializable","d":"scala.collection.immutable.SortedMap","k":"class","x":""},
{"l":"api/scala/collection/immutable/SortedMap$$WithDefault.html#iteratorFrom-303","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: K): Iterator[(K, V)]","d":"scala.collection.immutable.SortedMap.WithDefault","k":"def","x":"Creates an iterator over all the key/value pairs\ncontained in this map having a key greater than or\nequal to start according to the ordering of\nthis map. x.iteratorFrom(y) is equivalent\nto but often more efficient than x.from(y).iterator.\n"},
{"l":"api/scala/collection/immutable/SortedMap$$WithDefault.html#keysIteratorFrom-303","e":false,"i":"","n":"keysIteratorFrom","t":"keysIteratorFrom(start: K): Iterator[K]","d":"scala.collection.immutable.SortedMap.WithDefault","k":"def","x":"Creates an iterator over all the keys(or elements)  contained in this\ncollection greater than or equal to start\naccording to the ordering of this collection. x.keysIteratorFrom(y)\nis equivalent to but often more efficient than\nx.from(y).keysIterator.\n"},
{"l":"api/scala/collection/immutable/SortedMap$$WithDefault.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[K]","d":"scala.collection.immutable.SortedMap.WithDefault","k":"def","x":""},
{"l":"api/scala/collection/immutable/SortedMap$$WithDefault.html#rangeImpl-fffff1ac","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[K], until: Option[K]): WithDefault[K, V]","d":"scala.collection.immutable.SortedMap.WithDefault","k":"def","x":"Creates a ranged projection of this collection. Any mutations in the\nranged projection will update this collection and vice versa."},
{"l":"api/scala/collection/immutable/SortedMapOps.html#","e":false,"i":"","n":"SortedMapOps","t":"SortedMapOps[K, +V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, _]), +C <: SortedMapOps[K, V, CC, C]] extends MapOps[K, V, Map, C], SortedMapOps[K, V, CC, C]","d":"scala.collection.immutable","k":"trait","x":""},
{"l":"api/scala/collection/immutable/SortedMapOps.html#coll-0","e":false,"i":"","n":"coll","t":"coll: C & CC[K, V]","d":"scala.collection.immutable.SortedMapOps","k":"def","x":""},
{"l":"api/scala/collection/immutable/SortedMapOps.html#unsorted-0","e":false,"i":"","n":"unsorted","t":"unsorted: Map[K, V]","d":"scala.collection.immutable.SortedMapOps","k":"def","x":""},
{"l":"api/scala/collection/immutable/SortedMapOps.html#updated-a3f","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): CC[K, V1]","d":"scala.collection.immutable.SortedMapOps","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html#","e":false,"i":"","n":"ImmutableKeySortedSet","t":"ImmutableKeySortedSet extends AbstractSet[K], SortedSet[K]","d":"scala.collection.immutable.SortedMapOps","k":"class","x":"The implementation class of the set returned by keySet"},
{"l":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(key: MapOps.this.K): Boolean","d":"scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html#excl-fffffd44","e":false,"i":"","n":"excl","t":"excl(elem: SortedMapOps.this.K): SortedSet[SortedMapOps.this.K]","d":"scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html#incl-fffffd44","e":false,"i":"","n":"incl","t":"incl(elem: SortedMapOps.this.K): SortedSet[SortedMapOps.this.K]","d":"scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[MapOps.this.K]","d":"scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html#iteratorFrom-303","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: SortedMapOps.this.K): Iterator[SortedMapOps.this.K]","d":"scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[SortedMapOps.this.K]","d":"scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/SortedMapOps$ImmutableKeySortedSet.html#rangeImpl-52b","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[SortedMapOps.this.K], until: Option[SortedMapOps.this.K]): SortedSet[SortedMapOps.this.K]","d":"scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet","k":"def","x":"Creates a ranged projection of this collection. Any mutations in the\nranged projection will update this collection and vice versa."},
{"l":"api/scala/collection/immutable/SortedSet.html#","e":false,"i":"","n":"SortedSet","t":"SortedSet[A] extends Set[A], SortedSet[A], SortedSetOps[A, SortedSet, SortedSet[A]], SortedSetFactoryDefaults[A, SortedSet, Set]","d":"scala.collection.immutable","k":"trait","x":"Base trait for sorted sets"},
{"l":"api/scala/collection/immutable/SortedSet$.html#","e":false,"i":"","n":"SortedSet","t":"SortedSet extends Delegate[SortedSet]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/SortedSetOps.html#","e":false,"i":"","n":"SortedSetOps","t":"SortedSetOps[A, +CC <: (SortedSet), +C <: SortedSetOps[A, CC, C]] extends SetOps[A, Set, C], SortedSetOps[A, CC, C]","d":"scala.collection.immutable","k":"trait","x":""},
{"l":"api/scala/collection/immutable/SortedSetOps.html#unsorted-0","e":false,"i":"","n":"unsorted","t":"unsorted: Set[A]","d":"scala.collection.immutable.SortedSetOps","k":"def","x":""},
{"l":"api/scala/collection/immutable/Stream.html#","e":false,"i":"","n":"Stream","t":"Stream[+A] extends AbstractSeq[A], LinearSeq[A], LinearSeqOps[A, Stream, Stream[A]], IterableFactoryDefaults[A, Stream], Serializable","d":"scala.collection.immutable","k":"class","x":""},
{"l":"api/scala/collection/immutable/Stream.html#append-5d5","e":false,"i":"","n":"append","t":"append[B >: A](rest: => IterableOnce[B]): Stream[B]","d":"scala.collection.immutable.Stream","k":"def","x":"The stream resulting from the concatenation of this stream with the argument stream."},
{"l":"api/scala/collection/immutable/Stream.html#force-0","e":false,"i":"","n":"force","t":"force: this.type","d":"scala.collection.immutable.Stream","k":"def","x":"Forces evaluation of the whole Stream and returns it.\n"},
{"l":"api/scala/collection/immutable/Stream.html#lazyAppendedAll-5d5","e":false,"i":"","n":"lazyAppendedAll","t":"lazyAppendedAll[B >: A](suffix: => IterableOnce[B]): Stream[B]","d":"scala.collection.immutable.Stream","k":"def","x":"The stream resulting from the concatenation of this stream with the argument stream.\n"},
{"l":"api/scala/collection/immutable/Stream.html#print-94c","e":false,"i":"","n":"print","t":"print(): Unit","d":"scala.collection.immutable.Stream","k":"def","x":"Prints elements of this stream one by one, separated by commas."},
{"l":"api/scala/collection/immutable/Stream.html#print-571","e":false,"i":"","n":"print","t":"print(sep: String): Unit","d":"scala.collection.immutable.Stream","k":"def","x":"Prints elements of this stream one by one, separated by sep."},
{"l":"api/scala/collection/immutable/Stream.html#tail-0","e":false,"i":"","n":"tail","t":"tail: Stream[A]","d":"scala.collection.immutable.Stream","k":"def","x":"The rest of the collection without its first element."},
{"l":"api/scala/collection/immutable/Stream$.html#","e":false,"i":"","n":"Stream","t":"Stream extends SeqFactory[Stream]","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/Stream$.html#continually-5d5","e":false,"i":"","n":"continually","t":"continually[A](elem: => A): Stream[A]","d":"scala.collection.immutable.Stream","k":"def","x":"Create an infinite Stream containing the given element expression (which\nis computed for each occurrence).\n"},
{"l":"api/scala/collection/immutable/Stream$.html#empty-823","e":false,"i":"","n":"empty","t":"empty[A]: Stream[A]","d":"scala.collection.immutable.Stream","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/immutable/Stream$.html#from-fffff32a","e":false,"i":"","n":"from","t":"from[A](coll: IterableOnce[A]): Stream[A]","d":"scala.collection.immutable.Stream","k":"def","x":"Creates a target collection from an existing source collection\n"},
{"l":"api/scala/collection/immutable/Stream$.html#from-e54","e":false,"i":"","n":"from","t":"from(start: Int, step: Int): Stream[Int]","d":"scala.collection.immutable.Stream","k":"def","x":"Create an infinite Stream starting at start and incrementing by\nstep step.\n"},
{"l":"api/scala/collection/immutable/Stream$.html#from-fed","e":false,"i":"","n":"from","t":"from(start: Int): Stream[Int]","d":"scala.collection.immutable.Stream","k":"def","x":"Create an infinite Stream starting at start and incrementing by 1.\n"},
{"l":"api/scala/collection/immutable/Stream$.html#fromIterator-fffffcaf","e":false,"i":"","n":"fromIterator","t":"fromIterator[A](it: Iterator[A]): Stream[A]","d":"scala.collection.immutable.Stream","k":"def","x":""},
{"l":"api/scala/collection/immutable/Stream$.html#iterate-f87","e":false,"i":"","n":"iterate","t":"iterate[A](start: A)(f: A => A): Stream[A]","d":"scala.collection.immutable.Stream","k":"def","x":"An infinite Stream that repeatedly applies a given function to a start value.\n"},
{"l":"api/scala/collection/immutable/Stream$.html#toDeferrer-271","e":false,"i":"","n":"toDeferrer","t":"toDeferrer[A](l: => Stream[A]): Deferrer[A]","d":"scala.collection.immutable.Stream","k":"def","x":""},
{"l":"api/scala/collection/immutable/Stream$$$hash$colon$colon$$.html#","e":false,"i":"","n":"#::","t":"#::","d":"scala.collection.immutable.Stream","k":"object","x":""},
{"l":"api/scala/collection/immutable/Stream$$$hash$colon$colon$$.html#unapply-1e0","e":false,"i":"","n":"unapply","t":"unapply[A](s: Stream[A]): Option[(A, Stream[A])]","d":"scala.collection.immutable.Stream.#::","k":"def","x":""},
{"l":"api/scala/collection/immutable/Stream$$Cons.html#","e":false,"i":"","n":"Cons","t":"Cons[A](val head: A, tl: => Stream[A]) extends Stream[A]","d":"scala.collection.immutable.Stream","k":"class","x":""},
{"l":"api/scala/collection/immutable/Stream$$Cons.html#force-0","e":false,"i":"","n":"force","t":"force: this.type","d":"scala.collection.immutable.Stream.Cons","k":"def","x":"Forces evaluation of the whole Stream and returns it.\n"},
{"l":"api/scala/collection/immutable/Stream$$Cons.html#head-0","e":false,"i":"","n":"head","t":"head: A","d":"scala.collection.immutable.Stream.Cons","k":"val","x":"Selects the first element of this immutable collection."},
{"l":"api/scala/collection/immutable/Stream$$Deferrer.html#","e":false,"i":"","n":"Deferrer","t":"Deferrer[A] extends AnyVal","d":"scala.collection.immutable.Stream","k":"class","x":""},
{"l":"api/scala/collection/immutable/Stream$$Deferrer.html##::-fffffef0","e":false,"i":"","n":"#::","t":"#::[B >: A](elem: B): Stream[B]","d":"scala.collection.immutable.Stream.Deferrer","k":"def","x":"Construct a Stream consisting of a given first element followed by elements\nfrom another Stream.\n"},
{"l":"api/scala/collection/immutable/Stream$$Deferrer.html##:::-671","e":false,"i":"","n":"#:::","t":"#:::[B >: A](prefix: Stream[B]): Stream[B]","d":"scala.collection.immutable.Stream.Deferrer","k":"def","x":"Construct a Stream consisting of the concatenation of the given Stream and\nanother Stream.\n"},
{"l":"api/scala/collection/immutable/Stream$$Empty$.html#","e":false,"i":"","n":"Empty","t":"Empty extends Stream[Nothing]","d":"scala.collection.immutable.Stream","k":"object","x":""},
{"l":"api/scala/collection/immutable/Stream$$Empty$.html#force-0","e":false,"i":"","n":"force","t":"force: this.type","d":"scala.collection.immutable.Stream.Empty","k":"def","x":"Forces evaluation of the whole Stream and returns it.\n"},
{"l":"api/scala/collection/immutable/Stream$$SerializationProxy.html#","e":false,"i":"","n":"SerializationProxy","t":"SerializationProxy[A](var coll: Stream[A]) extends Serializable","d":"scala.collection.immutable.Stream","k":"class","x":"This serialization proxy is used for Streams which start with a sequence of evaluated cons cells.\nThe forced sequence is serialized in a compact, sequential format, followed by the unevaluated tail, which uses\nstandard Java serialization to store the complete structure of unevaluated thunks. This allows the serialization\nof long evaluated streams without exhausting the stack through recursive serialization of cons cells.\n"},
{"l":"api/scala/collection/immutable/Stream$$cons$.html#","e":false,"i":"","n":"cons","t":"cons","d":"scala.collection.immutable.Stream","k":"object","x":"An alternative way of building and matching Streams using Stream.cons(hd, tl).\n"},
{"l":"api/scala/collection/immutable/Stream$$cons$.html#apply-b68","e":false,"i":"","n":"apply","t":"apply[A](hd: A, tl: => Stream[A]): Stream[A]","d":"scala.collection.immutable.Stream.cons","k":"def","x":"A stream consisting of a given first element and remaining elements"},
{"l":"api/scala/collection/immutable/Stream$$cons$.html#unapply-1e0","e":false,"i":"","n":"unapply","t":"unapply[A](xs: Stream[A]): Option[(A, Stream[A])]","d":"scala.collection.immutable.Stream.cons","k":"def","x":"Maps a stream to its head and tail"},
{"l":"api/scala/collection/immutable/StrictOptimizedMapOps.html#","e":false,"i":"","n":"StrictOptimizedMapOps","t":"StrictOptimizedMapOps[K, +V, +CC <: ([X, Y] =>> MapOps[X, Y, CC, _]), +C <: MapOps[K, V, CC, C]] extends MapOps[K, V, CC, C], StrictOptimizedMapOps[K, V, CC, C], StrictOptimizedIterableOps[(K, V), Iterable, C]","d":"scala.collection.immutable","k":"trait","x":""},
{"l":"api/scala/collection/immutable/StrictOptimizedSeqOps.html#","e":false,"i":"","n":"StrictOptimizedSeqOps","t":"StrictOptimizedSeqOps[+A, +CC[_], +C] extends SeqOps[A, CC, C], StrictOptimizedSeqOps[A, CC, C], StrictOptimizedIterableOps[A, CC, C]","d":"scala.collection.immutable","k":"trait","x":"Trait that overrides operations to take advantage of strict builders.\n"},
{"l":"api/scala/collection/immutable/StrictOptimizedSetOps.html#","e":false,"i":"","n":"StrictOptimizedSetOps","t":"StrictOptimizedSetOps[A, +CC[X], +C <: SetOps[A, CC, C]] extends SetOps[A, CC, C], StrictOptimizedSetOps[A, CC, C], StrictOptimizedIterableOps[A, CC, C]","d":"scala.collection.immutable","k":"trait","x":""},
{"l":"api/scala/collection/immutable/StrictOptimizedSortedMapOps.html#","e":false,"i":"","n":"StrictOptimizedSortedMapOps","t":"StrictOptimizedSortedMapOps[K, +V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, _]), +C <: SortedMapOps[K, V, CC, C]] extends SortedMapOps[K, V, CC, C], StrictOptimizedSortedMapOps[K, V, CC, C], StrictOptimizedMapOps[K, V, Map, C]","d":"scala.collection.immutable","k":"trait","x":""},
{"l":"api/scala/collection/immutable/StrictOptimizedSortedSetOps.html#","e":false,"i":"","n":"StrictOptimizedSortedSetOps","t":"StrictOptimizedSortedSetOps[A, +CC <: (SortedSet), +C <: SortedSetOps[A, CC, C]] extends SortedSetOps[A, CC, C], StrictOptimizedSortedSetOps[A, CC, C], StrictOptimizedSetOps[A, Set, C]","d":"scala.collection.immutable","k":"trait","x":""},
{"l":"api/scala/collection/immutable/TreeMap.html#","e":false,"i":"","n":"TreeMap","t":"TreeMap[K, +V] extends AbstractMap[K, V], SortedMap[K, V], StrictOptimizedSortedMapOps[K, V, TreeMap, TreeMap[K, V]], SortedMapFactoryDefaults[K, V, TreeMap, Iterable, Map], DefaultSerializable","d":"scala.collection.immutable","k":"class","x":"An immutable SortedMap whose values are stored in a red-black tree."},
{"l":"api/scala/collection/immutable/TreeMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.TreeMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/TreeMap.html#insert-841","e":false,"i":"","n":"insert","t":"insert[V1 >: V](key: K, value: V1): TreeMap[K, V1]","d":"scala.collection.immutable.TreeMap","k":"def","x":"A new TreeMap with the entry added is returned,\nassuming that key is  in the TreeMap.\n"},
{"l":"api/scala/collection/immutable/TreeMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.TreeMap","k":"def","x":"An scala.collection.Iterator over the elements of this immutable tree map."},
{"l":"api/scala/collection/immutable/TreeMap.html#iteratorFrom-303","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: K): Iterator[(K, V)]","d":"scala.collection.immutable.TreeMap","k":"def","x":"Creates an iterator over all the key/value pairs\ncontained in this map having a key greater than or\nequal to start according to the ordering of\nthis map. x.iteratorFrom(y) is equivalent\nto but often more efficient than x.from(y).iterator.\n"},
{"l":"api/scala/collection/immutable/TreeMap.html#keysIteratorFrom-303","e":false,"i":"","n":"keysIteratorFrom","t":"keysIteratorFrom(start: K): Iterator[K]","d":"scala.collection.immutable.TreeMap","k":"def","x":"Creates an iterator over all the keys(or elements)  contained in this\ncollection greater than or equal to start\naccording to the ordering of this collection. x.keysIteratorFrom(y)\nis equivalent to but often more efficient than\nx.from(y).keysIterator.\n"},
{"l":"api/scala/collection/immutable/TreeMap.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[K]","d":"scala.collection.immutable.TreeMap","k":"val","x":""},
{"l":"api/scala/collection/immutable/TreeMap.html#rangeImpl-ffffff24","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[K], until: Option[K]): TreeMap[K, V]","d":"scala.collection.immutable.TreeMap","k":"def","x":"Creates a ranged projection of this collection. Any mutations in the\nranged projection will update this collection and vice versa."},
{"l":"api/scala/collection/immutable/TreeMap.html#removed-fffff97d","e":false,"i":"","n":"removed","t":"removed(key: K): TreeMap[K, V]","d":"scala.collection.immutable.TreeMap","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/TreeMap.html#<init>-fffff2aa","e":false,"i":"","n":"this","t":"this()(implicit ordering: Ordering[K])","d":"scala.collection.immutable.TreeMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeMap.html#updated-841","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): TreeMap[K, V1]","d":"scala.collection.immutable.TreeMap","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/TreeMap$.html#","e":false,"i":"","n":"TreeMap","t":"TreeMap extends SortedMapFactory[TreeMap]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/TreeMap$.html#empty-fffff2aa","e":false,"i":"","n":"empty","t":"empty[K : Ordering, V]: TreeMap[K, V]","d":"scala.collection.immutable.TreeMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeMap$.html#from-ffffff53","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)])(implicit ordering: Ordering[K]): TreeMap[K, V]","d":"scala.collection.immutable.TreeMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeMap$.html#newBuilder-da0","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V](implicit ordering: Ordering[K]): ReusableBuilder[(K, V), TreeMap[K, V]]","d":"scala.collection.immutable.TreeMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap.html#","e":false,"i":"","n":"TreeSeqMap","t":"TreeSeqMap[K, +V] extends AbstractMap[K, V], SeqMap[K, V], MapOps[K, V, TreeSeqMap, TreeSeqMap[K, V]], StrictOptimizedIterableOps[(K, V), Iterable, TreeSeqMap[K, V]], StrictOptimizedMapOps[K, V, TreeSeqMap, TreeSeqMap[K, V]], MapFactoryDefaults[K, V, TreeSeqMap, Iterable]","d":"scala.collection.immutable","k":"class","x":"This class implements an immutable map that preserves order using\na hash map for the key to value mapping to provide efficient lookup,\nand a tree for the ordering of the keys to provide efficient\ninsertion/modification order traversal and destructuring."},
{"l":"api/scala/collection/immutable/TreeSeqMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/TreeSeqMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":"An scala.collection.Iterator over the elements of this immutable tree seq map."},
{"l":"api/scala/collection/immutable/TreeSeqMap.html#orderedBy-0","e":false,"i":"","n":"orderedBy","t":"orderedBy: OrderBy","d":"scala.collection.immutable.TreeSeqMap","k":"val","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap.html#orderingBy-723","e":false,"i":"","n":"orderingBy","t":"orderingBy(orderBy: OrderBy): TreeSeqMap[K, V]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap.html#refresh-cbc","e":false,"i":"","n":"refresh","t":"refresh(key: K): TreeSeqMap[K, V]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap.html#removed-cbc","e":false,"i":"","n":"removed","t":"removed(key: K): TreeSeqMap[K, V]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/TreeSeqMap.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"scala.collection.immutable.TreeSeqMap","k":"val","x":"The size of this immutable tree seq map."},
{"l":"api/scala/collection/immutable/TreeSeqMap.html#updated-778","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): TreeSeqMap[K, V1]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/TreeSeqMap$.html#","e":false,"i":"","n":"TreeSeqMap","t":"TreeSeqMap extends MapFactory[TreeSeqMap]","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$.html#Empty-0","e":false,"i":"","n":"Empty","t":"Empty: TreeSeqMap[Nothing, Nothing]","d":"scala.collection.immutable.TreeSeqMap","k":"val","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$.html#empty-fffffd7d","e":false,"i":"","n":"empty","t":"empty[K, V]: TreeSeqMap[K, V]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/immutable/TreeSeqMap$.html#empty-5b1","e":false,"i":"","n":"empty","t":"empty[K, V](orderBy: OrderBy): TreeSeqMap[K, V]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$.html#from-c26","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): TreeSeqMap[K, V]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/immutable/TreeSeqMap$.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), TreeSeqMap[K, V]]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/immutable/TreeSeqMap$.html#newBuilder-fffff689","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V](orderedBy: OrderBy): Builder[(K, V), TreeSeqMap[K, V]]","d":"scala.collection.immutable.TreeSeqMap","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Builder.html#","e":false,"i":"","n":"Builder","t":"Builder[K, V](orderedBy: OrderBy) extends Builder[(K, V), TreeSeqMap[K, V]]","d":"scala.collection.immutable.TreeSeqMap","k":"class","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Builder.html#addOne-fffff4c8","e":false,"i":"","n":"addOne","t":"addOne(key: K, value: V): this.type","d":"scala.collection.immutable.TreeSeqMap.Builder","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$OrderBy$.html#","e":false,"i":"","n":"OrderBy","t":"OrderBy","d":"scala.collection.immutable.TreeSeqMap","k":"object","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$OrderBy$$Insertion$.html#","e":false,"i":"","n":"Insertion","t":"Insertion extends OrderBy","d":"scala.collection.immutable.TreeSeqMap.OrderBy","k":"object","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$OrderBy$$Modification$.html#","e":false,"i":"","n":"Modification","t":"Modification extends OrderBy","d":"scala.collection.immutable.TreeSeqMap.OrderBy","k":"object","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$OrderBy.html#","e":false,"i":"","n":"OrderBy","t":"OrderBy","d":"scala.collection.immutable.TreeSeqMap","k":"trait","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#","e":false,"i":"","n":"Ordering","t":"Ordering[+T]","d":"scala.collection.immutable.TreeSeqMap","k":"class","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#append-fffff564","e":false,"i":"","n":"append","t":"append[S >: T](ordinal: Int, value: S): Ordering[S]","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#exclude-626","e":false,"i":"","n":"exclude","t":"exclude(ordinal: Int): Ordering[T]","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#format-0","e":false,"i":"","n":"format","t":"format: String","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#head-0","e":false,"i":"","n":"head","t":"head: T","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#headOption-0","e":false,"i":"","n":"headOption","t":"headOption: Option[T]","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#headTail-0","e":false,"i":"","n":"headTail","t":"headTail: (T, Ordering[T])","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#include-fffff564","e":false,"i":"","n":"include","t":"include[S >: T](ordinal: Int, value: S): Ordering[S]","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#init-0","e":false,"i":"","n":"init","t":"init: Ordering[T]","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#initLast-0","e":false,"i":"","n":"initLast","t":"initLast: (Ordering[T], T)","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[T]","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#last-0","e":false,"i":"","n":"last","t":"last: T","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#lastOption-0","e":false,"i":"","n":"lastOption","t":"lastOption: Option[T]","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#modifyOrRemove-fffff9cc","e":false,"i":"","n":"modifyOrRemove","t":"modifyOrRemove[S](f: (Int, T) => Option[S]): Ordering[S]","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":"A combined transform and filter function. Returns an Ordering such that\nfor each (key, value) mapping in this map, if f(key, value) == None\nthe map contains no mapping for key, and if f(key, value) == Some(x) the\nmap contains (key, x).\n"},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#ordinal-0","e":false,"i":"","n":"ordinal","t":"ordinal: Int","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#splitAt-fffffbd9","e":false,"i":"","n":"splitAt","t":"splitAt(n: Int): (Ordering[T], Ordering[T])","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSeqMap$$Ordering.html#tail-0","e":false,"i":"","n":"tail","t":"tail: Ordering[T]","d":"scala.collection.immutable.TreeSeqMap.Ordering","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSet.html#","e":false,"i":"","n":"TreeSet","t":"TreeSet[A] extends AbstractSet[A], SortedSet[A], SortedSetOps[A, TreeSet, TreeSet[A]], StrictOptimizedSortedSetOps[A, TreeSet, TreeSet[A]], SortedSetFactoryDefaults[A, TreeSet, Set], DefaultSerializable","d":"scala.collection.immutable","k":"class","x":"This class implements immutable sorted sets using a tree.\n"},
{"l":"api/scala/collection/immutable/TreeSet.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.immutable.TreeSet","k":"def","x":"Checks if this set contains element elem.\n"},
{"l":"api/scala/collection/immutable/TreeSet.html#excl-fffff083","e":false,"i":"","n":"excl","t":"excl(elem: A): TreeSet[A]","d":"scala.collection.immutable.TreeSet","k":"def","x":"Creates a new TreeSet with the entry removed.\n"},
{"l":"api/scala/collection/immutable/TreeSet.html#incl-fffff083","e":false,"i":"","n":"incl","t":"incl(elem: A): TreeSet[A]","d":"scala.collection.immutable.TreeSet","k":"def","x":"Creates a new TreeSet with the entry added.\n"},
{"l":"api/scala/collection/immutable/TreeSet.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.immutable.TreeSet","k":"def","x":"An scala.collection.Iterator over the elements of this immutable tree set."},
{"l":"api/scala/collection/immutable/TreeSet.html#iteratorFrom-303","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: A): Iterator[A]","d":"scala.collection.immutable.TreeSet","k":"def","x":"Creates an iterator that contains all values from this collection\ngreater than or equal to start according to the ordering of\nthis collection. x.iteratorFrom(y) is equivalent to but will usually\nbe more efficient than x.from(y).iterator\n"},
{"l":"api/scala/collection/immutable/TreeSet.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[A]","d":"scala.collection.immutable.TreeSet","k":"val","x":""},
{"l":"api/scala/collection/immutable/TreeSet.html#rangeImpl-fffff62a","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[A], until: Option[A]): TreeSet[A]","d":"scala.collection.immutable.TreeSet","k":"def","x":"Creates a ranged projection of this collection. Any mutations in the\nranged projection will update this collection and vice versa."},
{"l":"api/scala/collection/immutable/TreeSet.html#<init>-fffffb11","e":false,"i":"","n":"this","t":"this()(implicit ordering: Ordering[A])","d":"scala.collection.immutable.TreeSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSet$.html#","e":false,"i":"","n":"TreeSet","t":"TreeSet extends SortedIterableFactory[TreeSet]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/TreeSet$.html#empty-fffffb11","e":false,"i":"","n":"empty","t":"empty[A : Ordering]: TreeSet[A]","d":"scala.collection.immutable.TreeSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSet$.html#from-c98","e":false,"i":"","n":"from","t":"from[E](it: IterableOnce[E])(implicit ordering: Ordering[E]): TreeSet[E]","d":"scala.collection.immutable.TreeSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/TreeSet$.html#newBuilder-241","e":false,"i":"","n":"newBuilder","t":"newBuilder[A](implicit ordering: Ordering[A]): ReusableBuilder[A, TreeSet[A]]","d":"scala.collection.immutable.TreeSet","k":"def","x":""},
{"l":"api/scala/collection/immutable/Vector$.html#","e":false,"i":"","n":"Vector","t":"Vector extends StrictOptimizedSeqFactory[Vector]","d":"scala.collection.immutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/immutable/Vector$.html#empty-9e6","e":false,"i":"","n":"empty","t":"empty[A]: Vector[A]","d":"scala.collection.immutable.Vector","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/immutable/Vector$.html#from-fffff4ed","e":false,"i":"","n":"from","t":"from[E](it: IterableOnce[E]): Vector[E]","d":"scala.collection.immutable.Vector","k":"def","x":"Creates a target vector from an existing source collection\n"},
{"l":"api/scala/collection/immutable/Vector$.html#newBuilder-fffffad1","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: ReusableBuilder[A, Vector[A]]","d":"scala.collection.immutable.Vector","k":"def","x":""},
{"l":"api/scala/collection/immutable/Vector.html#","e":false,"i":"","n":"Vector","t":"Vector[+A] extends AbstractSeq[A], IndexedSeq[A], IndexedSeqOps[A, Vector, Vector[A]], StrictOptimizedSeqOps[A, Vector, Vector[A]], IterableFactoryDefaults[A, Vector], DefaultSerializable","d":"scala.collection.immutable","k":"class","x":"Vector is a general-purpose, immutable data structure.  It provides random access and updates\nin O(log n) time, as well as very fast append/prepend/tail/init (amortized O(1), worst case O(log n)).\nBecause vectors strike a good balance between fast random selections and fast random functional updates,\nthey are currently the default implementation of immutable indexed sequences."},
{"l":"api/scala/collection/immutable/VectorBuilder.html#","e":false,"i":"","n":"VectorBuilder","t":"VectorBuilder[A] extends ReusableBuilder[A, Vector[A]]","d":"scala.collection.immutable","k":"class","x":""},
{"l":"api/scala/collection/immutable/VectorBuilder.html#addOne-e37","e":false,"i":"","n":"addOne","t":"addOne(elem: A): this.type","d":"scala.collection.immutable.VectorBuilder","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/immutable/VectorBuilder.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.immutable.VectorBuilder","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method, the builder will contain no elements."},
{"l":"api/scala/collection/immutable/VectorBuilder.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.collection.immutable.VectorBuilder","k":"def","x":""},
{"l":"api/scala/collection/immutable/VectorBuilder.html#nonEmpty-0","e":false,"i":"","n":"nonEmpty","t":"nonEmpty: Boolean","d":"scala.collection.immutable.VectorBuilder","k":"def","x":""},
{"l":"api/scala/collection/immutable/VectorBuilder.html#result-fffffff7","e":false,"i":"","n":"result","t":"result(): Vector[A]","d":"scala.collection.immutable.VectorBuilder","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/immutable/VectorBuilder.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"scala.collection.immutable.VectorBuilder","k":"def","x":""},
{"l":"api/scala/collection/immutable/VectorMap.html#","e":false,"i":"","n":"VectorMap","t":"VectorMap[K, +V] extends AbstractMap[K, V], SeqMap[K, V], StrictOptimizedMapOps[K, V, VectorMap, VectorMap[K, V]], MapFactoryDefaults[K, V, VectorMap, Iterable]","d":"scala.collection.immutable","k":"class","x":"This class implements immutable maps using a vector/map-based data structure, which preserves insertion order."},
{"l":"api/scala/collection/immutable/VectorMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.immutable.VectorMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/immutable/VectorMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.immutable.VectorMap","k":"def","x":"An scala.collection.Iterator over the elements of this immutable vector map."},
{"l":"api/scala/collection/immutable/VectorMap.html#removed-fffff1f8","e":false,"i":"","n":"removed","t":"removed(key: K): VectorMap[K, V]","d":"scala.collection.immutable.VectorMap","k":"def","x":"Removes a key from this map, returning a new map.\n"},
{"l":"api/scala/collection/immutable/VectorMap.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"scala.collection.immutable.VectorMap","k":"val","x":"The size of this immutable vector map."},
{"l":"api/scala/collection/immutable/VectorMap.html#updated-fbc","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): VectorMap[K, V1]","d":"scala.collection.immutable.VectorMap","k":"def","x":"Creates a new map obtained by updating this map with a given key/value pair."},
{"l":"api/scala/collection/immutable/VectorMap$.html#","e":false,"i":"","n":"VectorMap","t":"VectorMap extends MapFactory[VectorMap]","d":"scala.collection.immutable","k":"object","x":""},
{"l":"api/scala/collection/immutable/VectorMap$.html#empty-517","e":false,"i":"","n":"empty","t":"empty[K, V]: VectorMap[K, V]","d":"scala.collection.immutable.VectorMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/immutable/VectorMap$.html#from-d4e","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): VectorMap[K, V]","d":"scala.collection.immutable.VectorMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/immutable/VectorMap$.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), VectorMap[K, V]]","d":"scala.collection.immutable.VectorMap","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/immutable/WrappedString.html#","e":false,"i":"","n":"WrappedString","t":"WrappedString(self: String) extends AbstractSeq[Char], IndexedSeq[Char], IndexedSeqOps[Char, IndexedSeq, WrappedString], Serializable","d":"scala.collection.immutable","k":"class","x":"This class serves as a wrapper augmenting Strings with all the operations\nfound in indexed sequences."},
{"l":"api/scala/collection/immutable/WrappedString.html#apply-fffffd85","e":false,"i":"","n":"apply","t":"apply(i: Int): Char","d":"scala.collection.immutable.WrappedString","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/immutable/WrappedString$.html#","e":false,"i":"","n":"WrappedString","t":"WrappedString extends SpecificIterableFactory[Char, WrappedString]","d":"scala.collection.immutable","k":"object","x":"A companion object for wrapped strings.\n"},
{"l":"api/scala/collection/immutable/WrappedString$.html#UnwrapOp-584","e":false,"i":"","n":"UnwrapOp","t":"UnwrapOp(value: WrappedString): UnwrapOp","d":"scala.collection.immutable.WrappedString","k":"def","x":""},
{"l":"api/scala/collection/immutable/WrappedString$.html#empty-0","e":false,"i":"","n":"empty","t":"empty: WrappedString","d":"scala.collection.immutable.WrappedString","k":"val","x":""},
{"l":"api/scala/collection/immutable/WrappedString$.html#fromSpecific-39d","e":false,"i":"","n":"fromSpecific","t":"fromSpecific(it: IterableOnce[Char]): WrappedString","d":"scala.collection.immutable.WrappedString","k":"def","x":""},
{"l":"api/scala/collection/immutable/WrappedString$.html#newBuilder-0","e":false,"i":"","n":"newBuilder","t":"newBuilder: Builder[Char, WrappedString]","d":"scala.collection.immutable.WrappedString","k":"def","x":"Get a Builder for the collection. For non-strict collection types this will use an intermediate buffer.\nBuilding collections with fromSpecific is preferred because it can be lazy for lazy collections."},
{"l":"api/scala/collection/immutable/WrappedString$$UnwrapOp.html#","e":false,"i":"","n":"UnwrapOp","t":"UnwrapOp(value: WrappedString) extends AnyVal","d":"scala.collection.immutable.WrappedString","k":"class","x":""},
{"l":"api/scala/collection/immutable/WrappedString$$UnwrapOp.html#unwrap-0","e":false,"i":"","n":"unwrap","t":"unwrap: String","d":"scala.collection.immutable.WrappedString.UnwrapOp","k":"def","x":""},
{"l":"api/scala/collection/mutable.html#","e":false,"i":"","n":"scala.collection.mutable","t":"scala.collection.mutable","d":"","k":"package","x":""},
{"l":"api/scala/collection/mutable.html#ArrayStack-0","e":false,"i":"","n":"ArrayStack","t":"ArrayStack[X] = Stack[X]","d":"scala.collection.mutable","k":"type","x":""},
{"l":"api/scala/collection/mutable.html#ArrayStack-0","e":false,"i":"","n":"ArrayStack","t":"ArrayStack: Stack.type","d":"scala.collection.mutable","k":"val","x":""},
{"l":"api/scala/collection/mutable.html#GrowingBuilder-0","e":false,"i":"","n":"GrowingBuilder","t":"GrowingBuilder[Elem, To <: Growable[Elem]] = GrowableBuilder[Elem, To]","d":"scala.collection.mutable","k":"type","x":""},
{"l":"api/scala/collection/mutable.html#IndexedOptimizedBuffer-0","e":false,"i":"","n":"IndexedOptimizedBuffer","t":"IndexedOptimizedBuffer[A] = IndexedBuffer[A]","d":"scala.collection.mutable","k":"type","x":""},
{"l":"api/scala/collection/mutable.html#IndexedOptimizedSeq-0","e":false,"i":"","n":"IndexedOptimizedSeq","t":"IndexedOptimizedSeq[A] = IndexedSeq[A]","d":"scala.collection.mutable","k":"type","x":""},
{"l":"api/scala/collection/mutable.html#LinearSeq-0","e":false,"i":"","n":"LinearSeq","t":"LinearSeq[X] = Seq[X] & LinearSeq[X]","d":"scala.collection.mutable","k":"type","x":""},
{"l":"api/scala/collection/mutable.html#Traversable-0","e":false,"i":"","n":"Traversable","t":"Traversable[X] = Iterable[X]","d":"scala.collection.mutable","k":"type","x":""},
{"l":"api/scala/collection/mutable.html#Traversable-0","e":false,"i":"","n":"Traversable","t":"Traversable: Iterable.type","d":"scala.collection.mutable","k":"val","x":""},
{"l":"api/scala/collection/mutable.html#WrappedArray-0","e":false,"i":"","n":"WrappedArray","t":"WrappedArray[X] = ArraySeq[X]","d":"scala.collection.mutable","k":"type","x":""},
{"l":"api/scala/collection/mutable.html#WrappedArray-0","e":false,"i":"","n":"WrappedArray","t":"WrappedArray: ArraySeq.type","d":"scala.collection.mutable","k":"val","x":""},
{"l":"api/scala/collection/mutable/AbstractBuffer.html#","e":false,"i":"","n":"AbstractBuffer","t":"AbstractBuffer[A] extends AbstractSeq[A], Buffer[A]","d":"scala.collection.mutable","k":"class","x":"Explicit instantiation of the Buffer trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/mutable/AbstractIterable.html#","e":false,"i":"","n":"AbstractIterable","t":"AbstractIterable[A] extends AbstractIterable[A], Iterable[A]","d":"scala.collection.mutable","k":"class","x":"Explicit instantiation of the Iterable trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/mutable/AbstractMap.html#","e":false,"i":"","n":"AbstractMap","t":"AbstractMap[K, V] extends AbstractMap[K, V], Map[K, V]","d":"scala.collection.mutable","k":"class","x":"Explicit instantiation of the Map trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/mutable/AbstractSeq.html#","e":false,"i":"","n":"AbstractSeq","t":"AbstractSeq[A] extends AbstractSeq[A], Seq[A]","d":"scala.collection.mutable","k":"class","x":"Explicit instantiation of the Seq trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/mutable/AbstractSet.html#","e":false,"i":"","n":"AbstractSet","t":"AbstractSet[A] extends AbstractSet[A], Set[A]","d":"scala.collection.mutable","k":"class","x":"Explicit instantiation of the Set trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#","e":false,"i":"","n":"AnyRefMap","t":"AnyRefMap[K <: AnyRef, V] extends AbstractMap[K, V], MapOps[K, V, Map, AnyRefMap[K, V]], StrictOptimizedIterableOps[(K, V), Iterable, AnyRefMap[K, V]], Serializable","d":"scala.collection.mutable","k":"class","x":"This class implements mutable maps with AnyRef keys based on a hash table with open addressing."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#+=-fffffbeb","e":false,"i":"","n":"+=","t":"+=(key: K, value: V): this.type","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Adds a new key/value pair to this map and returns the map."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#addOne-fffffbeb","e":false,"i":"","n":"addOne","t":"addOne(key: K, value: V): this.type","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Adds a new key/value pair to this map and returns the map."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#collect-18b","e":false,"i":"","n":"collect","t":"collect[K2 <: AnyRef, V2](pf: PartialFunction[(K, V), (K2, V2)])(implicit dummy: DummyImplicit): AnyRefMap[K2, V2]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"An overload of collect which produces an AnyRefMap.\n"},
{"l":"api/scala/collection/mutable/AnyRefMap.html#flatMap-a2b","e":false,"i":"","n":"flatMap","t":"flatMap[K2 <: AnyRef, V2](f: ((K, V)) => IterableOnce[(K2, V2)])(implicit dummy: DummyImplicit): AnyRefMap[K2, V2]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"An overload of flatMap which produces an AnyRefMap.\n"},
{"l":"api/scala/collection/mutable/AnyRefMap.html#foreachKey-58c","e":false,"i":"","n":"foreachKey","t":"foreachKey[A](f: K => A): Unit","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Applies a function to all keys of this map."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#foreachValue-58c","e":false,"i":"","n":"foreachValue","t":"foreachValue[A](f: V => A): Unit","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Applies a function to all values of this map."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#getOrNull-d26","e":false,"i":"","n":"getOrNull","t":"getOrNull(key: K): V","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Retrieves the value associated with a key, or the default for that type if none exists\n(null for AnyRef, 0 for floats and integers)."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"An scala.collection.Iterator over the elements of this mutable map."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#map-a2b","e":false,"i":"","n":"map","t":"map[K2 <: AnyRef, V2](f: ((K, V)) => (K2, V2))(implicit dummy: DummyImplicit): AnyRefMap[K2, V2]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"An overload of map which produces an AnyRefMap.\n"},
{"l":"api/scala/collection/mutable/AnyRefMap.html#mapValuesNow-485","e":false,"i":"","n":"mapValuesNow","t":"mapValuesNow[V1](f: V => V1): AnyRefMap[K, V1]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new AnyRefMap with different values.\nUnlike mapValues, this method generates a new\ncollection immediately.\n"},
{"l":"api/scala/collection/mutable/AnyRefMap.html#repack-94c","e":false,"i":"","n":"repack","t":"repack(): Unit","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Repacks the contents of this AnyRefMap for maximum efficiency of lookup."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#subtractOne-fffffd18","e":false,"i":"","n":"subtractOne","t":"subtractOne(key: K): this.type","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Removes a single element from this mutable map.\n"},
{"l":"api/scala/collection/mutable/AnyRefMap.html#<init>-fffffbf7","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.mutable.AnyRefMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/AnyRefMap.html#<init>-fffffaa4","e":false,"i":"","n":"this","t":"this(defaultEntry: K => V)","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new AnyRefMap that returns default values according to a supplied key-value mapping."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#<init>-fffff23a","e":false,"i":"","n":"this","t":"this(initialBufferSize: Int)","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new AnyRefMap with an initial buffer of specified size."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#<init>-62d","e":false,"i":"","n":"this","t":"this(defaultEntry: K => V, initialBufferSize: Int)","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new AnyRefMap with specified default values and initial buffer size."},
{"l":"api/scala/collection/mutable/AnyRefMap.html#transformValues-fffff896","e":false,"i":"","n":"transformValues","t":"transformValues(f: V => V): this.type","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Applies a transformation function to all values stored in this map.\nNote: the default, if any,  is not transformed.\n"},
{"l":"api/scala/collection/mutable/AnyRefMap.html#transformValuesInPlace-fffff896","e":false,"i":"","n":"transformValuesInPlace","t":"transformValuesInPlace(f: V => V): this.type","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Applies a transformation function to all values stored in this map.\nNote: the default, if any,  is not transformed.\n"},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#","e":false,"i":"","n":"AnyRefMap","t":"AnyRefMap","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#apply-7e2","e":false,"i":"","n":"apply","t":"apply[K <: AnyRef, V](elems: (K, V)*): AnyRefMap[K, V]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new AnyRefMap with zero or more key/value pairs."},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#buildFromAnyRefMap-122","e":false,"i":"","n":"buildFromAnyRefMap","t":"buildFromAnyRefMap[K <: AnyRef, V]: BuildFrom[AnyRefMap[_, _], (K, V), AnyRefMap[K, V]]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#empty-fffffbf7","e":false,"i":"","n":"empty","t":"empty[K <: AnyRef, V]: AnyRefMap[K, V]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new empty AnyRefMap."},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#from-5ee","e":false,"i":"","n":"from","t":"from[K <: AnyRef, V](source: IterableOnce[(K, V)]): AnyRefMap[K, V]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new AnyRefMap from an existing source collection. A source collection\nwhich is already an AnyRefMap gets cloned.\n"},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#fromZip-fffff93f","e":false,"i":"","n":"fromZip","t":"fromZip[K <: AnyRef, V](keys: Array[K], values: Array[V]): AnyRefMap[K, V]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new AnyRefMap from arrays of keys and values.\nEquivalent to but more efficient than AnyRefMap((keys zip values): _*).\n"},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#fromZip-ffffffb7","e":false,"i":"","n":"fromZip","t":"fromZip[K <: AnyRef, V](keys: Iterable[K], values: Iterable[V]): AnyRefMap[K, V]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new AnyRefMap from keys and values.\nEquivalent to but more efficient than AnyRefMap((keys zip values): _*).\n"},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#iterableFactory-974","e":false,"i":"","n":"iterableFactory","t":"iterableFactory[K <: AnyRef, V]: Factory[(K, V), AnyRefMap[K, V]]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#newBuilder-5d2","e":false,"i":"","n":"newBuilder","t":"newBuilder[K <: AnyRef, V]: ReusableBuilder[(K, V), AnyRefMap[K, V]]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#toBuildFrom-83d","e":false,"i":"","n":"toBuildFrom","t":"toBuildFrom[K <: AnyRef, V](factory: AnyRefMap.type): BuildFrom[Any, (K, V), AnyRefMap[K, V]]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#toFactory-fffffb4f","e":false,"i":"","n":"toFactory","t":"toFactory[K <: AnyRef, V](dummy: AnyRefMap.type): Factory[(K, V), AnyRefMap[K, V]]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/AnyRefMap$.html#withDefault-fffffaa4","e":false,"i":"","n":"withDefault","t":"withDefault[K <: AnyRef, V](default: K => V): AnyRefMap[K, V]","d":"scala.collection.mutable.AnyRefMap","k":"def","x":"Creates a new empty AnyRefMap with the supplied default"},
{"l":"api/scala/collection/mutable/AnyRefMap$$AnyRefMapBuilder.html#","e":false,"i":"","n":"AnyRefMapBuilder","t":"AnyRefMapBuilder[K <: AnyRef, V] extends ReusableBuilder[(K, V), AnyRefMap[K, V]]","d":"scala.collection.mutable.AnyRefMap","k":"class","x":"A builder for instances of AnyRefMap."},
{"l":"api/scala/collection/mutable/AnyRefMap$$AnyRefMapBuilder.html#addOne-e7","e":false,"i":"","n":"addOne","t":"addOne(entry: (K, V)): this.type","d":"scala.collection.mutable.AnyRefMap.AnyRefMapBuilder","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/AnyRefMap$$AnyRefMapBuilder.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.AnyRefMap.AnyRefMapBuilder","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method, the builder will contain no elements."},
{"l":"api/scala/collection/mutable/AnyRefMap$$AnyRefMapBuilder.html#result-fffff845","e":false,"i":"","n":"result","t":"result(): AnyRefMap[K, V]","d":"scala.collection.mutable.AnyRefMap.AnyRefMapBuilder","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#","e":false,"i":"","n":"ArrayBuffer","t":"ArrayBuffer[A] extends AbstractBuffer[A], IndexedBuffer[A], IndexedSeqOps[A, ArrayBuffer, ArrayBuffer[A]], StrictOptimizedSeqOps[A, ArrayBuffer, ArrayBuffer[A]], IterableFactoryDefaults[A, ArrayBuffer], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"An implementation of the Buffer class using an array to\nrepresent the assembled sequence internally. Append, update and random\naccess take constant time (amortized time). Prepends and removes are\nlinear in the buffer size.\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#addOne-fffff77c","e":false,"i":"","n":"addOne","t":"addOne(elem: A): this.type","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Adds a single element to this array buffer.\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(n: Int): A","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Note: This does not actually resize the internal representation.\nSee clearAndShrink if you want to also resize internally\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#clearAndShrink-310","e":false,"i":"","n":"clearAndShrink","t":"clearAndShrink(size: Int): this.type","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Clears this buffer and shrinks to @param size (rounding up to the next\nnatural size)"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#insert-386","e":false,"i":"","n":"insert","t":"insert(index: Int, elem: A): Unit","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Inserts a new element at a given index into this buffer.\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#insertAll-fffff960","e":false,"i":"","n":"insertAll","t":"insertAll(index: Int, elems: IterableOnce[A]): Unit","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Inserts new elements at the index idx. Opposed to method\nupdate, this method will not replace an element with a new\none. Instead, it will insert a new element at index idx.\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"The length (number of elements) of the array buffer. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#mapResult-34b","e":false,"i":"","n":"mapResult","t":"mapResult[NewTo](f: ArrayBuffer[A] => NewTo): Builder[A, NewTo]","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#prepend-fffff77c","e":false,"i":"","n":"prepend","t":"prepend(elem: A): this.type","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Prepends a single element at the front of this array buffer.\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#remove-aba","e":false,"i":"","n":"remove","t":"remove(index: Int): A","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Note: This does not actually resize the internal representation.\nSee trimToSize if you want to also resize internally\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#remove-d2c","e":false,"i":"","n":"remove","t":"remove(index: Int, count: Int): Unit","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Note: This does not actually resize the internal representation.\nSee trimToSize if you want to also resize internally\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#result-b69","e":false,"i":"","n":"result","t":"result(): this.type","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#sizeHint-fffff3b3","e":false,"i":"","n":"sizeHint","t":"sizeHint(size: Int): Unit","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Uses the given size to resize internal storage, if necessary.\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#<init>-71a","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#<init>-fffffe7f","e":false,"i":"","n":"this","t":"this(initialSize: Int)","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#trimToSize-94c","e":false,"i":"","n":"trimToSize","t":"trimToSize(): Unit","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Trims the ArrayBuffer to an appropriate size for the current\nnumber of elements (rounding up to the next natural size),\nwhich may replace the array by a shorter one.\nThis allows releasing some unused memory.\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer.html#update-386","e":false,"i":"","n":"update","t":"update(index: Int, elem: A): Unit","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer$.html#","e":false,"i":"","n":"ArrayBuffer","t":"ArrayBuffer extends StrictOptimizedSeqFactory[ArrayBuffer]","d":"scala.collection.mutable","k":"object","x":"Factory object for the ArrayBuffer class."},
{"l":"api/scala/collection/mutable/ArrayBuffer$.html#DefaultInitialSize-0","e":false,"i":"","n":"DefaultInitialSize","t":"DefaultInitialSize: 16","d":"scala.collection.mutable.ArrayBuffer","k":"val","x":""},
{"l":"api/scala/collection/mutable/ArrayBuffer$.html#empty-71a","e":false,"i":"","n":"empty","t":"empty[A]: ArrayBuffer[A]","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/mutable/ArrayBuffer$.html#from-fffffab3","e":false,"i":"","n":"from","t":"from[B](coll: IterableOnce[B]): ArrayBuffer[B]","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":"Creates a target array buffer from an existing source collection\n"},
{"l":"api/scala/collection/mutable/ArrayBuffer$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, ArrayBuffer[A]]","d":"scala.collection.mutable.ArrayBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayBufferView.html#","e":false,"i":"","n":"ArrayBufferView","t":"ArrayBufferView[A] extends AbstractIndexedSeqView[A]","d":"scala.collection.mutable","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArrayBufferView.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(n: Int): A","d":"scala.collection.mutable.ArrayBufferView","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArrayBufferView.html#array-0","e":false,"i":"","n":"array","t":"array: Array[AnyRef]","d":"scala.collection.mutable.ArrayBufferView","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayBufferView.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArrayBufferView","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArrayBufferView.html#<init>-6f","e":false,"i":"","n":"this","t":"this(array: Array[AnyRef], length: Int)","d":"scala.collection.mutable.ArrayBufferView","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayBuilder.html#","e":false,"i":"","n":"ArrayBuilder","t":"ArrayBuilder[T] extends ReusableBuilder[T, Array[T]], Serializable","d":"scala.collection.mutable","k":"class","x":"A builder class for arrays.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder.html#addAll-3df","e":false,"i":"","n":"addAll","t":"addAll(xs: Array[_ <: T]): this.type","d":"scala.collection.mutable.ArrayBuilder","k":"def","x":"Add all elements of an array."},
{"l":"api/scala/collection/mutable/ArrayBuilder.html#addAll-fffffabf","e":false,"i":"","n":"addAll","t":"addAll(xs: Array[_ <: T], offset: Int, length: Int): this.type","d":"scala.collection.mutable.ArrayBuilder","k":"def","x":"Add a slice of an array."},
{"l":"api/scala/collection/mutable/ArrayBuilder.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.ArrayBuilder","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method, the builder will contain no elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArrayBuilder","k":"def","x":"Current number of elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$.html#","e":false,"i":"","n":"ArrayBuilder","t":"ArrayBuilder","d":"scala.collection.mutable","k":"object","x":"A companion object for array builders.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$.html#make-fffff8c6","e":false,"i":"","n":"make","t":"make[T : ClassTag]: ArrayBuilder[T]","d":"scala.collection.mutable.ArrayBuilder","k":"def","x":"Creates a new arraybuilder of type T.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofBoolean.html#","e":false,"i":"","n":"ofBoolean","t":"ofBoolean extends ArrayBuilder[Boolean]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of booleans. It can be reused."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofBoolean.html#addOne-795","e":false,"i":"","n":"addOne","t":"addOne(elem: Boolean): this.type","d":"scala.collection.mutable.ArrayBuilder.ofBoolean","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofBoolean.html#result-fffffac2","e":false,"i":"","n":"result","t":"result(): Array[Boolean]","d":"scala.collection.mutable.ArrayBuilder.ofBoolean","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofByte.html#","e":false,"i":"","n":"ofByte","t":"ofByte extends ArrayBuilder[Byte]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of bytes. It can be reused."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofByte.html#addOne-fffff14b","e":false,"i":"","n":"addOne","t":"addOne(elem: Byte): this.type","d":"scala.collection.mutable.ArrayBuilder.ofByte","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofByte.html#result-832","e":false,"i":"","n":"result","t":"result(): Array[Byte]","d":"scala.collection.mutable.ArrayBuilder.ofByte","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofChar.html#","e":false,"i":"","n":"ofChar","t":"ofChar extends ArrayBuilder[Char]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of chars. It can be reused."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofChar.html#addOne-fffff80b","e":false,"i":"","n":"addOne","t":"addOne(elem: Char): this.type","d":"scala.collection.mutable.ArrayBuilder.ofChar","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofChar.html#result-f00","e":false,"i":"","n":"result","t":"result(): Array[Char]","d":"scala.collection.mutable.ArrayBuilder.ofChar","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofDouble.html#","e":false,"i":"","n":"ofDouble","t":"ofDouble extends ArrayBuilder[Double]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of doubles. It can be reused."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofDouble.html#addOne-76b","e":false,"i":"","n":"addOne","t":"addOne(elem: Double): this.type","d":"scala.collection.mutable.ArrayBuilder.ofDouble","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofDouble.html#result-fffff2bb","e":false,"i":"","n":"result","t":"result(): Array[Double]","d":"scala.collection.mutable.ArrayBuilder.ofDouble","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofFloat.html#","e":false,"i":"","n":"ofFloat","t":"ofFloat extends ArrayBuilder[Float]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of floats. It can be reused."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofFloat.html#addOne-fffffe3d","e":false,"i":"","n":"addOne","t":"addOne(elem: Float): this.type","d":"scala.collection.mutable.ArrayBuilder.ofFloat","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofFloat.html#result-fffff1f6","e":false,"i":"","n":"result","t":"result(): Array[Float]","d":"scala.collection.mutable.ArrayBuilder.ofFloat","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofInt.html#","e":false,"i":"","n":"ofInt","t":"ofInt extends ArrayBuilder[Int]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of ints. It can be reused."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofInt.html#addOne-fffffb23","e":false,"i":"","n":"addOne","t":"addOne(elem: Int): this.type","d":"scala.collection.mutable.ArrayBuilder.ofInt","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofInt.html#result-fffffcc9","e":false,"i":"","n":"result","t":"result(): Array[Int]","d":"scala.collection.mutable.ArrayBuilder.ofInt","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofLong.html#","e":false,"i":"","n":"ofLong","t":"ofLong extends ArrayBuilder[Long]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of longs. It can be reused."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofLong.html#addOne-dcb","e":false,"i":"","n":"addOne","t":"addOne(elem: Long): this.type","d":"scala.collection.mutable.ArrayBuilder.ofLong","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofLong.html#result-fffff0a6","e":false,"i":"","n":"result","t":"result(): Array[Long]","d":"scala.collection.mutable.ArrayBuilder.ofLong","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofRef.html#","e":false,"i":"","n":"ofRef","t":"ofRef[T <: AnyRef](implicit ct: ClassTag[T]) extends ArrayBuilder[T]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of reference types."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofRef.html#addOne-fffff433","e":false,"i":"","n":"addOne","t":"addOne(elem: T): this.type","d":"scala.collection.mutable.ArrayBuilder.ofRef","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofRef.html#result-c35","e":false,"i":"","n":"result","t":"result(): Array[T]","d":"scala.collection.mutable.ArrayBuilder.ofRef","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofShort.html#","e":false,"i":"","n":"ofShort","t":"ofShort extends ArrayBuilder[Short]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of shorts. It can be reused."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofShort.html#addOne-a7d","e":false,"i":"","n":"addOne","t":"addOne(elem: Short): this.type","d":"scala.collection.mutable.ArrayBuilder.ofShort","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofShort.html#result-c16","e":false,"i":"","n":"result","t":"result(): Array[Short]","d":"scala.collection.mutable.ArrayBuilder.ofShort","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofUnit.html#","e":false,"i":"","n":"ofUnit","t":"ofUnit extends ArrayBuilder[Unit]","d":"scala.collection.mutable.ArrayBuilder","k":"class","x":"A class for array builders for arrays of Unit type. It can be reused."},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofUnit.html#addOne-7a7","e":false,"i":"","n":"addOne","t":"addOne(elem: Unit): this.type","d":"scala.collection.mutable.ArrayBuilder.ofUnit","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/ArrayBuilder$$ofUnit.html#result-fffff652","e":false,"i":"","n":"result","t":"result(): Array[Unit]","d":"scala.collection.mutable.ArrayBuilder.ofUnit","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ArrayDeque.html#","e":false,"i":"","n":"ArrayDeque","t":"ArrayDeque[A] extends AbstractBuffer[A], IndexedBuffer[A], IndexedSeqOps[A, ArrayDeque, ArrayDeque[A]], StrictOptimizedSeqOps[A, ArrayDeque, ArrayDeque[A]], IterableFactoryDefaults[A, ArrayDeque], ArrayDequeOps[A, ArrayDeque, ArrayDeque[A]], Cloneable[ArrayDeque[A]], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"An implementation of a double-ended queue that internally uses a resizable circular buffer."},
{"l":"api/scala/collection/mutable/ArrayDeque.html#addOne-fffff3e4","e":false,"i":"","n":"addOne","t":"addOne(elem: A): this.type","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Adds a single element to this array deque.\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): A","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArrayDeque.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Note: This does not actually resize the internal representation.\nSee clearAndShrink if you want to also resize internally\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#clearAndShrink-fffff5d0","e":false,"i":"","n":"clearAndShrink","t":"clearAndShrink(size: Int): this.type","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Clears this buffer and shrinks to @param size\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#ensureSize-fffff3b3","e":false,"i":"","n":"ensureSize","t":"ensureSize(hint: Int): Unit","d":"scala.collection.mutable.ArrayDeque","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayDeque.html#insert-386","e":false,"i":"","n":"insert","t":"insert(idx: Int, elem: A): Unit","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Inserts a new element at a given index into this buffer.\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#insertAll-fffff960","e":false,"i":"","n":"insertAll","t":"insertAll(idx: Int, elems: IterableOnce[A]): Unit","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Inserts new elements at the index idx. Opposed to method\nupdate, this method will not replace an element with a new\none. Instead, it will insert a new element at index idx.\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"The length (number of elements) of the array deque. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArrayDeque.html#prepend-fffff3e4","e":false,"i":"","n":"prepend","t":"prepend(elem: A): this.type","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Prepends a single element at the front of this array deque.\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#remove-d2c","e":false,"i":"","n":"remove","t":"remove(idx: Int, count: Int): Unit","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Removes the element on a given index position. It takes time linear in\nthe buffer size.\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#remove-aba","e":false,"i":"","n":"remove","t":"remove(idx: Int): A","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Removes the element at a given index position.\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeAll-fffffa2b","e":false,"i":"","n":"removeAll","t":"removeAll(): Seq[A]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Remove all elements from this collection and return the elements while emptying this data structure"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeAll-fffffafc","e":false,"i":"","n":"removeAll","t":"removeAll(p: A => Boolean): Seq[A]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Returns all elements in this collection which satisfy the given predicate\nand removes those elements from this collections.\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeAllReverse-fffffa2b","e":false,"i":"","n":"removeAllReverse","t":"removeAllReverse(): Seq[A]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Remove all elements from this collection and return the elements in reverse while emptying this data structure"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeFirst-fffff2f3","e":false,"i":"","n":"removeFirst","t":"removeFirst(p: A => Boolean, from: Int): Option[A]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Returns the first element which satisfies the given predicate after or at some start index\nand removes this element from the collections\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeHead-fffff0f3","e":false,"i":"","n":"removeHead","t":"removeHead(resizeInternalRepr: Boolean): A","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Unsafely remove the first element (throws exception when empty)\nSee also removeHeadOption()\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeHeadOption-fffffd9d","e":false,"i":"","n":"removeHeadOption","t":"removeHeadOption(resizeInternalRepr: Boolean): Option[A]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeHeadWhile-fffffafc","e":false,"i":"","n":"removeHeadWhile","t":"removeHeadWhile(f: A => Boolean): Seq[A]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Returns and removes all elements from the left of this queue which satisfy the given predicate\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeLast-fffff0f3","e":false,"i":"","n":"removeLast","t":"removeLast(resizeInternalRepr: Boolean): A","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Unsafely remove the last element (throws exception when empty)\nSee also removeLastOption()\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeLastOption-fffffd9d","e":false,"i":"","n":"removeLastOption","t":"removeLastOption(resizeInternalRepr: Boolean): Option[A]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayDeque.html#removeLastWhile-fffffafc","e":false,"i":"","n":"removeLastWhile","t":"removeLastWhile(f: A => Boolean): Seq[A]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Returns and removes all elements from the right of this queue which satisfy the given predicate\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#<init>-fffff081","e":false,"i":"","n":"this","t":"this(initialSize: Int)","d":"scala.collection.mutable.ArrayDeque","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayDeque.html#trimToSize-94c","e":false,"i":"","n":"trimToSize","t":"trimToSize(): Unit","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Trims the capacity of this ArrayDeque's instance to be the current size\n"},
{"l":"api/scala/collection/mutable/ArrayDeque.html#update-386","e":false,"i":"","n":"update","t":"update(idx: Int, elem: A): Unit","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/collection/mutable/ArrayDeque$.html#","e":false,"i":"","n":"ArrayDeque","t":"ArrayDeque extends StrictOptimizedSeqFactory[ArrayDeque]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/ArrayDeque$.html#DefaultInitialSize-0","e":false,"i":"","n":"DefaultInitialSize","t":"DefaultInitialSize: 16","d":"scala.collection.mutable.ArrayDeque","k":"val","x":""},
{"l":"api/scala/collection/mutable/ArrayDeque$.html#empty-fffff886","e":false,"i":"","n":"empty","t":"empty[A]: ArrayDeque[A]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/mutable/ArrayDeque$.html#from-fffffdcd","e":false,"i":"","n":"from","t":"from[B](coll: IterableOnce[B]): ArrayDeque[B]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":"Creates a target array deque from an existing source collection\n"},
{"l":"api/scala/collection/mutable/ArrayDeque$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, ArrayDeque[A]]","d":"scala.collection.mutable.ArrayDeque","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayDequeOps.html#","e":false,"i":"","n":"ArrayDequeOps","t":"ArrayDequeOps[A, +CC[_], +C <: AnyRef] extends StrictOptimizedSeqOps[A, CC, C]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/ArrayDequeOps.html#array-0","e":false,"i":"","n":"array","t":"array: Array[AnyRef]","d":"scala.collection.mutable.ArrayDequeOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayDequeOps.html#copySliceToArray-fffff1ad","e":false,"i":"","n":"copySliceToArray","t":"copySliceToArray(srcStart: Int, dest: Array[_], destStart: Int, maxItems: Int): dest.type","d":"scala.collection.mutable.ArrayDequeOps","k":"def","x":"This is a more general version of copyToArray - this also accepts a srcStart unlike copyToArray\nThis copies maxItems elements from this collections srcStart to dest's destStart\nIf we reach the end of either collections before we could copy maxItems, we simply stop copying\n"},
{"l":"api/scala/collection/mutable/ArrayDequeOps.html#klone-993","e":false,"i":"","n":"klone","t":"klone(): C","d":"scala.collection.mutable.ArrayDequeOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayDequeOps.html#ofArray-fffff425","e":false,"i":"","n":"ofArray","t":"ofArray(array: Array[AnyRef], end: Int): C","d":"scala.collection.mutable.ArrayDequeOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayDequeOps.html#requireBounds-d2c","e":false,"i":"","n":"requireBounds","t":"requireBounds(idx: Int, until: Int): Unit","d":"scala.collection.mutable.ArrayDequeOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArrayDequeOps.html#start_+-fffffbe0","e":false,"i":"","n":"start_+","t":"start_+(idx: Int): Int","d":"scala.collection.mutable.ArrayDequeOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArraySeq.html#","e":false,"i":"","n":"ArraySeq","t":"ArraySeq[T] extends AbstractSeq[T], IndexedSeq[T], IndexedSeqOps[T, ArraySeq, ArraySeq[T]], StrictOptimizedSeqOps[T, ArraySeq, ArraySeq[T]], Serializable","d":"scala.collection.mutable","k":"class","x":"A collection representing Array[T]. Unlike ArrayBuffer it is always backed by the same\nunderlying Array, therefore it is not growable or shrinkable.\n"},
{"l":"api/scala/collection/mutable/ArraySeq.html#array-0","e":false,"i":"","n":"array","t":"array: Array[_]","d":"scala.collection.mutable.ArraySeq","k":"def","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: ClassTag[_]","d":"scala.collection.mutable.ArraySeq","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq.html#update-386","e":false,"i":"","n":"update","t":"update(index: Int, elem: T): Unit","d":"scala.collection.mutable.ArraySeq","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$.html#","e":false,"i":"","n":"ArraySeq","t":"ArraySeq extends StrictOptimizedClassTagSeqFactory[ArraySeq]","d":"scala.collection.mutable","k":"object","x":"A companion object used to create instances of ArraySeq.\n"},
{"l":"api/scala/collection/mutable/ArraySeq$.html#empty-fffff30a","e":false,"i":"","n":"empty","t":"empty[T : ClassTag]: ArraySeq[T]","d":"scala.collection.mutable.ArraySeq","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$.html#from-fffffed1","e":false,"i":"","n":"from","t":"from[A : ClassTag](it: IterableOnce[A]): ArraySeq[A]","d":"scala.collection.mutable.ArraySeq","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$.html#make-e92","e":false,"i":"","n":"make","t":"make[T](x: Array[T]): ArraySeq[T]","d":"scala.collection.mutable.ArraySeq","k":"def","x":"Wrap an existing Array into a ArraySeq of the proper primitive specialization type\nwithout copying."},
{"l":"api/scala/collection/mutable/ArraySeq$.html#newBuilder-b57","e":false,"i":"","n":"newBuilder","t":"newBuilder[A : ClassTag]: Builder[A, ArraySeq[A]]","d":"scala.collection.mutable.ArraySeq","k":"def","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$.html#untagged-0","e":false,"i":"","n":"untagged","t":"untagged: SeqFactory[ArraySeq]","d":"scala.collection.mutable.ArraySeq","k":"val","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html#","e":false,"i":"","n":"ofBoolean","t":"ofBoolean(val array: Array[Boolean]) extends ArraySeq[Boolean]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html#apply-ffffff99","e":false,"i":"","n":"apply","t":"apply(index: Int): Boolean","d":"scala.collection.mutable.ArraySeq.ofBoolean","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html#array-0","e":false,"i":"","n":"array","t":"array: Array[Boolean]","d":"scala.collection.mutable.ArraySeq.ofBoolean","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: Boolean.type","d":"scala.collection.mutable.ArraySeq.ofBoolean","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofBoolean","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofBoolean.html#update-da5","e":false,"i":"","n":"update","t":"update(index: Int, elem: Boolean): Unit","d":"scala.collection.mutable.ArraySeq.ofBoolean","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$$ofByte.html#","e":false,"i":"","n":"ofByte","t":"ofByte(val array: Array[Byte]) extends ArraySeq[Byte]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofByte.html#apply-fffffb37","e":false,"i":"","n":"apply","t":"apply(index: Int): Byte","d":"scala.collection.mutable.ArraySeq.ofByte","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofByte.html#array-0","e":false,"i":"","n":"array","t":"array: Array[Byte]","d":"scala.collection.mutable.ArraySeq.ofByte","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofByte.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: Byte.type","d":"scala.collection.mutable.ArraySeq.ofByte","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofByte.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofByte","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofByte.html#update-fffffbc3","e":false,"i":"","n":"update","t":"update(index: Int, elem: Byte): Unit","d":"scala.collection.mutable.ArraySeq.ofByte","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$$ofChar.html#","e":false,"i":"","n":"ofChar","t":"ofChar(val array: Array[Char]) extends ArraySeq[Char]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofChar.html#apply-fffffd85","e":false,"i":"","n":"apply","t":"apply(index: Int): Char","d":"scala.collection.mutable.ArraySeq.ofChar","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofChar.html#array-0","e":false,"i":"","n":"array","t":"array: Array[Char]","d":"scala.collection.mutable.ArraySeq.ofChar","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofChar.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: Char.type","d":"scala.collection.mutable.ArraySeq.ofChar","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofChar.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofChar","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofChar.html#update-fffff491","e":false,"i":"","n":"update","t":"update(index: Int, elem: Char): Unit","d":"scala.collection.mutable.ArraySeq.ofChar","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$$ofDouble.html#","e":false,"i":"","n":"ofDouble","t":"ofDouble(val array: Array[Double]) extends ArraySeq[Double]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofDouble.html#apply-640","e":false,"i":"","n":"apply","t":"apply(index: Int): Double","d":"scala.collection.mutable.ArraySeq.ofDouble","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofDouble.html#array-0","e":false,"i":"","n":"array","t":"array: Array[Double]","d":"scala.collection.mutable.ArraySeq.ofDouble","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofDouble.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: Double.type","d":"scala.collection.mutable.ArraySeq.ofDouble","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofDouble.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofDouble","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofDouble.html#update-f8c","e":false,"i":"","n":"update","t":"update(index: Int, elem: Double): Unit","d":"scala.collection.mutable.ArraySeq.ofDouble","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$$ofFloat.html#","e":false,"i":"","n":"ofFloat","t":"ofFloat(val array: Array[Float]) extends ArraySeq[Float]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofFloat.html#apply-fffffe0d","e":false,"i":"","n":"apply","t":"apply(index: Int): Float","d":"scala.collection.mutable.ArraySeq.ofFloat","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofFloat.html#array-0","e":false,"i":"","n":"array","t":"array: Array[Float]","d":"scala.collection.mutable.ArraySeq.ofFloat","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofFloat.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: Float.type","d":"scala.collection.mutable.ArraySeq.ofFloat","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofFloat.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofFloat","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofFloat.html#update-b19","e":false,"i":"","n":"update","t":"update(index: Int, elem: Float): Unit","d":"scala.collection.mutable.ArraySeq.ofFloat","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$$ofInt.html#","e":false,"i":"","n":"ofInt","t":"ofInt(val array: Array[Int]) extends ArraySeq[Int]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofInt.html#apply-fffffbe0","e":false,"i":"","n":"apply","t":"apply(index: Int): Int","d":"scala.collection.mutable.ArraySeq.ofInt","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofInt.html#array-0","e":false,"i":"","n":"array","t":"array: Array[Int]","d":"scala.collection.mutable.ArraySeq.ofInt","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofInt.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: Int.type","d":"scala.collection.mutable.ArraySeq.ofInt","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofInt.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofInt","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofInt.html#update-d2c","e":false,"i":"","n":"update","t":"update(index: Int, elem: Int): Unit","d":"scala.collection.mutable.ArraySeq.ofInt","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$$ofLong.html#","e":false,"i":"","n":"ofLong","t":"ofLong(val array: Array[Long]) extends ArraySeq[Long]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofLong.html#apply-fffff0ab","e":false,"i":"","n":"apply","t":"apply(index: Int): Long","d":"scala.collection.mutable.ArraySeq.ofLong","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofLong.html#array-0","e":false,"i":"","n":"array","t":"array: Array[Long]","d":"scala.collection.mutable.ArraySeq.ofLong","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofLong.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: Long.type","d":"scala.collection.mutable.ArraySeq.ofLong","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofLong.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofLong","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofLong.html#update-37","e":false,"i":"","n":"update","t":"update(index: Int, elem: Long): Unit","d":"scala.collection.mutable.ArraySeq.ofLong","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$$ofRef.html#","e":false,"i":"","n":"ofRef","t":"ofRef[T <: AnyRef](val array: Array[T]) extends ArraySeq[T]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofRef.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(index: Int): T","d":"scala.collection.mutable.ArraySeq.ofRef","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofRef.html#array-0","e":false,"i":"","n":"array","t":"array: Array[T]","d":"scala.collection.mutable.ArraySeq.ofRef","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofRef.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: ClassTag[T]","d":"scala.collection.mutable.ArraySeq.ofRef","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofRef.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofRef","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofRef.html#update-386","e":false,"i":"","n":"update","t":"update(index: Int, elem: T): Unit","d":"scala.collection.mutable.ArraySeq.ofRef","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$$ofShort.html#","e":false,"i":"","n":"ofShort","t":"ofShort(val array: Array[Short]) extends ArraySeq[Short]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofShort.html#apply-fffff02d","e":false,"i":"","n":"apply","t":"apply(index: Int): Short","d":"scala.collection.mutable.ArraySeq.ofShort","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofShort.html#array-0","e":false,"i":"","n":"array","t":"array: Array[Short]","d":"scala.collection.mutable.ArraySeq.ofShort","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofShort.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: Short.type","d":"scala.collection.mutable.ArraySeq.ofShort","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofShort.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofShort","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofShort.html#update-fffff539","e":false,"i":"","n":"update","t":"update(index: Int, elem: Short): Unit","d":"scala.collection.mutable.ArraySeq.ofShort","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/ArraySeq$$ofUnit.html#","e":false,"i":"","n":"ofUnit","t":"ofUnit(val array: Array[Unit]) extends ArraySeq[Unit]","d":"scala.collection.mutable.ArraySeq","k":"class","x":""},
{"l":"api/scala/collection/mutable/ArraySeq$$ofUnit.html#apply-fffff3b3","e":false,"i":"","n":"apply","t":"apply(index: Int): Unit","d":"scala.collection.mutable.ArraySeq.ofUnit","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofUnit.html#array-0","e":false,"i":"","n":"array","t":"array: Array[Unit]","d":"scala.collection.mutable.ArraySeq.ofUnit","k":"val","x":"The underlying array. Its element type does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofUnit.html#elemTag-0","e":false,"i":"","n":"elemTag","t":"elemTag: Unit.type","d":"scala.collection.mutable.ArraySeq.ofUnit","k":"def","x":"The tag of the element type. This does not have to be equal to the element type of this ArraySeq. A primitive\nArraySeq can be backed by an array of boxed values and a reference ArraySeq can be backed by an array of a supertype\nor subtype of the element type."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofUnit.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ArraySeq.ofUnit","k":"def","x":"The length (number of elements) of the wrapped array. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ArraySeq$$ofUnit.html#update-fffff5f5","e":false,"i":"","n":"update","t":"update(index: Int, elem: Unit): Unit","d":"scala.collection.mutable.ArraySeq.ofUnit","k":"def","x":"Update element at given index"},
{"l":"api/scala/collection/mutable/BitSet.html#","e":false,"i":"","n":"BitSet","t":"BitSet(var elems: Array[Long]) extends AbstractSet[Int], SortedSet[Int], SortedSetOps[Int, SortedSet, BitSet], StrictOptimizedIterableOps[Int, Set, BitSet], StrictOptimizedSortedSetOps[Int, SortedSet, BitSet], BitSet, BitSetOps[BitSet], Serializable","d":"scala.collection.mutable","k":"class","x":"A class for mutable bitsets."},
{"l":"api/scala/collection/mutable/BitSet.html#&=-428","e":false,"i":"","n":"&=","t":"&=(other: BitSet): this.type","d":"scala.collection.mutable.BitSet","k":"def","x":"Updates this bitset to the intersection with another bitset by performing a bitwise \"and\".\n"},
{"l":"api/scala/collection/mutable/BitSet.html#&~=-428","e":false,"i":"","n":"&~=","t":"&~=(other: BitSet): this.type","d":"scala.collection.mutable.BitSet","k":"def","x":"Updates this bitset to the difference with another bitset by performing a bitwise \"and-not\".\n"},
{"l":"api/scala/collection/mutable/BitSet.html#^=-428","e":false,"i":"","n":"^=","t":"^=(other: BitSet): this.type","d":"scala.collection.mutable.BitSet","k":"def","x":"Updates this bitset to the symmetric difference with another bitset by performing a bitwise \"xor\".\n"},
{"l":"api/scala/collection/mutable/BitSet.html#addOne-fffff69e","e":false,"i":"","n":"addOne","t":"addOne(elem: Int): this.type","d":"scala.collection.mutable.BitSet","k":"def","x":"Adds a single element to this bitset.\n"},
{"l":"api/scala/collection/mutable/BitSet.html#bitSetFactory-0","e":false,"i":"","n":"bitSetFactory","t":"bitSetFactory: BitSet.type","d":"scala.collection.mutable.BitSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/BitSet.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.BitSet","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method the builder will contain no elements.\n"},
{"l":"api/scala/collection/mutable/BitSet.html#subtractOne-fffff69e","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: Int): this.type","d":"scala.collection.mutable.BitSet","k":"def","x":"Removes a single element from this bitset.\n"},
{"l":"api/scala/collection/mutable/BitSet.html#<init>-fffff69e","e":false,"i":"","n":"this","t":"this(initSize: Int)","d":"scala.collection.mutable.BitSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/BitSet.html#<init>-fffffaa5","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.mutable.BitSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/BitSet.html#toImmutable-0","e":false,"i":"","n":"toImmutable","t":"toImmutable: BitSet","d":"scala.collection.mutable.BitSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/BitSet.html#unconstrained-0","e":false,"i":"","n":"unconstrained","t":"unconstrained: Set[Int]","d":"scala.collection.mutable.BitSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/BitSet.html#|=-428","e":false,"i":"","n":"|=","t":"|=(other: BitSet): this.type","d":"scala.collection.mutable.BitSet","k":"def","x":"Updates this bitset to the union with another bitset by performing a bitwise \"or\".\n"},
{"l":"api/scala/collection/mutable/BitSet$.html#","e":false,"i":"","n":"BitSet","t":"BitSet extends SpecificIterableFactory[Int, BitSet]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/BitSet$.html#empty-0","e":false,"i":"","n":"empty","t":"empty: BitSet","d":"scala.collection.mutable.BitSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/BitSet$.html#fromBitMask-fffff53f","e":false,"i":"","n":"fromBitMask","t":"fromBitMask(elems: Array[Long]): BitSet","d":"scala.collection.mutable.BitSet","k":"def","x":"A bitset containing all the bits in an array"},
{"l":"api/scala/collection/mutable/BitSet$.html#fromBitMaskNoCopy-fffff53f","e":false,"i":"","n":"fromBitMaskNoCopy","t":"fromBitMaskNoCopy(elems: Array[Long]): BitSet","d":"scala.collection.mutable.BitSet","k":"def","x":"A bitset containing all the bits in an array, wrapping the existing\narray without copying.\n"},
{"l":"api/scala/collection/mutable/BitSet$.html#fromSpecific-fffffc6a","e":false,"i":"","n":"fromSpecific","t":"fromSpecific(it: IterableOnce[Int]): BitSet","d":"scala.collection.mutable.BitSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/BitSet$.html#newBuilder-0","e":false,"i":"","n":"newBuilder","t":"newBuilder: Builder[Int, BitSet]","d":"scala.collection.mutable.BitSet","k":"def","x":"Get a Builder for the collection. For non-strict collection types this will use an intermediate buffer.\nBuilding collections with fromSpecific is preferred because it can be lazy for lazy collections."},
{"l":"api/scala/collection/mutable/Buffer.html#","e":false,"i":"","n":"Buffer","t":"Buffer[A] extends Seq[A], SeqOps[A, Buffer, Buffer[A]], Growable[A], Shrinkable[A], IterableFactoryDefaults[A, Buffer]","d":"scala.collection.mutable","k":"trait","x":"A Buffer is a growable and shrinkable Seq."},
{"l":"api/scala/collection/mutable/Buffer.html#++=:-fffff095","e":false,"i":"","n":"++=:","t":"++=:(elems: IterableOnce[A]): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Alias for prependAll"},
{"l":"api/scala/collection/mutable/Buffer.html#+=:-fffff2dd","e":false,"i":"","n":"+=:","t":"+=:(elem: A): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Alias for prepend"},
{"l":"api/scala/collection/mutable/Buffer.html#append-fffff2dd","e":false,"i":"","n":"append","t":"append(elem: A): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Appends the given elements to this buffer.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#append-ffffff45","e":false,"i":"","n":"append","t":"append(elems: A*): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/Buffer.html#appendAll-fffff095","e":false,"i":"","n":"appendAll","t":"appendAll(elems: IterableOnce[A]): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Appends the elements contained in a iterable object to this buffer."},
{"l":"api/scala/collection/mutable/Buffer.html#dropInPlace-fffffac9","e":false,"i":"","n":"dropInPlace","t":"dropInPlace(n: Int): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Removes the first n elements from this shrinkable collection.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#dropRightInPlace-fffffac9","e":false,"i":"","n":"dropRightInPlace","t":"dropRightInPlace(n: Int): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Removes the last n elements from this shrinkable collection.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#dropWhileInPlace-81f","e":false,"i":"","n":"dropWhileInPlace","t":"dropWhileInPlace(p: A => Boolean): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Drops the longest prefix of elements that satisfy a predicate.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#insert-386","e":false,"i":"","n":"insert","t":"insert(idx: Int, elem: A): Unit","d":"scala.collection.mutable.Buffer","k":"def","x":"Inserts a new element at a given index into this buffer.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#insertAll-fffff960","e":false,"i":"","n":"insertAll","t":"insertAll(idx: Int, elems: IterableOnce[A]): Unit","d":"scala.collection.mutable.Buffer","k":"def","x":"Inserts new elements at the index idx. Opposed to method\nupdate, this method will not replace an element with a new\none. Instead, it will insert a new element at index idx.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#padToInPlace-cd6","e":false,"i":"","n":"padToInPlace","t":"padToInPlace(len: Int, elem: A): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Append the given element to this shrinkable collection until a target length is reached.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#patchInPlace-fdd","e":false,"i":"","n":"patchInPlace","t":"patchInPlace(from: Int, patch: IterableOnce[A], replaced: Int): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Replaces a slice of elements in this shrinkable collection by another sequence of elements."},
{"l":"api/scala/collection/mutable/Buffer.html#prepend-fffff2dd","e":false,"i":"","n":"prepend","t":"prepend(elem: A): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Prepends a single element at the front of this shrinkable collection.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#prepend-ffffff45","e":false,"i":"","n":"prepend","t":"prepend(elems: A*): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/Buffer.html#prependAll-fffff095","e":false,"i":"","n":"prependAll","t":"prependAll(elems: IterableOnce[A]): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Prepends the elements contained in a iterable object to this buffer."},
{"l":"api/scala/collection/mutable/Buffer.html#remove-aba","e":false,"i":"","n":"remove","t":"remove(idx: Int): A","d":"scala.collection.mutable.Buffer","k":"def","x":"Removes the element at a given index position.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#remove-d2c","e":false,"i":"","n":"remove","t":"remove(idx: Int, count: Int): Unit","d":"scala.collection.mutable.Buffer","k":"def","x":"Removes the element on a given index position. It takes time linear in\nthe buffer size.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#sliceInPlace-6f0","e":false,"i":"","n":"sliceInPlace","t":"sliceInPlace(start: Int, end: Int): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Retains the specified slice from this shrinkable collection and removes the rest.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#subtractOne-fffff2dd","e":false,"i":"","n":"subtractOne","t":"subtractOne(x: A): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Removes a single element from this buffer, at its first occurrence.\nIf the buffer does not contain that element, it is unchanged.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#takeInPlace-fffffac9","e":false,"i":"","n":"takeInPlace","t":"takeInPlace(n: Int): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Retains the first n elements from this shrinkable collection and removes the rest.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#takeRightInPlace-fffffac9","e":false,"i":"","n":"takeRightInPlace","t":"takeRightInPlace(n: Int): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Retains the last n elements from this shrinkable collection and removes the rest.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#takeWhileInPlace-81f","e":false,"i":"","n":"takeWhileInPlace","t":"takeWhileInPlace(p: A => Boolean): this.type","d":"scala.collection.mutable.Buffer","k":"def","x":"Retains the longest prefix of elements that satisfy a predicate.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#trimEnd-fffff3b3","e":false,"i":"","n":"trimEnd","t":"trimEnd(n: Int): Unit","d":"scala.collection.mutable.Buffer","k":"def","x":"Removes the last n elements of this buffer.\n"},
{"l":"api/scala/collection/mutable/Buffer.html#trimStart-fffff3b3","e":false,"i":"","n":"trimStart","t":"trimStart(n: Int): Unit","d":"scala.collection.mutable.Buffer","k":"def","x":"Removes the first n elements of this buffer.\n"},
{"l":"api/scala/collection/mutable/Buffer$.html#","e":false,"i":"","n":"Buffer","t":"Buffer extends Delegate[Buffer]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/Builder.html#","e":false,"i":"","n":"Builder","t":"Builder[-A, +To] extends Growable[A]","d":"scala.collection.mutable","k":"trait","x":"Base trait for collection builders."},
{"l":"api/scala/collection/mutable/Builder.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.Builder","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method the builder will contain no elements.\n"},
{"l":"api/scala/collection/mutable/Builder.html#mapResult-34b","e":false,"i":"","n":"mapResult","t":"mapResult[NewTo](f: To => NewTo): Builder[A, NewTo]","d":"scala.collection.mutable.Builder","k":"def","x":"A builder resulting from this builder by mapping the result using f."},
{"l":"api/scala/collection/mutable/Builder.html#result-993","e":false,"i":"","n":"result","t":"result(): To","d":"scala.collection.mutable.Builder","k":"def","x":"Result collection consisting of all elements appended so far."},
{"l":"api/scala/collection/mutable/Builder.html#sizeHint-fffff3b3","e":false,"i":"","n":"sizeHint","t":"sizeHint(size: Int): Unit","d":"scala.collection.mutable.Builder","k":"def","x":"Gives a hint how many elements are expected to be added in total\nby the time result is called."},
{"l":"api/scala/collection/mutable/Builder.html#sizeHint-fffff4f8","e":false,"i":"","n":"sizeHint","t":"sizeHint(coll: IterableOnce[_], delta: Int): Unit","d":"scala.collection.mutable.Builder","k":"def","x":"Gives a hint that the result of this builder is expected\nto have the same size as the given collection, plus some delta."},
{"l":"api/scala/collection/mutable/Builder.html#sizeHintBounded-fffffd7f","e":false,"i":"","n":"sizeHintBounded","t":"sizeHintBounded(size: Int, boundingColl: Iterable[_]): Unit","d":"scala.collection.mutable.Builder","k":"def","x":"Gives a hint how many elements are expected to be added\nwhen the next result is called, together with an upper bound\ngiven by the size of some other collection. Some builder classes\nwill optimize their representation based on the hint. However,\nbuilder implementations are still required to work correctly even if the hint is\nwrong, i.e. a different number of elements is added.\n"},
{"l":"api/scala/collection/mutable/Clearable.html#","e":false,"i":"","n":"Clearable","t":"Clearable","d":"scala.collection.mutable","k":"trait","x":"This trait forms part of collections that can be cleared\nwith a clear() call."},
{"l":"api/scala/collection/mutable/Clearable.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.Clearable","k":"def","x":"Clears the collection's contents. After this operation, the\ncollection is empty.\n"},
{"l":"api/scala/collection/mutable/Cloneable.html#","e":false,"i":"","n":"Cloneable","t":"Cloneable[+C <: AnyRef] extends Cloneable","d":"scala.collection.mutable","k":"trait","x":"A trait for cloneable collections.\n"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap.html#","e":false,"i":"","n":"CollisionProofHashMap","t":"CollisionProofHashMap[K, V](initialCapacity: Int, loadFactor: Double)(implicit ordering: Ordering[K]) extends AbstractMap[K, V], MapOps[K, V, Map, CollisionProofHashMap[K, V]], StrictOptimizedIterableOps[(K, V), Iterable, CollisionProofHashMap[K, V]], StrictOptimizedMapOps[K, V, Map, CollisionProofHashMap[K, V]]","d":"scala.collection.mutable","k":"class","x":"This class implements mutable maps using a hashtable with red-black trees in the buckets for good\nworst-case performance on hash collisions. An Ordering is required for the element type. Equality\nas determined by the Ordering has to be consistent with equals and hashCode. Universal equality\nof numeric types is not supported (similar to AnyRefMap).\n"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap.html#addOne-fffffefe","e":false,"i":"","n":"addOne","t":"addOne(elem: (K, V)): this.type","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":"Adds a single element to this mutable collision-proof hash map.\n"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap.html#collect-fffff85f","e":false,"i":"","n":"collect","t":"collect[K2, V2](pf: PartialFunction[(K, V), (K2, V2)])(implicit ordering: Ordering[K2]): CollisionProofHashMap[K2, V2]","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":"Builds a new sorted map by applying a partial function to all elements of this mutable collision-proof hash map\non which the function is defined.\n"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap.html#flatMap-ff","e":false,"i":"","n":"flatMap","t":"flatMap[K2, V2](f: ((K, V)) => IterableOnce[(K2, V2)])(implicit ordering: Ordering[K2]): CollisionProofHashMap[K2, V2]","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":"Builds a new CollisionProofHashMap by applying a function to all elements of this mutable collision-proof hash map\nand using the elements of the resulting collections.\n"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap.html#fromNodes-99","e":false,"i":"","n":"fromNodes","t":"fromNodes(xs: Iterator[Node], size: Int): RBNode","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap.html#map-ff","e":false,"i":"","n":"map","t":"map[K2, V2](f: ((K, V)) => (K2, V2))(implicit ordering: Ordering[K2]): CollisionProofHashMap[K2, V2]","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":"Builds a new CollisionProofHashMap by applying a function to all elements of this mutable collision-proof hash map.\n"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap.html#subtractOne-fffff79f","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: K): this.type","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":"Removes a single element from this mutable collision-proof hash map.\n"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap.html#<init>-54c","e":false,"i":"","n":"this","t":"this()(implicit ordering: Ordering[K])","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$.html#","e":false,"i":"","n":"CollisionProofHashMap","t":"CollisionProofHashMap extends SortedMapFactory[CollisionProofHashMap]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$.html#defaultInitialCapacity-0","e":false,"i":"","n":"defaultInitialCapacity","t":"defaultInitialCapacity: Int","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":"The default initial capacity for the hash table"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$.html#defaultLoadFactor-0","e":false,"i":"","n":"defaultLoadFactor","t":"defaultLoadFactor: Double","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":"The default load factor for the hash table"},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$.html#empty-54c","e":false,"i":"","n":"empty","t":"empty[K : Ordering, V]: CollisionProofHashMap[K, V]","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$.html#from-fffffc75","e":false,"i":"","n":"from","t":"from[K : Ordering, V](it: IterableOnce[(K, V)]): CollisionProofHashMap[K, V]","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$.html#newBuilder-fffff50b","e":false,"i":"","n":"newBuilder","t":"newBuilder[K : Ordering, V]: Builder[(K, V), CollisionProofHashMap[K, V]]","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$.html#newBuilder-fffffe6f","e":false,"i":"","n":"newBuilder","t":"newBuilder[K : Ordering, V](initialCapacity: Int, loadFactor: Double): Builder[(K, V), CollisionProofHashMap[K, V]]","d":"scala.collection.mutable.CollisionProofHashMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$Node.html#","e":false,"i":"","n":"Node","t":"Node","d":"scala.collection.mutable.CollisionProofHashMap","k":"class","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#","e":false,"i":"","n":"RBNode","t":"RBNode[K, V](var key: K, var hash: Int, var value: V, var red: Boolean, var left: RBNode[K, V], var right: RBNode[K, V], var parent: RBNode[K, V]) extends Node","d":"scala.collection.mutable.CollisionProofHashMap","k":"class","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: ((K, V)) => U): Unit","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#foreachEntry-fffff84d","e":false,"i":"","n":"foreachEntry","t":"foreachEntry[U](f: (K, V) => U): Unit","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#foreachNode-58c","e":false,"i":"","n":"foreachNode","t":"foreachNode[U](f: RBNode[K, V] => U): Unit","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#getNode-226","e":false,"i":"","n":"getNode","t":"getNode(k: K, h: Int)(implicit ord: Ordering[K]): RBNode[K, V]","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"def","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#hash-0","e":false,"i":"","n":"hash","t":"hash: Int","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"var","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#key-0","e":false,"i":"","n":"key","t":"key: K","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"var","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#left-0","e":false,"i":"","n":"left","t":"left: RBNode[K, V]","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"var","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#parent-0","e":false,"i":"","n":"parent","t":"parent: RBNode[K, V]","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"var","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#red-0","e":false,"i":"","n":"red","t":"red: Boolean","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"var","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#right-0","e":false,"i":"","n":"right","t":"right: RBNode[K, V]","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"var","x":""},
{"l":"api/scala/collection/mutable/CollisionProofHashMap$$RBNode.html#value-0","e":false,"i":"","n":"value","t":"value: V","d":"scala.collection.mutable.CollisionProofHashMap.RBNode","k":"var","x":""},
{"l":"api/scala/collection/mutable/Growable.html#","e":false,"i":"","n":"Growable","t":"Growable[-A] extends Clearable","d":"scala.collection.mutable","k":"trait","x":"This trait forms part of collections that can be augmented\nusing a += operator and that can be cleared of all elements using\na clear method."},
{"l":"api/scala/collection/mutable/Growable.html#++=-fffffb02","e":false,"i":"","n":"++=","t":"++=(elems: IterableOnce[A]): this.type","d":"scala.collection.mutable.Growable","k":"def","x":"Alias for addAll"},
{"l":"api/scala/collection/mutable/Growable.html#+=-b4a","e":false,"i":"","n":"+=","t":"+=(elem: A): this.type","d":"scala.collection.mutable.Growable","k":"def","x":"Alias for addOne"},
{"l":"api/scala/collection/mutable/Growable.html#+=-fffff3cc","e":false,"i":"","n":"+=","t":"+=(elem1: A, elem2: A, elems: A*): this.type","d":"scala.collection.mutable.Growable","k":"def","x":"Adds two or more elements to this growable collection.\n"},
{"l":"api/scala/collection/mutable/Growable.html#addAll-fffffb02","e":false,"i":"","n":"addAll","t":"addAll(elems: IterableOnce[A]): this.type","d":"scala.collection.mutable.Growable","k":"def","x":"Adds all elements produced by an IterableOnce to this growable collection.\n"},
{"l":"api/scala/collection/mutable/Growable.html#addOne-b4a","e":false,"i":"","n":"addOne","t":"addOne(elem: A): this.type","d":"scala.collection.mutable.Growable","k":"def","x":"Adds a single element to this growable collection.\n"},
{"l":"api/scala/collection/mutable/Growable.html#knownSize-0","e":false,"i":"","n":"knownSize","t":"knownSize: Int","d":"scala.collection.mutable.Growable","k":"def","x":"The number of elements in the collection under construction, if it can be cheaply computed, -1 otherwise.\n"},
{"l":"api/scala/collection/mutable/Growable$.html#","e":false,"i":"","n":"Growable","t":"Growable","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/Growable$.html#from-fffff66e","e":false,"i":"","n":"from","t":"from[A](empty: Growable[A], it: IterableOnce[A]): empty.type","d":"scala.collection.mutable.Growable","k":"def","x":"Fills a Growable instance with the elements of a given iterable"},
{"l":"api/scala/collection/mutable/GrowableBuilder.html#","e":false,"i":"","n":"GrowableBuilder","t":"GrowableBuilder[Elem, To <: Growable[Elem]](val elems: To) extends Builder[Elem, To]","d":"scala.collection.mutable","k":"class","x":"The canonical builder for collections that are growable, i.e. that support an\nefficient += method which adds an element to the collection."},
{"l":"api/scala/collection/mutable/GrowableBuilder.html#addOne-4f1","e":false,"i":"","n":"addOne","t":"addOne(elem: Elem): this.type","d":"scala.collection.mutable.GrowableBuilder","k":"def","x":"Adds a single element to this growing builder.\n"},
{"l":"api/scala/collection/mutable/GrowableBuilder.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.GrowableBuilder","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method the builder will contain no elements.\n"},
{"l":"api/scala/collection/mutable/GrowableBuilder.html#result-67d","e":false,"i":"","n":"result","t":"result(): To","d":"scala.collection.mutable.GrowableBuilder","k":"def","x":"Result collection consisting of all elements appended so far."},
{"l":"api/scala/collection/mutable/HashMap.html#","e":false,"i":"","n":"HashMap","t":"HashMap[K, V](initialCapacity: Int, loadFactor: Double) extends AbstractMap[K, V], MapOps[K, V, HashMap, HashMap[K, V]], StrictOptimizedIterableOps[(K, V), Iterable, HashMap[K, V]], StrictOptimizedMapOps[K, V, HashMap, HashMap[K, V]], MapFactoryDefaults[K, V, HashMap, Iterable], Serializable","d":"scala.collection.mutable","k":"class","x":"This class implements mutable maps using a hashtable.\n"},
{"l":"api/scala/collection/mutable/HashMap.html#addOne-810","e":false,"i":"","n":"addOne","t":"addOne(elem: (K, V)): this.type","d":"scala.collection.mutable.HashMap","k":"def","x":"Adds a single element to this mutable hash map.\n"},
{"l":"api/scala/collection/mutable/HashMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.mutable.HashMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/mutable/HashMap.html#subtractOne-fffffe71","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: K): this.type","d":"scala.collection.mutable.HashMap","k":"def","x":"Removes a single element from this mutable hash map.\n"},
{"l":"api/scala/collection/mutable/HashMap.html#<init>-fffff910","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.mutable.HashMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/HashMap$.html#","e":false,"i":"","n":"HashMap","t":"HashMap extends MapFactory[HashMap]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/HashMap$.html#defaultInitialCapacity-0","e":false,"i":"","n":"defaultInitialCapacity","t":"defaultInitialCapacity: Int","d":"scala.collection.mutable.HashMap","k":"def","x":"The default initial capacity for the hash table"},
{"l":"api/scala/collection/mutable/HashMap$.html#defaultLoadFactor-0","e":false,"i":"","n":"defaultLoadFactor","t":"defaultLoadFactor: Double","d":"scala.collection.mutable.HashMap","k":"def","x":"The default load factor for the hash table"},
{"l":"api/scala/collection/mutable/HashMap$.html#empty-fffff910","e":false,"i":"","n":"empty","t":"empty[K, V]: HashMap[K, V]","d":"scala.collection.mutable.HashMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/mutable/HashMap$.html#from-fffff4c7","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): HashMap[K, V]","d":"scala.collection.mutable.HashMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/mutable/HashMap$.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), HashMap[K, V]]","d":"scala.collection.mutable.HashMap","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/mutable/HashMap$.html#newBuilder-859","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V](initialCapacity: Int, loadFactor: Double): Builder[(K, V), HashMap[K, V]]","d":"scala.collection.mutable.HashMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/HashSet.html#","e":false,"i":"","n":"HashSet","t":"HashSet[A](initialCapacity: Int, loadFactor: Double) extends AbstractSet[A], SetOps[A, HashSet, HashSet[A]], StrictOptimizedIterableOps[A, HashSet, HashSet[A]], IterableFactoryDefaults[A, HashSet], Serializable","d":"scala.collection.mutable","k":"class","x":"This class implements mutable sets using a hashtable.\n"},
{"l":"api/scala/collection/mutable/HashSet.html#addOne-fffff577","e":false,"i":"","n":"addOne","t":"addOne(elem: A): this.type","d":"scala.collection.mutable.HashSet","k":"def","x":"Adds a single element to this mutable hash set.\n"},
{"l":"api/scala/collection/mutable/HashSet.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.HashSet","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method the builder will contain no elements.\n"},
{"l":"api/scala/collection/mutable/HashSet.html#subtractOne-fffff577","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: A): this.type","d":"scala.collection.mutable.HashSet","k":"def","x":"Removes a single element from this mutable hash set.\n"},
{"l":"api/scala/collection/mutable/HashSet.html#<init>-415","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.mutable.HashSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/HashSet$.html#","e":false,"i":"","n":"HashSet","t":"HashSet extends IterableFactory[HashSet]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/HashSet$.html#defaultInitialCapacity-0","e":false,"i":"","n":"defaultInitialCapacity","t":"defaultInitialCapacity: Int","d":"scala.collection.mutable.HashSet","k":"def","x":"The default initial capacity for the hash table"},
{"l":"api/scala/collection/mutable/HashSet$.html#defaultLoadFactor-0","e":false,"i":"","n":"defaultLoadFactor","t":"defaultLoadFactor: Double","d":"scala.collection.mutable.HashSet","k":"def","x":"The default load factor for the hash table"},
{"l":"api/scala/collection/mutable/HashSet$.html#empty-415","e":false,"i":"","n":"empty","t":"empty[A]: HashSet[A]","d":"scala.collection.mutable.HashSet","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/mutable/HashSet$.html#from-c2e","e":false,"i":"","n":"from","t":"from[B](it: IterableOnce[B]): HashSet[B]","d":"scala.collection.mutable.HashSet","k":"def","x":"Creates a target mutable hash set from an existing source collection\n"},
{"l":"api/scala/collection/mutable/HashSet$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, HashSet[A]]","d":"scala.collection.mutable.HashSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/HashSet$.html#newBuilder-fffff9ba","e":false,"i":"","n":"newBuilder","t":"newBuilder[A](initialCapacity: Int, loadFactor: Double): Builder[A, HashSet[A]]","d":"scala.collection.mutable.HashSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/ImmutableBuilder.html#","e":false,"i":"","n":"ImmutableBuilder","t":"ImmutableBuilder[-A, C <: IterableOnce[_]](empty: C) extends ReusableBuilder[A, C]","d":"scala.collection.mutable","k":"class","x":"Reusable builder for immutable collections\n"},
{"l":"api/scala/collection/mutable/ImmutableBuilder.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.ImmutableBuilder","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method, the builder will contain no elements."},
{"l":"api/scala/collection/mutable/ImmutableBuilder.html#elems-0","e":false,"i":"","n":"elems","t":"elems: C","d":"scala.collection.mutable.ImmutableBuilder","k":"var","x":""},
{"l":"api/scala/collection/mutable/ImmutableBuilder.html#result-2db","e":false,"i":"","n":"result","t":"result(): C","d":"scala.collection.mutable.ImmutableBuilder","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/IndexedBuffer.html#","e":false,"i":"","n":"IndexedBuffer","t":"IndexedBuffer[A] extends IndexedSeq[A], IndexedSeqOps[A, IndexedBuffer, IndexedBuffer[A]], Buffer[A], IterableFactoryDefaults[A, IndexedBuffer]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/IndexedBuffer.html#filterInPlace-3d2","e":false,"i":"","n":"filterInPlace","t":"filterInPlace(p: A => Boolean): this.type","d":"scala.collection.mutable.IndexedBuffer","k":"def","x":"Replace the contents of this shrinkable collection with the filtered result.\n"},
{"l":"api/scala/collection/mutable/IndexedBuffer.html#flatMapInPlace-3d2","e":false,"i":"","n":"flatMapInPlace","t":"flatMapInPlace(f: A => IterableOnce[A]): this.type","d":"scala.collection.mutable.IndexedBuffer","k":"def","x":"Replace the contents of this shrinkable collection with the flatmapped result.\n"},
{"l":"api/scala/collection/mutable/IndexedBuffer.html#patchInPlace-a54","e":false,"i":"","n":"patchInPlace","t":"patchInPlace(from: Int, patch: IterableOnce[A], replaced: Int): this.type","d":"scala.collection.mutable.IndexedBuffer","k":"def","x":"Replaces a slice of elements in this shrinkable collection by another sequence of elements."},
{"l":"api/scala/collection/mutable/IndexedBuffer$.html#","e":false,"i":"","n":"IndexedBuffer","t":"IndexedBuffer extends Delegate[IndexedBuffer]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/IndexedSeq.html#","e":false,"i":"","n":"IndexedSeq","t":"IndexedSeq[T] extends Seq[T], IndexedSeq[T], IndexedSeqOps[T, IndexedSeq, IndexedSeq[T]], IterableFactoryDefaults[T, IndexedSeq]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/IndexedSeq$.html#","e":false,"i":"","n":"IndexedSeq","t":"IndexedSeq extends Delegate[IndexedSeq]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/IndexedSeqOps.html#","e":false,"i":"","n":"IndexedSeqOps","t":"IndexedSeqOps[A, +CC[_], +C <: AnyRef] extends IndexedSeqOps[A, CC, C], SeqOps[A, CC, C]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/IndexedSeqOps.html#mapInPlace-fffff965","e":false,"i":"","n":"mapInPlace","t":"mapInPlace(f: A => A): this.type","d":"scala.collection.mutable.IndexedSeqOps","k":"def","x":"Modifies this mutable sequence by applying a function to all elements of this mutable sequence.\n"},
{"l":"api/scala/collection/mutable/IndexedSeqOps.html#sortInPlace-75","e":false,"i":"","n":"sortInPlace","t":"sortInPlace[B >: A]()(implicit ord: Ordering[B]): this.type","d":"scala.collection.mutable.IndexedSeqOps","k":"def","x":"Sorts this mutable sequence in place according to an Ordering.\n"},
{"l":"api/scala/collection/mutable/IndexedSeqOps.html#sortInPlaceBy-ffffff46","e":false,"i":"","n":"sortInPlaceBy","t":"sortInPlaceBy[B](f: A => B)(implicit ord: Ordering[B]): this.type","d":"scala.collection.mutable.IndexedSeqOps","k":"def","x":"Sorts this mutable sequence in place according to the Ordering which results from transforming\nan implicitly given Ordering with a transformation function.\n"},
{"l":"api/scala/collection/mutable/IndexedSeqOps.html#sortInPlaceWith-a6","e":false,"i":"","n":"sortInPlaceWith","t":"sortInPlaceWith(lt: (A, A) => Boolean): this.type","d":"scala.collection.mutable.IndexedSeqOps","k":"def","x":"Sorts this mutable sequence in place according to a comparison function.\n"},
{"l":"api/scala/collection/mutable/Iterable.html#","e":false,"i":"","n":"Iterable","t":"Iterable[A] extends Iterable[A], IterableOps[A, Iterable, Iterable[A]], IterableFactoryDefaults[A, Iterable]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/Iterable$.html#","e":false,"i":"","n":"Iterable","t":"Iterable extends Delegate[Iterable]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/LinkedHashMap.html#","e":false,"i":"","n":"LinkedHashMap","t":"LinkedHashMap[K, V] extends AbstractMap[K, V], SeqMap[K, V], MapOps[K, V, LinkedHashMap, LinkedHashMap[K, V]], StrictOptimizedIterableOps[(K, V), Iterable, LinkedHashMap[K, V]], StrictOptimizedMapOps[K, V, LinkedHashMap, LinkedHashMap[K, V]], MapFactoryDefaults[K, V, LinkedHashMap, Iterable], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"This class implements mutable maps using a hashtable.\nThe iterator and all traversal methods of this class visit elements in the order they were inserted.\n"},
{"l":"api/scala/collection/mutable/LinkedHashMap.html#addOne-fffffa37","e":false,"i":"","n":"addOne","t":"addOne(kv: (K, V)): this.type","d":"scala.collection.mutable.LinkedHashMap","k":"def","x":"Adds a single element to this linked hash map.\n"},
{"l":"api/scala/collection/mutable/LinkedHashMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.mutable.LinkedHashMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/mutable/LinkedHashMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.mutable.LinkedHashMap","k":"def","x":"An scala.collection.Iterator over the elements of this linked hash map."},
{"l":"api/scala/collection/mutable/LinkedHashMap.html#subtractOne-3d8","e":false,"i":"","n":"subtractOne","t":"subtractOne(key: K): this.type","d":"scala.collection.mutable.LinkedHashMap","k":"def","x":"Removes a single element from this linked hash map.\n"},
{"l":"api/scala/collection/mutable/LinkedHashMap$.html#","e":false,"i":"","n":"LinkedHashMap","t":"LinkedHashMap extends MapFactory[LinkedHashMap]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/LinkedHashMap$.html#empty-b37","e":false,"i":"","n":"empty","t":"empty[K, V]: LinkedHashMap[K, V]","d":"scala.collection.mutable.LinkedHashMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/mutable/LinkedHashMap$.html#from-fffff1ae","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): LinkedHashMap[K, V]","d":"scala.collection.mutable.LinkedHashMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/mutable/LinkedHashMap$.html#newBuilder-90","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: GrowableBuilder[(K, V), LinkedHashMap[K, V]]","d":"scala.collection.mutable.LinkedHashMap","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/mutable/LinkedHashSet.html#","e":false,"i":"","n":"LinkedHashSet","t":"LinkedHashSet[A] extends AbstractSet[A], SetOps[A, LinkedHashSet, LinkedHashSet[A]], StrictOptimizedIterableOps[A, LinkedHashSet, LinkedHashSet[A]], IterableFactoryDefaults[A, LinkedHashSet], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"This class implements mutable sets using a hashtable.\nThe iterator and all traversal methods of this class visit elements in the order they were inserted.\n"},
{"l":"api/scala/collection/mutable/LinkedHashSet.html#Entry-0","e":false,"i":"","n":"Entry","t":"Entry = Entry[A]","d":"scala.collection.mutable.LinkedHashSet","k":"type","x":""},
{"l":"api/scala/collection/mutable/LinkedHashSet.html#addOne-ade","e":false,"i":"","n":"addOne","t":"addOne(elem: A): this.type","d":"scala.collection.mutable.LinkedHashSet","k":"def","x":"Adds a single element to this linked hash set.\n"},
{"l":"api/scala/collection/mutable/LinkedHashSet.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.mutable.LinkedHashSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/LinkedHashSet.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.mutable.LinkedHashSet","k":"def","x":"An scala.collection.Iterator over the elements of this linked hash set."},
{"l":"api/scala/collection/mutable/LinkedHashSet.html#subtractOne-ade","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: A): this.type","d":"scala.collection.mutable.LinkedHashSet","k":"def","x":"Removes a single element from this linked hash set.\n"},
{"l":"api/scala/collection/mutable/LinkedHashSet$.html#","e":false,"i":"","n":"LinkedHashSet","t":"LinkedHashSet extends IterableFactory[LinkedHashSet]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/LinkedHashSet$.html#from-c55","e":false,"i":"","n":"from","t":"from[E](it: IterableOnce[E]): LinkedHashSet[E]","d":"scala.collection.mutable.LinkedHashSet","k":"def","x":"Creates a target linked hash set from an existing source collection\n"},
{"l":"api/scala/collection/mutable/LinkedHashSet$.html#newBuilder-fffff58f","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: GrowableBuilder[A, LinkedHashSet[A]]","d":"scala.collection.mutable.LinkedHashSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/ListBuffer.html#","e":false,"i":"","n":"ListBuffer","t":"ListBuffer[A] extends AbstractBuffer[A], SeqOps[A, ListBuffer, ListBuffer[A]], StrictOptimizedSeqOps[A, ListBuffer, ListBuffer[A]], ReusableBuilder[A, List[A]], IterableFactoryDefaults[A, ListBuffer], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"A Buffer implementation backed by a list. It provides constant time\nprepend and append. Most other operations are linear.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#addOne-fffffa9b","e":false,"i":"","n":"addOne","t":"addOne(elem: A): this.type","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Adds a single element to this list buffer.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/ListBuffer.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method, the builder will contain no elements."},
{"l":"api/scala/collection/mutable/ListBuffer.html#filterInPlace-edd","e":false,"i":"","n":"filterInPlace","t":"filterInPlace(p: A => Boolean): this.type","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Replace the contents of this list buffer with the filtered result.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#flatMapInPlace-edd","e":false,"i":"","n":"flatMapInPlace","t":"flatMapInPlace(f: A => IterableOnce[A]): this.type","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Replace the contents of this list buffer with the flatmapped result.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#insert-386","e":false,"i":"","n":"insert","t":"insert(idx: Int, elem: A): Unit","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Inserts a new element at a given index into this buffer.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#insertAll-fffff960","e":false,"i":"","n":"insertAll","t":"insertAll(idx: Int, elems: IterableOnce[A]): Unit","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Inserts new elements at the index idx. Opposed to method\nupdate, this method will not replace an element with a new\none. Instead, it will insert a new element at index idx.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.mutable.ListBuffer","k":"def","x":"An scala.collection.Iterator over the elements of this list buffer."},
{"l":"api/scala/collection/mutable/ListBuffer.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.ListBuffer","k":"def","x":"The length (number of elements) of the list buffer. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/ListBuffer.html#mapInPlace-edd","e":false,"i":"","n":"mapInPlace","t":"mapInPlace(f: A => A): this.type","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Replace the contents of this list buffer with the mapped result.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#patchInPlace-fffff79b","e":false,"i":"","n":"patchInPlace","t":"patchInPlace(from: Int, patch: IterableOnce[A], replaced: Int): this.type","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Replaces a slice of elements in this list buffer by another sequence of elements."},
{"l":"api/scala/collection/mutable/ListBuffer.html#prepend-fffffa9b","e":false,"i":"","n":"prepend","t":"prepend(elem: A): this.type","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Prepends a single element at the front of this list buffer.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#prependToList-5c0","e":false,"i":"","n":"prependToList","t":"prependToList(xs: List[A]): List[A]","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Prepends the elements of this buffer to a given list\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#remove-aba","e":false,"i":"","n":"remove","t":"remove(idx: Int): A","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Removes the element at a given index position.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#remove-d2c","e":false,"i":"","n":"remove","t":"remove(idx: Int, count: Int): Unit","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Removes the element on a given index position. It takes time linear in\nthe buffer size.\n"},
{"l":"api/scala/collection/mutable/ListBuffer.html#result-fffffc52","e":false,"i":"","n":"result","t":"result(): List[A]","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/ListBuffer.html#update-386","e":false,"i":"","n":"update","t":"update(idx: Int, elem: A): Unit","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/collection/mutable/ListBuffer$.html#","e":false,"i":"","n":"ListBuffer","t":"ListBuffer extends StrictOptimizedSeqFactory[ListBuffer]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/ListBuffer$.html#empty-f3d","e":false,"i":"","n":"empty","t":"empty[A]: ListBuffer[A]","d":"scala.collection.mutable.ListBuffer","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/mutable/ListBuffer$.html#from-fffff484","e":false,"i":"","n":"from","t":"from[A](coll: IterableOnce[A]): ListBuffer[A]","d":"scala.collection.mutable.ListBuffer","k":"def","x":"Creates a target collection from an existing source collection\n"},
{"l":"api/scala/collection/mutable/ListBuffer$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, ListBuffer[A]]","d":"scala.collection.mutable.ListBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/ListMap.html#","e":false,"i":"","n":"ListMap","t":"ListMap[K, V] extends AbstractMap[K, V], MapOps[K, V, ListMap, ListMap[K, V]], StrictOptimizedIterableOps[(K, V), Iterable, ListMap[K, V]], StrictOptimizedMapOps[K, V, ListMap, ListMap[K, V]], MapFactoryDefaults[K, V, ListMap, Iterable], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"A simple mutable map backed by a list, so it preserves insertion order.\n"},
{"l":"api/scala/collection/mutable/ListMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.mutable.ListMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/mutable/ListMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.mutable.ListMap","k":"def","x":"An scala.collection.Iterator over the elements of this mutable list map."},
{"l":"api/scala/collection/mutable/ListMap$.html#","e":false,"i":"","n":"ListMap","t":"ListMap extends MapFactory[ListMap]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/ListMap$.html#empty-ffffff80","e":false,"i":"","n":"empty","t":"empty[K, V]: ListMap[K, V]","d":"scala.collection.mutable.ListMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/mutable/ListMap$.html#from-fffffb37","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): ListMap[K, V]","d":"scala.collection.mutable.ListMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/mutable/ListMap$.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), ListMap[K, V]]","d":"scala.collection.mutable.ListMap","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/mutable/LongMap.html#","e":false,"i":"","n":"LongMap","t":"LongMap[V] extends AbstractMap[Long, V], MapOps[Long, V, Map, LongMap[V]], StrictOptimizedIterableOps[(Long, V), Iterable, LongMap[V]], Serializable","d":"scala.collection.mutable","k":"class","x":"This class implements mutable maps with Long keys based on a hash table with open addressing."},
{"l":"api/scala/collection/mutable/LongMap.html#+=-887","e":false,"i":"","n":"+=","t":"+=(key: Long, value: V): this.type","d":"scala.collection.mutable.LongMap","k":"def","x":"Adds a new key/value pair to this map and returns the map."},
{"l":"api/scala/collection/mutable/LongMap.html#addOne-887","e":false,"i":"","n":"addOne","t":"addOne(key: Long, value: V): this.type","d":"scala.collection.mutable.LongMap","k":"def","x":"Adds a new key/value pair to this map and returns the map."},
{"l":"api/scala/collection/mutable/LongMap.html#collect-fffff8d0","e":false,"i":"","n":"collect","t":"collect[V2](pf: PartialFunction[(Long, V), (Long, V2)]): LongMap[V2]","d":"scala.collection.mutable.LongMap","k":"def","x":"An overload of collect which produces a LongMap.\n"},
{"l":"api/scala/collection/mutable/LongMap.html#flatMap-8f0","e":false,"i":"","n":"flatMap","t":"flatMap[V2](f: ((Long, V)) => IterableOnce[(Long, V2)]): LongMap[V2]","d":"scala.collection.mutable.LongMap","k":"def","x":"An overload of flatMap which produces a LongMap.\n"},
{"l":"api/scala/collection/mutable/LongMap.html#foreachKey-58c","e":false,"i":"","n":"foreachKey","t":"foreachKey[A](f: Long => A): Unit","d":"scala.collection.mutable.LongMap","k":"def","x":"Applies a function to all keys of this map."},
{"l":"api/scala/collection/mutable/LongMap.html#foreachValue-58c","e":false,"i":"","n":"foreachValue","t":"foreachValue[A](f: V => A): Unit","d":"scala.collection.mutable.LongMap","k":"def","x":"Applies a function to all values of this map."},
{"l":"api/scala/collection/mutable/LongMap.html#getOrNull-7d7","e":false,"i":"","n":"getOrNull","t":"getOrNull(key: Long): V","d":"scala.collection.mutable.LongMap","k":"def","x":"Retrieves the value associated with a key, or the default for that type if none exists\n(null for AnyRef, 0 for floats and integers)."},
{"l":"api/scala/collection/mutable/LongMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(Long, V)]","d":"scala.collection.mutable.LongMap","k":"def","x":"An scala.collection.Iterator over the elements of this mutable map."},
{"l":"api/scala/collection/mutable/LongMap.html#map-8f0","e":false,"i":"","n":"map","t":"map[V2](f: ((Long, V)) => (Long, V2)): LongMap[V2]","d":"scala.collection.mutable.LongMap","k":"def","x":"An overload of map which produces a LongMap.\n"},
{"l":"api/scala/collection/mutable/LongMap.html#mapValuesNow-8f0","e":false,"i":"","n":"mapValuesNow","t":"mapValuesNow[V1](f: V => V1): LongMap[V1]","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new LongMap with different values.\nUnlike mapValues, this method generates a new\ncollection immediately.\n"},
{"l":"api/scala/collection/mutable/LongMap.html#repack-94c","e":false,"i":"","n":"repack","t":"repack(): Unit","d":"scala.collection.mutable.LongMap","k":"def","x":"Repacks the contents of this LongMap for maximum efficiency of lookup."},
{"l":"api/scala/collection/mutable/LongMap.html#subtractOne-fffff2f4","e":false,"i":"","n":"subtractOne","t":"subtractOne(key: Long): this.type","d":"scala.collection.mutable.LongMap","k":"def","x":"Removes a single element from this mutable map.\n"},
{"l":"api/scala/collection/mutable/LongMap.html#<init>-8e1","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.mutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/LongMap.html#<init>-8f0","e":false,"i":"","n":"this","t":"this(defaultEntry: Long => V)","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new LongMap that returns default values according to a supplied key-value mapping."},
{"l":"api/scala/collection/mutable/LongMap.html#<init>-ac6","e":false,"i":"","n":"this","t":"this(initialBufferSize: Int)","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new LongMap with an initial buffer of specified size."},
{"l":"api/scala/collection/mutable/LongMap.html#<init>-fffffb97","e":false,"i":"","n":"this","t":"this(defaultEntry: Long => V, initialBufferSize: Int)","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new LongMap with specified default values and initial buffer size."},
{"l":"api/scala/collection/mutable/LongMap.html#transformValues-d41","e":false,"i":"","n":"transformValues","t":"transformValues(f: V => V): this.type","d":"scala.collection.mutable.LongMap","k":"def","x":"Applies a transformation function to all values stored in this map.\nNote: the default, if any,  is not transformed.\n"},
{"l":"api/scala/collection/mutable/LongMap.html#transformValuesInPlace-d41","e":false,"i":"","n":"transformValuesInPlace","t":"transformValuesInPlace(f: V => V): this.type","d":"scala.collection.mutable.LongMap","k":"def","x":"Applies a transformation function to all values stored in this map.\nNote: the default, if any,  is not transformed.\n"},
{"l":"api/scala/collection/mutable/LongMap$.html#","e":false,"i":"","n":"LongMap","t":"LongMap","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/LongMap$.html#apply-fffffb4c","e":false,"i":"","n":"apply","t":"apply[V](elems: (Long, V)*): LongMap[V]","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new LongMap with zero or more key/value pairs."},
{"l":"api/scala/collection/mutable/LongMap$.html#buildFromLongMap-fffff061","e":false,"i":"","n":"buildFromLongMap","t":"buildFromLongMap[V]: BuildFrom[LongMap[_], (Long, V), LongMap[V]]","d":"scala.collection.mutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/LongMap$.html#empty-8e1","e":false,"i":"","n":"empty","t":"empty[V]: LongMap[V]","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new empty LongMap."},
{"l":"api/scala/collection/mutable/LongMap$.html#from-fa","e":false,"i":"","n":"from","t":"from[V](source: IterableOnce[(Long, V)]): LongMap[V]","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new LongMap from an existing source collection. A source collection\nwhich is already a LongMap gets cloned.\n"},
{"l":"api/scala/collection/mutable/LongMap$.html#fromZip-f9a","e":false,"i":"","n":"fromZip","t":"fromZip[V](keys: Array[Long], values: Array[V]): LongMap[V]","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new LongMap from arrays of keys and values.\nEquivalent to but more efficient than LongMap((keys zip values): _*).\n"},
{"l":"api/scala/collection/mutable/LongMap$.html#fromZip-ffffffe1","e":false,"i":"","n":"fromZip","t":"fromZip[V](keys: Iterable[Long], values: Iterable[V]): LongMap[V]","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new LongMap from keys and values.\nEquivalent to but more efficient than LongMap((keys zip values): _*).\n"},
{"l":"api/scala/collection/mutable/LongMap$.html#iterableFactory-fffffc73","e":false,"i":"","n":"iterableFactory","t":"iterableFactory[V]: Factory[(Long, V), LongMap[V]]","d":"scala.collection.mutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/LongMap$.html#newBuilder-fffffad1","e":false,"i":"","n":"newBuilder","t":"newBuilder[V]: ReusableBuilder[(Long, V), LongMap[V]]","d":"scala.collection.mutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/LongMap$.html#toBuildFrom-913","e":false,"i":"","n":"toBuildFrom","t":"toBuildFrom[V](factory: LongMap.type): BuildFrom[Any, (Long, V), LongMap[V]]","d":"scala.collection.mutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/LongMap$.html#toFactory-9a5","e":false,"i":"","n":"toFactory","t":"toFactory[V](dummy: LongMap.type): Factory[(Long, V), LongMap[V]]","d":"scala.collection.mutable.LongMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/LongMap$.html#withDefault-8f0","e":false,"i":"","n":"withDefault","t":"withDefault[V](default: Long => V): LongMap[V]","d":"scala.collection.mutable.LongMap","k":"def","x":"Creates a new empty LongMap with the supplied default"},
{"l":"api/scala/collection/mutable/LongMap$$LongMapBuilder.html#","e":false,"i":"","n":"LongMapBuilder","t":"LongMapBuilder[V] extends ReusableBuilder[(Long, V), LongMap[V]]","d":"scala.collection.mutable.LongMap","k":"class","x":"A builder for instances of LongMap."},
{"l":"api/scala/collection/mutable/LongMap$$LongMapBuilder.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.LongMap.LongMapBuilder","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method, the builder will contain no elements."},
{"l":"api/scala/collection/mutable/LongMap$$LongMapBuilder.html#result-fffffcb0","e":false,"i":"","n":"result","t":"result(): LongMap[V]","d":"scala.collection.mutable.LongMap.LongMapBuilder","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/Map.html#","e":false,"i":"","n":"Map","t":"Map[K, V] extends Iterable[(K, V)], Map[K, V], MapOps[K, V, Map, Map[K, V]], Growable[(K, V)], Shrinkable[K], MapFactoryDefaults[K, V, Map, Iterable]","d":"scala.collection.mutable","k":"trait","x":"Base type of mutable Maps"},
{"l":"api/scala/collection/mutable/Map.html#withDefault-fffff5dd","e":false,"i":"","n":"withDefault","t":"withDefault(d: K => V): Map[K, V]","d":"scala.collection.mutable.Map","k":"def","x":"The same map with a given default function.\nNote: The default is only used for apply. Other methods like get, contains, iterator, keys, etc.\nare not affected by withDefaultValue."},
{"l":"api/scala/collection/mutable/Map.html#withDefaultValue-fffff3df","e":false,"i":"","n":"withDefaultValue","t":"withDefaultValue(d: V): Map[K, V]","d":"scala.collection.mutable.Map","k":"def","x":"The same map with a given default value.\nNote: The default is only used for apply. Other methods like get, contains, iterator, keys, etc.\nare not affected by withDefaultValue."},
{"l":"api/scala/collection/mutable/Map$.html#","e":false,"i":"","n":"Map","t":"Map extends Delegate[Map]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/Map$$WithDefault.html#","e":false,"i":"","n":"WithDefault","t":"WithDefault[K, V](val underlying: Map[K, V], val defaultValue: K => V) extends AbstractMap[K, V], MapOps[K, V, Map, WithDefault[K, V]], Serializable","d":"scala.collection.mutable.Map","k":"class","x":""},
{"l":"api/scala/collection/mutable/Map$$WithDefault.html#addOne-fffff373","e":false,"i":"","n":"addOne","t":"addOne(elem: (K, V)): this.type","d":"scala.collection.mutable.Map.WithDefault","k":"def","x":"Adds a single element to this mutable map.\n"},
{"l":"api/scala/collection/mutable/Map$$WithDefault.html#defaultValue-0","e":false,"i":"","n":"defaultValue","t":"defaultValue: K => V","d":"scala.collection.mutable.Map.WithDefault","k":"val","x":""},
{"l":"api/scala/collection/mutable/Map$$WithDefault.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.mutable.Map.WithDefault","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/mutable/Map$$WithDefault.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.mutable.Map.WithDefault","k":"def","x":"An scala.collection.Iterator over the elements of this mutable map."},
{"l":"api/scala/collection/mutable/Map$$WithDefault.html#subtractOne-a32","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: K): this.type","d":"scala.collection.mutable.Map.WithDefault","k":"def","x":"Removes a single element from this mutable map.\n"},
{"l":"api/scala/collection/mutable/Map$$WithDefault.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: Map[K, V]","d":"scala.collection.mutable.Map.WithDefault","k":"val","x":""},
{"l":"api/scala/collection/mutable/MapOps.html#","e":false,"i":"","n":"MapOps","t":"MapOps[K, V, +CC <: ([X, Y] =>> MapOps[X, Y, CC, _]), +C <: MapOps[K, V, CC, C]] extends IterableOps[(K, V), Iterable, C], MapOps[K, V, CC, C], Cloneable[C], Builder[(K, V), C], Growable[(K, V)], Shrinkable[K]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/MapOps.html#--253","e":false,"i":"","n":"-","t":"-(key: K): C","d":"scala.collection.mutable.MapOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/MapOps.html#--fffff355","e":false,"i":"","n":"-","t":"-(key1: K, key2: K, keys: K*): C","d":"scala.collection.mutable.MapOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/MapOps.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.MapOps","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method the builder will contain no elements.\n"},
{"l":"api/scala/collection/mutable/MapOps.html#filterInPlace-fffff774","e":false,"i":"","n":"filterInPlace","t":"filterInPlace(p: (K, V) => Boolean): this.type","d":"scala.collection.mutable.MapOps","k":"def","x":"Retains only those mappings for which the predicate\np returns true.\n"},
{"l":"api/scala/collection/mutable/MapOps.html#getOrElseUpdate-fffff230","e":false,"i":"","n":"getOrElseUpdate","t":"getOrElseUpdate(key: K, defaultValue: => V): V","d":"scala.collection.mutable.MapOps","k":"def","x":"If given key is already in this map, returns associated value."},
{"l":"api/scala/collection/mutable/MapOps.html#mapValuesInPlace-fffff774","e":false,"i":"","n":"mapValuesInPlace","t":"mapValuesInPlace(f: (K, V) => V): this.type","d":"scala.collection.mutable.MapOps","k":"def","x":"Applies a transformation function to all values contained in this map.\nThe transformation function produces new values from existing keys\nassociated values.\n"},
{"l":"api/scala/collection/mutable/MapOps.html#put-fffffa63","e":false,"i":"","n":"put","t":"put(key: K, value: V): Option[V]","d":"scala.collection.mutable.MapOps","k":"def","x":"Adds a new key/value pair to this map and optionally returns previously bound value.\nIf the map already contains a\nmapping for the key, it will be overridden by the new value.\n"},
{"l":"api/scala/collection/mutable/MapOps.html#remove-fffffb50","e":false,"i":"","n":"remove","t":"remove(key: K): Option[V]","d":"scala.collection.mutable.MapOps","k":"def","x":"Removes a key from this map, returning the value associated previously\nwith that key as an option."},
{"l":"api/scala/collection/mutable/MapOps.html#result-fffffe46","e":false,"i":"","n":"result","t":"result(): C","d":"scala.collection.mutable.MapOps","k":"def","x":"Result collection consisting of all elements appended so far."},
{"l":"api/scala/collection/mutable/MapOps.html#retain-fffff774","e":false,"i":"","n":"retain","t":"retain(p: (K, V) => Boolean): this.type","d":"scala.collection.mutable.MapOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/MapOps.html#transform-fffff774","e":false,"i":"","n":"transform","t":"transform(f: (K, V) => V): this.type","d":"scala.collection.mutable.MapOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/MapOps.html#update-ef2","e":false,"i":"","n":"update","t":"update(key: K, value: V): Unit","d":"scala.collection.mutable.MapOps","k":"def","x":"Adds a new key/value pair to this map.\nIf the map already contains a\nmapping for the key, it will be overridden by the new value.\n"},
{"l":"api/scala/collection/mutable/MapOps.html#updateWith-fffffbdb","e":false,"i":"","n":"updateWith","t":"updateWith(key: K)(remappingFunction: Option[V] => Option[V]): Option[V]","d":"scala.collection.mutable.MapOps","k":"def","x":"Update a mapping for the specified key and its current optionally mapped value\n(Some if there is current mapping, None if not)."},
{"l":"api/scala/collection/mutable/MapOps.html#updated-a0f","e":false,"i":"","n":"updated","t":"updated[V1 >: V](key: K, value: V1): CC[K, V1]","d":"scala.collection.mutable.MapOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/MultiMap.html#","e":false,"i":"","n":"MultiMap","t":"MultiMap[K, V] extends Map[K, Set[V]]","d":"scala.collection.mutable","k":"trait","x":"A trait for mutable maps with multiple values assigned to a key."},
{"l":"api/scala/collection/mutable/MultiMap.html#addBinding-78d","e":false,"i":"","n":"addBinding","t":"addBinding(key: K, value: V): this.type","d":"scala.collection.mutable.MultiMap","k":"def","x":"Assigns the specified value to a specified key.  If the key\nalready has a binding to equal to value, nothing is changed;\notherwise a new binding is added for that key.\n"},
{"l":"api/scala/collection/mutable/MultiMap.html#entryExists-fffff582","e":false,"i":"","n":"entryExists","t":"entryExists(key: K, p: V => Boolean): Boolean","d":"scala.collection.mutable.MultiMap","k":"def","x":"Checks if there exists a binding to key such that it satisfies the predicate p.\n"},
{"l":"api/scala/collection/mutable/MultiMap.html#makeSet-0","e":false,"i":"","n":"makeSet","t":"makeSet: Set[V]","d":"scala.collection.mutable.MultiMap","k":"def","x":"Creates a new set."},
{"l":"api/scala/collection/mutable/MultiMap.html#removeBinding-78d","e":false,"i":"","n":"removeBinding","t":"removeBinding(key: K, value: V): this.type","d":"scala.collection.mutable.MultiMap","k":"def","x":"Removes the binding of value to key if it exists, otherwise this\noperation doesn't have any effect."},
{"l":"api/scala/collection/mutable/OpenHashMap$.html#","e":false,"i":"","n":"OpenHashMap","t":"OpenHashMap extends MapFactory[OpenHashMap]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/OpenHashMap$.html#empty-266","e":false,"i":"","n":"empty","t":"empty[K, V]: OpenHashMap[K, V]","d":"scala.collection.mutable.OpenHashMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/mutable/OpenHashMap$.html#from-a9d","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): OpenHashMap[K, V]","d":"scala.collection.mutable.OpenHashMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/mutable/OpenHashMap$.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), OpenHashMap[K, V]]","d":"scala.collection.mutable.OpenHashMap","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/mutable/OpenHashMap.html#","e":false,"i":"","n":"OpenHashMap","t":"OpenHashMap[Key, Value](initialSize: Int) extends AbstractMap[Key, Value], MapOps[Key, Value, OpenHashMap, OpenHashMap[Key, Value]], StrictOptimizedIterableOps[(Key, Value), Iterable, OpenHashMap[Key, Value]], MapFactoryDefaults[Key, Value, OpenHashMap, Iterable], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"A mutable hash map based on an open addressing method. The precise scheme is\nundefined, but it should make a reasonable effort to ensure that an insert\nwith consecutive hash codes is not unnecessarily penalised. In particular,\nmappings of consecutive integer keys should work without significant\nperformance loss.\n"},
{"l":"api/scala/collection/mutable/OpenHashMap.html#addOne-166","e":false,"i":"","n":"addOne","t":"addOne(kv: (Key, Value)): this.type","d":"scala.collection.mutable.OpenHashMap","k":"def","x":"Adds a single element to this open hash map.\n"},
{"l":"api/scala/collection/mutable/OpenHashMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: Key): Option[Value]","d":"scala.collection.mutable.OpenHashMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/mutable/OpenHashMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(Key, Value)]","d":"scala.collection.mutable.OpenHashMap","k":"def","x":"An iterator over the elements of this map. Use of this iterator follows\nthe same contract for concurrent modification as the foreach method.\n"},
{"l":"api/scala/collection/mutable/OpenHashMap.html#subtractOne-ffffff47","e":false,"i":"","n":"subtractOne","t":"subtractOne(key: Key): this.type","d":"scala.collection.mutable.OpenHashMap","k":"def","x":"Removes a single element from this open hash map.\n"},
{"l":"api/scala/collection/mutable/OpenHashMap.html#<init>-266","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.mutable.OpenHashMap","k":"def","x":"A default constructor creates a hashmap with initial size 8.\n"},
{"l":"api/scala/collection/mutable/PriorityQueue.html#","e":false,"i":"","n":"PriorityQueue","t":"PriorityQueue[A](implicit val ord: Ordering[A]) extends AbstractIterable[A], Iterable[A], IterableOps[A, Iterable, PriorityQueue[A]], StrictOptimizedIterableOps[A, Iterable, PriorityQueue[A]], Builder[A, PriorityQueue[A]], Cloneable[PriorityQueue[A]], Growable[A], Serializable","d":"scala.collection.mutable","k":"class","x":"A heap-based priority queue."},
{"l":"api/scala/collection/mutable/PriorityQueue.html#++-fd8","e":false,"i":"","n":"++","t":"++(xs: IterableOnce[A]): PriorityQueue[A]","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Adds all elements provided by a IterableOnce object\ninto the priority queue.\n"},
{"l":"api/scala/collection/mutable/PriorityQueue.html#addOne-c90","e":false,"i":"","n":"addOne","t":"addOne(elem: A): this.type","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Inserts a single element into the priority queue.\n"},
{"l":"api/scala/collection/mutable/PriorityQueue.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Removes all elements from the queue. After this operation is completed,\nthe queue will be empty.\n"},
{"l":"api/scala/collection/mutable/PriorityQueue.html#dequeue-993","e":false,"i":"","n":"dequeue","t":"dequeue(): A","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Returns the element with the highest priority in the queue,\nand removes this element from the queue.\n"},
{"l":"api/scala/collection/mutable/PriorityQueue.html#dequeueAll-fffffe9c","e":false,"i":"","n":"dequeueAll","t":"dequeueAll[A1 >: A]: Seq[A1]","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Dequeues all elements and returns them in a sequence, in priority order."},
{"l":"api/scala/collection/mutable/PriorityQueue.html#enqueue-fffff9b7","e":false,"i":"","n":"enqueue","t":"enqueue(elems: A*): Unit","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Adds all elements to the queue.\n"},
{"l":"api/scala/collection/mutable/PriorityQueue.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Alias for size."},
{"l":"api/scala/collection/mutable/PriorityQueue.html#mapInPlace-90e","e":false,"i":"","n":"mapInPlace","t":"mapInPlace(f: A => A): this.type","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Replace the contents of this priority queue with the mapped result.\n"},
{"l":"api/scala/collection/mutable/PriorityQueue.html#ord-0","e":false,"i":"","n":"ord","t":"ord: Ordering[A]","d":"scala.collection.mutable.PriorityQueue","k":"val","x":""},
{"l":"api/scala/collection/mutable/PriorityQueue.html#orderedCompanion-0","e":false,"i":"","n":"orderedCompanion","t":"orderedCompanion: PriorityQueue.type","d":"scala.collection.mutable.PriorityQueue","k":"def","x":""},
{"l":"api/scala/collection/mutable/PriorityQueue.html#result-fffff93d","e":false,"i":"","n":"result","t":"result(): PriorityQueue[A]","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Result collection consisting of all elements appended so far."},
{"l":"api/scala/collection/mutable/PriorityQueue.html#reverse-0","e":false,"i":"","n":"reverse","t":"reverse: PriorityQueue[A]","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Returns the reverse of this priority queue. The new priority queue has\nthe same elements as the original, but the opposite ordering."},
{"l":"api/scala/collection/mutable/PriorityQueue.html#reverseIterator-0","e":false,"i":"","n":"reverseIterator","t":"reverseIterator: Iterator[A]","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Returns an iterator which yields all the elements in the reverse order\nthan that returned by the method iterator."},
{"l":"api/scala/collection/mutable/PriorityQueue.html#toQueue-0","e":false,"i":"","n":"toQueue","t":"toQueue: Queue[A]","d":"scala.collection.mutable.PriorityQueue","k":"def","x":"Returns a regular queue containing the same elements."},
{"l":"api/scala/collection/mutable/PriorityQueue$.html#","e":false,"i":"","n":"PriorityQueue","t":"PriorityQueue extends SortedIterableFactory[PriorityQueue]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/PriorityQueue$.html#empty-1e","e":false,"i":"","n":"empty","t":"empty[A : Ordering]: PriorityQueue[A]","d":"scala.collection.mutable.PriorityQueue","k":"def","x":""},
{"l":"api/scala/collection/mutable/PriorityQueue$.html#from-fffff625","e":false,"i":"","n":"from","t":"from[E : Ordering](it: IterableOnce[E]): PriorityQueue[E]","d":"scala.collection.mutable.PriorityQueue","k":"def","x":""},
{"l":"api/scala/collection/mutable/PriorityQueue$.html#newBuilder-aac","e":false,"i":"","n":"newBuilder","t":"newBuilder[A : Ordering]: Builder[A, PriorityQueue[A]]","d":"scala.collection.mutable.PriorityQueue","k":"def","x":""},
{"l":"api/scala/collection/mutable/Queue.html#","e":false,"i":"","n":"Queue","t":"Queue[A] extends ArrayDeque[A], IndexedSeqOps[A, Queue, Queue[A]], StrictOptimizedSeqOps[A, Queue, Queue[A]], IterableFactoryDefaults[A, Queue], ArrayDequeOps[A, Queue, Queue[A]], Cloneable[Queue[A]], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"Queue objects implement data structures that allow to\ninsert and retrieve elements in a first-in-first-out (FIFO) manner."},
{"l":"api/scala/collection/mutable/Queue.html#dequeue-993","e":false,"i":"","n":"dequeue","t":"dequeue(): A","d":"scala.collection.mutable.Queue","k":"def","x":"Removes the first element from this queue and returns it\n"},
{"l":"api/scala/collection/mutable/Queue.html#dequeueAll-fffffafc","e":false,"i":"","n":"dequeueAll","t":"dequeueAll(p: A => Boolean): Seq[A]","d":"scala.collection.mutable.Queue","k":"def","x":"Returns all elements in the queue which satisfy the\ngiven predicate, and removes those elements from the queue.\n"},
{"l":"api/scala/collection/mutable/Queue.html#dequeueFirst-94e","e":false,"i":"","n":"dequeueFirst","t":"dequeueFirst(p: A => Boolean): Option[A]","d":"scala.collection.mutable.Queue","k":"def","x":"Returns the first element in the queue which satisfies the\ngiven predicate, and removes this element from the queue.\n"},
{"l":"api/scala/collection/mutable/Queue.html#dequeueWhile-8a8","e":false,"i":"","n":"dequeueWhile","t":"dequeueWhile(f: A => Boolean): Seq[A]","d":"scala.collection.mutable.Queue","k":"def","x":"Returns and dequeues all elements from the queue which satisfy the given predicate\n"},
{"l":"api/scala/collection/mutable/Queue.html#enqueue-fffff2d4","e":false,"i":"","n":"enqueue","t":"enqueue(elem: A): this.type","d":"scala.collection.mutable.Queue","k":"def","x":"Add elements to the end of this queue\n"},
{"l":"api/scala/collection/mutable/Queue.html#enqueue-992","e":false,"i":"","n":"enqueue","t":"enqueue(elem1: A, elem2: A, elems: A*): this.type","d":"scala.collection.mutable.Queue","k":"def","x":"Enqueue two or more elements at the end of the queue. The last element\nof the sequence will be on end of the queue.\n"},
{"l":"api/scala/collection/mutable/Queue.html#enqueueAll-fffffe1c","e":false,"i":"","n":"enqueueAll","t":"enqueueAll(elems: IterableOnce[A]): this.type","d":"scala.collection.mutable.Queue","k":"def","x":"Enqueues all elements in the given iterable object into the queue. The\nlast element in the iterable object will be on front of the new queue.\n"},
{"l":"api/scala/collection/mutable/Queue.html#front-0","e":false,"i":"","n":"front","t":"front: A","d":"scala.collection.mutable.Queue","k":"def","x":"Returns the first element in the queue, or throws an error if there\nis no element contained in the queue.\n"},
{"l":"api/scala/collection/mutable/Queue.html#<init>-fffff817","e":false,"i":"","n":"this","t":"this(initialSize: Int)","d":"scala.collection.mutable.Queue","k":"def","x":""},
{"l":"api/scala/collection/mutable/Queue$.html#","e":false,"i":"","n":"Queue","t":"Queue extends StrictOptimizedSeqFactory[Queue]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/Queue$.html#empty-fffff0f2","e":false,"i":"","n":"empty","t":"empty[A]: Queue[A]","d":"scala.collection.mutable.Queue","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/mutable/Queue$.html#from-b4b","e":false,"i":"","n":"from","t":"from[A](source: IterableOnce[A]): Queue[A]","d":"scala.collection.mutable.Queue","k":"def","x":"Creates a target queue from an existing source collection\n"},
{"l":"api/scala/collection/mutable/Queue$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, Queue[A]]","d":"scala.collection.mutable.Queue","k":"def","x":""},
{"l":"api/scala/collection/mutable/ReusableBuilder.html#","e":false,"i":"","n":"ReusableBuilder","t":"ReusableBuilder[-Elem, +To] extends Builder[Elem, To]","d":"scala.collection.mutable","k":"trait","x":"ReusableBuilder is a marker trait that indicates that a Builder\ncan be reused to build more than one instance of a collection.  In\nparticular, calling result() followed by clear() will produce a\ncollection and reset the builder to begin building a new collection\nof the same type."},
{"l":"api/scala/collection/mutable/Seq.html#","e":false,"i":"","n":"Seq","t":"Seq[A] extends Iterable[A], Seq[A], SeqOps[A, Seq, Seq[A]], IterableFactoryDefaults[A, Seq]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/Seq$.html#","e":false,"i":"","n":"Seq","t":"Seq extends Delegate[Seq]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/SeqMap.html#","e":false,"i":"","n":"SeqMap","t":"SeqMap[K, V] extends Map[K, V], SeqMap[K, V], MapOps[K, V, SeqMap, SeqMap[K, V]], MapFactoryDefaults[K, V, SeqMap, Iterable]","d":"scala.collection.mutable","k":"trait","x":"A generic trait for ordered mutable maps. Concrete classes have to provide\nfunctionality for the abstract methods in SeqMap."},
{"l":"api/scala/collection/mutable/SeqMap$.html#","e":false,"i":"","n":"SeqMap","t":"SeqMap extends Delegate[SeqMap]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/SeqOps.html#","e":false,"i":"","n":"SeqOps","t":"SeqOps[A, +CC[_], +C <: AnyRef] extends SeqOps[A, CC, C], Cloneable[C]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/SeqOps.html#transform-db2","e":false,"i":"","n":"transform","t":"transform(f: A => A): this.type","d":"scala.collection.mutable.SeqOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/SeqOps.html#update-386","e":false,"i":"","n":"update","t":"update(idx: Int, elem: A): Unit","d":"scala.collection.mutable.SeqOps","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/collection/mutable/Set.html#","e":false,"i":"","n":"Set","t":"Set[A] extends Iterable[A], Set[A], SetOps[A, Set, Set[A]], IterableFactoryDefaults[A, Set]","d":"scala.collection.mutable","k":"trait","x":"Base trait for mutable sets"},
{"l":"api/scala/collection/mutable/Set$.html#","e":false,"i":"","n":"Set","t":"Set extends Delegate[Set]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/SetOps.html#","e":false,"i":"","n":"SetOps","t":"SetOps[A, +CC[X], +C <: SetOps[A, CC, C]] extends SetOps[A, CC, C], IterableOps[A, CC, C], Cloneable[C], Builder[A, C], Growable[A], Shrinkable[A]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/SetOps.html#add-4ad","e":false,"i":"","n":"add","t":"add(elem: A): Boolean","d":"scala.collection.mutable.SetOps","k":"def","x":"Check whether the set contains the given element, and add it if not.\n"},
{"l":"api/scala/collection/mutable/SetOps.html#diff-7a6","e":false,"i":"","n":"diff","t":"diff(that: Set[A]): C","d":"scala.collection.mutable.SetOps","k":"def","x":"Computes the difference of this set and another set.\n"},
{"l":"api/scala/collection/mutable/SetOps.html#filterInPlace-acf","e":false,"i":"","n":"filterInPlace","t":"filterInPlace(p: A => Boolean): this.type","d":"scala.collection.mutable.SetOps","k":"def","x":"Removes all elements from the set for which do not satisfy a predicate."},
{"l":"api/scala/collection/mutable/SetOps.html#remove-4ad","e":false,"i":"","n":"remove","t":"remove(elem: A): Boolean","d":"scala.collection.mutable.SetOps","k":"def","x":"Removes an element from this set.\n"},
{"l":"api/scala/collection/mutable/SetOps.html#result-180","e":false,"i":"","n":"result","t":"result(): C","d":"scala.collection.mutable.SetOps","k":"def","x":"Result collection consisting of all elements appended so far."},
{"l":"api/scala/collection/mutable/SetOps.html#retain-c9d","e":false,"i":"","n":"retain","t":"retain(p: A => Boolean): Unit","d":"scala.collection.mutable.SetOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/SetOps.html#update-9b9","e":false,"i":"","n":"update","t":"update(elem: A, included: Boolean): Unit","d":"scala.collection.mutable.SetOps","k":"def","x":"Updates the presence of a single element in this set."},
{"l":"api/scala/collection/mutable/Shrinkable.html#","e":false,"i":"","n":"Shrinkable","t":"Shrinkable[-A]","d":"scala.collection.mutable","k":"trait","x":"This trait forms part of collections that can be reduced\nusing a -= operator."},
{"l":"api/scala/collection/mutable/Shrinkable.html#--=-fffff8b8","e":false,"i":"","n":"--=","t":"--=(xs: IterableOnce[A]): this.type","d":"scala.collection.mutable.Shrinkable","k":"def","x":"Alias for subtractAll"},
{"l":"api/scala/collection/mutable/Shrinkable.html#-=-fffff700","e":false,"i":"","n":"-=","t":"-=(elem: A): this.type","d":"scala.collection.mutable.Shrinkable","k":"def","x":"Alias for subtractOne"},
{"l":"api/scala/collection/mutable/Shrinkable.html#-=-fffff702","e":false,"i":"","n":"-=","t":"-=(elem1: A, elem2: A, elems: A*): this.type","d":"scala.collection.mutable.Shrinkable","k":"def","x":"Removes two or more elements from this shrinkable collection.\n"},
{"l":"api/scala/collection/mutable/Shrinkable.html#subtractAll-fffff8b8","e":false,"i":"","n":"subtractAll","t":"subtractAll(xs: IterableOnce[A]): this.type","d":"scala.collection.mutable.Shrinkable","k":"def","x":"Removes all elements produced by an iterator from this shrinkable collection.\n"},
{"l":"api/scala/collection/mutable/Shrinkable.html#subtractOne-fffff700","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: A): this.type","d":"scala.collection.mutable.Shrinkable","k":"def","x":"Removes a single element from this shrinkable collection.\n"},
{"l":"api/scala/collection/mutable/SortedMap.html#","e":false,"i":"","n":"SortedMap","t":"SortedMap[K, V] extends SortedMap[K, V], Map[K, V], SortedMapOps[K, V, SortedMap, SortedMap[K, V]], SortedMapFactoryDefaults[K, V, SortedMap, Iterable, Map]","d":"scala.collection.mutable","k":"trait","x":"Base type for mutable sorted map collections\n"},
{"l":"api/scala/collection/mutable/SortedMap$.html#","e":false,"i":"","n":"SortedMap","t":"SortedMap extends Delegate[SortedMap]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/SortedMap$$WithDefault.html#","e":false,"i":"","n":"WithDefault","t":"WithDefault[K, V](underlying: SortedMap[K, V], defaultValue: K => V) extends WithDefault[K, V], SortedMap[K, V], SortedMapOps[K, V, SortedMap, WithDefault[K, V]], Serializable","d":"scala.collection.mutable.SortedMap","k":"class","x":""},
{"l":"api/scala/collection/mutable/SortedMap$$WithDefault.html#iteratorFrom-303","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: K): Iterator[(K, V)]","d":"scala.collection.mutable.SortedMap.WithDefault","k":"def","x":"Creates an iterator over all the key/value pairs\ncontained in this map having a key greater than or\nequal to start according to the ordering of\nthis map. x.iteratorFrom(y) is equivalent\nto but often more efficient than x.from(y).iterator.\n"},
{"l":"api/scala/collection/mutable/SortedMap$$WithDefault.html#keysIteratorFrom-303","e":false,"i":"","n":"keysIteratorFrom","t":"keysIteratorFrom(start: K): Iterator[K]","d":"scala.collection.mutable.SortedMap.WithDefault","k":"def","x":"Creates an iterator over all the keys(or elements)  contained in this\ncollection greater than or equal to start\naccording to the ordering of this collection. x.keysIteratorFrom(y)\nis equivalent to but often more efficient than\nx.from(y).keysIterator.\n"},
{"l":"api/scala/collection/mutable/SortedMap$$WithDefault.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[K]","d":"scala.collection.mutable.SortedMap.WithDefault","k":"def","x":""},
{"l":"api/scala/collection/mutable/SortedMap$$WithDefault.html#rangeImpl-ffffff08","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[K], until: Option[K]): WithDefault[K, V]","d":"scala.collection.mutable.SortedMap.WithDefault","k":"def","x":"Creates a ranged projection of this collection. Any mutations in the\nranged projection will update this collection and vice versa."},
{"l":"api/scala/collection/mutable/SortedMapOps.html#","e":false,"i":"","n":"SortedMapOps","t":"SortedMapOps[K, V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, _]), +C <: SortedMapOps[K, V, CC, C]] extends SortedMapOps[K, V, CC, C], MapOps[K, V, Map, C]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/SortedMapOps.html#unsorted-0","e":false,"i":"","n":"unsorted","t":"unsorted: Map[K, V]","d":"scala.collection.mutable.SortedMapOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/SortedSet.html#","e":false,"i":"","n":"SortedSet","t":"SortedSet[A] extends Set[A], SortedSet[A], SortedSetOps[A, SortedSet, SortedSet[A]], SortedSetFactoryDefaults[A, SortedSet, Set]","d":"scala.collection.mutable","k":"trait","x":"Base type for mutable sorted set collections\n"},
{"l":"api/scala/collection/mutable/SortedSet$.html#","e":false,"i":"","n":"SortedSet","t":"SortedSet extends Delegate[SortedSet]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/SortedSetOps.html#","e":false,"i":"","n":"SortedSetOps","t":"SortedSetOps[A, +CC <: (SortedSet), +C <: SortedSetOps[A, CC, C]] extends SetOps[A, Set, C], SortedSetOps[A, CC, C]","d":"scala.collection.mutable","k":"trait","x":""},
{"l":"api/scala/collection/mutable/SortedSetOps.html#unsorted-0","e":false,"i":"","n":"unsorted","t":"unsorted: Set[A]","d":"scala.collection.mutable.SortedSetOps","k":"def","x":""},
{"l":"api/scala/collection/mutable/Stack.html#","e":false,"i":"","n":"Stack","t":"Stack[A] extends ArrayDeque[A], IndexedSeqOps[A, Stack, Stack[A]], StrictOptimizedSeqOps[A, Stack, Stack[A]], IterableFactoryDefaults[A, Stack], ArrayDequeOps[A, Stack, Stack[A]], Cloneable[Stack[A]], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"A stack implements a data structure which allows to store and retrieve\nobjects in a last-in-first-out (LIFO) fashion."},
{"l":"api/scala/collection/mutable/Stack.html#pop-993","e":false,"i":"","n":"pop","t":"pop(): A","d":"scala.collection.mutable.Stack","k":"def","x":"Removes the top element from this stack and return it\n"},
{"l":"api/scala/collection/mutable/Stack.html#popAll-fffff697","e":false,"i":"","n":"popAll","t":"popAll(): Seq[A]","d":"scala.collection.mutable.Stack","k":"def","x":"Pop all elements from this stack and return it\n"},
{"l":"api/scala/collection/mutable/Stack.html#popWhile-8a8","e":false,"i":"","n":"popWhile","t":"popWhile(f: A => Boolean): Seq[A]","d":"scala.collection.mutable.Stack","k":"def","x":"Returns and removes all elements from the top of this stack which satisfy the given predicate\n"},
{"l":"api/scala/collection/mutable/Stack.html#push-fffffc4b","e":false,"i":"","n":"push","t":"push(elem: A): this.type","d":"scala.collection.mutable.Stack","k":"def","x":"Add elements to the top of this stack\n"},
{"l":"api/scala/collection/mutable/Stack.html#push-309","e":false,"i":"","n":"push","t":"push(elem1: A, elem2: A, elems: A*): this.type","d":"scala.collection.mutable.Stack","k":"def","x":"Push two or more elements onto the stack. The last element\nof the sequence will be on top of the new stack.\n"},
{"l":"api/scala/collection/mutable/Stack.html#pushAll-fffff793","e":false,"i":"","n":"pushAll","t":"pushAll(elems: IterableOnce[A]): this.type","d":"scala.collection.mutable.Stack","k":"def","x":"Push all elements in the given iterable object onto the stack. The\nlast element in the iterable object will be on top of the new stack.\n"},
{"l":"api/scala/collection/mutable/Stack.html#<init>-fffff18e","e":false,"i":"","n":"this","t":"this(initialSize: Int)","d":"scala.collection.mutable.Stack","k":"def","x":""},
{"l":"api/scala/collection/mutable/Stack.html#top-0","e":false,"i":"","n":"top","t":"top: A","d":"scala.collection.mutable.Stack","k":"def","x":"Returns the top element of the stack. This method will not remove\nthe element from the stack. An error is signaled if there is no\nelement on the stack.\n"},
{"l":"api/scala/collection/mutable/Stack$.html#","e":false,"i":"","n":"Stack","t":"Stack extends StrictOptimizedSeqFactory[Stack]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/Stack$.html#empty-fffffa69","e":false,"i":"","n":"empty","t":"empty[A]: Stack[A]","d":"scala.collection.mutable.Stack","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/mutable/Stack$.html#from-4c2","e":false,"i":"","n":"from","t":"from[A](source: IterableOnce[A]): Stack[A]","d":"scala.collection.mutable.Stack","k":"def","x":"Creates a target stack from an existing source collection\n"},
{"l":"api/scala/collection/mutable/Stack$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, Stack[A]]","d":"scala.collection.mutable.Stack","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#","e":false,"i":"","n":"StringBuilder","t":"StringBuilder(val underlying: StringBuilder) extends AbstractSeq[Char], ReusableBuilder[Char, String], IndexedSeq[Char], IndexedSeqOps[Char, IndexedSeq, StringBuilder], IterableFactoryDefaults[Char, IndexedSeq], CharSequence, Serializable","d":"scala.collection.mutable","k":"class","x":"A builder of String which is also a mutable sequence of characters."},
{"l":"api/scala/collection/mutable/StringBuilder.html#++=-85f","e":false,"i":"","n":"++=","t":"++=(s: String): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Alias for addAll"},
{"l":"api/scala/collection/mutable/StringBuilder.html#addAll-85f","e":false,"i":"","n":"addAll","t":"addAll(s: String): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Overloaded version of addAll that takes a string"},
{"l":"api/scala/collection/mutable/StringBuilder.html#addOne-258","e":false,"i":"","n":"addOne","t":"addOne(x: Char): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Adds a single element to this string builder.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-90d","e":false,"i":"","n":"append","t":"append(x: Any): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Appends the string representation of the given argument,\nwhich is converted to a String with String.valueOf.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-85f","e":false,"i":"","n":"append","t":"append(s: String): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Appends the given String to this sequence.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-605","e":false,"i":"","n":"append","t":"append(cs: CharSequence): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Appends the given CharSequence to this sequence.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-ff4","e":false,"i":"","n":"append","t":"append(s: StringBuilder): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Appends the specified string builder to this sequence.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-51a","e":false,"i":"","n":"append","t":"append(x: Boolean): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Append the String representation of the given primitive type\nto this sequence.  The argument is converted to a String with\nString.valueOf.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-fffffa8a","e":false,"i":"","n":"append","t":"append(x: Byte): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-c6e","e":false,"i":"","n":"append","t":"append(x: Short): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-ffffffa1","e":false,"i":"","n":"append","t":"append(x: Int): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-8fe","e":false,"i":"","n":"append","t":"append(x: Long): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-24e","e":false,"i":"","n":"append","t":"append(x: Float): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-493","e":false,"i":"","n":"append","t":"append(x: Double): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#append-258","e":false,"i":"","n":"append","t":"append(x: Char): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#appendAll-85f","e":false,"i":"","n":"appendAll","t":"appendAll(xs: String): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#appendAll-fffffc55","e":false,"i":"","n":"appendAll","t":"appendAll(xs: IterableOnce[Char]): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Appends all the Chars in the given IterableOnce[Char] to this sequence.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#appendAll-4ba","e":false,"i":"","n":"appendAll","t":"appendAll(xs: Array[Char]): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Appends all the Chars in the given Array[Char] to this sequence.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#appendAll-89a","e":false,"i":"","n":"appendAll","t":"appendAll(xs: Array[Char], offset: Int, len: Int): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Appends a portion of the given Array[Char] to this sequence.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#apply-fffffd85","e":false,"i":"","n":"apply","t":"apply(i: Int): Char","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/StringBuilder.html#capacity-0","e":false,"i":"","n":"capacity","t":"capacity: Int","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Returns the current capacity, which is the size of the underlying array.\nA new array will be allocated if the current capacity is exceeded.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#charAt-fffffd85","e":false,"i":"","n":"charAt","t":"charAt(index: Int): Char","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Returns the Char at the specified index, counting from 0 as in Arrays.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method, the builder will contain no elements."},
{"l":"api/scala/collection/mutable/StringBuilder.html#delete-99a","e":false,"i":"","n":"delete","t":"delete(start: Int, end: Int): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Remove a subsequence of Chars from this sequence, starting at the\ngiven start index (inclusive) and extending to the end index (exclusive)\nor to the end of the String, whichever comes first.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#deleteCharAt-ffffffa1","e":false,"i":"","n":"deleteCharAt","t":"deleteCharAt(index: Int): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Removes the Char at the specified index.  The sequence is\nshortened by one.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#ensureCapacity-fffff3b3","e":false,"i":"","n":"ensureCapacity","t":"ensureCapacity(newCapacity: Int): Unit","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Ensure that the capacity is at least the given argument.\nIf the argument is greater than the current capacity, new\nstorage will be allocated with size equal to the given\nargument or to (2 * capacity + 2), whichever is larger.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#indexOf-a62","e":false,"i":"","n":"indexOf","t":"indexOf(str: String): Int","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Finds the index of the first occurrence of the specified substring.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#indexOf-305","e":false,"i":"","n":"indexOf","t":"indexOf(str: String, fromIndex: Int): Int","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Finds the index of the first occurrence of the specified substring.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-fffff4f4","e":false,"i":"","n":"insert","t":"insert(index: Int, x: Any): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Inserts the String representation (via String.valueOf) of the given\nargument into this sequence at the given index.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-fffff446","e":false,"i":"","n":"insert","t":"insert(index: Int, x: String): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Inserts the String into this character sequence.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-fffffa93","e":false,"i":"","n":"insert","t":"insert(index: Int, x: Boolean): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Calls String.valueOf on the given primitive value, and inserts the\nString at the given index.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-ffffffb1","e":false,"i":"","n":"insert","t":"insert(index: Int, x: Byte): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-c27","e":false,"i":"","n":"insert","t":"insert(index: Int, x: Short): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-99a","e":false,"i":"","n":"insert","t":"insert(index: Int, x: Int): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-fffffe25","e":false,"i":"","n":"insert","t":"insert(index: Int, x: Long): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-fffff207","e":false,"i":"","n":"insert","t":"insert(index: Int, x: Float): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-fffffbfa","e":false,"i":"","n":"insert","t":"insert(index: Int, x: Double): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#insert-fffff77f","e":false,"i":"","n":"insert","t":"insert(index: Int, x: Char): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#insertAll-441","e":false,"i":"","n":"insertAll","t":"insertAll(index: Int, str: Array[Char], offset: Int, len: Int): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Inserts a subarray of the given Array[Char] at the given index\nof this sequence.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#insertAll-ffffffce","e":false,"i":"","n":"insertAll","t":"insertAll(index: Int, xs: IterableOnce[Char]): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Inserts the given Seq[Char] into this sequence at the given index.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#insertAll-fffffc21","e":false,"i":"","n":"insertAll","t":"insertAll(index: Int, xs: Array[Char]): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Inserts the given Array[Char] into this sequence at the given index.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#lastIndexOf-a62","e":false,"i":"","n":"lastIndexOf","t":"lastIndexOf(str: String): Int","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Finds the index of the last occurrence of the specified substring.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#lastIndexOf-305","e":false,"i":"","n":"lastIndexOf","t":"lastIndexOf(str: String, fromIndex: Int): Int","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Finds the index of the last occurrence of the specified substring.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.StringBuilder","k":"def","x":"The length (number of elements) of the string builder. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/StringBuilder.html#length_=-fffff3b3","e":false,"i":"","n":"length_=","t":"length_=(n: Int): Unit","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#replace-c3f","e":false,"i":"","n":"replace","t":"replace(start: Int, end: Int, str: String): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Replaces a subsequence of Chars with the given String.  The semantics\nare as in delete, with the String argument then inserted at index 'start'.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#result-665","e":false,"i":"","n":"result","t":"result(): String","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Produces a collection from the added elements."},
{"l":"api/scala/collection/mutable/StringBuilder.html#reverseContents-fffff5ba","e":false,"i":"","n":"reverseContents","t":"reverseContents(): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Like reverse, but destructively updates the target StringBuilder.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#reverseInPlace-fffff5ba","e":false,"i":"","n":"reverseInPlace","t":"reverseInPlace(): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Like reverse, but destructively updates the target StringBuilder.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#setCharAt-fffff77f","e":false,"i":"","n":"setCharAt","t":"setCharAt(index: Int, ch: Char): this.type","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Update the sequence at the given index to hold the specified Char.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#setLength-fffff3b3","e":false,"i":"","n":"setLength","t":"setLength(len: Int): Unit","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Sets the length of the character sequence.  If the current sequence\nis shorter than the given length, it is padded with nulls; if it is\nlonger, it is truncated.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#subSequence-46b","e":false,"i":"","n":"subSequence","t":"subSequence(start: Int, end: Int): CharSequence","d":"scala.collection.mutable.StringBuilder","k":"def","x":"For implementing CharSequence.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#substring-78c","e":false,"i":"","n":"substring","t":"substring(start: Int): String","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Returns a new String made up of a subsequence of this sequence,\nbeginning at the given index and extending to the end of the sequence."},
{"l":"api/scala/collection/mutable/StringBuilder.html#substring-245","e":false,"i":"","n":"substring","t":"substring(start: Int, end: Int): String","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Returns a new String made up of a subsequence of this sequence,\nbeginning at the start index (inclusive) and extending to the\nend index (exclusive)."},
{"l":"api/scala/collection/mutable/StringBuilder.html#<init>-fffff5ba","e":false,"i":"","n":"this","t":"this()","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#<init>-ffffffa1","e":false,"i":"","n":"this","t":"this(capacity: Int)","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Constructs a string builder with no characters in it and an\ninitial capacity specified by the capacity argument.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#<init>-85f","e":false,"i":"","n":"this","t":"this(str: String)","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Constructs a string builder with initial characters\nequal to characters of str.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#<init>-fffff446","e":false,"i":"","n":"this","t":"this(initCapacity: Int, initValue: String)","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Constructs a string builder initialized with string value initValue\nand with additional character capacity initCapacity.\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#toCharArray-0","e":false,"i":"","n":"toCharArray","t":"toCharArray: Array[Char]","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Returns the contents of this StringBuilder as an Array[Char].\n"},
{"l":"api/scala/collection/mutable/StringBuilder.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: StringBuilder","d":"scala.collection.mutable.StringBuilder","k":"val","x":""},
{"l":"api/scala/collection/mutable/StringBuilder.html#update-fffff491","e":false,"i":"","n":"update","t":"update(idx: Int, elem: Char): Unit","d":"scala.collection.mutable.StringBuilder","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/collection/mutable/StringBuilder$.html#","e":false,"i":"","n":"StringBuilder","t":"StringBuilder","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/StringBuilder$.html#newBuilder-0","e":false,"i":"","n":"newBuilder","t":"newBuilder: StringBuilder","d":"scala.collection.mutable.StringBuilder","k":"def","x":""},
{"l":"api/scala/collection/mutable/TreeMap.html#","e":false,"i":"","n":"TreeMap","t":"TreeMap[K, V] extends AbstractMap[K, V], SortedMap[K, V], SortedMapOps[K, V, TreeMap, TreeMap[K, V]], StrictOptimizedIterableOps[(K, V), Iterable, TreeMap[K, V]], StrictOptimizedMapOps[K, V, Map, TreeMap[K, V]], StrictOptimizedSortedMapOps[K, V, TreeMap, TreeMap[K, V]], SortedMapFactoryDefaults[K, V, TreeMap, Iterable, Map], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"A mutable sorted map implemented using a mutable red-black tree as underlying data structure.\n"},
{"l":"api/scala/collection/mutable/TreeMap.html#addOne-fffffb80","e":false,"i":"","n":"addOne","t":"addOne(elem: (K, V)): this.type","d":"scala.collection.mutable.TreeMap","k":"def","x":"Adds a single element to this mutable tree map.\n"},
{"l":"api/scala/collection/mutable/TreeMap.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.mutable.TreeMap","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/mutable/TreeMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.mutable.TreeMap","k":"def","x":"An scala.collection.Iterator over the elements of this mutable tree map."},
{"l":"api/scala/collection/mutable/TreeMap.html#iteratorFrom-303","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: K): Iterator[(K, V)]","d":"scala.collection.mutable.TreeMap","k":"def","x":"Creates an iterator over all the key/value pairs\ncontained in this map having a key greater than or\nequal to start according to the ordering of\nthis map. x.iteratorFrom(y) is equivalent\nto but often more efficient than x.from(y).iterator.\n"},
{"l":"api/scala/collection/mutable/TreeMap.html#keysIteratorFrom-303","e":false,"i":"","n":"keysIteratorFrom","t":"keysIteratorFrom(start: K): Iterator[K]","d":"scala.collection.mutable.TreeMap","k":"def","x":"Creates an iterator over all the keys(or elements)  contained in this\ncollection greater than or equal to start\naccording to the ordering of this collection. x.keysIteratorFrom(y)\nis equivalent to but often more efficient than\nx.from(y).keysIterator.\n"},
{"l":"api/scala/collection/mutable/TreeMap.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[K]","d":"scala.collection.mutable.TreeMap","k":"val","x":""},
{"l":"api/scala/collection/mutable/TreeMap.html#rangeImpl-548","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[K], until: Option[K]): TreeMap[K, V]","d":"scala.collection.mutable.TreeMap","k":"def","x":"Creates a ranged projection of this map. Any mutations in the ranged projection will update the original map and\nvice versa."},
{"l":"api/scala/collection/mutable/TreeMap.html#subtractOne-1e1","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: K): this.type","d":"scala.collection.mutable.TreeMap","k":"def","x":"Removes a single element from this mutable tree map.\n"},
{"l":"api/scala/collection/mutable/TreeMap.html#<init>-24e","e":false,"i":"","n":"this","t":"this()(implicit ord: Ordering[K])","d":"scala.collection.mutable.TreeMap","k":"def","x":"Creates an empty TreeMap."},
{"l":"api/scala/collection/mutable/TreeMap$.html#","e":false,"i":"","n":"TreeMap","t":"TreeMap extends SortedMapFactory[TreeMap]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/TreeMap$.html#empty-24e","e":false,"i":"","n":"empty","t":"empty[K : Ordering, V]: TreeMap[K, V]","d":"scala.collection.mutable.TreeMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/TreeMap$.html#from-537","e":false,"i":"","n":"from","t":"from[K : Ordering, V](it: IterableOnce[(K, V)]): TreeMap[K, V]","d":"scala.collection.mutable.TreeMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/TreeMap$.html#newBuilder-fffff50b","e":false,"i":"","n":"newBuilder","t":"newBuilder[K : Ordering, V]: Builder[(K, V), TreeMap[K, V]]","d":"scala.collection.mutable.TreeMap","k":"def","x":""},
{"l":"api/scala/collection/mutable/TreeSet.html#","e":false,"i":"","n":"TreeSet","t":"TreeSet[A] extends AbstractSet[A], SortedSet[A], SortedSetOps[A, TreeSet, TreeSet[A]], StrictOptimizedIterableOps[A, Set, TreeSet[A]], StrictOptimizedSortedSetOps[A, TreeSet, TreeSet[A]], SortedSetFactoryDefaults[A, TreeSet, Set], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"A mutable sorted set implemented using a mutable red-black tree as underlying data structure.\n"},
{"l":"api/scala/collection/mutable/TreeSet.html#addOne-8e7","e":false,"i":"","n":"addOne","t":"addOne(elem: A): this.type","d":"scala.collection.mutable.TreeSet","k":"def","x":"Adds a single element to this mutable tree set.\n"},
{"l":"api/scala/collection/mutable/TreeSet.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.TreeSet","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method the builder will contain no elements.\n"},
{"l":"api/scala/collection/mutable/TreeSet.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.mutable.TreeSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/TreeSet.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.mutable.TreeSet","k":"def","x":"An scala.collection.Iterator over the elements of this mutable tree set."},
{"l":"api/scala/collection/mutable/TreeSet.html#iteratorFrom-303","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: A): Iterator[A]","d":"scala.collection.mutable.TreeSet","k":"def","x":"Creates an iterator that contains all values from this collection\ngreater than or equal to start according to the ordering of\nthis collection. x.iteratorFrom(y) is equivalent to but will usually\nbe more efficient than x.from(y).iterator\n"},
{"l":"api/scala/collection/mutable/TreeSet.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[A]","d":"scala.collection.mutable.TreeSet","k":"val","x":""},
{"l":"api/scala/collection/mutable/TreeSet.html#rangeImpl-c4e","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[A], until: Option[A]): TreeSet[A]","d":"scala.collection.mutable.TreeSet","k":"def","x":"Creates a ranged projection of this collection. Any mutations in the\nranged projection will update this collection and vice versa."},
{"l":"api/scala/collection/mutable/TreeSet.html#subtractOne-8e7","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: A): this.type","d":"scala.collection.mutable.TreeSet","k":"def","x":"Removes a single element from this mutable tree set.\n"},
{"l":"api/scala/collection/mutable/TreeSet.html#<init>-ef5","e":false,"i":"","n":"this","t":"this()(implicit ord: Ordering[A])","d":"scala.collection.mutable.TreeSet","k":"def","x":"Creates an empty TreeSet."},
{"l":"api/scala/collection/mutable/TreeSet.html#unconstrained-0","e":false,"i":"","n":"unconstrained","t":"unconstrained: Set[A]","d":"scala.collection.mutable.TreeSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/TreeSet$.html#","e":false,"i":"","n":"TreeSet","t":"TreeSet extends SortedIterableFactory[TreeSet]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/TreeSet$.html#empty-ef5","e":false,"i":"","n":"empty","t":"empty[A : Ordering]: TreeSet[A]","d":"scala.collection.mutable.TreeSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/TreeSet$.html#from-63c","e":false,"i":"","n":"from","t":"from[E](it: IterableOnce[E])(implicit ordering: Ordering[E]): TreeSet[E]","d":"scala.collection.mutable.TreeSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/TreeSet$.html#newBuilder-aac","e":false,"i":"","n":"newBuilder","t":"newBuilder[A](implicit ordering: Ordering[A]): Builder[A, TreeSet[A]]","d":"scala.collection.mutable.TreeSet","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#","e":false,"i":"","n":"UnrolledBuffer","t":"UnrolledBuffer[T](implicit val tag: ClassTag[T]) extends AbstractBuffer[T], Buffer[T], Seq[T], SeqOps[T, UnrolledBuffer, UnrolledBuffer[T]], StrictOptimizedSeqOps[T, UnrolledBuffer, UnrolledBuffer[T]], EvidenceIterableFactoryDefaults[T, UnrolledBuffer, ClassTag], Builder[T, UnrolledBuffer[T]], DefaultSerializable","d":"scala.collection.mutable","k":"class","x":"A buffer that stores elements in an unrolled linked list."},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#addOne-fffffff2","e":false,"i":"","n":"addOne","t":"addOne(elem: T): this.type","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Adds a single element to this unrolled buffer.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): T","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#classTagCompanion-0","e":false,"i":"","n":"classTagCompanion","t":"classTagCompanion: UnrolledBuffer.type","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Clears the contents of this builder.\nAfter execution of this method the builder will contain no elements.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#concat-860","e":false,"i":"","n":"concat","t":"concat(that: UnrolledBuffer[T]): UnrolledBuffer[T]","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Concatenates the target unrolled buffer to this unrolled buffer."},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#insert-386","e":false,"i":"","n":"insert","t":"insert(idx: Int, elem: T): Unit","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Inserts a new element at a given index into this buffer.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#insertAll-fffff960","e":false,"i":"","n":"insertAll","t":"insertAll(idx: Int, elems: IterableOnce[T]): Unit","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Inserts new elements at the index idx. Opposed to method\nupdate, this method will not replace an element with a new\none. Instead, it will insert a new element at index idx.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[T]","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"An scala.collection.Iterator over the elements of this unrolled buffer."},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"The length (number of elements) of the unrolled buffer. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#mapInPlace-334","e":false,"i":"","n":"mapInPlace","t":"mapInPlace(f: T => T): this.type","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Replace the contents of this unrolled buffer with the mapped result.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#patchInPlace-cf2","e":false,"i":"","n":"patchInPlace","t":"patchInPlace(from: Int, patch: IterableOnce[T], replaced: Int): this.type","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Replaces a slice of elements in this unrolled buffer by another sequence of elements."},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#prepend-fffffff2","e":false,"i":"","n":"prepend","t":"prepend(elem: T): this.type","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Prepends a single element at the front of this unrolled buffer.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#remove-aba","e":false,"i":"","n":"remove","t":"remove(idx: Int): T","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Removes the element at a given index position.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#remove-d2c","e":false,"i":"","n":"remove","t":"remove(idx: Int, count: Int): Unit","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Removes the element on a given index position. It takes time linear in\nthe buffer size.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#result-fffff8e5","e":false,"i":"","n":"result","t":"result(): UnrolledBuffer[T]","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Result collection consisting of all elements appended so far."},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#tag-0","e":false,"i":"","n":"tag","t":"tag: ClassTag[T]","d":"scala.collection.mutable.UnrolledBuffer","k":"val","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer.html#update-386","e":false,"i":"","n":"update","t":"update(idx: Int, newelem: T): Unit","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer$.html#","e":false,"i":"","n":"UnrolledBuffer","t":"UnrolledBuffer extends StrictOptimizedClassTagSeqFactory[UnrolledBuffer]","d":"scala.collection.mutable","k":"object","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$.html#empty-719","e":false,"i":"","n":"empty","t":"empty[A : ClassTag]: UnrolledBuffer[A]","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$.html#from-1a0","e":false,"i":"","n":"from","t":"from[A : ClassTag](source: IterableOnce[A]): UnrolledBuffer[A]","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$.html#newBuilder-719","e":false,"i":"","n":"newBuilder","t":"newBuilder[A : ClassTag]: UnrolledBuffer[A]","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$.html#untagged-0","e":false,"i":"","n":"untagged","t":"untagged: SeqFactory[UnrolledBuffer]","d":"scala.collection.mutable.UnrolledBuffer","k":"val","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$.html#waterline-0","e":false,"i":"","n":"waterline","t":"waterline: Int","d":"scala.collection.mutable.UnrolledBuffer","k":"val","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$.html#waterlineDelim-0","e":false,"i":"","n":"waterlineDelim","t":"waterlineDelim: Int","d":"scala.collection.mutable.UnrolledBuffer","k":"val","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$.html#waterlineDenom-0","e":false,"i":"","n":"waterlineDenom","t":"waterlineDenom: Int","d":"scala.collection.mutable.UnrolledBuffer","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#","e":false,"i":"","n":"Unrolled","t":"Unrolled[T]","d":"scala.collection.mutable.UnrolledBuffer","k":"class","x":"Unrolled buffer node.\n"},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#append-fffff1d1","e":false,"i":"","n":"append","t":"append(elem: T): Unrolled[T]","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): T","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#array-0","e":false,"i":"","n":"array","t":"array: Array[T]","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"var","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#bind-fffff6dc","e":false,"i":"","n":"bind","t":"bind(thathead: Unrolled[T]): Boolean","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#buff-0","e":false,"i":"","n":"buff","t":"buff: UnrolledBuffer[T]","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"val","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: T => U): Unit","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#insertAll-fffff8f6","e":false,"i":"","n":"insertAll","t":"insertAll(idx: Int, t: IterableOnce[T], buffer: UnrolledBuffer[T]): Int","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#locate-6bd","e":false,"i":"","n":"locate","t":"locate(idx: Int): Unrolled[T]","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#mapInPlace-c9d","e":false,"i":"","n":"mapInPlace","t":"mapInPlace(f: T => T): Unit","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#next-0","e":false,"i":"","n":"next","t":"next: Unrolled[T]","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"var","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#prepend-fffff1d1","e":false,"i":"","n":"prepend","t":"prepend(elem: T): Unrolled[T]","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#remove-971","e":false,"i":"","n":"remove","t":"remove(idx: Int, buffer: UnrolledBuffer[T]): T","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"var","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#subtractOne-ae","e":false,"i":"","n":"subtractOne","t":"subtractOne(elem: T, buffer: UnrolledBuffer[T]): Boolean","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/UnrolledBuffer$$Unrolled.html#update-386","e":false,"i":"","n":"update","t":"update(idx: Int, newelem: T): Unit","d":"scala.collection.mutable.UnrolledBuffer.Unrolled","k":"def","x":""},
{"l":"api/scala/collection/mutable/WeakHashMap.html#","e":false,"i":"","n":"WeakHashMap","t":"WeakHashMap[K, V] extends JMapWrapper[K, V], JMapWrapperLike[K, V, WeakHashMap, WeakHashMap[K, V]], MapFactoryDefaults[K, V, WeakHashMap, Iterable]","d":"scala.collection.mutable","k":"class","x":"A hash map with references to entries which are weakly reachable. Entries are\nremoved from this map when the key is no longer (strongly) referenced. This class wraps\njava.util.WeakHashMap.\n"},
{"l":"api/scala/collection/mutable/WeakHashMap$.html#","e":false,"i":"","n":"WeakHashMap","t":"WeakHashMap extends MapFactory[WeakHashMap]","d":"scala.collection.mutable","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/mutable/WeakHashMap$.html#empty-fffff978","e":false,"i":"","n":"empty","t":"empty[K, V]: WeakHashMap[K, V]","d":"scala.collection.mutable.WeakHashMap","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/mutable/WeakHashMap$.html#from-fffff1af","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): WeakHashMap[K, V]","d":"scala.collection.mutable.WeakHashMap","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/mutable/WeakHashMap$.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), WeakHashMap[K, V]]","d":"scala.collection.mutable.WeakHashMap","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/$plus$colon$$.html#","e":false,"i":"","n":"+:","t":"+:","d":"scala.collection","k":"object","x":"An extractor used to head/tail deconstruct sequences."},
{"l":"api/scala/collection/$plus$colon$$.html#unapply-545","e":false,"i":"","n":"unapply","t":"unapply[A, CC <: ([_] =>> Seq[_]), C <: SeqOps[A, CC, C]](t: C & SeqOps[A, CC, C]): Option[(A, C)]","d":"scala.collection.+:","k":"def","x":"Splits a sequence into head +: tail."},
{"l":"api/scala/collection/$colon$plus$$.html#","e":false,"i":"","n":":+","t":":+","d":"scala.collection","k":"object","x":"An extractor used to init/last deconstruct sequences."},
{"l":"api/scala/collection/$colon$plus$$.html#unapply-545","e":false,"i":"","n":"unapply","t":"unapply[A, CC <: ([_] =>> Seq[_]), C <: SeqOps[A, CC, C]](t: C & SeqOps[A, CC, C]): Option[(C, A)]","d":"scala.collection.:+","k":"def","x":"Splits a sequence into init :+ last."},
{"l":"api/scala/collection/AbstractIndexedSeqView.html#","e":false,"i":"","n":"AbstractIndexedSeqView","t":"AbstractIndexedSeqView[+A] extends AbstractSeqView[A], IndexedSeqView[A]","d":"scala.collection","k":"class","x":"Explicit instantiation of the IndexedSeqView trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/AbstractIterable.html#","e":false,"i":"","n":"AbstractIterable","t":"AbstractIterable[+A] extends Iterable[A]","d":"scala.collection","k":"class","x":"Explicit instantiation of the Iterable trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/AbstractIterator.html#","e":false,"i":"","n":"AbstractIterator","t":"AbstractIterator[+A] extends Iterator[A]","d":"scala.collection","k":"class","x":"Explicit instantiation of the Iterator trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/AbstractMap.html#","e":false,"i":"","n":"AbstractMap","t":"AbstractMap[K, +V] extends AbstractIterable[(K, V)], Map[K, V]","d":"scala.collection","k":"class","x":"Explicit instantiation of the Map trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/AbstractMapView.html#","e":false,"i":"","n":"AbstractMapView","t":"AbstractMapView[K, +V] extends AbstractView[(K, V)], MapView[K, V]","d":"scala.collection","k":"class","x":"Explicit instantiation of the MapView trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/AbstractSeq.html#","e":false,"i":"","n":"AbstractSeq","t":"AbstractSeq[+A] extends AbstractIterable[A], Seq[A]","d":"scala.collection","k":"class","x":"Explicit instantiation of the Seq trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/AbstractSeqView.html#","e":false,"i":"","n":"AbstractSeqView","t":"AbstractSeqView[+A] extends AbstractView[A], SeqView[A]","d":"scala.collection","k":"class","x":"Explicit instantiation of the SeqView trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/AbstractSet.html#","e":false,"i":"","n":"AbstractSet","t":"AbstractSet[A] extends AbstractIterable[A], Set[A]","d":"scala.collection","k":"class","x":"Explicit instantiation of the Set trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/AbstractView.html#","e":false,"i":"","n":"AbstractView","t":"AbstractView[+A] extends AbstractIterable[A], View[A]","d":"scala.collection","k":"class","x":"Explicit instantiation of the View trait to reduce class file size in subclasses."},
{"l":"api/scala/collection/AnyStepper.html#","e":false,"i":"","n":"AnyStepper","t":"AnyStepper[+A] extends Stepper[A]","d":"scala.collection","k":"trait","x":"A Stepper for arbitrary element types. See Stepper."},
{"l":"api/scala/collection/AnyStepper.html#javaIterator-81f","e":false,"i":"","n":"javaIterator","t":"javaIterator[B >: A]: Iterator[B]","d":"scala.collection.AnyStepper","k":"def","x":"Returns a Java java.util.Iterator corresponding to this Stepper."},
{"l":"api/scala/collection/AnyStepper.html#spliterator-fffffdcc","e":false,"i":"","n":"spliterator","t":"spliterator[B >: A]: Spliterator[B]","d":"scala.collection.AnyStepper","k":"def","x":"Returns a java.util.Spliterator corresponding to this Stepper."},
{"l":"api/scala/collection/AnyStepper.html#trySplit-fffffa0d","e":false,"i":"","n":"trySplit","t":"trySplit(): AnyStepper[A]","d":"scala.collection.AnyStepper","k":"def","x":"Split this stepper, if applicable. The elements of the current Stepper are split up between\nthe resulting Stepper and the current stepper."},
{"l":"api/scala/collection/AnyStepper$.html#","e":false,"i":"","n":"AnyStepper","t":"AnyStepper","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/AnyStepper$.html#ofParDoubleStepper-515","e":false,"i":"","n":"ofParDoubleStepper","t":"ofParDoubleStepper(st: DoubleStepper & EfficientSplit): AnyStepper[Double] & EfficientSplit","d":"scala.collection.AnyStepper","k":"def","x":""},
{"l":"api/scala/collection/AnyStepper$.html#ofParIntStepper-d23","e":false,"i":"","n":"ofParIntStepper","t":"ofParIntStepper(st: IntStepper & EfficientSplit): AnyStepper[Int] & EfficientSplit","d":"scala.collection.AnyStepper","k":"def","x":""},
{"l":"api/scala/collection/AnyStepper$.html#ofParLongStepper-700","e":false,"i":"","n":"ofParLongStepper","t":"ofParLongStepper(st: LongStepper & EfficientSplit): AnyStepper[Long] & EfficientSplit","d":"scala.collection.AnyStepper","k":"def","x":""},
{"l":"api/scala/collection/AnyStepper$.html#ofSeqDoubleStepper-515","e":false,"i":"","n":"ofSeqDoubleStepper","t":"ofSeqDoubleStepper(st: DoubleStepper): AnyStepper[Double]","d":"scala.collection.AnyStepper","k":"def","x":""},
{"l":"api/scala/collection/AnyStepper$.html#ofSeqIntStepper-d23","e":false,"i":"","n":"ofSeqIntStepper","t":"ofSeqIntStepper(st: IntStepper): AnyStepper[Int]","d":"scala.collection.AnyStepper","k":"def","x":""},
{"l":"api/scala/collection/AnyStepper$.html#ofSeqLongStepper-700","e":false,"i":"","n":"ofSeqLongStepper","t":"ofSeqLongStepper(st: LongStepper): AnyStepper[Long]","d":"scala.collection.AnyStepper","k":"def","x":""},
{"l":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html#","e":false,"i":"","n":"AnyStepperSpliterator","t":"AnyStepperSpliterator[A](s: AnyStepper[A]) extends Spliterator[A]","d":"scala.collection.AnyStepper","k":"class","x":""},
{"l":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html#characteristics-ffffff27","e":false,"i":"","n":"characteristics","t":"characteristics(): Int","d":"scala.collection.AnyStepper.AnyStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html#estimateSize-644","e":false,"i":"","n":"estimateSize","t":"estimateSize(): Long","d":"scala.collection.AnyStepper.AnyStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html#tryAdvance-b14","e":false,"i":"","n":"tryAdvance","t":"tryAdvance(c: Consumer[_ >: A]): Boolean","d":"scala.collection.AnyStepper.AnyStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/AnyStepper$$AnyStepperSpliterator.html#trySplit-55d","e":false,"i":"","n":"trySplit","t":"trySplit(): Spliterator[A]","d":"scala.collection.AnyStepper.AnyStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps$.html#","e":false,"i":"","n":"ArrayOps","t":"ArrayOps","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/ArrayOps$$WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter[A](p: A => Boolean, xs: Array[A])","d":"scala.collection.ArrayOps","k":"class","x":"A lazy filtered array. No filtering is applied until one of foreach, map or flatMap is called."},
{"l":"api/scala/collection/ArrayOps$$WithFilter.html#flatMap-fffffeae","e":false,"i":"","n":"flatMap","t":"flatMap[B : ClassTag](f: A => IterableOnce[B]): Array[B]","d":"scala.collection.ArrayOps.WithFilter","k":"def","x":"Builds a new array by applying a function to all elements of this array\nand using the elements of the resulting collections.\n"},
{"l":"api/scala/collection/ArrayOps$$WithFilter.html#flatMap-d80","e":false,"i":"","n":"flatMap","t":"flatMap[BS, B](f: A => BS)(implicit asIterable: BS => Iterable[B], m: ClassTag[B]): Array[B]","d":"scala.collection.ArrayOps.WithFilter","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps$$WithFilter.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: A => U): Unit","d":"scala.collection.ArrayOps.WithFilter","k":"def","x":"Apply f to each element for its side effects.\nNote: [U] parameter needed to help scalac's type inference.\n"},
{"l":"api/scala/collection/ArrayOps$$WithFilter.html#map-fffffeae","e":false,"i":"","n":"map","t":"map[B : ClassTag](f: A => B): Array[B]","d":"scala.collection.ArrayOps.WithFilter","k":"def","x":"Builds a new array by applying a function to all elements of this array.\n"},
{"l":"api/scala/collection/ArrayOps$$WithFilter.html#withFilter-2f8","e":false,"i":"","n":"withFilter","t":"withFilter(q: A => Boolean): WithFilter[A]","d":"scala.collection.ArrayOps.WithFilter","k":"def","x":"Creates a new non-strict filter which combines this filter with the given predicate."},
{"l":"api/scala/collection/ArrayOps.html#","e":false,"i":"","n":"ArrayOps","t":"ArrayOps[A](xs: Array[A]) extends AnyVal","d":"scala.collection","k":"class","x":"This class serves as a wrapper for Arrays with many of the operations found in\nindexed sequences. Where needed, instances of arrays are implicitly converted\ninto this class. There is generally no reason to create an instance explicitly or use\nan ArrayOps type. It is better to work with plain Array types instead and rely on\nthe implicit conversion to ArrayOps when calling a method (which does not actually\nallocate an instance of ArrayOps because it is a value class)."},
{"l":"api/scala/collection/ArrayOps.html#++-fffff738","e":false,"i":"","n":"++","t":"++[B >: A : ClassTag](xs: IterableOnce[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#++-fffff732","e":false,"i":"","n":"++","t":"++[B >: A : ClassTag](xs: Array[_ <: B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#++:-fffff738","e":false,"i":"","n":"++:","t":"++:[B >: A : ClassTag](prefix: IterableOnce[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#++:-fffff732","e":false,"i":"","n":"++:","t":"++:[B >: A : ClassTag](prefix: Array[_ <: B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#+:-fffff732","e":false,"i":"","n":"+:","t":"+:[B >: A : ClassTag](x: B): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#:+-fffff732","e":false,"i":"","n":":+","t":":+[B >: A : ClassTag](x: B): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#:++-fffff738","e":false,"i":"","n":":++","t":":++[B >: A : ClassTag](suffix: IterableOnce[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#:++-fffff732","e":false,"i":"","n":":++","t":":++[B >: A : ClassTag](suffix: Array[_ <: B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#appended-fffff732","e":false,"i":"","n":"appended","t":"appended[B >: A : ClassTag](x: B): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"A copy of this array with an element appended."},
{"l":"api/scala/collection/ArrayOps.html#appendedAll-fffff738","e":false,"i":"","n":"appendedAll","t":"appendedAll[B >: A : ClassTag](suffix: IterableOnce[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"A copy of this array with all elements of a collection appended."},
{"l":"api/scala/collection/ArrayOps.html#appendedAll-fffff732","e":false,"i":"","n":"appendedAll","t":"appendedAll[B >: A : ClassTag](suffix: Array[_ <: B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"A copy of this array with all elements of an array appended."},
{"l":"api/scala/collection/ArrayOps.html#collect-68e","e":false,"i":"","n":"collect","t":"collect[B : ClassTag](pf: PartialFunction[A, B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"Builds a new array by applying a partial function to all elements of this array\non which the function is defined.\n"},
{"l":"api/scala/collection/ArrayOps.html#collectFirst-25d","e":false,"i":"","n":"collectFirst","t":"collectFirst[B](pf: PartialFunction[A, B]): Option[B]","d":"scala.collection.ArrayOps","k":"def","x":"Finds the first element of the array for which the given partial function is defined, and applies the\npartial function to it."},
{"l":"api/scala/collection/ArrayOps.html#combinations-fffffbef","e":false,"i":"","n":"combinations","t":"combinations(n: Int): Iterator[Array[A]]","d":"scala.collection.ArrayOps","k":"def","x":"Iterates over combinations of elements."},
{"l":"api/scala/collection/ArrayOps.html#concat-fffff738","e":false,"i":"","n":"concat","t":"concat[B >: A : ClassTag](suffix: IterableOnce[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#concat-fffff732","e":false,"i":"","n":"concat","t":"concat[B >: A : ClassTag](suffix: Array[_ <: B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether this array contains a given value as an element.\n"},
{"l":"api/scala/collection/ArrayOps.html#copyToArray-fffff3e3","e":false,"i":"","n":"copyToArray","t":"copyToArray[B >: A](xs: Array[B]): Int","d":"scala.collection.ArrayOps","k":"def","x":"Copy elements of this array to another array.\nFills the given array xs starting at index 0.\nCopying will stop once either all the elements of this array have been copied,\nor the end of the array is reached.\n"},
{"l":"api/scala/collection/ArrayOps.html#copyToArray-fffffaa4","e":false,"i":"","n":"copyToArray","t":"copyToArray[B >: A](xs: Array[B], start: Int): Int","d":"scala.collection.ArrayOps","k":"def","x":"Copy elements of this array to another array.\nFills the given array xs starting at index start.\nCopying will stop once either all the elements of this array have been copied,\nor the end of the array is reached.\n"},
{"l":"api/scala/collection/ArrayOps.html#copyToArray-fffffd03","e":false,"i":"","n":"copyToArray","t":"copyToArray[B >: A](xs: Array[B], start: Int, len: Int): Int","d":"scala.collection.ArrayOps","k":"def","x":"Copy elements of this array to another array.\nFills the given array xs starting at index start with at most len values.\nCopying will stop once either all the elements of this array have been copied,\nor the end of the array is reached, or len elements have been copied.\n"},
{"l":"api/scala/collection/ArrayOps.html#count-db6","e":false,"i":"","n":"count","t":"count(p: A => Boolean): Int","d":"scala.collection.ArrayOps","k":"def","x":"Counts the number of elements in this array which satisfy a predicate"},
{"l":"api/scala/collection/ArrayOps.html#diff-ddb","e":false,"i":"","n":"diff","t":"diff[B >: A](that: Seq[B]): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Computes the multiset difference between this array and another sequence.\n"},
{"l":"api/scala/collection/ArrayOps.html#distinct-0","e":false,"i":"","n":"distinct","t":"distinct: Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Selects all the elements of this array ignoring the duplicates.\n"},
{"l":"api/scala/collection/ArrayOps.html#distinctBy-5d3","e":false,"i":"","n":"distinctBy","t":"distinctBy[B](f: A => B): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Selects all the elements of this array ignoring the duplicates as determined by == after applying\nthe transforming function f.\n"},
{"l":"api/scala/collection/ArrayOps.html#drop-aba","e":false,"i":"","n":"drop","t":"drop(n: Int): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"The rest of the array without its n first elements."},
{"l":"api/scala/collection/ArrayOps.html#dropRight-aba","e":false,"i":"","n":"dropRight","t":"dropRight(n: Int): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"The rest of the array without its n last elements."},
{"l":"api/scala/collection/ArrayOps.html#dropWhile-c24","e":false,"i":"","n":"dropWhile","t":"dropWhile(p: A => Boolean): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Drops longest prefix of elements that satisfy a predicate.\n"},
{"l":"api/scala/collection/ArrayOps.html#endsWith-e1c","e":false,"i":"","n":"endsWith","t":"endsWith[B >: A](that: Array[B]): Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether this array ends with the given array.\n"},
{"l":"api/scala/collection/ArrayOps.html#endsWith-bd7","e":false,"i":"","n":"endsWith","t":"endsWith[B >: A](that: Iterable[B]): Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether this array ends with the given sequence.\n"},
{"l":"api/scala/collection/ArrayOps.html#exists-fffff66f","e":false,"i":"","n":"exists","t":"exists(p: A => Boolean): Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether a predicate holds for at least one element of this array.\n"},
{"l":"api/scala/collection/ArrayOps.html#filter-c24","e":false,"i":"","n":"filter","t":"filter(p: A => Boolean): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Selects all elements of this array which satisfy a predicate.\n"},
{"l":"api/scala/collection/ArrayOps.html#filterNot-c24","e":false,"i":"","n":"filterNot","t":"filterNot(p: A => Boolean): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Selects all elements of this array which do not satisfy a predicate.\n"},
{"l":"api/scala/collection/ArrayOps.html#find-94e","e":false,"i":"","n":"find","t":"find(p: A => Boolean): Option[A]","d":"scala.collection.ArrayOps","k":"def","x":"Finds the first element of the array satisfying a predicate, if any.\n"},
{"l":"api/scala/collection/ArrayOps.html#flatMap-fffffeae","e":false,"i":"","n":"flatMap","t":"flatMap[B : ClassTag](f: A => IterableOnce[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"Builds a new array by applying a function to all elements of this array\nand using the elements of the resulting collections.\n"},
{"l":"api/scala/collection/ArrayOps.html#flatMap-d80","e":false,"i":"","n":"flatMap","t":"flatMap[BS, B](f: A => BS)(implicit asIterable: BS => Iterable[B], m: ClassTag[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#flatten-fffffeae","e":false,"i":"","n":"flatten","t":"flatten[B](implicit asIterable: A => IterableOnce[B], m: ClassTag[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"Flattens a two-dimensional array by concatenating all its rows\ninto a single array.\n"},
{"l":"api/scala/collection/ArrayOps.html#fold-fffff9e1","e":false,"i":"","n":"fold","t":"fold[A1 >: A](z: A1)(op: (A1, A1) => A1): A1","d":"scala.collection.ArrayOps","k":"def","x":"Folds the elements of this array using the specified associative binary operator.\n"},
{"l":"api/scala/collection/ArrayOps.html#foldLeft-fffff9e1","e":false,"i":"","n":"foldLeft","t":"foldLeft[B](z: B)(op: (B, A) => B): B","d":"scala.collection.ArrayOps","k":"def","x":"Applies a binary operator to a start value and all elements of this array,\ngoing left to right.\n"},
{"l":"api/scala/collection/ArrayOps.html#foldRight-fffff9e1","e":false,"i":"","n":"foldRight","t":"foldRight[B](z: B)(op: (A, B) => B): B","d":"scala.collection.ArrayOps","k":"def","x":"Applies a binary operator to all elements of this array and a start value,\ngoing right to left.\n"},
{"l":"api/scala/collection/ArrayOps.html#forall-fffff66f","e":false,"i":"","n":"forall","t":"forall(p: A => Boolean): Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether a predicate holds for all elements of this array.\n"},
{"l":"api/scala/collection/ArrayOps.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: A => U): Unit","d":"scala.collection.ArrayOps","k":"def","x":"Apply f to each element for its side effects.\nNote: [U] parameter needed to help scalac's type inference.\n"},
{"l":"api/scala/collection/ArrayOps.html#groupBy-f68","e":false,"i":"","n":"groupBy","t":"groupBy[K](f: A => K): Map[K, Array[A]]","d":"scala.collection.ArrayOps","k":"def","x":"Partitions this array into a map of arrays according to some discriminator function.\n"},
{"l":"api/scala/collection/ArrayOps.html#groupMap-fffff455","e":false,"i":"","n":"groupMap","t":"groupMap[K, B : ClassTag](key: A => K)(f: A => B): Map[K, Array[B]]","d":"scala.collection.ArrayOps","k":"def","x":"Partitions this array into a map of arrays according to a discriminator function key.\nEach element in a group is transformed into a value of type B using the value function."},
{"l":"api/scala/collection/ArrayOps.html#grouped-fffffbef","e":false,"i":"","n":"grouped","t":"grouped(size: Int): Iterator[Array[A]]","d":"scala.collection.ArrayOps","k":"def","x":"Partitions elements in fixed size arrays."},
{"l":"api/scala/collection/ArrayOps.html#head-0","e":false,"i":"","n":"head","t":"head: A","d":"scala.collection.ArrayOps","k":"def","x":"Selects the first element of this array.\n"},
{"l":"api/scala/collection/ArrayOps.html#headOption-0","e":false,"i":"","n":"headOption","t":"headOption: Option[A]","d":"scala.collection.ArrayOps","k":"def","x":"Optionally selects the first element.\n"},
{"l":"api/scala/collection/ArrayOps.html#indexOf-fffff6b3","e":false,"i":"","n":"indexOf","t":"indexOf(elem: A, from: Int): Int","d":"scala.collection.ArrayOps","k":"def","x":"Finds index of first occurrence of some value in this array after or at some start index.\n"},
{"l":"api/scala/collection/ArrayOps.html#indexWhere-fffffe31","e":false,"i":"","n":"indexWhere","t":"indexWhere(p: A => Boolean, from: Int): Int","d":"scala.collection.ArrayOps","k":"def","x":"Finds index of the first element satisfying some predicate after or at some start index.\n"},
{"l":"api/scala/collection/ArrayOps.html#indices-0","e":false,"i":"","n":"indices","t":"indices: Range","d":"scala.collection.ArrayOps","k":"def","x":"Produces the range of all indices of this sequence.\n"},
{"l":"api/scala/collection/ArrayOps.html#init-0","e":false,"i":"","n":"init","t":"init: Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"The initial part of the array without its last element."},
{"l":"api/scala/collection/ArrayOps.html#inits-0","e":false,"i":"","n":"inits","t":"inits: Iterator[Array[A]]","d":"scala.collection.ArrayOps","k":"def","x":"Iterates over the inits of this array. The first value will be this\narray and the final one will be an empty array, with the intervening\nvalues the results of successive applications of init.\n"},
{"l":"api/scala/collection/ArrayOps.html#intersect-ddb","e":false,"i":"","n":"intersect","t":"intersect[B >: A](that: Seq[B]): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Computes the multiset intersection between this array and another sequence.\n"},
{"l":"api/scala/collection/ArrayOps.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether the array is empty.\n"},
{"l":"api/scala/collection/ArrayOps.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#knownSize-0","e":false,"i":"","n":"knownSize","t":"knownSize: Int","d":"scala.collection.ArrayOps","k":"def","x":"The size of this array.\n"},
{"l":"api/scala/collection/ArrayOps.html#last-0","e":false,"i":"","n":"last","t":"last: A","d":"scala.collection.ArrayOps","k":"def","x":"Selects the last element.\n"},
{"l":"api/scala/collection/ArrayOps.html#lastIndexOf-fffff6b3","e":false,"i":"","n":"lastIndexOf","t":"lastIndexOf(elem: A, end: Int): Int","d":"scala.collection.ArrayOps","k":"def","x":"Finds index of last occurrence of some value in this array before or at a given end index.\n"},
{"l":"api/scala/collection/ArrayOps.html#lastIndexWhere-fffffe31","e":false,"i":"","n":"lastIndexWhere","t":"lastIndexWhere(p: A => Boolean, end: Int): Int","d":"scala.collection.ArrayOps","k":"def","x":"Finds index of last element satisfying some predicate before or at given end index.\n"},
{"l":"api/scala/collection/ArrayOps.html#lastOption-0","e":false,"i":"","n":"lastOption","t":"lastOption: Option[A]","d":"scala.collection.ArrayOps","k":"def","x":"Optionally selects the last element.\n"},
{"l":"api/scala/collection/ArrayOps.html#lazyZip-fffffd84","e":false,"i":"","n":"lazyZip","t":"lazyZip[B](that: Iterable[B]): LazyZip2[A, B, Array[A]]","d":"scala.collection.ArrayOps","k":"def","x":"Analogous to zip except that the elements in each collection are not consumed until a strict operation is\ninvoked on the returned LazyZip2 decorator."},
{"l":"api/scala/collection/ArrayOps.html#lengthCompare-fffffbe0","e":false,"i":"","n":"lengthCompare","t":"lengthCompare(len: Int): Int","d":"scala.collection.ArrayOps","k":"def","x":"Compares the length of this array to a test value.\n"},
{"l":"api/scala/collection/ArrayOps.html#lengthIs-0","e":false,"i":"","n":"lengthIs","t":"lengthIs: Int","d":"scala.collection.ArrayOps","k":"def","x":"Method mirroring SeqOps.lengthIs for consistency, except it returns an Int\nbecause length is known and comparison is constant-time."},
{"l":"api/scala/collection/ArrayOps.html#map-fffffeae","e":false,"i":"","n":"map","t":"map[B](f: A => B)(implicit ct: ClassTag[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"Builds a new array by applying a function to all elements of this array.\n"},
{"l":"api/scala/collection/ArrayOps.html#mapInPlace-c24","e":false,"i":"","n":"mapInPlace","t":"mapInPlace(f: A => A): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#nonEmpty-0","e":false,"i":"","n":"nonEmpty","t":"nonEmpty: Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether the array is not empty.\n"},
{"l":"api/scala/collection/ArrayOps.html#padTo-ffffff57","e":false,"i":"","n":"padTo","t":"padTo[B >: A : ClassTag](len: Int, elem: B): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"A copy of this array with an element value appended until a given target length is reached.\n"},
{"l":"api/scala/collection/ArrayOps.html#partition-243","e":false,"i":"","n":"partition","t":"partition(p: A => Boolean): (Array[A], Array[A])","d":"scala.collection.ArrayOps","k":"def","x":"A pair of, first, all elements that satisfy predicate p and, second, all elements that do not."},
{"l":"api/scala/collection/ArrayOps.html#partitionMap-6c7","e":false,"i":"","n":"partitionMap","t":"partitionMap[A1 : ClassTag, A2 : ClassTag](f: A => Either[A1, A2]): (Array[A1], Array[A2])","d":"scala.collection.ArrayOps","k":"def","x":"Applies a function f to each element of the array and returns a pair of arrays: the first one\nmade of those values returned by f that were wrapped in scala.util.Left, and the second\none made of those wrapped in scala.util.Right."},
{"l":"api/scala/collection/ArrayOps.html#patch-930","e":false,"i":"","n":"patch","t":"patch[B >: A : ClassTag](from: Int, other: IterableOnce[B], replaced: Int): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"Returns a copy of this array with patched values.\nPatching at negative indices is the same as patching starting at 0.\nPatching at indices at or larger than the length of the original array appends the patch to the end.\nIf more values are replaced than actually exist, the excess is ignored.\n"},
{"l":"api/scala/collection/ArrayOps.html#permutations-0","e":false,"i":"","n":"permutations","t":"permutations: Iterator[Array[A]]","d":"scala.collection.ArrayOps","k":"def","x":"Iterates over distinct permutations of elements.\n"},
{"l":"api/scala/collection/ArrayOps.html#prepended-fffff732","e":false,"i":"","n":"prepended","t":"prepended[B >: A : ClassTag](x: B): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"A copy of this array with an element prepended."},
{"l":"api/scala/collection/ArrayOps.html#prependedAll-fffff738","e":false,"i":"","n":"prependedAll","t":"prependedAll[B >: A : ClassTag](prefix: IterableOnce[B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"A copy of this array with all elements of a collection prepended."},
{"l":"api/scala/collection/ArrayOps.html#prependedAll-fffff732","e":false,"i":"","n":"prependedAll","t":"prependedAll[B >: A : ClassTag](prefix: Array[_ <: B]): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"A copy of this array with all elements of an array prepended."},
{"l":"api/scala/collection/ArrayOps.html#reverse-0","e":false,"i":"","n":"reverse","t":"reverse: Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Returns a new array with the elements in reversed order."},
{"l":"api/scala/collection/ArrayOps.html#reverseIterator-0","e":false,"i":"","n":"reverseIterator","t":"reverseIterator: Iterator[A]","d":"scala.collection.ArrayOps","k":"def","x":"An iterator yielding elements in reversed order."},
{"l":"api/scala/collection/ArrayOps.html#scan-fffff43c","e":false,"i":"","n":"scan","t":"scan[B >: A : ClassTag](z: B)(op: (B, B) => B): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"Computes a prefix scan of the elements of the array."},
{"l":"api/scala/collection/ArrayOps.html#scanLeft-fffff43c","e":false,"i":"","n":"scanLeft","t":"scanLeft[B : ClassTag](z: B)(op: (B, A) => B): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"Produces an array containing cumulative results of applying the binary\noperator going left to right.\n"},
{"l":"api/scala/collection/ArrayOps.html#scanRight-fffff43c","e":false,"i":"","n":"scanRight","t":"scanRight[B : ClassTag](z: B)(op: (A, B) => B): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"Produces an array containing cumulative results of applying the binary\noperator going right to left.\n"},
{"l":"api/scala/collection/ArrayOps.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"scala.collection.ArrayOps","k":"def","x":"The size of this array.\n"},
{"l":"api/scala/collection/ArrayOps.html#sizeCompare-fffffbe0","e":false,"i":"","n":"sizeCompare","t":"sizeCompare(otherSize: Int): Int","d":"scala.collection.ArrayOps","k":"def","x":"Compares the size of this array to a test value.\n"},
{"l":"api/scala/collection/ArrayOps.html#sizeIs-0","e":false,"i":"","n":"sizeIs","t":"sizeIs: Int","d":"scala.collection.ArrayOps","k":"def","x":"Method mirroring SeqOps.sizeIs for consistency, except it returns an Int\nbecause size is known and comparison is constant-time."},
{"l":"api/scala/collection/ArrayOps.html#slice-573","e":false,"i":"","n":"slice","t":"slice(from: Int, until: Int): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Selects an interval of elements. The returned array is made up\nof all elements x which satisfy the invariant:"},
{"l":"api/scala/collection/ArrayOps.html#sliding-fffff156","e":false,"i":"","n":"sliding","t":"sliding(size: Int, step: Int): Iterator[Array[A]]","d":"scala.collection.ArrayOps","k":"def","x":"Groups elements in fixed size blocks by passing a \"sliding window\"\nover them (as opposed to partitioning them, as is done in grouped.)"},
{"l":"api/scala/collection/ArrayOps.html#sortBy-fffff0c5","e":false,"i":"","n":"sortBy","t":"sortBy[B](f: A => B)(implicit ord: Ordering[B]): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Sorts this array according to the Ordering which results from transforming\nan implicitly given Ordering with a transformation function.\n"},
{"l":"api/scala/collection/ArrayOps.html#sortWith-fffffa25","e":false,"i":"","n":"sortWith","t":"sortWith(lt: (A, A) => Boolean): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Sorts this array according to a comparison function."},
{"l":"api/scala/collection/ArrayOps.html#sorted-ffffff34","e":false,"i":"","n":"sorted","t":"sorted[B >: A](implicit ord: Ordering[B]): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Sorts this array according to an Ordering."},
{"l":"api/scala/collection/ArrayOps.html#span-243","e":false,"i":"","n":"span","t":"span(p: A => Boolean): (Array[A], Array[A])","d":"scala.collection.ArrayOps","k":"def","x":"Splits this array into a prefix/suffix pair according to a predicate."},
{"l":"api/scala/collection/ArrayOps.html#splitAt-fffffbd9","e":false,"i":"","n":"splitAt","t":"splitAt(n: Int): (Array[A], Array[A])","d":"scala.collection.ArrayOps","k":"def","x":"Splits this array into two at a given position.\nNote: c splitAt n is equivalent to (c take n, c drop n).\n"},
{"l":"api/scala/collection/ArrayOps.html#startsWith-e1c","e":false,"i":"","n":"startsWith","t":"startsWith[B >: A](that: Array[B]): Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether this array starts with the given array."},
{"l":"api/scala/collection/ArrayOps.html#startsWith-c5d","e":false,"i":"","n":"startsWith","t":"startsWith[B >: A](that: Array[B], offset: Int): Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether this array contains the given array at a given index.\n"},
{"l":"api/scala/collection/ArrayOps.html#startsWith-fffff863","e":false,"i":"","n":"startsWith","t":"startsWith[B >: A](that: IterableOnce[B], offset: Int): Boolean","d":"scala.collection.ArrayOps","k":"def","x":"Tests whether this array contains the given sequence at a given index.\n"},
{"l":"api/scala/collection/ArrayOps.html#stepper-190","e":false,"i":"","n":"stepper","t":"stepper[S <: Stepper[_]](implicit shape: StepperShape[A, S]): S & EfficientSplit","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#tail-0","e":false,"i":"","n":"tail","t":"tail: Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"The rest of the array without its first element."},
{"l":"api/scala/collection/ArrayOps.html#tails-0","e":false,"i":"","n":"tails","t":"tails: Iterator[Array[A]]","d":"scala.collection.ArrayOps","k":"def","x":"Iterates over the tails of this array. The first value will be this\narray and the final one will be an empty array, with the intervening\nvalues the results of successive applications of tail.\n"},
{"l":"api/scala/collection/ArrayOps.html#take-aba","e":false,"i":"","n":"take","t":"take(n: Int): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"An array containing the first n elements of this array."},
{"l":"api/scala/collection/ArrayOps.html#takeRight-aba","e":false,"i":"","n":"takeRight","t":"takeRight(n: Int): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"An array containing the last n elements of this array."},
{"l":"api/scala/collection/ArrayOps.html#takeWhile-c24","e":false,"i":"","n":"takeWhile","t":"takeWhile(p: A => Boolean): Array[A]","d":"scala.collection.ArrayOps","k":"def","x":"Takes longest prefix of elements that satisfy a predicate.\n"},
{"l":"api/scala/collection/ArrayOps.html#toArray-fffff5df","e":false,"i":"","n":"toArray","t":"toArray[B >: A : ClassTag]: Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"Create a copy of this array with the specified element type."},
{"l":"api/scala/collection/ArrayOps.html#toIndexedSeq-0","e":false,"i":"","n":"toIndexedSeq","t":"toIndexedSeq: IndexedSeq[A]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#toSeq-0","e":false,"i":"","n":"toSeq","t":"toSeq: Seq[A]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#transpose-fffff875","e":false,"i":"","n":"transpose","t":"transpose[B](implicit asArray: A => Array[B]): Array[Array[B]]","d":"scala.collection.ArrayOps","k":"def","x":"Transposes a two dimensional array.\n"},
{"l":"api/scala/collection/ArrayOps.html#unzip-6c7","e":false,"i":"","n":"unzip","t":"unzip[A1, A2](implicit asPair: A => (A1, A2), ct1: ClassTag[A1], ct2: ClassTag[A2]): (Array[A1], Array[A2])","d":"scala.collection.ArrayOps","k":"def","x":"Converts an array of pairs into an array of first elements and an array of second elements.\n"},
{"l":"api/scala/collection/ArrayOps.html#unzip3-fffffb02","e":false,"i":"","n":"unzip3","t":"unzip3[A1, A2, A3](implicit asTriple: A => (A1, A2, A3), ct1: ClassTag[A1], ct2: ClassTag[A2], ct3: ClassTag[A3]): (Array[A1], Array[A2], Array[A3])","d":"scala.collection.ArrayOps","k":"def","x":"Converts an array of triples into three arrays, one containing the elements from each position of the triple.\n"},
{"l":"api/scala/collection/ArrayOps.html#updated-ffffff57","e":false,"i":"","n":"updated","t":"updated[B >: A : ClassTag](index: Int, elem: B): Array[B]","d":"scala.collection.ArrayOps","k":"def","x":"A copy of this array with one single replaced element."},
{"l":"api/scala/collection/ArrayOps.html#view-0","e":false,"i":"","n":"view","t":"view: IndexedSeqView[A]","d":"scala.collection.ArrayOps","k":"def","x":""},
{"l":"api/scala/collection/ArrayOps.html#withFilter-2f8","e":false,"i":"","n":"withFilter","t":"withFilter(p: A => Boolean): WithFilter[A]","d":"scala.collection.ArrayOps","k":"def","x":"Creates a non-strict filter of this array."},
{"l":"api/scala/collection/ArrayOps.html#zip-fffff8de","e":false,"i":"","n":"zip","t":"zip[B](that: IterableOnce[B]): Array[(A, B)]","d":"scala.collection.ArrayOps","k":"def","x":"Returns an array formed from this array and another iterable collection\nby combining corresponding elements in pairs.\nIf one of the two collections is longer than the other, its remaining elements are ignored.\n"},
{"l":"api/scala/collection/ArrayOps.html#zipAll-402","e":false,"i":"","n":"zipAll","t":"zipAll[A1 >: A, B](that: Iterable[B], thisElem: A1, thatElem: B): Array[(A1, B)]","d":"scala.collection.ArrayOps","k":"def","x":"Returns an array formed from this array and another iterable collection\nby combining corresponding elements in pairs.\nIf one of the two collections is shorter than the other,\nplaceholder elements are used to extend the shorter collection to the length of the longer.\n"},
{"l":"api/scala/collection/ArrayOps.html#zipWithIndex-0","e":false,"i":"","n":"zipWithIndex","t":"zipWithIndex: Array[(A, Int)]","d":"scala.collection.ArrayOps","k":"def","x":"Zips this array with its indices.\n"},
{"l":"api/scala/collection/BitSet.html#","e":false,"i":"","n":"BitSet","t":"BitSet extends SortedSet[Int], BitSetOps[BitSet]","d":"scala.collection","k":"trait","x":"Base type of bitsets."},
{"l":"api/scala/collection/BitSet$.html#","e":false,"i":"","n":"BitSet","t":"BitSet extends SpecificIterableFactory[Int, BitSet]","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/BitSet$.html#empty-0","e":false,"i":"","n":"empty","t":"empty: BitSet","d":"scala.collection.BitSet","k":"def","x":""},
{"l":"api/scala/collection/BitSet$.html#fromSpecific-1a2","e":false,"i":"","n":"fromSpecific","t":"fromSpecific(it: IterableOnce[Int]): BitSet","d":"scala.collection.BitSet","k":"def","x":""},
{"l":"api/scala/collection/BitSet$.html#newBuilder-0","e":false,"i":"","n":"newBuilder","t":"newBuilder: Builder[Int, BitSet]","d":"scala.collection.BitSet","k":"def","x":"Get a Builder for the collection. For non-strict collection types this will use an intermediate buffer.\nBuilding collections with fromSpecific is preferred because it can be lazy for lazy collections."},
{"l":"api/scala/collection/BitSetOps.html#","e":false,"i":"","n":"BitSetOps","t":"BitSetOps[+C <: BitSet & BitSetOps[C]] extends SortedSetOps[Int, SortedSet, C]","d":"scala.collection","k":"trait","x":"Base implementation type of bitsets"},
{"l":"api/scala/collection/BitSetOps.html#^-760","e":false,"i":"","n":"^","t":"^(other: BitSet): C","d":"scala.collection.BitSetOps","k":"def","x":""},
{"l":"api/scala/collection/BitSetOps.html#bitSetFactory-0","e":false,"i":"","n":"bitSetFactory","t":"bitSetFactory: SpecificIterableFactory[Int, C]","d":"scala.collection.BitSetOps","k":"def","x":""},
{"l":"api/scala/collection/BitSetOps.html#collect-c","e":false,"i":"","n":"collect","t":"collect(pf: PartialFunction[Int, Int]): C","d":"scala.collection.BitSetOps","k":"def","x":""},
{"l":"api/scala/collection/BitSetOps.html#contains-ffffff99","e":false,"i":"","n":"contains","t":"contains(elem: Int): Boolean","d":"scala.collection.BitSetOps","k":"def","x":""},
{"l":"api/scala/collection/BitSetOps.html#diff-703","e":false,"i":"","n":"diff","t":"diff(other: Set[Int]): C","d":"scala.collection.BitSetOps","k":"def","x":"Computes the difference of this set and another set.\n"},
{"l":"api/scala/collection/BitSetOps.html#flatMap-fffff32c","e":false,"i":"","n":"flatMap","t":"flatMap(f: Int => IterableOnce[Int]): C","d":"scala.collection.BitSetOps","k":"def","x":""},
{"l":"api/scala/collection/BitSetOps.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[Int]","d":"scala.collection.BitSetOps","k":"def","x":"An scala.collection.Iterator over the elements of this set."},
{"l":"api/scala/collection/BitSetOps.html#iteratorFrom-fffffbef","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: Int): Iterator[Int]","d":"scala.collection.BitSetOps","k":"def","x":"Creates an iterator that contains all values from this collection\ngreater than or equal to start according to the ordering of\nthis collection. x.iteratorFrom(y) is equivalent to but will usually\nbe more efficient than x.from(y).iterator\n"},
{"l":"api/scala/collection/BitSetOps.html#map-fffff32c","e":false,"i":"","n":"map","t":"map(f: Int => Int): C","d":"scala.collection.BitSetOps","k":"def","x":"Builds a new bitset by applying a function to all elements of this bitset"},
{"l":"api/scala/collection/BitSetOps.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[Int]","d":"scala.collection.BitSetOps","k":"def","x":""},
{"l":"api/scala/collection/BitSetOps.html#rangeImpl-fffff8a3","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[Int], until: Option[Int]): C","d":"scala.collection.BitSetOps","k":"def","x":"Creates a ranged projection of this collection. Any mutations in the\nranged projection will update this collection and vice versa."},
{"l":"api/scala/collection/BitSetOps.html#toBitMask-0","e":false,"i":"","n":"toBitMask","t":"toBitMask: Array[Long]","d":"scala.collection.BitSetOps","k":"def","x":"Creates a bit mask for this set as a new array of longs\n"},
{"l":"api/scala/collection/BitSetOps.html#unsorted-0","e":false,"i":"","n":"unsorted","t":"unsorted: Set[Int]","d":"scala.collection.BitSetOps","k":"def","x":""},
{"l":"api/scala/collection/BitSetOps.html#xor-760","e":false,"i":"","n":"xor","t":"xor(other: BitSet): C","d":"scala.collection.BitSetOps","k":"def","x":"Computes the symmetric difference of this bitset and another bitset by performing\na bitwise \"exclusive-or\".\n"},
{"l":"api/scala/collection/BitSetOps$.html#","e":false,"i":"","n":"BitSetOps","t":"BitSetOps","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/BufferedIterator.html#","e":false,"i":"","n":"BufferedIterator","t":"BufferedIterator[+A] extends Iterator[A]","d":"scala.collection","k":"trait","x":"Buffered iterators are iterators which provide a method head\nthat inspects the next element without discarding it.\n"},
{"l":"api/scala/collection/BufferedIterator.html#head-0","e":false,"i":"","n":"head","t":"head: A","d":"scala.collection.BufferedIterator","k":"def","x":"Returns next element of iterator without advancing beyond it.\n"},
{"l":"api/scala/collection/BufferedIterator.html#headOption-0","e":false,"i":"","n":"headOption","t":"headOption: Option[A]","d":"scala.collection.BufferedIterator","k":"def","x":"Returns an option of the next element of an iterator without advancing beyond it."},
{"l":"api/scala/collection/BuildFrom.html#","e":false,"i":"","n":"BuildFrom","t":"BuildFrom[-From, -A, +C]","d":"scala.collection","k":"trait","x":"Builds a collection of type C from elements of type A when a source collection of type From is available.\nImplicit instances of BuildFrom are available for all collection types.\n"},
{"l":"api/scala/collection/BuildFrom.html#apply-fffff49e","e":false,"i":"","n":"apply","t":"apply(from: From): Builder[A, C]","d":"scala.collection.BuildFrom","k":"def","x":""},
{"l":"api/scala/collection/BuildFrom.html#fromSpecific-ffffffbb","e":false,"i":"","n":"fromSpecific","t":"fromSpecific(from: From)(it: IterableOnce[A]): C","d":"scala.collection.BuildFrom","k":"def","x":""},
{"l":"api/scala/collection/BuildFrom.html#newBuilder-fffff49e","e":false,"i":"","n":"newBuilder","t":"newBuilder(from: From): Builder[A, C]","d":"scala.collection.BuildFrom","k":"def","x":"Get a Builder for the collection. For non-strict collection types this will use an intermediate buffer.\nBuilding collections with fromSpecific is preferred because it can be lazy for lazy collections."},
{"l":"api/scala/collection/BuildFrom.html#toFactory-ffffffd5","e":false,"i":"","n":"toFactory","t":"toFactory(from: From): Factory[A, C]","d":"scala.collection.BuildFrom","k":"def","x":"Partially apply a BuildFrom to a Factory"},
{"l":"api/scala/collection/BuildFrom$.html#","e":false,"i":"","n":"BuildFrom","t":"BuildFrom extends BuildFromLowPriority1","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/BuildFrom$.html#buildFromArray-8bc","e":false,"i":"","n":"buildFromArray","t":"buildFromArray[A : ClassTag]: BuildFrom[Array[_], A, Array[A]]","d":"scala.collection.BuildFrom","k":"def","x":""},
{"l":"api/scala/collection/BuildFrom$.html#buildFromBitSet-fffff061","e":false,"i":"","n":"buildFromBitSet","t":"buildFromBitSet[C <: BitSet & BitSetOps[C]]: BuildFrom[C, Int, C]","d":"scala.collection.BuildFrom","k":"def","x":""},
{"l":"api/scala/collection/BuildFrom$.html#buildFromMapOps-fffff365","e":false,"i":"","n":"buildFromMapOps","t":"buildFromMapOps[CC <: ([X, Y] =>> Map[X, Y] & MapOps[X, Y, CC, _]), K0, V0, K, V]: BuildFrom[CC[K0, V0] & Map[K0, V0], (K, V), CC[K, V] & Map[K, V]]","d":"scala.collection.BuildFrom","k":"def","x":"Build the source collection type from a MapOps"},
{"l":"api/scala/collection/BuildFrom$.html#buildFromSortedMapOps-24d","e":false,"i":"","n":"buildFromSortedMapOps","t":"buildFromSortedMapOps[CC <: ([X, Y] =>> SortedMap[X, Y] & SortedMapOps[X, Y, CC, _]), K0, V0, K : Ordering, V]: BuildFrom[CC[K0, V0] & SortedMap[K0, V0], (K, V), CC[K, V] & SortedMap[K, V]]","d":"scala.collection.BuildFrom","k":"def","x":"Build the source collection type from a SortedMapOps"},
{"l":"api/scala/collection/BuildFrom$.html#buildFromString-0","e":false,"i":"","n":"buildFromString","t":"buildFromString: BuildFrom[String, Char, String]","d":"scala.collection.BuildFrom","k":"val","x":""},
{"l":"api/scala/collection/BuildFrom$.html#buildFromView-122","e":false,"i":"","n":"buildFromView","t":"buildFromView[A, B]: BuildFrom[View[A], B, View[B]]","d":"scala.collection.BuildFrom","k":"def","x":""},
{"l":"api/scala/collection/BuildFrom$.html#buildFromWrappedString-0","e":false,"i":"","n":"buildFromWrappedString","t":"buildFromWrappedString: BuildFrom[WrappedString, Char, WrappedString]","d":"scala.collection.BuildFrom","k":"val","x":""},
{"l":"api/scala/collection/BuildFromLowPriority1.html#","e":false,"i":"","n":"BuildFromLowPriority1","t":"BuildFromLowPriority1 extends BuildFromLowPriority2","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/BuildFromLowPriority1.html#buildFromSortedSetOps-fffff70f","e":false,"i":"","n":"buildFromSortedSetOps","t":"buildFromSortedSetOps[CC <: ([X] =>> SortedSet[X] & SortedSetOps[X, CC, _]), A0, A : Ordering]: BuildFrom[CC[A0] & SortedSet[A0], A, CC[A] & SortedSet[A]]","d":"scala.collection.BuildFromLowPriority1","k":"def","x":"Build the source collection type from an Iterable with SortedOps"},
{"l":"api/scala/collection/BuildFromLowPriority1.html#fallbackStringCanBuildFrom-fffff061","e":false,"i":"","n":"fallbackStringCanBuildFrom","t":"fallbackStringCanBuildFrom[A]: BuildFrom[String, A, IndexedSeq[A]]","d":"scala.collection.BuildFromLowPriority1","k":"def","x":""},
{"l":"api/scala/collection/BuildFromLowPriority2.html#","e":false,"i":"","n":"BuildFromLowPriority2","t":"BuildFromLowPriority2","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/BuildFromLowPriority2.html#buildFromIterableOps-1e3","e":false,"i":"","n":"buildFromIterableOps","t":"buildFromIterableOps[CC <: ([X] =>> Iterable[X] & IterableOps[X, CC, _]), A0, A]: BuildFrom[CC[A0], A, CC[A]]","d":"scala.collection.BuildFromLowPriority2","k":"def","x":"Build the source collection type from an IterableOps"},
{"l":"api/scala/collection/BuildFromLowPriority2.html#buildFromIterator-fffff061","e":false,"i":"","n":"buildFromIterator","t":"buildFromIterator[A]: BuildFrom[Iterator[_], A, Iterator[A]]","d":"scala.collection.BuildFromLowPriority2","k":"def","x":""},
{"l":"api/scala/collection/ClassTagIterableFactory.html#","e":false,"i":"","n":"ClassTagIterableFactory","t":"ClassTagIterableFactory[+CC[_]] extends EvidenceIterableFactory[CC, ClassTag]","d":"scala.collection","k":"trait","x":"Base trait for companion objects of collections that require an implicit ClassTag."},
{"l":"api/scala/collection/ClassTagIterableFactory.html#fill-fffff9cd","e":false,"i":"","n":"fill","t":"fill[A : ClassTag](n1: Int, n2: Int)(elem: => A): CC[CC[A]]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a two-dimensional collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/ClassTagIterableFactory.html#fill-fffff048","e":false,"i":"","n":"fill","t":"fill[A : ClassTag](n1: Int, n2: Int, n3: Int)(elem: => A): CC[CC[CC[A]]]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a three-dimensional collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/ClassTagIterableFactory.html#fill-42d","e":false,"i":"","n":"fill","t":"fill[A : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => A): CC[CC[CC[CC[A]]]]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a four-dimensional collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/ClassTagIterableFactory.html#fill-fffff1e8","e":false,"i":"","n":"fill","t":"fill[A : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => A): CC[CC[CC[CC[CC[A]]]]]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a five-dimensional collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/ClassTagIterableFactory.html#range-fffffcc1","e":false,"i":"","n":"range","t":"range[A : Integral : ClassTag](start: A, end: A): CC[A]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a collection containing a sequence of increasing of integers.\n"},
{"l":"api/scala/collection/ClassTagIterableFactory.html#range-88e","e":false,"i":"","n":"range","t":"range[A : Integral : ClassTag](start: A, end: A, step: A): CC[A]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a collection containing equally spaced values in some integer interval."},
{"l":"api/scala/collection/ClassTagIterableFactory.html#tabulate-84f","e":false,"i":"","n":"tabulate","t":"tabulate[A : ClassTag](n1: Int, n2: Int)(f: (Int, Int) => A): CC[CC[A]]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a two-dimensional collection containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/collection/ClassTagIterableFactory.html#tabulate-fffff60b","e":false,"i":"","n":"tabulate","t":"tabulate[A : ClassTag](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => A): CC[CC[CC[A]]]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a three-dimensional collection containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/collection/ClassTagIterableFactory.html#tabulate-fffff131","e":false,"i":"","n":"tabulate","t":"tabulate[A : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => A): CC[CC[CC[CC[A]]]]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a four-dimensional collection containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/collection/ClassTagIterableFactory.html#tabulate-fffff62d","e":false,"i":"","n":"tabulate","t":"tabulate[A : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => A): CC[CC[CC[CC[CC[A]]]]]","d":"scala.collection.ClassTagIterableFactory","k":"def","x":"Produces a five-dimensional collection containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/collection/ClassTagIterableFactory$.html#","e":false,"i":"","n":"ClassTagIterableFactory","t":"ClassTagIterableFactory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/ClassTagIterableFactory$$AnyIterableDelegate.html#","e":false,"i":"","n":"AnyIterableDelegate","t":"AnyIterableDelegate[CC[_]](delegate: ClassTagIterableFactory[CC]) extends IterableFactory[CC]","d":"scala.collection.ClassTagIterableFactory","k":"class","x":"An IterableFactory that uses ClassTag.Any as the evidence for every element type. This may or may not be\nsound depending on the use of the ClassTag by the collection implementation."},
{"l":"api/scala/collection/ClassTagIterableFactory$$AnyIterableDelegate.html#empty-fffff7c4","e":false,"i":"","n":"empty","t":"empty[A]: CC[A]","d":"scala.collection.ClassTagIterableFactory.AnyIterableDelegate","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/ClassTagIterableFactory$$AnyIterableDelegate.html#from-1dd","e":false,"i":"","n":"from","t":"from[A](it: IterableOnce[A]): CC[A]","d":"scala.collection.ClassTagIterableFactory.AnyIterableDelegate","k":"def","x":"Creates a target collection from an existing source collection\n"},
{"l":"api/scala/collection/ClassTagIterableFactory$$AnyIterableDelegate.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, CC[A]]","d":"scala.collection.ClassTagIterableFactory.AnyIterableDelegate","k":"def","x":""},
{"l":"api/scala/collection/ClassTagIterableFactory$$Delegate.html#","e":false,"i":"","n":"Delegate","t":"Delegate[CC[_]](delegate: EvidenceIterableFactory[CC, ClassTag]) extends Delegate[CC, ClassTag], ClassTagIterableFactory[CC]","d":"scala.collection.ClassTagIterableFactory","k":"class","x":""},
{"l":"api/scala/collection/ClassTagSeqFactory.html#","e":false,"i":"","n":"ClassTagSeqFactory","t":"ClassTagSeqFactory[+CC <: ([A] =>> SeqOps[A, Seq, Seq[A]])] extends ClassTagIterableFactory[CC]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/ClassTagSeqFactory.html#unapplySeq-fffff411","e":false,"i":"","n":"unapplySeq","t":"unapplySeq[A](x: CC[A]): UnapplySeqWrapper[A]","d":"scala.collection.ClassTagSeqFactory","k":"def","x":""},
{"l":"api/scala/collection/ClassTagSeqFactory$.html#","e":false,"i":"","n":"ClassTagSeqFactory","t":"ClassTagSeqFactory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/ClassTagSeqFactory$$AnySeqDelegate.html#","e":false,"i":"","n":"AnySeqDelegate","t":"AnySeqDelegate[CC <: ([A] =>> SeqOps[A, Seq, Seq[A]])](delegate: ClassTagSeqFactory[CC]) extends AnyIterableDelegate[CC], SeqFactory[CC]","d":"scala.collection.ClassTagSeqFactory","k":"class","x":"A SeqFactory that uses ClassTag.Any as the evidence for every element type. This may or may not be\nsound depending on the use of the ClassTag by the collection implementation."},
{"l":"api/scala/collection/ClassTagSeqFactory$$Delegate.html#","e":false,"i":"","n":"Delegate","t":"Delegate[CC <: ([A] =>> SeqOps[A, Seq, Seq[A]])](delegate: ClassTagSeqFactory[CC]) extends Delegate[CC], ClassTagSeqFactory[CC]","d":"scala.collection.ClassTagSeqFactory","k":"class","x":""},
{"l":"api/scala/collection/DefaultMap.html#","e":false,"i":"","n":"DefaultMap","t":"DefaultMap[K, +V] extends Map[K, V]","d":"scala.collection","k":"trait","x":"A default map which builds a default immutable.Map implementation for all\ntransformations.\n"},
{"l":"api/scala/collection/DoubleStepper.html#","e":false,"i":"","n":"DoubleStepper","t":"DoubleStepper extends Stepper[Double]","d":"scala.collection","k":"trait","x":"A Stepper for Doubles. See Stepper."},
{"l":"api/scala/collection/DoubleStepper.html#javaIterator-fffff416","e":false,"i":"","n":"javaIterator","t":"javaIterator[B >: Double]: OfDouble","d":"scala.collection.DoubleStepper","k":"def","x":"Returns a Java java.util.Iterator corresponding to this Stepper."},
{"l":"api/scala/collection/DoubleStepper.html#spliterator-5fe","e":false,"i":"","n":"spliterator","t":"spliterator[B >: Double]: OfDouble","d":"scala.collection.DoubleStepper","k":"def","x":"Returns a java.util.Spliterator corresponding to this Stepper."},
{"l":"api/scala/collection/DoubleStepper.html#trySplit-fffff9f8","e":false,"i":"","n":"trySplit","t":"trySplit(): DoubleStepper","d":"scala.collection.DoubleStepper","k":"def","x":"Split this stepper, if applicable. The elements of the current Stepper are split up between\nthe resulting Stepper and the current stepper."},
{"l":"api/scala/collection/DoubleStepper$.html#","e":false,"i":"","n":"DoubleStepper","t":"DoubleStepper","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/DoubleStepper$$DoubleStepperSpliterator.html#","e":false,"i":"","n":"DoubleStepperSpliterator","t":"DoubleStepperSpliterator(s: DoubleStepper) extends OfDouble","d":"scala.collection.DoubleStepper","k":"class","x":""},
{"l":"api/scala/collection/DoubleStepper$$DoubleStepperSpliterator.html#characteristics-ffffff27","e":false,"i":"","n":"characteristics","t":"characteristics(): Int","d":"scala.collection.DoubleStepper.DoubleStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/DoubleStepper$$DoubleStepperSpliterator.html#estimateSize-644","e":false,"i":"","n":"estimateSize","t":"estimateSize(): Long","d":"scala.collection.DoubleStepper.DoubleStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/DoubleStepper$$DoubleStepperSpliterator.html#tryAdvance-fffff443","e":false,"i":"","n":"tryAdvance","t":"tryAdvance(c: DoubleConsumer): Boolean","d":"scala.collection.DoubleStepper.DoubleStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory.html#","e":false,"i":"","n":"EvidenceIterableFactory","t":"EvidenceIterableFactory[+CC[_], Ev[_]] extends Serializable","d":"scala.collection","k":"trait","x":"Base trait for companion objects of collections that require an implicit evidence."},
{"l":"api/scala/collection/EvidenceIterableFactory.html#apply-bc2","e":false,"i":"","n":"apply","t":"apply[A : Ev](xs: A*): CC[A]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory.html#empty-957","e":false,"i":"","n":"empty","t":"empty[A : Ev]: CC[A]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory.html#evidenceIterableFactory-fffffb06","e":false,"i":"","n":"evidenceIterableFactory","t":"evidenceIterableFactory[A : Ev]: Factory[A, CC[A]]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory.html#fill-fffff4e0","e":false,"i":"","n":"fill","t":"fill[A : Ev](n: Int)(elem: => A): CC[A]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":"Produces a collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/EvidenceIterableFactory.html#from-170","e":false,"i":"","n":"from","t":"from[E : Ev](it: IterableOnce[E]): CC[E]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory.html#iterate-374","e":false,"i":"","n":"iterate","t":"iterate[A : Ev](start: A, len: Int)(f: A => A): CC[A]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":"Produces a collection containing repeated applications of a function to a start value.\n"},
{"l":"api/scala/collection/EvidenceIterableFactory.html#newBuilder-ecf","e":false,"i":"","n":"newBuilder","t":"newBuilder[A : Ev]: Builder[A, CC[A]]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory.html#tabulate-e1","e":false,"i":"","n":"tabulate","t":"tabulate[A : Ev](n: Int)(f: Int => A): CC[A]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":"Produces a collection containing values of a given function over a range of integer values starting from 0."},
{"l":"api/scala/collection/EvidenceIterableFactory.html#unfold-952","e":false,"i":"","n":"unfold","t":"unfold[A : Ev, S](init: S)(f: S => Option[(A, S)]): CC[A]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":"Produces a collection that uses a function f to produce elements of type A\nand update an internal state of type S.\n"},
{"l":"api/scala/collection/EvidenceIterableFactory$.html#","e":false,"i":"","n":"EvidenceIterableFactory","t":"EvidenceIterableFactory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory$.html#toBuildFrom-fffff48f","e":false,"i":"","n":"toBuildFrom","t":"toBuildFrom[Ev[_], A : Ev, CC[_]](factory: EvidenceIterableFactory[CC, Ev]): BuildFrom[Any, A, CC[A]]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory$.html#toFactory-fffff421","e":false,"i":"","n":"toFactory","t":"toFactory[Ev[_], A : Ev, CC[_]](factory: EvidenceIterableFactory[CC, Ev]): Factory[A, CC[A]]","d":"scala.collection.EvidenceIterableFactory","k":"def","x":"Fixes the element type of factory to A"},
{"l":"api/scala/collection/EvidenceIterableFactory$$Delegate.html#","e":false,"i":"","n":"Delegate","t":"Delegate[CC[_], Ev[_]](delegate: EvidenceIterableFactory[CC, Ev]) extends EvidenceIterableFactory[CC, Ev]","d":"scala.collection.EvidenceIterableFactory","k":"class","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory$$Delegate.html#empty-957","e":false,"i":"","n":"empty","t":"empty[A : Ev]: CC[A]","d":"scala.collection.EvidenceIterableFactory.Delegate","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory$$Delegate.html#from-170","e":false,"i":"","n":"from","t":"from[E : Ev](it: IterableOnce[E]): CC[E]","d":"scala.collection.EvidenceIterableFactory.Delegate","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactory$$Delegate.html#newBuilder-ecf","e":false,"i":"","n":"newBuilder","t":"newBuilder[A : Ev]: Builder[A, CC[A]]","d":"scala.collection.EvidenceIterableFactory.Delegate","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactoryDefaults.html#","e":false,"i":"","n":"EvidenceIterableFactoryDefaults","t":"EvidenceIterableFactoryDefaults[+A, +CC <: ([x] =>> IterableOps[x, CC, CC[x]]), Ev[_]] extends IterableOps[A, CC, CC[A]]","d":"scala.collection","k":"trait","x":"This trait provides default implementations for the factory methods fromSpecific and\nnewSpecificBuilder that need to be refined when implementing a collection type that refines\nthe CC and C type parameters. It is used for collections that have an additional constraint,\nexpressed by the evidenceIterableFactory method."},
{"l":"api/scala/collection/EvidenceIterableFactoryDefaults.html#evidenceIterableFactory-0","e":false,"i":"","n":"evidenceIterableFactory","t":"evidenceIterableFactory: EvidenceIterableFactory[CC, Ev]","d":"scala.collection.EvidenceIterableFactoryDefaults","k":"def","x":""},
{"l":"api/scala/collection/EvidenceIterableFactoryDefaults.html#iterableEvidence-0","e":false,"i":"","n":"iterableEvidence","t":"iterableEvidence: Ev[A]","d":"scala.collection.EvidenceIterableFactoryDefaults","k":"def","x":""},
{"l":"api/scala/collection/Factory.html#","e":false,"i":"","n":"Factory","t":"Factory[-A, +C]","d":"scala.collection","k":"trait","x":"A factory that builds a collection of type C with elements of type A."},
{"l":"api/scala/collection/Factory.html#fromSpecific-fffff66e","e":false,"i":"","n":"fromSpecific","t":"fromSpecific(it: IterableOnce[A]): C","d":"scala.collection.Factory","k":"def","x":""},
{"l":"api/scala/collection/Factory.html#newBuilder-0","e":false,"i":"","n":"newBuilder","t":"newBuilder: Builder[A, C]","d":"scala.collection.Factory","k":"def","x":"Get a Builder for the collection. For non-strict collection types this will use an intermediate buffer.\nBuilding collections with fromSpecific is preferred because it can be lazy for lazy collections."},
{"l":"api/scala/collection/Factory$.html#","e":false,"i":"","n":"Factory","t":"Factory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/Factory$.html#arrayFactory-ffffff8e","e":false,"i":"","n":"arrayFactory","t":"arrayFactory[A : ClassTag]: Factory[A, Array[A]]","d":"scala.collection.Factory","k":"def","x":""},
{"l":"api/scala/collection/Factory$.html#stringFactory-0","e":false,"i":"","n":"stringFactory","t":"stringFactory: Factory[Char, String]","d":"scala.collection.Factory","k":"val","x":""},
{"l":"api/scala/collection/IndexedSeq.html#","e":false,"i":"","n":"IndexedSeq","t":"IndexedSeq[+A] extends Seq[A], IndexedSeqOps[A, IndexedSeq, IndexedSeq[A]], IterableFactoryDefaults[A, IndexedSeq]","d":"scala.collection","k":"trait","x":"Base trait for indexed sequences that have efficient apply and length"},
{"l":"api/scala/collection/IndexedSeq$.html#","e":false,"i":"","n":"IndexedSeq","t":"IndexedSeq extends Delegate[IndexedSeq]","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/IndexedSeqOps.html#","e":false,"i":"","n":"IndexedSeqOps","t":"IndexedSeqOps[+A, +CC[_], +C] extends SeqOps[A, CC, C]","d":"scala.collection","k":"trait","x":"Base trait for indexed Seq operations"},
{"l":"api/scala/collection/IndexedSeqOps.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.IndexedSeqOps","k":"def","x":"An scala.collection.Iterator over the elements of this sequence."},
{"l":"api/scala/collection/IndexedSeqView.html#","e":false,"i":"","n":"IndexedSeqView","t":"IndexedSeqView[+A] extends IndexedSeqOps[A, View, View[A]], SeqView[A]","d":"scala.collection","k":"trait","x":"View defined in terms of indexing a range"},
{"l":"api/scala/collection/IndexedSeqView.html#appendedAll-bce","e":false,"i":"","n":"appendedAll","t":"appendedAll[B >: A](suffix: SomeIndexedSeqOps[B]): IndexedSeqView[B]","d":"scala.collection.IndexedSeqView","k":"def","x":""},
{"l":"api/scala/collection/IndexedSeqView.html#concat-bce","e":false,"i":"","n":"concat","t":"concat[B >: A](suffix: SomeIndexedSeqOps[B]): IndexedSeqView[B]","d":"scala.collection.IndexedSeqView","k":"def","x":""},
{"l":"api/scala/collection/IndexedSeqView.html#prependedAll-bce","e":false,"i":"","n":"prependedAll","t":"prependedAll[B >: A](prefix: SomeIndexedSeqOps[B]): IndexedSeqView[B]","d":"scala.collection.IndexedSeqView","k":"def","x":""},
{"l":"api/scala/collection/IndexedSeqView$.html#","e":false,"i":"","n":"IndexedSeqView","t":"IndexedSeqView","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/IndexedSeqView$.html#SomeIndexedSeqOps-0","e":false,"i":"","n":"SomeIndexedSeqOps","t":"SomeIndexedSeqOps[A] = IndexedSeqOps[A, AnyConstr, _]","d":"scala.collection.IndexedSeqView","k":"type","x":"An IndexedSeqOps whose collection type and collection type constructor are unknown"},
{"l":"api/scala/collection/IndexedSeqView$$Appended.html#","e":false,"i":"","n":"Appended","t":"Appended[+A](underlying: SomeIndexedSeqOps[A], elem: A) extends Appended[A], IndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$Concat.html#","e":false,"i":"","n":"Concat","t":"Concat[A](prefix: SomeIndexedSeqOps[A], suffix: SomeIndexedSeqOps[A]) extends Concat[A], IndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$Drop.html#","e":false,"i":"","n":"Drop","t":"Drop[A](underlying: SomeIndexedSeqOps[A], n: Int) extends Drop[A], IndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$DropRight.html#","e":false,"i":"","n":"DropRight","t":"DropRight[A](underlying: SomeIndexedSeqOps[A], n: Int) extends DropRight[A], IndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$Id.html#","e":false,"i":"","n":"Id","t":"Id[+A](underlying: SomeIndexedSeqOps[A]) extends Id[A], IndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$Map.html#","e":false,"i":"","n":"Map","t":"Map[A, B](underlying: SomeIndexedSeqOps[A], f: A => B) extends Map[A, B], IndexedSeqView[B]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$Prepended.html#","e":false,"i":"","n":"Prepended","t":"Prepended[+A](elem: A, underlying: SomeIndexedSeqOps[A]) extends Prepended[A], IndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$Reverse.html#","e":false,"i":"","n":"Reverse","t":"Reverse[A](underlying: SomeIndexedSeqOps[A]) extends Reverse[A], IndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$Slice.html#","e":false,"i":"","n":"Slice","t":"Slice[A](underlying: SomeIndexedSeqOps[A], from: Int, until: Int) extends AbstractIndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$Slice.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.IndexedSeqView.Slice","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/IndexedSeqView$$Slice.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.IndexedSeqView.Slice","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/IndexedSeqView$$Take.html#","e":false,"i":"","n":"Take","t":"Take[A](underlying: SomeIndexedSeqOps[A], n: Int) extends Take[A], IndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IndexedSeqView$$TakeRight.html#","e":false,"i":"","n":"TakeRight","t":"TakeRight[A](underlying: SomeIndexedSeqOps[A], n: Int) extends TakeRight[A], IndexedSeqView[A]","d":"scala.collection.IndexedSeqView","k":"class","x":""},
{"l":"api/scala/collection/IntStepper.html#","e":false,"i":"","n":"IntStepper","t":"IntStepper extends Stepper[Int]","d":"scala.collection","k":"trait","x":"A Stepper for Ints. See Stepper."},
{"l":"api/scala/collection/IntStepper.html#javaIterator-fffffdca","e":false,"i":"","n":"javaIterator","t":"javaIterator[B >: Int]: OfInt","d":"scala.collection.IntStepper","k":"def","x":"Returns a Java java.util.Iterator corresponding to this Stepper."},
{"l":"api/scala/collection/IntStepper.html#spliterator-fffff4e2","e":false,"i":"","n":"spliterator","t":"spliterator[B >: Int]: OfInt","d":"scala.collection.IntStepper","k":"def","x":"Returns a java.util.Spliterator corresponding to this Stepper."},
{"l":"api/scala/collection/IntStepper.html#trySplit-2aa","e":false,"i":"","n":"trySplit","t":"trySplit(): IntStepper","d":"scala.collection.IntStepper","k":"def","x":"Split this stepper, if applicable. The elements of the current Stepper are split up between\nthe resulting Stepper and the current stepper."},
{"l":"api/scala/collection/IntStepper$.html#","e":false,"i":"","n":"IntStepper","t":"IntStepper","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/IntStepper$$IntStepperSpliterator.html#","e":false,"i":"","n":"IntStepperSpliterator","t":"IntStepperSpliterator(s: IntStepper) extends OfInt","d":"scala.collection.IntStepper","k":"class","x":""},
{"l":"api/scala/collection/IntStepper$$IntStepperSpliterator.html#characteristics-ffffff27","e":false,"i":"","n":"characteristics","t":"characteristics(): Int","d":"scala.collection.IntStepper.IntStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/IntStepper$$IntStepperSpliterator.html#estimateSize-644","e":false,"i":"","n":"estimateSize","t":"estimateSize(): Long","d":"scala.collection.IntStepper.IntStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/IntStepper$$IntStepperSpliterator.html#tryAdvance-fffffe51","e":false,"i":"","n":"tryAdvance","t":"tryAdvance(c: IntConsumer): Boolean","d":"scala.collection.IntStepper.IntStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/Iterable.html#","e":false,"i":"","n":"Iterable","t":"Iterable[+A] extends IterableOnce[A], IterableOps[A, Iterable, Iterable[A]], IterableFactoryDefaults[A, Iterable]","d":"scala.collection","k":"trait","x":"Base trait for generic collections.\n"},
{"l":"api/scala/collection/Iterable.html#iterableFactory-0","e":false,"i":"","n":"iterableFactory","t":"iterableFactory: IterableFactory[Iterable]","d":"scala.collection.Iterable","k":"def","x":"The companion object of this iterable collection, providing various factory methods.\n"},
{"l":"api/scala/collection/Iterable.html#lazyZip-fffffd84","e":false,"i":"","n":"lazyZip","t":"lazyZip[B](that: Iterable[B]): LazyZip2[A, B, this.type]","d":"scala.collection.Iterable","k":"def","x":"Analogous to zip except that the elements in each collection are not consumed until a strict operation is\ninvoked on the returned LazyZip2 decorator."},
{"l":"api/scala/collection/Iterable.html#seq-0","e":false,"i":"","n":"seq","t":"seq: this.type","d":"scala.collection.Iterable","k":"def","x":""},
{"l":"api/scala/collection/Iterable.html#toIterable-0","e":false,"i":"","n":"toIterable","t":"toIterable: this.type","d":"scala.collection.Iterable","k":"def","x":""},
{"l":"api/scala/collection/Iterable$.html#","e":false,"i":"","n":"Iterable","t":"Iterable extends Delegate[Iterable]","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/Iterable$.html#single-9f6","e":false,"i":"","n":"single","t":"single[A](a: A): Iterable[A]","d":"scala.collection.Iterable","k":"def","x":""},
{"l":"api/scala/collection/IterableFactory.html#","e":false,"i":"","n":"IterableFactory","t":"IterableFactory[+CC[_]] extends Serializable","d":"scala.collection","k":"trait","x":"Base trait for companion objects of unconstrained collection types that may require\nmultiple traversals of a source collection to build a target collection CC.\n"},
{"l":"api/scala/collection/IterableFactory.html#apply-2f","e":false,"i":"","n":"apply","t":"apply[A](elems: A*): CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"Creates a collection with the specified elements."},
{"l":"api/scala/collection/IterableFactory.html#concat-2f","e":false,"i":"","n":"concat","t":"concat[A](xss: Iterable[A]*): CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"Concatenates all argument collections into a single collection.\n"},
{"l":"api/scala/collection/IterableFactory.html#empty-fffff7c4","e":false,"i":"","n":"empty","t":"empty[A]: CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/IterableFactory.html#fill-fffff54d","e":false,"i":"","n":"fill","t":"fill[A](n: Int)(elem: => A): CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/IterableFactory.html#fill-fffff232","e":false,"i":"","n":"fill","t":"fill[A](n1: Int, n2: Int)(elem: => A): CC[CC[A]]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a two-dimensional collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/IterableFactory.html#fill-6ed","e":false,"i":"","n":"fill","t":"fill[A](n1: Int, n2: Int, n3: Int)(elem: => A): CC[CC[CC[A]]]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a three-dimensional collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/IterableFactory.html#fill-fffff492","e":false,"i":"","n":"fill","t":"fill[A](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => A): CC[CC[CC[CC[A]]]]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a four-dimensional collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/IterableFactory.html#fill-fffff08d","e":false,"i":"","n":"fill","t":"fill[A](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => A): CC[CC[CC[CC[CC[A]]]]]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a five-dimensional collection containing the results of some element computation a number of times."},
{"l":"api/scala/collection/IterableFactory.html#from-1dd","e":false,"i":"","n":"from","t":"from[A](source: IterableOnce[A]): CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"Creates a target collection from an existing source collection\n"},
{"l":"api/scala/collection/IterableFactory.html#iterableFactory-fffffc73","e":false,"i":"","n":"iterableFactory","t":"iterableFactory[A]: Factory[A, CC[A]]","d":"scala.collection.IterableFactory","k":"def","x":""},
{"l":"api/scala/collection/IterableFactory.html#iterate-fffffbe1","e":false,"i":"","n":"iterate","t":"iterate[A](start: A, len: Int)(f: A => A): CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a collection containing repeated applications of a function to a start value.\n"},
{"l":"api/scala/collection/IterableFactory.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, CC[A]]","d":"scala.collection.IterableFactory","k":"def","x":""},
{"l":"api/scala/collection/IterableFactory.html#range-426","e":false,"i":"","n":"range","t":"range[A : Integral](start: A, end: A): CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a collection containing a sequence of increasing of integers.\n"},
{"l":"api/scala/collection/IterableFactory.html#range-fffff7b3","e":false,"i":"","n":"range","t":"range[A : Integral](start: A, end: A, step: A): CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a collection containing equally spaced values in some integer interval."},
{"l":"api/scala/collection/IterableFactory.html#tabulate-fffff34e","e":false,"i":"","n":"tabulate","t":"tabulate[A](n: Int)(f: Int => A): CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a collection containing values of a given function over a range of integer values starting from 0."},
{"l":"api/scala/collection/IterableFactory.html#tabulate-e34","e":false,"i":"","n":"tabulate","t":"tabulate[A](n1: Int, n2: Int)(f: (Int, Int) => A): CC[CC[A]]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a two-dimensional collection containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/collection/IterableFactory.html#tabulate-f0","e":false,"i":"","n":"tabulate","t":"tabulate[A](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => A): CC[CC[CC[A]]]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a three-dimensional collection containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/collection/IterableFactory.html#tabulate-c96","e":false,"i":"","n":"tabulate","t":"tabulate[A](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => A): CC[CC[CC[CC[A]]]]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a four-dimensional collection containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/collection/IterableFactory.html#tabulate-692","e":false,"i":"","n":"tabulate","t":"tabulate[A](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => A): CC[CC[CC[CC[CC[A]]]]]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a five-dimensional collection containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/collection/IterableFactory.html#unfold-fffffdbf","e":false,"i":"","n":"unfold","t":"unfold[A, S](init: S)(f: S => Option[(A, S)]): CC[A]","d":"scala.collection.IterableFactory","k":"def","x":"Produces a collection that uses a function f to produce elements of type A\nand update an internal state of type S.\n"},
{"l":"api/scala/collection/IterableFactory$.html#","e":false,"i":"","n":"IterableFactory","t":"IterableFactory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/IterableFactory$.html#toBuildFrom-392","e":false,"i":"","n":"toBuildFrom","t":"toBuildFrom[A, CC[_]](factory: IterableFactory[CC]): BuildFrom[Any, A, CC[A]]","d":"scala.collection.IterableFactory","k":"def","x":""},
{"l":"api/scala/collection/IterableFactory$.html#toFactory-7e4","e":false,"i":"","n":"toFactory","t":"toFactory[A, CC[_]](factory: IterableFactory[CC]): Factory[A, CC[A]]","d":"scala.collection.IterableFactory","k":"def","x":"Fixes the element type of factory to A"},
{"l":"api/scala/collection/IterableFactory$$Delegate.html#","e":false,"i":"","n":"Delegate","t":"Delegate[CC[_]](delegate: IterableFactory[CC]) extends IterableFactory[CC]","d":"scala.collection.IterableFactory","k":"class","x":""},
{"l":"api/scala/collection/IterableFactory$$Delegate.html#empty-fffff7c4","e":false,"i":"","n":"empty","t":"empty[A]: CC[A]","d":"scala.collection.IterableFactory.Delegate","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/IterableFactory$$Delegate.html#from-1dd","e":false,"i":"","n":"from","t":"from[E](it: IterableOnce[E]): CC[E]","d":"scala.collection.IterableFactory.Delegate","k":"def","x":"Creates a target collection from an existing source collection\n"},
{"l":"api/scala/collection/IterableFactory$$Delegate.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, CC[A]]","d":"scala.collection.IterableFactory.Delegate","k":"def","x":""},
{"l":"api/scala/collection/IterableFactoryDefaults.html#","e":false,"i":"","n":"IterableFactoryDefaults","t":"IterableFactoryDefaults[+A, +CC <: ([x] =>> IterableOps[x, CC, CC[x]])] extends IterableOps[A, CC, CC[A]]","d":"scala.collection","k":"trait","x":"This trait provides default implementations for the factory methods fromSpecific and\nnewSpecificBuilder that need to be refined when implementing a collection type that refines\nthe CC and C type parameters."},
{"l":"api/scala/collection/IterableFactoryDefaults.html#fromSpecific-373","e":false,"i":"","n":"fromSpecific","t":"fromSpecific(coll: IterableOnce[A]): CC[A]","d":"scala.collection.IterableFactoryDefaults","k":"def","x":"Defines how to turn a given Iterable[A] into a collection of type C."},
{"l":"api/scala/collection/IterableFactoryDefaults.html#newSpecificBuilder-0","e":false,"i":"","n":"newSpecificBuilder","t":"newSpecificBuilder: Builder[A, CC[A]]","d":"scala.collection.IterableFactoryDefaults","k":"def","x":""},
{"l":"api/scala/collection/IterableOnce.html#","e":false,"i":"","n":"IterableOnce","t":"IterableOnce[+A]","d":"scala.collection","k":"trait","x":"A template trait for collections which can be traversed either once only\nor one or more times."},
{"l":"api/scala/collection/IterableOnce.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.IterableOnce","k":"def","x":"An scala.collection.Iterator over the elements of this collection."},
{"l":"api/scala/collection/IterableOnce.html#knownSize-0","e":false,"i":"","n":"knownSize","t":"knownSize: Int","d":"scala.collection.IterableOnce","k":"def","x":"The number of elements in this collection, if it can be cheaply computed,\n-1 otherwise. Cheaply usually means: Not requiring a collection traversal.\n"},
{"l":"api/scala/collection/IterableOnce.html#stepper-190","e":false,"i":"","n":"stepper","t":"stepper[S <: Stepper[_]](implicit shape: StepperShape[A, S]): S","d":"scala.collection.IterableOnce","k":"def","x":"Returns a scala.collection.Stepper for the elements of this collection."},
{"l":"api/scala/collection/IterableOnce$.html#","e":false,"i":"","n":"IterableOnce","t":"IterableOnce","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/IterableOnce$.html#iterableOnceExtensionMethods-fffff2d1","e":false,"i":"","n":"iterableOnceExtensionMethods","t":"iterableOnceExtensionMethods[A](it: IterableOnce[A]): IterableOnceExtensionMethods[A]","d":"scala.collection.IterableOnce","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#","e":false,"i":"","n":"IterableOnceExtensionMethods","t":"IterableOnceExtensionMethods[A](it: IterableOnce[A]) extends AnyVal","d":"scala.collection","k":"class","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#/:-fffff9e1","e":false,"i":"","n":"/:","t":"/:[B](z: B)(op: (B, A) => B): B","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#:\\-fffff9e1","e":false,"i":"","n":":\\","t":":\\[B](z: B)(op: (A, B) => B): B","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#collectFirst-25d","e":false,"i":"","n":"collectFirst","t":"collectFirst[B](f: PartialFunction[A, B]): Option[B]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#copyToBuffer-41c","e":false,"i":"","n":"copyToBuffer","t":"copyToBuffer(dest: Buffer[A]): Unit","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#count-db6","e":false,"i":"","n":"count","t":"count(f: A => Boolean): Int","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#exists-fffff66f","e":false,"i":"","n":"exists","t":"exists(f: A => Boolean): Boolean","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#filter-fffff1c5","e":false,"i":"","n":"filter","t":"filter(f: A => Boolean): Iterator[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#find-94e","e":false,"i":"","n":"find","t":"find(p: A => Boolean): Option[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#flatMap-fffffe9b","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: A => IterableOnce[B]): IterableOnce[B]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#fold-fffff9e1","e":false,"i":"","n":"fold","t":"fold[A1 >: A](z: A1)(op: (A1, A1) => A1): A1","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#foldLeft-fffff9e1","e":false,"i":"","n":"foldLeft","t":"foldLeft[B](z: B)(op: (B, A) => B): B","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#foldRight-fffff9e1","e":false,"i":"","n":"foldRight","t":"foldRight[B](z: B)(op: (A, B) => B): B","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#forall-fffff66f","e":false,"i":"","n":"forall","t":"forall(f: A => Boolean): Boolean","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: A => U): Unit","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#map-fffffe9b","e":false,"i":"","n":"map","t":"map[B](f: A => B): IterableOnce[B]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#max-505","e":false,"i":"","n":"max","t":"max(implicit ord: Ordering[A]): A","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#maxBy-fffff0c5","e":false,"i":"","n":"maxBy","t":"maxBy[B](f: A => B)(implicit cmp: Ordering[B]): A","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#min-505","e":false,"i":"","n":"min","t":"min(implicit ord: Ordering[A]): A","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#minBy-fffff0c5","e":false,"i":"","n":"minBy","t":"minBy[B](f: A => B)(implicit cmp: Ordering[B]): A","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#mkString-d94","e":false,"i":"","n":"mkString","t":"mkString(start: String, sep: String, end: String): String","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#mkString-fffff2ca","e":false,"i":"","n":"mkString","t":"mkString(sep: String): String","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#mkString-0","e":false,"i":"","n":"mkString","t":"mkString: String","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#nonEmpty-0","e":false,"i":"","n":"nonEmpty","t":"nonEmpty: Boolean","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#product-fffff142","e":false,"i":"","n":"product","t":"product(implicit num: Numeric[A]): A","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#reduce-fffffa25","e":false,"i":"","n":"reduce","t":"reduce(f: (A, A) => A): A","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#reduceLeft-fffffa25","e":false,"i":"","n":"reduceLeft","t":"reduceLeft(f: (A, A) => A): A","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#reduceLeftOption-fcf","e":false,"i":"","n":"reduceLeftOption","t":"reduceLeftOption(f: (A, A) => A): Option[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#reduceOption-fcf","e":false,"i":"","n":"reduceOption","t":"reduceOption(f: (A, A) => A): Option[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#reduceRight-fffffa25","e":false,"i":"","n":"reduceRight","t":"reduceRight(f: (A, A) => A): A","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#reduceRightOption-fcf","e":false,"i":"","n":"reduceRightOption","t":"reduceRightOption(f: (A, A) => A): Option[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#sameElements-356","e":false,"i":"","n":"sameElements","t":"sameElements[B >: A](that: IterableOnce[B]): Boolean","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#sum-fffff142","e":false,"i":"","n":"sum","t":"sum(implicit num: Numeric[A]): A","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#to-fffff006","e":false,"i":"","n":"to","t":"to[C1](factory: Factory[A, C1]): C1","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toArray-fffff5df","e":false,"i":"","n":"toArray","t":"toArray[B >: A : ClassTag]: Array[B]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toBuffer-fffff87f","e":false,"i":"","n":"toBuffer","t":"toBuffer[B >: A]: Buffer[B]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toIndexedSeq-0","e":false,"i":"","n":"toIndexedSeq","t":"toIndexedSeq: IndexedSeq[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toIterable-0","e":false,"i":"","n":"toIterable","t":"toIterable: Iterable[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toIterator-0","e":false,"i":"","n":"toIterator","t":"toIterator: Iterator[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toList-0","e":false,"i":"","n":"toList","t":"toList: List[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toMap-c0c","e":false,"i":"","n":"toMap","t":"toMap[K, V](implicit ev: A <:< (K, V)): Map[K, V]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toSeq-0","e":false,"i":"","n":"toSeq","t":"toSeq: Seq[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toSet-fffffe9f","e":false,"i":"","n":"toSet","t":"toSet[B >: A]: Set[B]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toStream-0","e":false,"i":"","n":"toStream","t":"toStream: Stream[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toTraversable-0","e":false,"i":"","n":"toTraversable","t":"toTraversable: Iterable[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#toVector-0","e":false,"i":"","n":"toVector","t":"toVector: Vector[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceExtensionMethods.html#withFilter-fffff1c5","e":false,"i":"","n":"withFilter","t":"withFilter(f: A => Boolean): Iterator[A]","d":"scala.collection.IterableOnceExtensionMethods","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceOps.html#","e":false,"i":"","n":"IterableOnceOps","t":"IterableOnceOps[+A, +CC[_], +C]","d":"scala.collection","k":"trait","x":"This implementation trait can be mixed into an IterableOnce to get the basic methods that are shared between\nIterator and Iterable. The IterableOnce must support multiple calls to iterator but may or may not\nreturn the same Iterator every time."},
{"l":"api/scala/collection/IterableOnceOps.html#/:-fffff9e1","e":false,"i":"","n":"/:","t":"/:[B](z: B)(op: (B, A) => B): B","d":"scala.collection.IterableOnceOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceOps.html#:\\-fffff9e1","e":false,"i":"","n":":\\","t":":\\[B](z: B)(op: (A, B) => B): B","d":"scala.collection.IterableOnceOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceOps.html#addString-de3","e":false,"i":"","n":"addString","t":"addString(b: StringBuilder, start: String, sep: String, end: String): b.type","d":"scala.collection.IterableOnceOps","k":"def","x":"Appends all elements of this collection to a string builder using start, end, and separator strings.\nThe written text begins with the string start and ends with the string end.\nInside, the string representations (w.r.t. the method toString)\nof all elements of this collection are separated by the string sep."},
{"l":"api/scala/collection/IterableOnceOps.html#addString-e99","e":false,"i":"","n":"addString","t":"addString(b: StringBuilder, sep: String): b.type","d":"scala.collection.IterableOnceOps","k":"def","x":"Appends all elements of this collection to a string builder using a separator string.\nThe written text consists of the string representations (w.r.t. the method toString)\nof all elements of this collection, separated by the string sep."},
{"l":"api/scala/collection/IterableOnceOps.html#addString-ff4","e":false,"i":"","n":"addString","t":"addString(b: StringBuilder): b.type","d":"scala.collection.IterableOnceOps","k":"def","x":"Appends all elements of this collection to a string builder.\nThe written text consists of the string representations (w.r.t. the method\ntoString) of all elements of this collection without any separator string."},
{"l":"api/scala/collection/IterableOnceOps.html#aggregate-952","e":false,"i":"","n":"aggregate","t":"aggregate[B](z: => B)(seqop: (B, A) => B, combop: (B, B) => B): B","d":"scala.collection.IterableOnceOps","k":"def","x":"Aggregates the results of applying an operator to subsequent elements."},
{"l":"api/scala/collection/IterableOnceOps.html#collect-fffff5b3","e":false,"i":"","n":"collect","t":"collect[B](pf: PartialFunction[A, B]): CC[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"Builds a new collection by applying a partial function to all elements of this collection\non which the function is defined.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#collectFirst-25d","e":false,"i":"","n":"collectFirst","t":"collectFirst[B](pf: PartialFunction[A, B]): Option[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the first element of the collection for which the given partial\nfunction is defined, and applies the partial function to it."},
{"l":"api/scala/collection/IterableOnceOps.html#copyToArray-fffff3e3","e":false,"i":"","n":"copyToArray","t":"copyToArray[B >: A](xs: Array[B]): Int","d":"scala.collection.IterableOnceOps","k":"def","x":"Copies elements to an array, returning the number of elements written."},
{"l":"api/scala/collection/IterableOnceOps.html#copyToArray-fffffaa4","e":false,"i":"","n":"copyToArray","t":"copyToArray[B >: A](xs: Array[B], start: Int): Int","d":"scala.collection.IterableOnceOps","k":"def","x":"Copies elements to an array, returning the number of elements written."},
{"l":"api/scala/collection/IterableOnceOps.html#copyToArray-fffffd03","e":false,"i":"","n":"copyToArray","t":"copyToArray[B >: A](xs: Array[B], start: Int, len: Int): Int","d":"scala.collection.IterableOnceOps","k":"def","x":"Copy elements to an array, returning the number of elements written."},
{"l":"api/scala/collection/IterableOnceOps.html#copyToBuffer-f0b","e":false,"i":"","n":"copyToBuffer","t":"copyToBuffer[B >: A](dest: Buffer[B]): Unit","d":"scala.collection.IterableOnceOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceOps.html#corresponds-958","e":false,"i":"","n":"corresponds","t":"corresponds[B](that: IterableOnce[B])(p: (A, B) => Boolean): Boolean","d":"scala.collection.IterableOnceOps","k":"def","x":"Tests whether every element of this collection's iterator relates to the\ncorresponding element of another collection by satisfying a test predicate."},
{"l":"api/scala/collection/IterableOnceOps.html#count-db6","e":false,"i":"","n":"count","t":"count(p: A => Boolean): Int","d":"scala.collection.IterableOnceOps","k":"def","x":"Counts the number of elements in the collection which satisfy a predicate."},
{"l":"api/scala/collection/IterableOnceOps.html#drop-aba","e":false,"i":"","n":"drop","t":"drop(n: Int): C","d":"scala.collection.IterableOnceOps","k":"def","x":"Selects all elements except the first n ones."},
{"l":"api/scala/collection/IterableOnceOps.html#dropWhile-c24","e":false,"i":"","n":"dropWhile","t":"dropWhile(p: A => Boolean): C","d":"scala.collection.IterableOnceOps","k":"def","x":"Selects all elements except the longest prefix that satisfies a predicate."},
{"l":"api/scala/collection/IterableOnceOps.html#exists-fffff66f","e":false,"i":"","n":"exists","t":"exists(p: A => Boolean): Boolean","d":"scala.collection.IterableOnceOps","k":"def","x":"Tests whether a predicate holds for at least one element of this collection."},
{"l":"api/scala/collection/IterableOnceOps.html#filter-c24","e":false,"i":"","n":"filter","t":"filter(p: A => Boolean): C","d":"scala.collection.IterableOnceOps","k":"def","x":"Selects all elements of this collection which satisfy a predicate.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#filterNot-c24","e":false,"i":"","n":"filterNot","t":"filterNot(pred: A => Boolean): C","d":"scala.collection.IterableOnceOps","k":"def","x":"Selects all elements of this collection which do not satisfy a predicate.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#find-94e","e":false,"i":"","n":"find","t":"find(p: A => Boolean): Option[A]","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the first element of the collection satisfying a predicate, if any."},
{"l":"api/scala/collection/IterableOnceOps.html#flatMap-5d3","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: A => IterableOnce[B]): CC[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"Builds a new collection by applying a function to all elements of this collection\nand using the elements of the resulting collections."},
{"l":"api/scala/collection/IterableOnceOps.html#flatten-5d3","e":false,"i":"","n":"flatten","t":"flatten[B](implicit asIterable: A => IterableOnce[B]): CC[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"Converts this collection of iterable collections into\na collection formed by the elements of these iterable\ncollections."},
{"l":"api/scala/collection/IterableOnceOps.html#fold-fffff9e1","e":false,"i":"","n":"fold","t":"fold[A1 >: A](z: A1)(op: (A1, A1) => A1): A1","d":"scala.collection.IterableOnceOps","k":"def","x":"Applies the given binary operator op to the given initial value z and all\nelements of this collection."},
{"l":"api/scala/collection/IterableOnceOps.html#foldLeft-fffff9e1","e":false,"i":"","n":"foldLeft","t":"foldLeft[B](z: B)(op: (B, A) => B): B","d":"scala.collection.IterableOnceOps","k":"def","x":"Applies the given binary operator op to the given initial value z and all\nelements of this collection, going left to right. Returns the initial value if this collection\nis empty."},
{"l":"api/scala/collection/IterableOnceOps.html#foldRight-fffff9e1","e":false,"i":"","n":"foldRight","t":"foldRight[B](z: B)(op: (A, B) => B): B","d":"scala.collection.IterableOnceOps","k":"def","x":"Applies the given binary operator op to all elements of this collection and the given\ninitial value z, going right to left. Returns the initial value if this collection is\nempty."},
{"l":"api/scala/collection/IterableOnceOps.html#forall-fffff66f","e":false,"i":"","n":"forall","t":"forall(p: A => Boolean): Boolean","d":"scala.collection.IterableOnceOps","k":"def","x":"Tests whether a predicate holds for all elements of this collection."},
{"l":"api/scala/collection/IterableOnceOps.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: A => U): Unit","d":"scala.collection.IterableOnceOps","k":"def","x":"Applies f to each element for its side effects.\nNote: U parameter needed to help scalac's type inference.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#hasDefiniteSize-0","e":false,"i":"","n":"hasDefiniteSize","t":"hasDefiniteSize: Boolean","d":"scala.collection.IterableOnceOps","k":"def","x":"Tests whether this collection is known to have a finite size.\nAll strict collections are known to have finite size. For a non-strict\ncollection such as Stream, the predicate returns true if all\nelements have been computed. It returns false if the stream is\nnot yet evaluated to the end. Non-empty Iterators usually return\nfalse even if they were created from a collection with a known\nfinite size."},
{"l":"api/scala/collection/IterableOnceOps.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.collection.IterableOnceOps","k":"def","x":"Tests whether the collection is empty."},
{"l":"api/scala/collection/IterableOnceOps.html#isTraversableAgain-0","e":false,"i":"","n":"isTraversableAgain","t":"isTraversableAgain: Boolean","d":"scala.collection.IterableOnceOps","k":"def","x":"Tests whether this collection can be repeatedly traversed.  Always\ntrue for Iterables and false for Iterators unless overridden.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#map-5d3","e":false,"i":"","n":"map","t":"map[B](f: A => B): CC[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"Builds a new collection by applying a function to all elements of this collection.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#max-ffffff34","e":false,"i":"","n":"max","t":"max[B >: A](implicit ord: Ordering[B]): A","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the largest element."},
{"l":"api/scala/collection/IterableOnceOps.html#maxBy-fffff0c5","e":false,"i":"","n":"maxBy","t":"maxBy[B](f: A => B)(implicit ord: Ordering[B]): A","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the first element which yields the largest value measured by function f."},
{"l":"api/scala/collection/IterableOnceOps.html#maxByOption-fffff66f","e":false,"i":"","n":"maxByOption","t":"maxByOption[B](f: A => B)(implicit ord: Ordering[B]): Option[A]","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the first element which yields the largest value measured by function f."},
{"l":"api/scala/collection/IterableOnceOps.html#maxOption-fffff45e","e":false,"i":"","n":"maxOption","t":"maxOption[B >: A](implicit ord: Ordering[B]): Option[A]","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the largest element."},
{"l":"api/scala/collection/IterableOnceOps.html#min-ffffff34","e":false,"i":"","n":"min","t":"min[B >: A](implicit ord: Ordering[B]): A","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the smallest element."},
{"l":"api/scala/collection/IterableOnceOps.html#minBy-fffff0c5","e":false,"i":"","n":"minBy","t":"minBy[B](f: A => B)(implicit ord: Ordering[B]): A","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the first element which yields the smallest value measured by function f."},
{"l":"api/scala/collection/IterableOnceOps.html#minByOption-fffff66f","e":false,"i":"","n":"minByOption","t":"minByOption[B](f: A => B)(implicit ord: Ordering[B]): Option[A]","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the first element which yields the smallest value measured by function f."},
{"l":"api/scala/collection/IterableOnceOps.html#minOption-fffff45e","e":false,"i":"","n":"minOption","t":"minOption[B >: A](implicit ord: Ordering[B]): Option[A]","d":"scala.collection.IterableOnceOps","k":"def","x":"Finds the smallest element."},
{"l":"api/scala/collection/IterableOnceOps.html#mkString-d94","e":false,"i":"","n":"mkString","t":"mkString(start: String, sep: String, end: String): String","d":"scala.collection.IterableOnceOps","k":"def","x":"Displays all elements of this collection in a string using start, end, and separator strings."},
{"l":"api/scala/collection/IterableOnceOps.html#mkString-fffff2ca","e":false,"i":"","n":"mkString","t":"mkString(sep: String): String","d":"scala.collection.IterableOnceOps","k":"def","x":"Displays all elements of this collection in a string using a separator string."},
{"l":"api/scala/collection/IterableOnceOps.html#mkString-0","e":false,"i":"","n":"mkString","t":"mkString: String","d":"scala.collection.IterableOnceOps","k":"def","x":"Displays all elements of this collection in a string."},
{"l":"api/scala/collection/IterableOnceOps.html#nonEmpty-0","e":false,"i":"","n":"nonEmpty","t":"nonEmpty: Boolean","d":"scala.collection.IterableOnceOps","k":"def","x":"Tests whether the collection is not empty.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#product-533","e":false,"i":"","n":"product","t":"product[B >: A](implicit num: Numeric[B]): B","d":"scala.collection.IterableOnceOps","k":"def","x":"Multiplies together the elements of this collection."},
{"l":"api/scala/collection/IterableOnceOps.html#reduce-fffff3d4","e":false,"i":"","n":"reduce","t":"reduce[B >: A](op: (B, B) => B): B","d":"scala.collection.IterableOnceOps","k":"def","x":"Applies the given binary operator op to all elements of this collection."},
{"l":"api/scala/collection/IterableOnceOps.html#reduceLeft-fffff3d4","e":false,"i":"","n":"reduceLeft","t":"reduceLeft[B >: A](op: (B, A) => B): B","d":"scala.collection.IterableOnceOps","k":"def","x":"Applies the given binary operator op to all elements of this collection, going left to\nright."},
{"l":"api/scala/collection/IterableOnceOps.html#reduceLeftOption-8fe","e":false,"i":"","n":"reduceLeftOption","t":"reduceLeftOption[B >: A](op: (B, A) => B): Option[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"If this collection is nonempty, reduces it with the given binary operator op, going\nleft to right."},
{"l":"api/scala/collection/IterableOnceOps.html#reduceOption-8fe","e":false,"i":"","n":"reduceOption","t":"reduceOption[B >: A](op: (B, B) => B): Option[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"If this collection is nonempty, reduces it with the given binary operator op."},
{"l":"api/scala/collection/IterableOnceOps.html#reduceRight-fffff3d4","e":false,"i":"","n":"reduceRight","t":"reduceRight[B >: A](op: (A, B) => B): B","d":"scala.collection.IterableOnceOps","k":"def","x":"Applies the given binary operator op to all elements of this collection, going right to\nleft."},
{"l":"api/scala/collection/IterableOnceOps.html#reduceRightOption-8fe","e":false,"i":"","n":"reduceRightOption","t":"reduceRightOption[B >: A](op: (A, B) => B): Option[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"If this collection is nonempty, reduces it with the given binary operator op, going\nright to left."},
{"l":"api/scala/collection/IterableOnceOps.html#reversed-0","e":false,"i":"","n":"reversed","t":"reversed: Iterable[A]","d":"scala.collection.IterableOnceOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceOps.html#scanLeft-fffff9e1","e":false,"i":"","n":"scanLeft","t":"scanLeft[B](z: B)(op: (B, A) => B): CC[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"Produces a collection containing cumulative results of applying the\noperator going left to right, including the initial value."},
{"l":"api/scala/collection/IterableOnceOps.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"scala.collection.IterableOnceOps","k":"def","x":"The size of this collection."},
{"l":"api/scala/collection/IterableOnceOps.html#slice-573","e":false,"i":"","n":"slice","t":"slice(from: Int, until: Int): C","d":"scala.collection.IterableOnceOps","k":"def","x":"Selects an interval of elements.  The returned collection is made up\nof all elements x which satisfy the invariant:"},
{"l":"api/scala/collection/IterableOnceOps.html#span-243","e":false,"i":"","n":"span","t":"span(p: A => Boolean): (C, C)","d":"scala.collection.IterableOnceOps","k":"def","x":"Splits this collection into a prefix/suffix pair according to a predicate."},
{"l":"api/scala/collection/IterableOnceOps.html#splitAt-fffffbd9","e":false,"i":"","n":"splitAt","t":"splitAt(n: Int): (C, C)","d":"scala.collection.IterableOnceOps","k":"def","x":"Splits this collection into a prefix/suffix pair at a given position."},
{"l":"api/scala/collection/IterableOnceOps.html#sum-533","e":false,"i":"","n":"sum","t":"sum[B >: A](implicit num: Numeric[B]): B","d":"scala.collection.IterableOnceOps","k":"def","x":"Sums the elements of this collection."},
{"l":"api/scala/collection/IterableOnceOps.html#take-aba","e":false,"i":"","n":"take","t":"take(n: Int): C","d":"scala.collection.IterableOnceOps","k":"def","x":"Selects the first n elements."},
{"l":"api/scala/collection/IterableOnceOps.html#takeWhile-c24","e":false,"i":"","n":"takeWhile","t":"takeWhile(p: A => Boolean): C","d":"scala.collection.IterableOnceOps","k":"def","x":"Selects the longest prefix of elements that satisfy a predicate."},
{"l":"api/scala/collection/IterableOnceOps.html#tapEach-5d3","e":false,"i":"","n":"tapEach","t":"tapEach[U](f: A => U): C","d":"scala.collection.IterableOnceOps","k":"def","x":"Applies a side-effecting function to each element in this collection.\nStrict collections will apply f to their elements immediately, while lazy collections\nlike Views and LazyLists will only apply f on each element if and when that element\nis evaluated, and each time that element is evaluated.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#to-fffff006","e":false,"i":"","n":"to","t":"to[C1](factory: Factory[A, C1]): C1","d":"scala.collection.IterableOnceOps","k":"def","x":"Given a collection factory factory, converts this collection to the appropriate\nrepresentation for the current element type A. Example uses:"},
{"l":"api/scala/collection/IterableOnceOps.html#toArray-fffff5df","e":false,"i":"","n":"toArray","t":"toArray[B >: A : ClassTag]: Array[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"Converts this collection to an Array."},
{"l":"api/scala/collection/IterableOnceOps.html#toBuffer-fffff87f","e":false,"i":"","n":"toBuffer","t":"toBuffer[B >: A]: Buffer[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"Converts this collection to a Buffer.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#toIndexedSeq-0","e":false,"i":"","n":"toIndexedSeq","t":"toIndexedSeq: IndexedSeq[A]","d":"scala.collection.IterableOnceOps","k":"def","x":"Converts this collection to an IndexedSeq.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#toIterator-0","e":false,"i":"","n":"toIterator","t":"toIterator: Iterator[A]","d":"scala.collection.IterableOnceOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceOps.html#toList-0","e":false,"i":"","n":"toList","t":"toList: List[A]","d":"scala.collection.IterableOnceOps","k":"def","x":"Converts this collection to a List.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#toMap-c0c","e":false,"i":"","n":"toMap","t":"toMap[K, V](implicit ev: A <:< (K, V)): Map[K, V]","d":"scala.collection.IterableOnceOps","k":"def","x":"Converts this collection to a Map, given an implicit coercion from the collection's type to a key-value tuple.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#toSeq-0","e":false,"i":"","n":"toSeq","t":"toSeq: Seq[A]","d":"scala.collection.IterableOnceOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceOps.html#toSet-fffffe9f","e":false,"i":"","n":"toSet","t":"toSet[B >: A]: Set[B]","d":"scala.collection.IterableOnceOps","k":"def","x":"Converts this collection to a Set.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#toStream-0","e":false,"i":"","n":"toStream","t":"toStream: Stream[A]","d":"scala.collection.IterableOnceOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOnceOps.html#toVector-0","e":false,"i":"","n":"toVector","t":"toVector: Vector[A]","d":"scala.collection.IterableOnceOps","k":"def","x":"Converts this collection to a Vector.\n"},
{"l":"api/scala/collection/IterableOnceOps.html#zipWithIndex-0","e":false,"i":"","n":"zipWithIndex","t":"zipWithIndex: CC[(A, Int)]","d":"scala.collection.IterableOnceOps","k":"def","x":"Zips this collection with its indices.\n"},
{"l":"api/scala/collection/IterableOps.html#","e":false,"i":"","n":"IterableOps","t":"IterableOps[+A, +CC[_], +C] extends IterableOnce[A], IterableOnceOps[A, CC, C]","d":"scala.collection","k":"trait","x":"Base trait for Iterable operations"},
{"l":"api/scala/collection/IterableOps.html#++-1dd","e":false,"i":"","n":"++","t":"++[B >: A](suffix: IterableOnce[B]): CC[B]","d":"scala.collection.IterableOps","k":"def","x":"Alias for concat"},
{"l":"api/scala/collection/IterableOps.html#++:-1dd","e":false,"i":"","n":"++:","t":"++:[B >: A](that: IterableOnce[B]): CC[B]","d":"scala.collection.IterableOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOps.html#collect-fffff5b3","e":false,"i":"","n":"collect","t":"collect[B](pf: PartialFunction[A, B]): CC[B]","d":"scala.collection.IterableOps","k":"def","x":"Builds a new iterable collection by applying a partial function to all elements of this iterable collection\non which the function is defined.\n"},
{"l":"api/scala/collection/IterableOps.html#companion-0","e":false,"i":"","n":"companion","t":"companion: IterableFactory[CC]","d":"scala.collection.IterableOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOps.html#concat-1dd","e":false,"i":"","n":"concat","t":"concat[B >: A](suffix: IterableOnce[B]): CC[B]","d":"scala.collection.IterableOps","k":"def","x":"Returns a new iterable collection containing the elements from the left hand operand followed by the elements from the\nright hand operand. The element type of the iterable collection is the most specific superclass encompassing\nthe element types of the two operands.\n"},
{"l":"api/scala/collection/IterableOps.html#drop-aba","e":false,"i":"","n":"drop","t":"drop(n: Int): C","d":"scala.collection.IterableOps","k":"def","x":"Selects all elements except the first n ones."},
{"l":"api/scala/collection/IterableOps.html#dropRight-aba","e":false,"i":"","n":"dropRight","t":"dropRight(n: Int): C","d":"scala.collection.IterableOps","k":"def","x":"Selects all elements except last n ones."},
{"l":"api/scala/collection/IterableOps.html#dropWhile-c24","e":false,"i":"","n":"dropWhile","t":"dropWhile(p: A => Boolean): C","d":"scala.collection.IterableOps","k":"def","x":"Selects all elements except the longest prefix that satisfies a predicate."},
{"l":"api/scala/collection/IterableOps.html#empty-0","e":false,"i":"","n":"empty","t":"empty: C","d":"scala.collection.IterableOps","k":"def","x":"The empty iterable of the same type as this iterable\n"},
{"l":"api/scala/collection/IterableOps.html#filter-c24","e":false,"i":"","n":"filter","t":"filter(pred: A => Boolean): C","d":"scala.collection.IterableOps","k":"def","x":"Selects all elements of this iterable collection which satisfy a predicate.\n"},
{"l":"api/scala/collection/IterableOps.html#filterNot-c24","e":false,"i":"","n":"filterNot","t":"filterNot(pred: A => Boolean): C","d":"scala.collection.IterableOps","k":"def","x":"Selects all elements of this iterable collection which do not satisfy a predicate.\n"},
{"l":"api/scala/collection/IterableOps.html#flatMap-5d3","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: A => IterableOnce[B]): CC[B]","d":"scala.collection.IterableOps","k":"def","x":"Builds a new iterable collection by applying a function to all elements of this iterable collection\nand using the elements of the resulting collections."},
{"l":"api/scala/collection/IterableOps.html#flatten-5d3","e":false,"i":"","n":"flatten","t":"flatten[B](implicit asIterable: A => IterableOnce[B]): CC[B]","d":"scala.collection.IterableOps","k":"def","x":"Converts this iterable collection of iterable collections into\na iterable collection formed by the elements of these iterable\ncollections."},
{"l":"api/scala/collection/IterableOps.html#groupBy-f68","e":false,"i":"","n":"groupBy","t":"groupBy[K](f: A => K): Map[K, C]","d":"scala.collection.IterableOps","k":"def","x":"Partitions this iterable collection into a map of iterable collections according to some discriminator function."},
{"l":"api/scala/collection/IterableOps.html#groupMap-fffff03a","e":false,"i":"","n":"groupMap","t":"groupMap[K, B](key: A => K)(f: A => B): Map[K, CC[B]]","d":"scala.collection.IterableOps","k":"def","x":"Partitions this iterable collection into a map of iterable collections according to a discriminator function key.\nEach element in a group is transformed into a value of type B using the value function."},
{"l":"api/scala/collection/IterableOps.html#groupMapReduce-8e8","e":false,"i":"","n":"groupMapReduce","t":"groupMapReduce[K, B](key: A => K)(f: A => B)(reduce: (B, B) => B): Map[K, B]","d":"scala.collection.IterableOps","k":"def","x":"Partitions this iterable collection into a map according to a discriminator function key. All the values that\nhave the same discriminator are then transformed by the f function and then reduced into a\nsingle value with the reduce function."},
{"l":"api/scala/collection/IterableOps.html#grouped-fffffbef","e":false,"i":"","n":"grouped","t":"grouped(size: Int): Iterator[C]","d":"scala.collection.IterableOps","k":"def","x":"Partitions elements in fixed size iterable collections."},
{"l":"api/scala/collection/IterableOps.html#head-0","e":false,"i":"","n":"head","t":"head: A","d":"scala.collection.IterableOps","k":"def","x":"Selects the first element of this iterable collection."},
{"l":"api/scala/collection/IterableOps.html#headOption-0","e":false,"i":"","n":"headOption","t":"headOption: Option[A]","d":"scala.collection.IterableOps","k":"def","x":"Optionally selects the first element."},
{"l":"api/scala/collection/IterableOps.html#init-0","e":false,"i":"","n":"init","t":"init: C","d":"scala.collection.IterableOps","k":"def","x":"The initial part of the collection without its last element."},
{"l":"api/scala/collection/IterableOps.html#inits-0","e":false,"i":"","n":"inits","t":"inits: Iterator[C]","d":"scala.collection.IterableOps","k":"def","x":"Iterates over the inits of this iterable collection. The first value will be this\niterable collection and the final one will be an empty iterable collection, with the intervening\nvalues the results of successive applications of init."},
{"l":"api/scala/collection/IterableOps.html#iterableFactory-0","e":false,"i":"","n":"iterableFactory","t":"iterableFactory: IterableFactory[CC]","d":"scala.collection.IterableOps","k":"def","x":"The companion object of this iterable collection, providing various factory methods.\n"},
{"l":"api/scala/collection/IterableOps.html#last-0","e":false,"i":"","n":"last","t":"last: A","d":"scala.collection.IterableOps","k":"def","x":"Selects the last element."},
{"l":"api/scala/collection/IterableOps.html#lastOption-0","e":false,"i":"","n":"lastOption","t":"lastOption: Option[A]","d":"scala.collection.IterableOps","k":"def","x":"Optionally selects the last element."},
{"l":"api/scala/collection/IterableOps.html#map-5d3","e":false,"i":"","n":"map","t":"map[B](f: A => B): CC[B]","d":"scala.collection.IterableOps","k":"def","x":"Builds a new iterable collection by applying a function to all elements of this iterable collection.\n"},
{"l":"api/scala/collection/IterableOps.html#partition-243","e":false,"i":"","n":"partition","t":"partition(p: A => Boolean): (C, C)","d":"scala.collection.IterableOps","k":"def","x":"A pair of, first, all elements that satisfy predicate p and, second,\nall elements that do not. Interesting because it splits a collection in two."},
{"l":"api/scala/collection/IterableOps.html#partitionMap-2d1","e":false,"i":"","n":"partitionMap","t":"partitionMap[A1, A2](f: A => Either[A1, A2]): (CC[A1], CC[A2])","d":"scala.collection.IterableOps","k":"def","x":"Applies a function f to each element of the iterable collection and returns a pair of iterable collections: the first one\nmade of those values returned by f that were wrapped in scala.util.Left, and the second\none made of those wrapped in scala.util.Right."},
{"l":"api/scala/collection/IterableOps.html#repr-0","e":false,"i":"","n":"repr","t":"repr: C","d":"scala.collection.IterableOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOps.html#scan-fffff9e1","e":false,"i":"","n":"scan","t":"scan[B >: A](z: B)(op: (B, B) => B): CC[B]","d":"scala.collection.IterableOps","k":"def","x":"Computes a prefix scan of the elements of the collection."},
{"l":"api/scala/collection/IterableOps.html#scanLeft-fffff9e1","e":false,"i":"","n":"scanLeft","t":"scanLeft[B](z: B)(op: (B, A) => B): CC[B]","d":"scala.collection.IterableOps","k":"def","x":"Produces a iterable collection containing cumulative results of applying the\noperator going left to right, including the initial value."},
{"l":"api/scala/collection/IterableOps.html#scanRight-fffff9e1","e":false,"i":"","n":"scanRight","t":"scanRight[B](z: B)(op: (A, B) => B): CC[B]","d":"scala.collection.IterableOps","k":"def","x":"Produces a collection containing cumulative results of applying the operator going right to left.\nThe head of the collection is the last cumulative result."},
{"l":"api/scala/collection/IterableOps.html#sizeCompare-fffffbe0","e":false,"i":"","n":"sizeCompare","t":"sizeCompare(otherSize: Int): Int","d":"scala.collection.IterableOps","k":"def","x":"Compares the size of this iterable collection to a test value.\n"},
{"l":"api/scala/collection/IterableOps.html#sizeCompare-32d","e":false,"i":"","n":"sizeCompare","t":"sizeCompare(that: Iterable[_]): Int","d":"scala.collection.IterableOps","k":"def","x":"Compares the size of this iterable collection to the size of another Iterable.\n"},
{"l":"api/scala/collection/IterableOps.html#sizeIs-0","e":false,"i":"","n":"sizeIs","t":"sizeIs: SizeCompareOps","d":"scala.collection.IterableOps","k":"def","x":"Returns a value class containing operations for comparing the size of this iterable collection to a test value."},
{"l":"api/scala/collection/IterableOps.html#slice-573","e":false,"i":"","n":"slice","t":"slice(from: Int, until: Int): C","d":"scala.collection.IterableOps","k":"def","x":"Selects an interval of elements.  The returned iterable collection is made up\nof all elements x which satisfy the invariant:"},
{"l":"api/scala/collection/IterableOps.html#sliding-fffffbef","e":false,"i":"","n":"sliding","t":"sliding(size: Int): Iterator[C]","d":"scala.collection.IterableOps","k":"def","x":"Groups elements in fixed size blocks by passing a \"sliding window\"\nover them (as opposed to partitioning them, as is done in grouped.)"},
{"l":"api/scala/collection/IterableOps.html#sliding-fffff156","e":false,"i":"","n":"sliding","t":"sliding(size: Int, step: Int): Iterator[C]","d":"scala.collection.IterableOps","k":"def","x":"Groups elements in fixed size blocks by passing a \"sliding window\"\nover them (as opposed to partitioning them, as is done in grouped.)"},
{"l":"api/scala/collection/IterableOps.html#span-243","e":false,"i":"","n":"span","t":"span(p: A => Boolean): (C, C)","d":"scala.collection.IterableOps","k":"def","x":"Splits this iterable collection into a prefix/suffix pair according to a predicate."},
{"l":"api/scala/collection/IterableOps.html#tail-0","e":false,"i":"","n":"tail","t":"tail: C","d":"scala.collection.IterableOps","k":"def","x":"The rest of the collection without its first element."},
{"l":"api/scala/collection/IterableOps.html#tails-0","e":false,"i":"","n":"tails","t":"tails: Iterator[C]","d":"scala.collection.IterableOps","k":"def","x":"Iterates over the tails of this iterable collection. The first value will be this\niterable collection and the final one will be an empty iterable collection, with the intervening\nvalues the results of successive applications of tail.\n"},
{"l":"api/scala/collection/IterableOps.html#take-aba","e":false,"i":"","n":"take","t":"take(n: Int): C","d":"scala.collection.IterableOps","k":"def","x":"Selects the first n elements."},
{"l":"api/scala/collection/IterableOps.html#takeRight-aba","e":false,"i":"","n":"takeRight","t":"takeRight(n: Int): C","d":"scala.collection.IterableOps","k":"def","x":"Selects the last n elements."},
{"l":"api/scala/collection/IterableOps.html#takeWhile-c24","e":false,"i":"","n":"takeWhile","t":"takeWhile(p: A => Boolean): C","d":"scala.collection.IterableOps","k":"def","x":"Takes longest prefix of elements that satisfy a predicate."},
{"l":"api/scala/collection/IterableOps.html#toIterable-0","e":false,"i":"","n":"toIterable","t":"toIterable: Iterable[A]","d":"scala.collection.IterableOps","k":"def","x":""},
{"l":"api/scala/collection/IterableOps.html#toTraversable-0","e":false,"i":"","n":"toTraversable","t":"toTraversable: Iterable[A]","d":"scala.collection.IterableOps","k":"def","x":"Converts this iterable collection to an unspecified Iterable.  Will return\nthe same collection if this instance is already Iterable."},
{"l":"api/scala/collection/IterableOps.html#transpose-5d3","e":false,"i":"","n":"transpose","t":"transpose[B](implicit asIterable: A => Iterable[B]): CC[CC[B]]","d":"scala.collection.IterableOps","k":"def","x":"Transposes this iterable collection of iterable collections into\na iterable collection of iterable collections."},
{"l":"api/scala/collection/IterableOps.html#unzip-2d1","e":false,"i":"","n":"unzip","t":"unzip[A1, A2](implicit asPair: A => (A1, A2)): (CC[A1], CC[A2])","d":"scala.collection.IterableOps","k":"def","x":"Converts this iterable collection of pairs into two collections of the first and second\nhalf of each pair."},
{"l":"api/scala/collection/IterableOps.html#unzip3-a31","e":false,"i":"","n":"unzip3","t":"unzip3[A1, A2, A3](implicit asTriple: A => (A1, A2, A3)): (CC[A1], CC[A2], CC[A3])","d":"scala.collection.IterableOps","k":"def","x":"Converts this iterable collection of triples into three collections of the first, second,\nand third element of each triple."},
{"l":"api/scala/collection/IterableOps.html#view-0","e":false,"i":"","n":"view","t":"view: View[A]","d":"scala.collection.IterableOps","k":"def","x":"A view over the elements of this collection."},
{"l":"api/scala/collection/IterableOps.html#view-fffff78d","e":false,"i":"","n":"view","t":"view(from: Int, until: Int): View[A]","d":"scala.collection.IterableOps","k":"def","x":"A view over a slice of the elements of this collection."},
{"l":"api/scala/collection/IterableOps.html#withFilter-fffffb75","e":false,"i":"","n":"withFilter","t":"withFilter(p: A => Boolean): WithFilter[A, CC]","d":"scala.collection.IterableOps","k":"def","x":"Creates a non-strict filter of this iterable collection."},
{"l":"api/scala/collection/IterableOps.html#zip-1dd","e":false,"i":"","n":"zip","t":"zip[B](that: IterableOnce[B]): CC[(A, B)]","d":"scala.collection.IterableOps","k":"def","x":"Returns a iterable collection formed from this iterable collection and another iterable collection\nby combining corresponding elements in pairs.\nIf one of the two collections is longer than the other, its remaining elements are ignored.\n"},
{"l":"api/scala/collection/IterableOps.html#zipAll-fffff401","e":false,"i":"","n":"zipAll","t":"zipAll[A1 >: A, B](that: Iterable[B], thisElem: A1, thatElem: B): CC[(A1, B)]","d":"scala.collection.IterableOps","k":"def","x":"Returns a iterable collection formed from this iterable collection and another iterable collection\nby combining corresponding elements in pairs.\nIf one of the two collections is shorter than the other,\nplaceholder elements are used to extend the shorter collection to the length of the longer.\n"},
{"l":"api/scala/collection/IterableOps.html#zipWithIndex-0","e":false,"i":"","n":"zipWithIndex","t":"zipWithIndex: CC[(A, Int)]","d":"scala.collection.IterableOps","k":"def","x":"Zips this iterable collection with its indices.\n"},
{"l":"api/scala/collection/IterableOps$.html#","e":false,"i":"","n":"IterableOps","t":"IterableOps","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/IterableOps$$SizeCompareOps.html#","e":false,"i":"","n":"SizeCompareOps","t":"SizeCompareOps extends AnyVal","d":"scala.collection.IterableOps","k":"class","x":"Operations for comparing the size of a collection to a test value."},
{"l":"api/scala/collection/IterableOps$$SizeCompareOps.html#!=-ffffff99","e":false,"i":"","n":"!=","t":"!=(size: Int): Boolean","d":"scala.collection.IterableOps.SizeCompareOps","k":"def","x":"Tests if the size of the collection is not equal to some value."},
{"l":"api/scala/collection/IterableOps$$SizeCompareOps.html#<-ffffff99","e":false,"i":"","n":"<","t":"<(size: Int): Boolean","d":"scala.collection.IterableOps.SizeCompareOps","k":"def","x":"Tests if the size of the collection is less than some value."},
{"l":"api/scala/collection/IterableOps$$SizeCompareOps.html#<=-ffffff99","e":false,"i":"","n":"<=","t":"<=(size: Int): Boolean","d":"scala.collection.IterableOps.SizeCompareOps","k":"def","x":"Tests if the size of the collection is less than or equal to some value."},
{"l":"api/scala/collection/IterableOps$$SizeCompareOps.html#==-ffffff99","e":false,"i":"","n":"==","t":"==(size: Int): Boolean","d":"scala.collection.IterableOps.SizeCompareOps","k":"def","x":"Tests if the size of the collection is equal to some value."},
{"l":"api/scala/collection/IterableOps$$SizeCompareOps.html#>-ffffff99","e":false,"i":"","n":">","t":">(size: Int): Boolean","d":"scala.collection.IterableOps.SizeCompareOps","k":"def","x":"Tests if the size of the collection is greater than some value."},
{"l":"api/scala/collection/IterableOps$$SizeCompareOps.html#>=-ffffff99","e":false,"i":"","n":">=","t":">=(size: Int): Boolean","d":"scala.collection.IterableOps.SizeCompareOps","k":"def","x":"Tests if the size of the collection is greater than or equal to some value."},
{"l":"api/scala/collection/IterableOps$$SizeCompareOps.html#it-0","e":false,"i":"","n":"it","t":"it: IterableOps[_, AnyConstr, _]","d":"scala.collection.IterableOps.SizeCompareOps","k":"val","x":""},
{"l":"api/scala/collection/IterableOps$$WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter[+A, +CC[_]](self: IterableOps[A, CC, _], p: A => Boolean) extends WithFilter[A, CC], Serializable","d":"scala.collection.IterableOps","k":"class","x":"A trait that contains just the map, flatMap, foreach and withFilter methods\nof trait Iterable.\n"},
{"l":"api/scala/collection/IterableOps$$WithFilter.html#flatMap-5d3","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: A => IterableOnce[B]): CC[B]","d":"scala.collection.IterableOps.WithFilter","k":"def","x":"Builds a new collection by applying a function to all elements of the\nfiltered outer collection containing this WithFilter instance that satisfy\n"},
{"l":"api/scala/collection/IterableOps$$WithFilter.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: A => U): Unit","d":"scala.collection.IterableOps.WithFilter","k":"def","x":"Applies a function f to all elements of the filtered outer collection.\n"},
{"l":"api/scala/collection/IterableOps$$WithFilter.html#map-5d3","e":false,"i":"","n":"map","t":"map[B](f: A => B): CC[B]","d":"scala.collection.IterableOps.WithFilter","k":"def","x":"Builds a new collection by applying a function to all elements of the\nfiltered outer collection.\n"},
{"l":"api/scala/collection/IterableOps$$WithFilter.html#withFilter-ab1","e":false,"i":"","n":"withFilter","t":"withFilter(q: A => Boolean): WithFilter[A, CC]","d":"scala.collection.IterableOps.WithFilter","k":"def","x":"Further refines the filter for this filtered collection.\n"},
{"l":"api/scala/collection/Iterator.html#","e":false,"i":"","n":"Iterator","t":"Iterator[+A] extends IterableOnce[A], IterableOnceOps[A, Iterator, Iterator[A]]","d":"scala.collection","k":"trait","x":"Iterators are data structures that allow to iterate over a sequence\nof elements. They have a hasNext method for checking\nif there is a next element available, and a next method\nwhich returns the next element and advances the iterator."},
{"l":"api/scala/collection/Iterator.html#++-9d7","e":false,"i":"","n":"++","t":"++[B >: A](xs: => IterableOnce[B]): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/Iterator.html#buffered-0","e":false,"i":"","n":"buffered","t":"buffered: BufferedIterator[A]","d":"scala.collection.Iterator","k":"def","x":"Creates a buffered iterator from this iterator.\n"},
{"l":"api/scala/collection/Iterator.html#collect-fffff916","e":false,"i":"","n":"collect","t":"collect[B](pf: PartialFunction[A, B]): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":"Builds a new iterator by applying a partial function to all elements of this iterator\non which the function is defined.\n"},
{"l":"api/scala/collection/Iterator.html#concat-9d7","e":false,"i":"","n":"concat","t":"concat[B >: A](xs: => IterableOnce[B]): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/Iterator.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: Any): Boolean","d":"scala.collection.Iterator","k":"def","x":"Tests whether this iterator contains a given value as an element."},
{"l":"api/scala/collection/Iterator.html#distinct-0","e":false,"i":"","n":"distinct","t":"distinct: Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Builds a new iterator from this one without any duplicated elements on it."},
{"l":"api/scala/collection/Iterator.html#distinctBy-fffffcf6","e":false,"i":"","n":"distinctBy","t":"distinctBy[B](f: A => B): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Builds a new iterator from this one without any duplicated elements as determined by == after applying\nthe transforming function f.\n"},
{"l":"api/scala/collection/Iterator.html#drop-fffffbef","e":false,"i":"","n":"drop","t":"drop(n: Int): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Selects all elements except the first n ones."},
{"l":"api/scala/collection/Iterator.html#dropWhile-fffff1c5","e":false,"i":"","n":"dropWhile","t":"dropWhile(p: A => Boolean): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Selects all elements except the longest prefix that satisfies a predicate."},
{"l":"api/scala/collection/Iterator.html#duplicate-0","e":false,"i":"","n":"duplicate","t":"duplicate: (Iterator[A], Iterator[A])","d":"scala.collection.Iterator","k":"def","x":"Creates two new iterators that both iterate over the same elements\nas this iterator (in the same order).  The duplicate iterators are\nconsidered equal if they are positioned at the same element."},
{"l":"api/scala/collection/Iterator.html#filter-fffff1c5","e":false,"i":"","n":"filter","t":"filter(p: A => Boolean): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Selects all elements of this iterator which satisfy a predicate.\n"},
{"l":"api/scala/collection/Iterator.html#filterNot-fffff1c5","e":false,"i":"","n":"filterNot","t":"filterNot(p: A => Boolean): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Selects all elements of this iterator which do not satisfy a predicate.\n"},
{"l":"api/scala/collection/Iterator.html#flatMap-fffffcf6","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: A => IterableOnce[B]): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":"Builds a new iterator by applying a function to all elements of this iterator\nand using the elements of the resulting collections."},
{"l":"api/scala/collection/Iterator.html#flatten-fffffcf6","e":false,"i":"","n":"flatten","t":"flatten[B](implicit ev: A => IterableOnce[B]): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":"Converts this iterator of iterable collections into\na iterator formed by the elements of these iterable\ncollections."},
{"l":"api/scala/collection/Iterator.html#grouped-fffff3be","e":false,"i":"","n":"grouped","t":"grouped[B >: A](size: Int): GroupedIterator[B]","d":"scala.collection.Iterator","k":"def","x":"Returns an iterator which groups this iterator into fixed size\nblocks.  Example usages:"},
{"l":"api/scala/collection/Iterator.html#hasNext-0","e":false,"i":"","n":"hasNext","t":"hasNext: Boolean","d":"scala.collection.Iterator","k":"def","x":"Check if there is a next element available.\n"},
{"l":"api/scala/collection/Iterator.html#indexOf-fffff3e3","e":false,"i":"","n":"indexOf","t":"indexOf[B >: A](elem: B): Int","d":"scala.collection.Iterator","k":"def","x":"Returns the index of the first occurrence of the specified\nobject in this iterable object."},
{"l":"api/scala/collection/Iterator.html#indexOf-fffffaa4","e":false,"i":"","n":"indexOf","t":"indexOf[B >: A](elem: B, from: Int): Int","d":"scala.collection.Iterator","k":"def","x":"Returns the index of the first occurrence of the specified object in this iterable object\nafter or at some start index."},
{"l":"api/scala/collection/Iterator.html#indexWhere-fffffe31","e":false,"i":"","n":"indexWhere","t":"indexWhere(p: A => Boolean, from: Int): Int","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/Iterator.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"An scala.collection.Iterator over the elements of this iterator."},
{"l":"api/scala/collection/Iterator.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/Iterator.html#map-fffffcf6","e":false,"i":"","n":"map","t":"map[B](f: A => B): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":"Builds a new iterator by applying a function to all elements of this iterator.\n"},
{"l":"api/scala/collection/Iterator.html#next-993","e":false,"i":"","n":"next","t":"next(): A","d":"scala.collection.Iterator","k":"def","x":"Return the next element and advance the iterator.\n"},
{"l":"api/scala/collection/Iterator.html#nextOption-fffff63d","e":false,"i":"","n":"nextOption","t":"nextOption(): Option[A]","d":"scala.collection.Iterator","k":"def","x":"Wraps the value of next() in an option.\n"},
{"l":"api/scala/collection/Iterator.html#padTo-dad","e":false,"i":"","n":"padTo","t":"padTo[B >: A](len: Int, elem: B): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":"A copy of this iterator with an element value appended until a given target length is reached.\n"},
{"l":"api/scala/collection/Iterator.html#partition-243","e":false,"i":"","n":"partition","t":"partition(p: A => Boolean): (Iterator[A], Iterator[A])","d":"scala.collection.Iterator","k":"def","x":"Partitions this iterator in two iterators according to a predicate.\n"},
{"l":"api/scala/collection/Iterator.html#patch-3cf","e":false,"i":"","n":"patch","t":"patch[B >: A](from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":"Returns this iterator with patched values.\nPatching at negative indices is the same as patching starting at 0.\nPatching at indices at or larger than the length of the original iterator appends the patch to the end.\nIf more values are replaced than actually exist, the excess is ignored.\n"},
{"l":"api/scala/collection/Iterator.html#sameElements-356","e":false,"i":"","n":"sameElements","t":"sameElements[B >: A](that: IterableOnce[B]): Boolean","d":"scala.collection.Iterator","k":"def","x":"Checks whether corresponding elements of the given iterable collection\ncompare equal (with respect to ==) to elements of this iterator.\n"},
{"l":"api/scala/collection/Iterator.html#scanLeft-8a8","e":false,"i":"","n":"scanLeft","t":"scanLeft[B](z: B)(op: (B, A) => B): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":"Produces a iterator containing cumulative results of applying the\noperator going left to right, including the initial value."},
{"l":"api/scala/collection/Iterator.html#scanRight-8a8","e":false,"i":"","n":"scanRight","t":"scanRight[B](z: B)(op: (A, B) => B): Iterator[B]","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/Iterator.html#seq-0","e":false,"i":"","n":"seq","t":"seq: this.type","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/Iterator.html#slice-fffff156","e":false,"i":"","n":"slice","t":"slice(from: Int, until: Int): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Selects an interval of elements.  The returned iterator is made up\nof all elements x which satisfy the invariant:"},
{"l":"api/scala/collection/Iterator.html#sliding-fffff663","e":false,"i":"","n":"sliding","t":"sliding[B >: A](size: Int, step: Int): GroupedIterator[B]","d":"scala.collection.Iterator","k":"def","x":"Returns an iterator which presents a \"sliding window\" view of\nthis iterator.  The first argument is the window size, and\nthe second argument step is how far to advance the window\non each iteration. The step defaults to 1."},
{"l":"api/scala/collection/Iterator.html#span-243","e":false,"i":"","n":"span","t":"span(p: A => Boolean): (Iterator[A], Iterator[A])","d":"scala.collection.Iterator","k":"def","x":"Splits this iterator into a prefix/suffix pair according to a predicate."},
{"l":"api/scala/collection/Iterator.html#take-fffffbef","e":false,"i":"","n":"take","t":"take(n: Int): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Selects the first n elements."},
{"l":"api/scala/collection/Iterator.html#takeWhile-fffff1c5","e":false,"i":"","n":"takeWhile","t":"takeWhile(p: A => Boolean): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Selects the longest prefix of elements that satisfy a predicate."},
{"l":"api/scala/collection/Iterator.html#withFilter-fffff1c5","e":false,"i":"","n":"withFilter","t":"withFilter(p: A => Boolean): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Creates an iterator over all the elements of this iterator that\nsatisfy the predicate p. The order of the elements\nis preserved."},
{"l":"api/scala/collection/Iterator.html#zip-c2c","e":false,"i":"","n":"zip","t":"zip[B](that: IterableOnce[B]): Iterator[(A, B)]","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/Iterator.html#zipAll-f07","e":false,"i":"","n":"zipAll","t":"zipAll[A1 >: A, B](that: IterableOnce[B], thisElem: A1, thatElem: B): Iterator[(A1, B)]","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/Iterator.html#zipWithIndex-0","e":false,"i":"","n":"zipWithIndex","t":"zipWithIndex: Iterator[(A, Int)]","d":"scala.collection.Iterator","k":"def","x":"Zips this iterator with its indices.\n"},
{"l":"api/scala/collection/Iterator$GroupedIterator.html#","e":false,"i":"","n":"GroupedIterator","t":"GroupedIterator[B >: Seq[B]](self: Iterator[B], size: Int, step: Int) extends AbstractIterator[Seq[B]]","d":"scala.collection.Iterator","k":"class","x":"A flexible iterator for transforming an Iterator[A] into an\nIterator[Seq[A]], with configurable sequence size, step, and\nstrategy for dealing with remainder elements which don't fit evenly\ninto the last group."},
{"l":"api/scala/collection/Iterator$GroupedIterator.html#hasNext-0","e":false,"i":"","n":"hasNext","t":"hasNext: Boolean","d":"scala.collection.Iterator.GroupedIterator","k":"def","x":"Check if there is a next element available.\n"},
{"l":"api/scala/collection/Iterator$GroupedIterator.html#next-fffffa2b","e":false,"i":"","n":"next","t":"next(): Seq[B]","d":"scala.collection.Iterator.GroupedIterator","k":"def","x":"Return the next element and advance the iterator.\n"},
{"l":"api/scala/collection/Iterator$GroupedIterator.html#withPadding-684","e":false,"i":"","n":"withPadding","t":"withPadding(x: => B): this.type","d":"scala.collection.Iterator.GroupedIterator","k":"def","x":"Specifies a fill element used to pad a partial segment\nso that all segments have the same size."},
{"l":"api/scala/collection/Iterator$GroupedIterator.html#withPartial-fffffdb4","e":false,"i":"","n":"withPartial","t":"withPartial(x: Boolean): this.type","d":"scala.collection.Iterator.GroupedIterator","k":"def","x":"Specify whether to drop the last segment if it has less than size elements."},
{"l":"api/scala/collection/Iterator$.html#","e":false,"i":"","n":"Iterator","t":"Iterator extends IterableFactory[Iterator]","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/Iterator$.html#continually-9d7","e":false,"i":"","n":"continually","t":"continually[A](elem: => A): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":"Creates an infinite-length iterator returning the results of evaluating an expression.\nThe expression is recomputed for every element.\n"},
{"l":"api/scala/collection/Iterator$.html#empty-fffffa25","e":false,"i":"","n":"empty","t":"empty[T]: Iterator[T]","d":"scala.collection.Iterator","k":"def","x":"The iterator which produces no values."},
{"l":"api/scala/collection/Iterator$.html#from-fffffbef","e":false,"i":"","n":"from","t":"from(start: Int): Iterator[Int]","d":"scala.collection.Iterator","k":"def","x":"Creates an infinite-length iterator which returns successive values from some start value.\n"},
{"l":"api/scala/collection/Iterator$.html#from-fffff156","e":false,"i":"","n":"from","t":"from(start: Int, step: Int): Iterator[Int]","d":"scala.collection.Iterator","k":"def","x":"Creates an infinite-length iterator returning values equally spaced apart.\n"},
{"l":"api/scala/collection/Iterator$.html#iterate-589","e":false,"i":"","n":"iterate","t":"iterate[T](start: T)(f: T => T): Iterator[T]","d":"scala.collection.Iterator","k":"def","x":"Creates an infinite iterator that repeatedly applies a given function to the previous result.\n"},
{"l":"api/scala/collection/Iterator$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, Iterator[A]]","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/Iterator$.html#range-fffff156","e":false,"i":"","n":"range","t":"range(start: Int, end: Int): Iterator[Int]","d":"scala.collection.Iterator","k":"def","x":"Creates nn iterator returning successive values in some integer interval.\n"},
{"l":"api/scala/collection/Iterator$.html#range-fcf","e":false,"i":"","n":"range","t":"range(start: Int, end: Int, step: Int): Iterator[Int]","d":"scala.collection.Iterator","k":"def","x":"An iterator producing equally spaced values in some integer interval.\n"},
{"l":"api/scala/collection/Iterator$.html#single-df2","e":false,"i":"","n":"single","t":"single[A](a: A): Iterator[A]","d":"scala.collection.Iterator","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#","e":false,"i":"","n":"JavaConverters","t":"JavaConverters extends AsJavaConverters, AsScalaConverters","d":"scala.collection","k":"object","x":"A variety of decorators that enable converting between\nScala and Java collections using extension methods, asScala and asJava."},
{"l":"api/scala/collection/JavaConverters$.html#asJavaCollectionConverter-fffff8f0","e":false,"i":"","n":"asJavaCollectionConverter","t":"asJavaCollectionConverter[A](i: Iterable[A]): AsJavaCollection[A]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJavaCollection method that implicitly converts a Scala Iterable to an immutable Java Collection."},
{"l":"api/scala/collection/JavaConverters$.html#asJavaDictionaryConverter-fffff3b3","e":false,"i":"","n":"asJavaDictionaryConverter","t":"asJavaDictionaryConverter[K, V](m: Map[K, V]): AsJavaDictionary[K, V]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJavaDictionary method that implicitly converts a Scala mutable Map to a Java Dictionary."},
{"l":"api/scala/collection/JavaConverters$.html#asJavaEnumerationConverter-731","e":false,"i":"","n":"asJavaEnumerationConverter","t":"asJavaEnumerationConverter[A](i: Iterator[A]): AsJavaEnumeration[A]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJavaEnumeration method that implicitly converts a Scala Iterator to a Java Enumeration."},
{"l":"api/scala/collection/JavaConverters$.html#asJavaIterable-fffff3af","e":false,"i":"","n":"asJavaIterable","t":"asJavaIterable[A](i: Iterable[A]): Iterable[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#asJavaIterableConverter-fffff4b2","e":false,"i":"","n":"asJavaIterableConverter","t":"asJavaIterableConverter[A](i: Iterable[A]): AsJava[Iterable[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala Iterable to a Java Iterable."},
{"l":"api/scala/collection/JavaConverters$.html#asJavaIterator-d13","e":false,"i":"","n":"asJavaIterator","t":"asJavaIterator[A](i: Iterator[A]): Iterator[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#asJavaIteratorConverter-d36","e":false,"i":"","n":"asJavaIteratorConverter","t":"asJavaIteratorConverter[A](i: Iterator[A]): AsJava[Iterator[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala Iterator to a Java Iterator."},
{"l":"api/scala/collection/JavaConverters$.html#asScalaBuffer-fffff421","e":false,"i":"","n":"asScalaBuffer","t":"asScalaBuffer[A](l: List[A]): Buffer[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#asScalaBufferConverter-fffffd5c","e":false,"i":"","n":"asScalaBufferConverter","t":"asScalaBufferConverter[A](l: List[A]): AsScala[Buffer[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java List to a Scala mutable Buffer."},
{"l":"api/scala/collection/JavaConverters$.html#asScalaIterator-fffff9f7","e":false,"i":"","n":"asScalaIterator","t":"asScalaIterator[A](i: Iterator[A]): Iterator[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#asScalaIteratorConverter-4ac","e":false,"i":"","n":"asScalaIteratorConverter","t":"asScalaIteratorConverter[A](i: Iterator[A]): AsScala[Iterator[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java Iterator to a Scala Iterator."},
{"l":"api/scala/collection/JavaConverters$.html#asScalaSet-fffffa63","e":false,"i":"","n":"asScalaSet","t":"asScalaSet[A](s: Set[A]): Set[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#asScalaSetConverter-fffff49e","e":false,"i":"","n":"asScalaSetConverter","t":"asScalaSetConverter[A](s: Set[A]): AsScala[Set[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java Set to a Scala mutable Set."},
{"l":"api/scala/collection/JavaConverters$.html#bufferAsJavaList-89d","e":false,"i":"","n":"bufferAsJavaList","t":"bufferAsJavaList[A](b: Buffer[A]): List[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#bufferAsJavaListConverter-fffffd9c","e":false,"i":"","n":"bufferAsJavaListConverter","t":"bufferAsJavaListConverter[A](b: Buffer[A]): AsJava[List[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala mutable Buffer to a Java List."},
{"l":"api/scala/collection/JavaConverters$.html#collectionAsScalaIterable-60b","e":false,"i":"","n":"collectionAsScalaIterable","t":"collectionAsScalaIterable[A](i: Collection[A]): Iterable[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#collectionAsScalaIterableConverter-29c","e":false,"i":"","n":"collectionAsScalaIterableConverter","t":"collectionAsScalaIterableConverter[A](i: Collection[A]): AsScala[Iterable[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java Collection to an Scala Iterable."},
{"l":"api/scala/collection/JavaConverters$.html#dictionaryAsScalaMap-654","e":false,"i":"","n":"dictionaryAsScalaMap","t":"dictionaryAsScalaMap[A, B](p: Dictionary[A, B]): Map[A, B]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#dictionaryAsScalaMapConverter-d15","e":false,"i":"","n":"dictionaryAsScalaMapConverter","t":"dictionaryAsScalaMapConverter[K, V](p: Dictionary[K, V]): AsScala[Map[K, V]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java Dictionary to a Scala mutable Map."},
{"l":"api/scala/collection/JavaConverters$.html#enumerationAsScalaIterator-fffff100","e":false,"i":"","n":"enumerationAsScalaIterator","t":"enumerationAsScalaIterator[A](i: Enumeration[A]): Iterator[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#enumerationAsScalaIteratorConverter-fffffa83","e":false,"i":"","n":"enumerationAsScalaIteratorConverter","t":"enumerationAsScalaIteratorConverter[A](i: Enumeration[A]): AsScala[Iterator[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java Enumeration to a Scala Iterator."},
{"l":"api/scala/collection/JavaConverters$.html#iterableAsScalaIterable-d63","e":false,"i":"","n":"iterableAsScalaIterable","t":"iterableAsScalaIterable[A](i: Iterable[A]): Iterable[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#iterableAsScalaIterableConverter-44","e":false,"i":"","n":"iterableAsScalaIterableConverter","t":"iterableAsScalaIterableConverter[A](i: Iterable[A]): AsScala[Iterable[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java Iterable to a Scala Iterable."},
{"l":"api/scala/collection/JavaConverters$.html#mapAsJavaConcurrentMap-fffffba9","e":false,"i":"","n":"mapAsJavaConcurrentMap","t":"mapAsJavaConcurrentMap[K, V](m: Map[K, V]): ConcurrentMap[K, V]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#mapAsJavaConcurrentMapConverter-fffff1e0","e":false,"i":"","n":"mapAsJavaConcurrentMapConverter","t":"mapAsJavaConcurrentMapConverter[K, V](m: Map[K, V]): AsJava[ConcurrentMap[K, V]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala mutable concurrent.Map to a Java ConcurrentMap."},
{"l":"api/scala/collection/JavaConverters$.html#mapAsJavaMap-fffff296","e":false,"i":"","n":"mapAsJavaMap","t":"mapAsJavaMap[K, V](m: Map[K, V]): Map[K, V]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#mapAsJavaMapConverter-175","e":false,"i":"","n":"mapAsJavaMapConverter","t":"mapAsJavaMapConverter[K, V](m: Map[K, V]): AsJava[Map[K, V]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala Map to a Java Map."},
{"l":"api/scala/collection/JavaConverters$.html#mapAsScalaConcurrentMap-fffffdcd","e":false,"i":"","n":"mapAsScalaConcurrentMap","t":"mapAsScalaConcurrentMap[A, B](m: ConcurrentMap[A, B]): Map[A, B]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#mapAsScalaConcurrentMapConverter-fffffced","e":false,"i":"","n":"mapAsScalaConcurrentMapConverter","t":"mapAsScalaConcurrentMapConverter[K, V](m: ConcurrentMap[K, V]): AsScala[Map[K, V]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java ConcurrentMap to a Scala mutable concurrent.Map."},
{"l":"api/scala/collection/JavaConverters$.html#mapAsScalaMap-fffff676","e":false,"i":"","n":"mapAsScalaMap","t":"mapAsScalaMap[A, B](m: Map[A, B]): Map[A, B]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#mapAsScalaMapConverter-a37","e":false,"i":"","n":"mapAsScalaMapConverter","t":"mapAsScalaMapConverter[K, V](m: Map[K, V]): AsScala[Map[K, V]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java Map to a Scala mutable Map."},
{"l":"api/scala/collection/JavaConverters$.html#mutableMapAsJavaMap-fffffa5e","e":false,"i":"","n":"mutableMapAsJavaMap","t":"mutableMapAsJavaMap[K, V](m: Map[K, V]): Map[K, V]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#mutableMapAsJavaMapConverter-f3d","e":false,"i":"","n":"mutableMapAsJavaMapConverter","t":"mutableMapAsJavaMapConverter[K, V](m: Map[K, V]): AsJava[Map[K, V]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala mutable Map to a Java Map."},
{"l":"api/scala/collection/JavaConverters$.html#mutableSeqAsJavaList-fffff2de","e":false,"i":"","n":"mutableSeqAsJavaList","t":"mutableSeqAsJavaList[A](s: Seq[A]): List[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#mutableSeqAsJavaListConverter-e7b","e":false,"i":"","n":"mutableSeqAsJavaListConverter","t":"mutableSeqAsJavaListConverter[A](b: Seq[A]): AsJava[List[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala mutable Seq to a Java List."},
{"l":"api/scala/collection/JavaConverters$.html#mutableSetAsJavaSet-eff","e":false,"i":"","n":"mutableSetAsJavaSet","t":"mutableSetAsJavaSet[A](s: Set[A]): Set[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#mutableSetAsJavaSetConverter-118","e":false,"i":"","n":"mutableSetAsJavaSetConverter","t":"mutableSetAsJavaSetConverter[A](s: Set[A]): AsJava[Set[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala mutable Set to a Java Set."},
{"l":"api/scala/collection/JavaConverters$.html#propertiesAsScalaMap-fffff13f","e":false,"i":"","n":"propertiesAsScalaMap","t":"propertiesAsScalaMap(p: Properties): Map[String, String]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#propertiesAsScalaMapConverter-ffffff80","e":false,"i":"","n":"propertiesAsScalaMapConverter","t":"propertiesAsScalaMapConverter(p: Properties): AsScala[Map[String, String]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asScala method that implicitly converts a Java Properties to a Scala mutable Map[String, String]."},
{"l":"api/scala/collection/JavaConverters$.html#seqAsJavaList-fffff0a6","e":false,"i":"","n":"seqAsJavaList","t":"seqAsJavaList[A](s: Seq[A]): List[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#seqAsJavaListConverter-fffff1b3","e":false,"i":"","n":"seqAsJavaListConverter","t":"seqAsJavaListConverter[A](b: Seq[A]): AsJava[List[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala Seq to a Java List."},
{"l":"api/scala/collection/JavaConverters$.html#setAsJavaSet-fffff837","e":false,"i":"","n":"setAsJavaSet","t":"setAsJavaSet[A](s: Set[A]): Set[A]","d":"scala.collection.JavaConverters","k":"def","x":""},
{"l":"api/scala/collection/JavaConverters$.html#setAsJavaSetConverter-fffff450","e":false,"i":"","n":"setAsJavaSetConverter","t":"setAsJavaSetConverter[A](s: Set[A]): AsJava[Set[A]]","d":"scala.collection.JavaConverters","k":"def","x":"Adds an asJava method that implicitly converts a Scala Set to a Java Set."},
{"l":"api/scala/collection/JavaConverters$$AsJava.html#","e":false,"i":"","n":"AsJava","t":"AsJava[A](op: => A)","d":"scala.collection.JavaConverters","k":"class","x":"Generic class containing the asJava converter method"},
{"l":"api/scala/collection/JavaConverters$$AsJava.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: A","d":"scala.collection.JavaConverters.AsJava","k":"def","x":"Converts a Scala collection to the corresponding Java collection"},
{"l":"api/scala/collection/JavaConverters$$AsJavaCollection.html#","e":false,"i":"","n":"AsJavaCollection","t":"AsJavaCollection[A](i: Iterable[A])","d":"scala.collection.JavaConverters","k":"class","x":"Generic class containing the asJavaCollection converter method"},
{"l":"api/scala/collection/JavaConverters$$AsJavaCollection.html#asJavaCollection-0","e":false,"i":"","n":"asJavaCollection","t":"asJavaCollection: Collection[A]","d":"scala.collection.JavaConverters.AsJavaCollection","k":"def","x":"Converts a Scala Iterable to a Java Collection"},
{"l":"api/scala/collection/JavaConverters$$AsJavaDictionary.html#","e":false,"i":"","n":"AsJavaDictionary","t":"AsJavaDictionary[K, V](m: Map[K, V])","d":"scala.collection.JavaConverters","k":"class","x":"Generic class containing the asJavaDictionary converter method"},
{"l":"api/scala/collection/JavaConverters$$AsJavaDictionary.html#asJavaDictionary-0","e":false,"i":"","n":"asJavaDictionary","t":"asJavaDictionary: Dictionary[K, V]","d":"scala.collection.JavaConverters.AsJavaDictionary","k":"def","x":"Converts a Scala Map to a Java Dictionary"},
{"l":"api/scala/collection/JavaConverters$$AsJavaEnumeration.html#","e":false,"i":"","n":"AsJavaEnumeration","t":"AsJavaEnumeration[A](i: Iterator[A])","d":"scala.collection.JavaConverters","k":"class","x":"Generic class containing the asJavaEnumeration converter method"},
{"l":"api/scala/collection/JavaConverters$$AsJavaEnumeration.html#asJavaEnumeration-0","e":false,"i":"","n":"asJavaEnumeration","t":"asJavaEnumeration: Enumeration[A]","d":"scala.collection.JavaConverters.AsJavaEnumeration","k":"def","x":"Converts a Scala Iterator to a Java Enumeration"},
{"l":"api/scala/collection/JavaConverters$$AsScala.html#","e":false,"i":"","n":"AsScala","t":"AsScala[A](op: => A)","d":"scala.collection.JavaConverters","k":"class","x":"Generic class containing the asScala converter method"},
{"l":"api/scala/collection/JavaConverters$$AsScala.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: A","d":"scala.collection.JavaConverters.AsScala","k":"def","x":"Converts a Java collection to the corresponding Scala collection"},
{"l":"api/scala/collection/LazyZip2.html#","e":false,"i":"","n":"LazyZip2","t":"LazyZip2[+El1, +El2, C1]","d":"scala.collection","k":"class","x":"Decorator representing lazily zipped pairs."},
{"l":"api/scala/collection/LazyZip2.html#exists-fffff00e","e":false,"i":"","n":"exists","t":"exists(p: (El1, El2) => Boolean): Boolean","d":"scala.collection.LazyZip2","k":"def","x":""},
{"l":"api/scala/collection/LazyZip2.html#filter-fffff004","e":false,"i":"","n":"filter","t":"filter[C](p: (El1, El2) => Boolean)(implicit bf: BuildFrom[C1, (El1, El2), C]): C","d":"scala.collection.LazyZip2","k":"def","x":""},
{"l":"api/scala/collection/LazyZip2.html#flatMap-723","e":false,"i":"","n":"flatMap","t":"flatMap[B, C](f: (El1, El2) => Iterable[B])(implicit bf: BuildFrom[C1, B, C]): C","d":"scala.collection.LazyZip2","k":"def","x":""},
{"l":"api/scala/collection/LazyZip2.html#forall-fffff00e","e":false,"i":"","n":"forall","t":"forall(p: (El1, El2) => Boolean): Boolean","d":"scala.collection.LazyZip2","k":"def","x":""},
{"l":"api/scala/collection/LazyZip2.html#foreach-fffff84d","e":false,"i":"","n":"foreach","t":"foreach[U](f: (El1, El2) => U): Unit","d":"scala.collection.LazyZip2","k":"def","x":""},
{"l":"api/scala/collection/LazyZip2.html#lazyZip-fffffd85","e":false,"i":"","n":"lazyZip","t":"lazyZip[B](that: Iterable[B]): LazyZip3[El1, El2, B, C1]","d":"scala.collection.LazyZip2","k":"def","x":"Zips that iterable collection with an existing LazyZip2. The elements in each collection are\nnot consumed until a strict operation is invoked on the returned LazyZip3 decorator.\n"},
{"l":"api/scala/collection/LazyZip2.html#map-723","e":false,"i":"","n":"map","t":"map[B, C](f: (El1, El2) => B)(implicit bf: BuildFrom[C1, B, C]): C","d":"scala.collection.LazyZip2","k":"def","x":""},
{"l":"api/scala/collection/LazyZip2$.html#","e":false,"i":"","n":"LazyZip2","t":"LazyZip2","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/LazyZip2$.html#lazyZip2ToIterable-fffff6b2","e":false,"i":"","n":"lazyZip2ToIterable","t":"lazyZip2ToIterable[El1, El2](zipped2: LazyZip2[El1, El2, _]): View[(El1, El2)]","d":"scala.collection.LazyZip2","k":"def","x":""},
{"l":"api/scala/collection/LazyZip3.html#","e":false,"i":"","n":"LazyZip3","t":"LazyZip3[+El1, +El2, +El3, C1]","d":"scala.collection","k":"class","x":"Decorator representing lazily zipped triples."},
{"l":"api/scala/collection/LazyZip3.html#exists-fffff9ad","e":false,"i":"","n":"exists","t":"exists(p: (El1, El2, El3) => Boolean): Boolean","d":"scala.collection.LazyZip3","k":"def","x":""},
{"l":"api/scala/collection/LazyZip3.html#filter-ec5","e":false,"i":"","n":"filter","t":"filter[C](p: (El1, El2, El3) => Boolean)(implicit bf: BuildFrom[C1, (El1, El2, El3), C]): C","d":"scala.collection.LazyZip3","k":"def","x":""},
{"l":"api/scala/collection/LazyZip3.html#flatMap-5e4","e":false,"i":"","n":"flatMap","t":"flatMap[B, C](f: (El1, El2, El3) => Iterable[B])(implicit bf: BuildFrom[C1, B, C]): C","d":"scala.collection.LazyZip3","k":"def","x":""},
{"l":"api/scala/collection/LazyZip3.html#forall-fffff9ad","e":false,"i":"","n":"forall","t":"forall(p: (El1, El2, El3) => Boolean): Boolean","d":"scala.collection.LazyZip3","k":"def","x":""},
{"l":"api/scala/collection/LazyZip3.html#foreach-fffffb0e","e":false,"i":"","n":"foreach","t":"foreach[U](f: (El1, El2, El3) => U): Unit","d":"scala.collection.LazyZip3","k":"def","x":""},
{"l":"api/scala/collection/LazyZip3.html#lazyZip-fffffd86","e":false,"i":"","n":"lazyZip","t":"lazyZip[B](that: Iterable[B]): LazyZip4[El1, El2, El3, B, C1]","d":"scala.collection.LazyZip3","k":"def","x":"Zips that iterable collection with an existing LazyZip3. The elements in each collection are\nnot consumed until a strict operation is invoked on the returned LazyZip4 decorator.\n"},
{"l":"api/scala/collection/LazyZip3.html#map-5e4","e":false,"i":"","n":"map","t":"map[B, C](f: (El1, El2, El3) => B)(implicit bf: BuildFrom[C1, B, C]): C","d":"scala.collection.LazyZip3","k":"def","x":""},
{"l":"api/scala/collection/LazyZip3$.html#","e":false,"i":"","n":"LazyZip3","t":"LazyZip3","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/LazyZip3$.html#lazyZip3ToIterable-fffff792","e":false,"i":"","n":"lazyZip3ToIterable","t":"lazyZip3ToIterable[El1, El2, El3](zipped3: LazyZip3[El1, El2, El3, _]): View[(El1, El2, El3)]","d":"scala.collection.LazyZip3","k":"def","x":""},
{"l":"api/scala/collection/LazyZip4.html#","e":false,"i":"","n":"LazyZip4","t":"LazyZip4[+El1, +El2, +El3, +El4, C1]","d":"scala.collection","k":"class","x":"Decorator representing lazily zipped 4-tuples."},
{"l":"api/scala/collection/LazyZip4.html#exists-fffff34c","e":false,"i":"","n":"exists","t":"exists(p: (El1, El2, El3, El4) => Boolean): Boolean","d":"scala.collection.LazyZip4","k":"def","x":""},
{"l":"api/scala/collection/LazyZip4.html#filter-d86","e":false,"i":"","n":"filter","t":"filter[C](p: (El1, El2, El3, El4) => Boolean)(implicit bf: BuildFrom[C1, (El1, El2, El3, El4), C]): C","d":"scala.collection.LazyZip4","k":"def","x":""},
{"l":"api/scala/collection/LazyZip4.html#flatMap-fffff4a5","e":false,"i":"","n":"flatMap","t":"flatMap[B, C](f: (El1, El2, El3, El4) => Iterable[B])(implicit bf: BuildFrom[C1, B, C]): C","d":"scala.collection.LazyZip4","k":"def","x":""},
{"l":"api/scala/collection/LazyZip4.html#forall-fffff34c","e":false,"i":"","n":"forall","t":"forall(p: (El1, El2, El3, El4) => Boolean): Boolean","d":"scala.collection.LazyZip4","k":"def","x":""},
{"l":"api/scala/collection/LazyZip4.html#foreach-dcf","e":false,"i":"","n":"foreach","t":"foreach[U](f: (El1, El2, El3, El4) => U): Unit","d":"scala.collection.LazyZip4","k":"def","x":""},
{"l":"api/scala/collection/LazyZip4.html#map-fffff4a5","e":false,"i":"","n":"map","t":"map[B, C](f: (El1, El2, El3, El4) => B)(implicit bf: BuildFrom[C1, B, C]): C","d":"scala.collection.LazyZip4","k":"def","x":""},
{"l":"api/scala/collection/LazyZip4$.html#","e":false,"i":"","n":"LazyZip4","t":"LazyZip4","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/LazyZip4$.html#lazyZip4ToIterable-fffff872","e":false,"i":"","n":"lazyZip4ToIterable","t":"lazyZip4ToIterable[El1, El2, El3, El4](zipped4: LazyZip4[El1, El2, El3, El4, _]): View[(El1, El2, El3, El4)]","d":"scala.collection.LazyZip4","k":"def","x":""},
{"l":"api/scala/collection/LinearSeq.html#","e":false,"i":"","n":"LinearSeq","t":"LinearSeq[+A] extends Seq[A], LinearSeqOps[A, LinearSeq, LinearSeq[A]], IterableFactoryDefaults[A, LinearSeq]","d":"scala.collection","k":"trait","x":"Base trait for linearly accessed sequences that have efficient head and\ntail operations.\nKnown subclasses: List, LazyList\n"},
{"l":"api/scala/collection/LinearSeq$.html#","e":false,"i":"","n":"LinearSeq","t":"LinearSeq extends Delegate[LinearSeq]","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/LinearSeqOps.html#","e":false,"i":"","n":"LinearSeqOps","t":"LinearSeqOps[+A, +CC <: (LinearSeq), +C <: LinearSeq[A] & LinearSeqOps[A, CC, C]] extends SeqOps[A, CC, C]","d":"scala.collection","k":"trait","x":"Base trait for linear Seq operations"},
{"l":"api/scala/collection/LinearSeqOps.html#head-0","e":false,"i":"","n":"head","t":"head: A","d":"scala.collection.LinearSeqOps","k":"def","x":"Selects the first element of this sequence."},
{"l":"api/scala/collection/LinearSeqOps.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.LinearSeqOps","k":"def","x":"An scala.collection.Iterator over the elements of this sequence."},
{"l":"api/scala/collection/LinearSeqOps.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.LinearSeqOps","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/LinearSeqOps.html#tail-0","e":false,"i":"","n":"tail","t":"tail: C","d":"scala.collection.LinearSeqOps","k":"def","x":"The rest of the collection without its first element."},
{"l":"api/scala/collection/LongStepper.html#","e":false,"i":"","n":"LongStepper","t":"LongStepper extends Stepper[Long]","d":"scala.collection","k":"trait","x":"A Stepper for Longs. See Stepper."},
{"l":"api/scala/collection/LongStepper.html#javaIterator-c01","e":false,"i":"","n":"javaIterator","t":"javaIterator[B >: Long]: OfLong","d":"scala.collection.LongStepper","k":"def","x":"Returns a Java java.util.Iterator corresponding to this Stepper."},
{"l":"api/scala/collection/LongStepper.html#spliterator-fffff7e9","e":false,"i":"","n":"spliterator","t":"spliterator[B >: Long]: OfLong","d":"scala.collection.LongStepper","k":"def","x":"Returns a java.util.Spliterator corresponding to this Stepper."},
{"l":"api/scala/collection/LongStepper.html#trySplit-fffff6ed","e":false,"i":"","n":"trySplit","t":"trySplit(): LongStepper","d":"scala.collection.LongStepper","k":"def","x":"Split this stepper, if applicable. The elements of the current Stepper are split up between\nthe resulting Stepper and the current stepper."},
{"l":"api/scala/collection/LongStepper$.html#","e":false,"i":"","n":"LongStepper","t":"LongStepper","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/LongStepper$$LongStepperSpliterator.html#","e":false,"i":"","n":"LongStepperSpliterator","t":"LongStepperSpliterator(s: LongStepper) extends OfLong","d":"scala.collection.LongStepper","k":"class","x":""},
{"l":"api/scala/collection/LongStepper$$LongStepperSpliterator.html#characteristics-ffffff27","e":false,"i":"","n":"characteristics","t":"characteristics(): Int","d":"scala.collection.LongStepper.LongStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/LongStepper$$LongStepperSpliterator.html#estimateSize-644","e":false,"i":"","n":"estimateSize","t":"estimateSize(): Long","d":"scala.collection.LongStepper.LongStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/LongStepper$$LongStepperSpliterator.html#tryAdvance-4f8","e":false,"i":"","n":"tryAdvance","t":"tryAdvance(c: LongConsumer): Boolean","d":"scala.collection.LongStepper.LongStepperSpliterator","k":"def","x":""},
{"l":"api/scala/collection/Map.html#","e":false,"i":"","n":"Map","t":"Map[K, +V] extends Iterable[(K, V)], MapOps[K, V, Map, Map[K, V]], MapFactoryDefaults[K, V, Map, Iterable], Equals","d":"scala.collection","k":"trait","x":"Base Map type"},
{"l":"api/scala/collection/Map.html#--fffff1a7","e":false,"i":"","n":"-","t":"-(key: K): Map[K, V]","d":"scala.collection.Map","k":"def","x":""},
{"l":"api/scala/collection/Map.html#--fffffde5","e":false,"i":"","n":"-","t":"-(key1: K, key2: K, keys: K*): Map[K, V]","d":"scala.collection.Map","k":"def","x":""},
{"l":"api/scala/collection/Map.html#canEqual-4ad","e":false,"i":"","n":"canEqual","t":"canEqual(that: Any): Boolean","d":"scala.collection.Map","k":"def","x":"Checks whether this instance can possibly equal that."},
{"l":"api/scala/collection/Map.html#mapFactory-0","e":false,"i":"","n":"mapFactory","t":"mapFactory: MapFactory[Map]","d":"scala.collection.Map","k":"def","x":"The companion object of this map, providing various factory methods.\n"},
{"l":"api/scala/collection/Map$.html#","e":false,"i":"","n":"Map","t":"Map extends Delegate[Map]","d":"scala.collection","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/MapFactory.html#","e":false,"i":"","n":"MapFactory","t":"MapFactory[+CC[_, _]] extends Serializable","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/MapFactory.html#apply-fffff670","e":false,"i":"","n":"apply","t":"apply[K, V](elems: (K, V)*): CC[K, V]","d":"scala.collection.MapFactory","k":"def","x":"A collection of type Map that contains given key/value bindings.\n"},
{"l":"api/scala/collection/MapFactory.html#empty-5c5","e":false,"i":"","n":"empty","t":"empty[K, V]: CC[K, V]","d":"scala.collection.MapFactory","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/MapFactory.html#from-ffffff7c","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): CC[K, V]","d":"scala.collection.MapFactory","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/MapFactory.html#mapFactory-974","e":false,"i":"","n":"mapFactory","t":"mapFactory[K, V]: Factory[(K, V), CC[K, V]]","d":"scala.collection.MapFactory","k":"def","x":"The default Factory instance for maps.\n"},
{"l":"api/scala/collection/MapFactory.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), CC[K, V]]","d":"scala.collection.MapFactory","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/MapFactory$.html#","e":false,"i":"","n":"MapFactory","t":"MapFactory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/MapFactory$.html#toBuildFrom-fffff073","e":false,"i":"","n":"toBuildFrom","t":"toBuildFrom[K, V, CC[_, _]](factory: MapFactory[CC]): BuildFrom[Any, (K, V), CC[K, V]]","d":"scala.collection.MapFactory","k":"def","x":""},
{"l":"api/scala/collection/MapFactory$.html#toFactory-905","e":false,"i":"","n":"toFactory","t":"toFactory[K, V, CC[_, _]](factory: MapFactory[CC]): Factory[(K, V), CC[K, V]]","d":"scala.collection.MapFactory","k":"def","x":"Fixes the key and value types of factory to K and V, respectively"},
{"l":"api/scala/collection/MapFactory$$Delegate.html#","e":false,"i":"","n":"Delegate","t":"Delegate[C[_, _]](delegate: MapFactory[C]) extends MapFactory[C]","d":"scala.collection.MapFactory","k":"class","x":""},
{"l":"api/scala/collection/MapFactory$$Delegate.html#empty-5c5","e":false,"i":"","n":"empty","t":"empty[K, V]: C[K, V]","d":"scala.collection.MapFactory.Delegate","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/MapFactory$$Delegate.html#from-ffffff7c","e":false,"i":"","n":"from","t":"from[K, V](it: IterableOnce[(K, V)]): C[K, V]","d":"scala.collection.MapFactory.Delegate","k":"def","x":"A collection of type Map generated from given iterable object.\n"},
{"l":"api/scala/collection/MapFactory$$Delegate.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[K, V]: Builder[(K, V), C[K, V]]","d":"scala.collection.MapFactory.Delegate","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/MapFactoryDefaults.html#","e":false,"i":"","n":"MapFactoryDefaults","t":"MapFactoryDefaults[K, +V, +CC <: ([x, y] =>> IterableOps[(x, y), Iterable, Iterable[(x, y)]]), +WithFilterCC <: ([x] =>> IterableOps[x, WithFilterCC, WithFilterCC[x]] & Iterable[x])] extends MapOps[K, V, CC, CC[K, V]], IterableOps[(K, V), WithFilterCC, CC[K, V]]","d":"scala.collection","k":"trait","x":"This trait provides default implementations for the factory methods fromSpecific and\nnewSpecificBuilder that need to be refined when implementing a collection type that refines\nthe CC and C type parameters. It is used for maps."},
{"l":"api/scala/collection/MapOps.html#","e":false,"i":"","n":"MapOps","t":"MapOps[K, +V, +CC <: ([_, _] =>> IterableOps[_, AnyConstr, _]), +C] extends IterableOps[(K, V), Iterable, C], PartialFunction[K, V]","d":"scala.collection","k":"trait","x":"Base Map implementation type\n"},
{"l":"api/scala/collection/MapOps.html#+-fffff27b","e":false,"i":"","n":"+","t":"+[V1 >: V](kv: (K, V1)): CC[K, V1]","d":"scala.collection.MapOps","k":"def","x":""},
{"l":"api/scala/collection/MapOps.html#+-f18","e":false,"i":"","n":"+","t":"+[V1 >: V](elem1: (K, V1), elem2: (K, V1), elems: (K, V1)*): CC[K, V1]","d":"scala.collection.MapOps","k":"def","x":""},
{"l":"api/scala/collection/MapOps.html#++-62","e":false,"i":"","n":"++","t":"++[V2 >: V](xs: IterableOnce[(K, V2)]): CC[K, V2]","d":"scala.collection.MapOps","k":"def","x":"Alias for concat"},
{"l":"api/scala/collection/MapOps.html#++:-62","e":false,"i":"","n":"++:","t":"++:[V1 >: V](that: IterableOnce[(K, V1)]): CC[K, V1]","d":"scala.collection.MapOps","k":"def","x":""},
{"l":"api/scala/collection/MapOps.html#---fffff66e","e":false,"i":"","n":"--","t":"--(keys: IterableOnce[K]): C","d":"scala.collection.MapOps","k":"def","x":""},
{"l":"api/scala/collection/MapOps.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(key: K): V","d":"scala.collection.MapOps","k":"def","x":"Retrieves the value which is associated with the given key. This\nmethod invokes the default method of the map if there is no mapping\nfrom the given key to a value. Unless overridden, the default method throws a\nNoSuchElementException.\n"},
{"l":"api/scala/collection/MapOps.html#collect-fffff957","e":false,"i":"","n":"collect","t":"collect[K2, V2](pf: PartialFunction[(K, V), (K2, V2)]): CC[K2, V2]","d":"scala.collection.MapOps","k":"def","x":"Builds a new collection by applying a partial function to all elements of this map\non which the function is defined.\n"},
{"l":"api/scala/collection/MapOps.html#concat-62","e":false,"i":"","n":"concat","t":"concat[V2 >: V](suffix: IterableOnce[(K, V2)]): CC[K, V2]","d":"scala.collection.MapOps","k":"def","x":"Returns a new map containing the elements from the left hand operand followed by the elements from the\nright hand operand. The element type of the map is the most specific superclass encompassing\nthe element types of the two operands.\n"},
{"l":"api/scala/collection/MapOps.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(key: K): Boolean","d":"scala.collection.MapOps","k":"def","x":"Tests whether this map contains a binding for a key.\n"},
{"l":"api/scala/collection/MapOps.html#default-d26","e":false,"i":"","n":"default","t":"default(key: K): V","d":"scala.collection.MapOps","k":"def","x":"Defines the default value computation for the map,\nreturned when a key is not found."},
{"l":"api/scala/collection/MapOps.html#filterKeys-5ea","e":false,"i":"","n":"filterKeys","t":"filterKeys(p: K => Boolean): MapView[K, V]","d":"scala.collection.MapOps","k":"def","x":"Filters this map by retaining only keys satisfying a predicate."},
{"l":"api/scala/collection/MapOps.html#flatMap-fffffcb7","e":false,"i":"","n":"flatMap","t":"flatMap[K2, V2](f: ((K, V)) => IterableOnce[(K2, V2)]): CC[K2, V2]","d":"scala.collection.MapOps","k":"def","x":"Builds a new map by applying a function to all elements of this map\nand using the elements of the resulting collections.\n"},
{"l":"api/scala/collection/MapOps.html#foreachEntry-fffff84d","e":false,"i":"","n":"foreachEntry","t":"foreachEntry[U](f: (K, V) => U): Unit","d":"scala.collection.MapOps","k":"def","x":"Apply f to each key/value pair for its side effects\nNote: [U] parameter needed to help scalac's type inference.\n"},
{"l":"api/scala/collection/MapOps.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.MapOps","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/MapOps.html#getOrElse-ddf","e":false,"i":"","n":"getOrElse","t":"getOrElse[V1 >: V](key: K, default: => V1): V1","d":"scala.collection.MapOps","k":"def","x":"Returns the value associated with a key, or a default value if the key is not contained in the map."},
{"l":"api/scala/collection/MapOps.html#isDefinedAt-4ad","e":false,"i":"","n":"isDefinedAt","t":"isDefinedAt(key: K): Boolean","d":"scala.collection.MapOps","k":"def","x":"Tests whether this map contains a binding for a key. This method,\nwhich implements an abstract method of trait PartialFunction,\nis equivalent to contains.\n"},
{"l":"api/scala/collection/MapOps.html#keySet-0","e":false,"i":"","n":"keySet","t":"keySet: Set[K]","d":"scala.collection.MapOps","k":"def","x":"A set representing the keys contained by this map."},
{"l":"api/scala/collection/MapOps.html#keyStepper-190","e":false,"i":"","n":"keyStepper","t":"keyStepper[S <: Stepper[_]](implicit shape: StepperShape[K, S]): S","d":"scala.collection.MapOps","k":"def","x":"Returns a Stepper for the keys of this map. See method stepper."},
{"l":"api/scala/collection/MapOps.html#keys-0","e":false,"i":"","n":"keys","t":"keys: Iterable[K]","d":"scala.collection.MapOps","k":"def","x":"An Iterable collection of the keys contained by this map."},
{"l":"api/scala/collection/MapOps.html#keysIterator-0","e":false,"i":"","n":"keysIterator","t":"keysIterator: Iterator[K]","d":"scala.collection.MapOps","k":"def","x":"An Iterator of the keys contained by this map.\n"},
{"l":"api/scala/collection/MapOps.html#map-fffffcb7","e":false,"i":"","n":"map","t":"map[K2, V2](f: ((K, V)) => (K2, V2)): CC[K2, V2]","d":"scala.collection.MapOps","k":"def","x":"Builds a new map by applying a function to all elements of this map.\n"},
{"l":"api/scala/collection/MapOps.html#mapFactory-0","e":false,"i":"","n":"mapFactory","t":"mapFactory: MapFactory[CC]","d":"scala.collection.MapOps","k":"def","x":"The companion object of this map, providing various factory methods.\n"},
{"l":"api/scala/collection/MapOps.html#mapValues-99","e":false,"i":"","n":"mapValues","t":"mapValues[W](f: V => W): MapView[K, W]","d":"scala.collection.MapOps","k":"def","x":"Transforms this map by applying a function to every retrieved value."},
{"l":"api/scala/collection/MapOps.html#valueStepper-190","e":false,"i":"","n":"valueStepper","t":"valueStepper[S <: Stepper[_]](implicit shape: StepperShape[V, S]): S","d":"scala.collection.MapOps","k":"def","x":"Returns a Stepper for the values of this map. See method stepper."},
{"l":"api/scala/collection/MapOps.html#values-0","e":false,"i":"","n":"values","t":"values: Iterable[V]","d":"scala.collection.MapOps","k":"def","x":"Collects all values of this map in an iterable collection.\n"},
{"l":"api/scala/collection/MapOps.html#valuesIterator-0","e":false,"i":"","n":"valuesIterator","t":"valuesIterator: Iterator[V]","d":"scala.collection.MapOps","k":"def","x":"Creates an iterator for all values in this map.\n"},
{"l":"api/scala/collection/MapOps$.html#","e":false,"i":"","n":"MapOps","t":"MapOps","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/MapOps$$WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter[K, +V, +IterableCC[_], +CC <: ([_, _] =>> IterableOps[_, AnyConstr, _])](self: MapOps[K, V, CC, _] & IterableOps[(K, V), IterableCC, _], p: ((K, V)) => Boolean) extends WithFilter[(K, V), IterableCC], Serializable","d":"scala.collection.MapOps","k":"class","x":"Specializes WithFilter for Map collection types by adding overloads to transformation\noperations that can return a Map."},
{"l":"api/scala/collection/MapOps$$WithFilter.html#flatMap-fffffcb7","e":false,"i":"","n":"flatMap","t":"flatMap[K2, V2](f: ((K, V)) => IterableOnce[(K2, V2)]): CC[K2, V2]","d":"scala.collection.MapOps.WithFilter","k":"def","x":""},
{"l":"api/scala/collection/MapOps$$WithFilter.html#map-fffffcb7","e":false,"i":"","n":"map","t":"map[K2, V2](f: ((K, V)) => (K2, V2)): CC[K2, V2]","d":"scala.collection.MapOps.WithFilter","k":"def","x":""},
{"l":"api/scala/collection/MapView.html#","e":false,"i":"","n":"MapView","t":"MapView[K, +V] extends MapOps[K, V, { type l = [X, Y] =>> View[(X, Y)];  }#<none>, View[(K, V)]], View[(K, V)]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/MapView.html#mapFactory-0","e":false,"i":"","n":"mapFactory","t":"mapFactory: MapViewFactory","d":"scala.collection.MapView","k":"def","x":"The companion object of this map, providing various factory methods.\n"},
{"l":"api/scala/collection/MapView$.html#","e":false,"i":"","n":"MapView","t":"MapView extends MapViewFactory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/MapView$.html#SomeIterableConstr-0","e":false,"i":"","n":"SomeIterableConstr","t":"SomeIterableConstr[X, Y] = IterableOps[_, AnyConstr, _]","d":"scala.collection.MapView","k":"type","x":"An IterableOps whose collection type and collection type constructor are unknown"},
{"l":"api/scala/collection/MapView$.html#SomeMapOps-0","e":false,"i":"","n":"SomeMapOps","t":"SomeMapOps[K, +V] = MapOps[K, V, SomeIterableConstr, _]","d":"scala.collection.MapView","k":"type","x":"A MapOps whose collection type and collection type constructor are (mostly) unknown"},
{"l":"api/scala/collection/MapView$$Filter.html#","e":false,"i":"","n":"Filter","t":"Filter[K, +V](underlying: SomeMapOps[K, V], isFlipped: Boolean, p: ((K, V)) => Boolean) extends AbstractMapView[K, V]","d":"scala.collection.MapView","k":"class","x":""},
{"l":"api/scala/collection/MapView$$Filter.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.MapView.Filter","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/MapView$$Filter.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.MapView.Filter","k":"def","x":"An scala.collection.Iterator over the elements of this map."},
{"l":"api/scala/collection/MapView$$FilterKeys.html#","e":false,"i":"","n":"FilterKeys","t":"FilterKeys[K, +V](underlying: SomeMapOps[K, V], p: K => Boolean) extends AbstractMapView[K, V]","d":"scala.collection.MapView","k":"class","x":""},
{"l":"api/scala/collection/MapView$$FilterKeys.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.MapView.FilterKeys","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/MapView$$FilterKeys.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.MapView.FilterKeys","k":"def","x":"An scala.collection.Iterator over the elements of this map."},
{"l":"api/scala/collection/MapView$$Id.html#","e":false,"i":"","n":"Id","t":"Id[K, +V](underlying: SomeMapOps[K, V]) extends AbstractMapView[K, V]","d":"scala.collection.MapView","k":"class","x":""},
{"l":"api/scala/collection/MapView$$Id.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[V]","d":"scala.collection.MapView.Id","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/MapView$$Id.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, V)]","d":"scala.collection.MapView.Id","k":"def","x":"An scala.collection.Iterator over the elements of this map."},
{"l":"api/scala/collection/MapView$$MapValues.html#","e":false,"i":"","n":"MapValues","t":"MapValues[K, +V, +W](underlying: SomeMapOps[K, V], f: V => W) extends AbstractMapView[K, W]","d":"scala.collection.MapView","k":"class","x":""},
{"l":"api/scala/collection/MapView$$MapValues.html#get-fffffb50","e":false,"i":"","n":"get","t":"get(key: K): Option[W]","d":"scala.collection.MapView.MapValues","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/collection/MapView$$MapValues.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(K, W)]","d":"scala.collection.MapView.MapValues","k":"def","x":"An scala.collection.Iterator over the elements of this map."},
{"l":"api/scala/collection/MapView$$TapEach.html#","e":false,"i":"","n":"TapEach","t":"TapEach[K, +V, +U](underlying: SomeMapOps[K, V], f: ((K, V)) => U) extends AbstractMapView[K, V]","d":"scala.collection.MapView","k":"class","x":""},
{"l":"api/scala/collection/MapViewFactory.html#","e":false,"i":"","n":"MapViewFactory","t":"MapViewFactory extends MapFactory[{ type l = [X, Y] =>> View[(X, Y)];  }#<none>]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/MapViewFactory.html#empty-fffffe8b","e":false,"i":"","n":"empty","t":"empty[X, Y]: MapView[X, Y]","d":"scala.collection.MapViewFactory","k":"def","x":"An empty Map\n"},
{"l":"api/scala/collection/MapViewFactory.html#from-fffff665","e":false,"i":"","n":"from","t":"from[K, V](it: SomeMapOps[K, V]): MapView[K, V]","d":"scala.collection.MapViewFactory","k":"def","x":""},
{"l":"api/scala/collection/MapViewFactory.html#newBuilder-ffffff3d","e":false,"i":"","n":"newBuilder","t":"newBuilder[X, Y]: Builder[(X, Y), MapView[X, Y]]","d":"scala.collection.MapViewFactory","k":"def","x":"The default builder for Map objects.\n"},
{"l":"api/scala/collection/Searching$.html#","e":false,"i":"","n":"Searching","t":"Searching","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/Searching$.html#search-700","e":false,"i":"","n":"search","t":"search[Repr, A](coll: Repr)(implicit fr: IsSeq[Repr]): SearchImpl[Repr, fr.A]","d":"scala.collection.Searching","k":"def","x":""},
{"l":"api/scala/collection/Searching$$Found.html#","e":false,"i":"","n":"Found","t":"Found(foundIndex: Int) extends SearchResult","d":"scala.collection.Searching","k":"class","x":"The result of performing a search on a sorted sequence, where the element was found.\n"},
{"l":"api/scala/collection/Searching$$InsertionPoint.html#","e":false,"i":"","n":"InsertionPoint","t":"InsertionPoint(insertionPoint: Int) extends SearchResult","d":"scala.collection.Searching","k":"class","x":"The result of performing a search on a sorted sequence, where the element was not found\n"},
{"l":"api/scala/collection/Searching$$SearchImpl.html#","e":false,"i":"","n":"SearchImpl","t":"SearchImpl[Repr, A](coll: SeqOps[A, AnyConstr, _]) extends AnyVal","d":"scala.collection.Searching","k":"class","x":""},
{"l":"api/scala/collection/Searching$$SearchResult.html#","e":false,"i":"","n":"SearchResult","t":"SearchResult","d":"scala.collection.Searching","k":"class","x":"The result of performing a search on a sorted sequence"},
{"l":"api/scala/collection/Searching$$SearchResult.html#insertionPoint-0","e":false,"i":"","n":"insertionPoint","t":"insertionPoint: Int","d":"scala.collection.Searching.SearchResult","k":"def","x":"The index corresponding to the element searched for in the sequence, if it was found,\nor the index where the element would be inserted in the sequence, if it was not in the sequence"},
{"l":"api/scala/collection/Seq.html#","e":false,"i":"","n":"Seq","t":"Seq[+A] extends Iterable[A], PartialFunction[Int, A], SeqOps[A, Seq, Seq[A]], IterableFactoryDefaults[A, Seq], Equals","d":"scala.collection","k":"trait","x":"Base trait for sequence collections\n"},
{"l":"api/scala/collection/Seq.html#canEqual-4ad","e":false,"i":"","n":"canEqual","t":"canEqual(that: Any): Boolean","d":"scala.collection.Seq","k":"def","x":"Checks whether this instance can possibly equal that."},
{"l":"api/scala/collection/Seq$.html#","e":false,"i":"","n":"Seq","t":"Seq extends Delegate[Seq]","d":"scala.collection","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/SeqFactory.html#","e":false,"i":"","n":"SeqFactory","t":"SeqFactory[+CC <: ([A] =>> SeqOps[A, Seq, Seq[A]])] extends IterableFactory[CC]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/SeqFactory.html#unapplySeq-fffff411","e":false,"i":"","n":"unapplySeq","t":"unapplySeq[A](x: CC[A]): UnapplySeqWrapper[A]","d":"scala.collection.SeqFactory","k":"def","x":""},
{"l":"api/scala/collection/SeqFactory$.html#","e":false,"i":"","n":"SeqFactory","t":"SeqFactory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SeqFactory$$Delegate.html#","e":false,"i":"","n":"Delegate","t":"Delegate[CC <: ([A] =>> SeqOps[A, Seq, Seq[A]])](delegate: SeqFactory[CC]) extends SeqFactory[CC]","d":"scala.collection.SeqFactory","k":"class","x":""},
{"l":"api/scala/collection/SeqFactory$$Delegate.html#empty-d4a","e":false,"i":"","n":"empty","t":"empty[A]: CC[A]","d":"scala.collection.SeqFactory.Delegate","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/SeqFactory$$Delegate.html#from-fffff511","e":false,"i":"","n":"from","t":"from[E](it: IterableOnce[E]): CC[E]","d":"scala.collection.SeqFactory.Delegate","k":"def","x":"Creates a target collection from an existing source collection\n"},
{"l":"api/scala/collection/SeqFactory$$Delegate.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, CC[A]]","d":"scala.collection.SeqFactory.Delegate","k":"def","x":""},
{"l":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html#","e":false,"i":"","n":"UnapplySeqWrapper","t":"UnapplySeqWrapper[A](c: SeqOps[A, Seq, Seq[A]]) extends AnyVal","d":"scala.collection.SeqFactory","k":"class","x":""},
{"l":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.SeqFactory.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html#drop-fffffb12","e":false,"i":"","n":"drop","t":"drop(n: Int): Seq[A]","d":"scala.collection.SeqFactory.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html#get-0","e":false,"i":"","n":"get","t":"get: UnapplySeqWrapper[A]","d":"scala.collection.SeqFactory.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: false","d":"scala.collection.SeqFactory.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html#lengthCompare-fffffbe0","e":false,"i":"","n":"lengthCompare","t":"lengthCompare(len: Int): Int","d":"scala.collection.SeqFactory.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/collection/SeqFactory$$UnapplySeqWrapper.html#toSeq-0","e":false,"i":"","n":"toSeq","t":"toSeq: Seq[A]","d":"scala.collection.SeqFactory.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/collection/SeqMap.html#","e":false,"i":"","n":"SeqMap","t":"SeqMap[K, +V] extends Map[K, V], MapOps[K, V, SeqMap, SeqMap[K, V]], MapFactoryDefaults[K, V, SeqMap, Iterable]","d":"scala.collection","k":"trait","x":"A generic trait for ordered maps. Concrete classes have to provide\nfunctionality for the abstract methods in SeqMap."},
{"l":"api/scala/collection/SeqMap$.html#","e":false,"i":"","n":"SeqMap","t":"SeqMap extends Delegate[SeqMap]","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SeqOps.html#","e":false,"i":"","n":"SeqOps","t":"SeqOps[+A, +CC[_], +C] extends IterableOps[A, CC, C]","d":"scala.collection","k":"trait","x":"Base trait for Seq operations\n"},
{"l":"api/scala/collection/SeqOps.html#+:-957","e":false,"i":"","n":"+:","t":"+:[B >: A](elem: B): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"Alias for prepended."},
{"l":"api/scala/collection/SeqOps.html#:+-957","e":false,"i":"","n":":+","t":":+[B >: A](elem: B): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"Alias for appended."},
{"l":"api/scala/collection/SeqOps.html#:++-1dd","e":false,"i":"","n":":++","t":":++[B >: A](suffix: IterableOnce[B]): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"Alias for appendedAll."},
{"l":"api/scala/collection/SeqOps.html#appended-957","e":false,"i":"","n":"appended","t":"appended[B >: A](elem: B): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"A copy of this sequence with an element appended."},
{"l":"api/scala/collection/SeqOps.html#appendedAll-1dd","e":false,"i":"","n":"appendedAll","t":"appendedAll[B >: A](suffix: IterableOnce[B]): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"Returns a new sequence containing the elements from the left hand operand followed by the elements from the\nright hand operand. The element type of the sequence is the most specific superclass encompassing\nthe element types of the two operands.\n"},
{"l":"api/scala/collection/SeqOps.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.SeqOps","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqOps.html#combinations-fffffbef","e":false,"i":"","n":"combinations","t":"combinations(n: Int): Iterator[C]","d":"scala.collection.SeqOps","k":"def","x":"Iterates over combinations of elements."},
{"l":"api/scala/collection/SeqOps.html#contains-e1c","e":false,"i":"","n":"contains","t":"contains[A1 >: A](elem: A1): Boolean","d":"scala.collection.SeqOps","k":"def","x":"Tests whether this sequence contains a given value as an element."},
{"l":"api/scala/collection/SeqOps.html#containsSlice-818","e":false,"i":"","n":"containsSlice","t":"containsSlice[B >: A](that: Seq[B]): Boolean","d":"scala.collection.SeqOps","k":"def","x":"Tests whether this sequence contains a given sequence as a slice."},
{"l":"api/scala/collection/SeqOps.html#corresponds-856","e":false,"i":"","n":"corresponds","t":"corresponds[B](that: Seq[B])(p: (A, B) => Boolean): Boolean","d":"scala.collection.SeqOps","k":"def","x":"Tests whether every element of this sequence relates to the\ncorresponding element of another sequence by satisfying a test predicate.\n"},
{"l":"api/scala/collection/SeqOps.html#diff-ddb","e":false,"i":"","n":"diff","t":"diff[B >: A](that: Seq[B]): C","d":"scala.collection.SeqOps","k":"def","x":"Computes the multiset difference between this sequence and another sequence.\n"},
{"l":"api/scala/collection/SeqOps.html#distinct-0","e":false,"i":"","n":"distinct","t":"distinct: C","d":"scala.collection.SeqOps","k":"def","x":"Selects all the elements of this sequence ignoring the duplicates.\n"},
{"l":"api/scala/collection/SeqOps.html#distinctBy-5d3","e":false,"i":"","n":"distinctBy","t":"distinctBy[B](f: A => B): C","d":"scala.collection.SeqOps","k":"def","x":"Selects all the elements of this sequence ignoring the duplicates as determined by == after applying\nthe transforming function f.\n"},
{"l":"api/scala/collection/SeqOps.html#endsWith-bd7","e":false,"i":"","n":"endsWith","t":"endsWith[B >: A](that: Iterable[B]): Boolean","d":"scala.collection.SeqOps","k":"def","x":"Tests whether this sequence ends with the given sequence."},
{"l":"api/scala/collection/SeqOps.html#findLast-94e","e":false,"i":"","n":"findLast","t":"findLast(p: A => Boolean): Option[A]","d":"scala.collection.SeqOps","k":"def","x":"Finds the last element of the sequence satisfying a predicate, if any."},
{"l":"api/scala/collection/SeqOps.html#indexOf-fffffaa4","e":false,"i":"","n":"indexOf","t":"indexOf[B >: A](elem: B, from: Int): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds index of first occurrence of some value in this sequence after or at some start index.\n"},
{"l":"api/scala/collection/SeqOps.html#indexOf-fffff3e3","e":false,"i":"","n":"indexOf","t":"indexOf[B >: A](elem: B): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds index of first occurrence of some value in this sequence.\n"},
{"l":"api/scala/collection/SeqOps.html#indexOfSlice-fffffe28","e":false,"i":"","n":"indexOfSlice","t":"indexOfSlice[B >: A](that: Seq[B], from: Int): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds first index after or at a start index where this sequence contains a given sequence as a slice."},
{"l":"api/scala/collection/SeqOps.html#indexOfSlice-bdf","e":false,"i":"","n":"indexOfSlice","t":"indexOfSlice[B >: A](that: Seq[B]): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds first index where this sequence contains a given sequence as a slice."},
{"l":"api/scala/collection/SeqOps.html#indexWhere-fffffe31","e":false,"i":"","n":"indexWhere","t":"indexWhere(p: A => Boolean, from: Int): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds index of the first element satisfying some predicate after or at some start index."},
{"l":"api/scala/collection/SeqOps.html#indexWhere-db6","e":false,"i":"","n":"indexWhere","t":"indexWhere(p: A => Boolean): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds index of the first element satisfying some predicate."},
{"l":"api/scala/collection/SeqOps.html#indices-0","e":false,"i":"","n":"indices","t":"indices: Range","d":"scala.collection.SeqOps","k":"def","x":"Produces the range of all indices of this sequence."},
{"l":"api/scala/collection/SeqOps.html#intersect-ddb","e":false,"i":"","n":"intersect","t":"intersect[B >: A](that: Seq[B]): C","d":"scala.collection.SeqOps","k":"def","x":"Computes the multiset intersection between this sequence and another sequence.\n"},
{"l":"api/scala/collection/SeqOps.html#isDefinedAt-ffffff99","e":false,"i":"","n":"isDefinedAt","t":"isDefinedAt(idx: Int): Boolean","d":"scala.collection.SeqOps","k":"def","x":"Tests whether this sequence contains given index."},
{"l":"api/scala/collection/SeqOps.html#lastIndexOf-fffffaa4","e":false,"i":"","n":"lastIndexOf","t":"lastIndexOf[B >: A](elem: B, end: Int): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds index of last occurrence of some value in this sequence before or at a given end index."},
{"l":"api/scala/collection/SeqOps.html#lastIndexOfSlice-fffffe28","e":false,"i":"","n":"lastIndexOfSlice","t":"lastIndexOfSlice[B >: A](that: Seq[B], end: Int): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds last index before or at a given end index where this sequence contains a given sequence as a slice."},
{"l":"api/scala/collection/SeqOps.html#lastIndexOfSlice-bdf","e":false,"i":"","n":"lastIndexOfSlice","t":"lastIndexOfSlice[B >: A](that: Seq[B]): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds last index where this sequence contains a given sequence as a slice."},
{"l":"api/scala/collection/SeqOps.html#lastIndexWhere-fffffe31","e":false,"i":"","n":"lastIndexWhere","t":"lastIndexWhere(p: A => Boolean, end: Int): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds index of last element satisfying some predicate before or at given end index."},
{"l":"api/scala/collection/SeqOps.html#lastIndexWhere-db6","e":false,"i":"","n":"lastIndexWhere","t":"lastIndexWhere(p: A => Boolean): Int","d":"scala.collection.SeqOps","k":"def","x":"Finds index of last element satisfying some predicate."},
{"l":"api/scala/collection/SeqOps.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqOps","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqOps.html#lengthCompare-fffffbe0","e":false,"i":"","n":"lengthCompare","t":"lengthCompare(len: Int): Int","d":"scala.collection.SeqOps","k":"def","x":"Compares the length of this sequence to a test value.\n"},
{"l":"api/scala/collection/SeqOps.html#lengthCompare-32d","e":false,"i":"","n":"lengthCompare","t":"lengthCompare(that: Iterable[_]): Int","d":"scala.collection.SeqOps","k":"def","x":"Compares the length of this sequence to the size of another Iterable.\n"},
{"l":"api/scala/collection/SeqOps.html#lengthIs-0","e":false,"i":"","n":"lengthIs","t":"lengthIs: SizeCompareOps","d":"scala.collection.SeqOps","k":"def","x":"Returns a value class containing operations for comparing the length of this sequence to a test value."},
{"l":"api/scala/collection/SeqOps.html#padTo-fffffb3c","e":false,"i":"","n":"padTo","t":"padTo[B >: A](len: Int, elem: B): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"A copy of this sequence with an element value appended until a given target length is reached.\n"},
{"l":"api/scala/collection/SeqOps.html#patch-fffffdd5","e":false,"i":"","n":"patch","t":"patch[B >: A](from: Int, other: IterableOnce[B], replaced: Int): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"Produces a new sequence where a slice of elements in this sequence is replaced by another sequence."},
{"l":"api/scala/collection/SeqOps.html#permutations-0","e":false,"i":"","n":"permutations","t":"permutations: Iterator[C]","d":"scala.collection.SeqOps","k":"def","x":"Iterates over distinct permutations of elements."},
{"l":"api/scala/collection/SeqOps.html#prefixLength-db6","e":false,"i":"","n":"prefixLength","t":"prefixLength(p: A => Boolean): Int","d":"scala.collection.SeqOps","k":"def","x":"Returns the length of the longest prefix whose elements all satisfy some predicate."},
{"l":"api/scala/collection/SeqOps.html#prepended-957","e":false,"i":"","n":"prepended","t":"prepended[B >: A](elem: B): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"A copy of the sequence with an element prepended."},
{"l":"api/scala/collection/SeqOps.html#prependedAll-1dd","e":false,"i":"","n":"prependedAll","t":"prependedAll[B >: A](prefix: IterableOnce[B]): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"As with :++, returns a new collection containing the elements from the left operand followed by the\nelements from the right operand."},
{"l":"api/scala/collection/SeqOps.html#reverse-0","e":false,"i":"","n":"reverse","t":"reverse: C","d":"scala.collection.SeqOps","k":"def","x":"Returns a new sequence with the elements of this sequence in reverse order."},
{"l":"api/scala/collection/SeqOps.html#reverseIterator-0","e":false,"i":"","n":"reverseIterator","t":"reverseIterator: Iterator[A]","d":"scala.collection.SeqOps","k":"def","x":"An iterator yielding the elements of this sequence in reverse order."},
{"l":"api/scala/collection/SeqOps.html#reverseMap-5d3","e":false,"i":"","n":"reverseMap","t":"reverseMap[B](f: A => B): CC[B]","d":"scala.collection.SeqOps","k":"def","x":""},
{"l":"api/scala/collection/SeqOps.html#sameElements-356","e":false,"i":"","n":"sameElements","t":"sameElements[B >: A](that: IterableOnce[B]): Boolean","d":"scala.collection.SeqOps","k":"def","x":"Tests whether the elements of this collection are the same (and in the same order)\nas those of that.\n"},
{"l":"api/scala/collection/SeqOps.html#search-aaf","e":false,"i":"","n":"search","t":"search[B >: A](elem: B)(implicit ord: Ordering[B]): SearchResult","d":"scala.collection.SeqOps","k":"def","x":"Searches this sorted sequence for a specific element. If the sequence is an\nIndexedSeq, a binary search is used. Otherwise, a linear search is used."},
{"l":"api/scala/collection/SeqOps.html#search-bcf","e":false,"i":"","n":"search","t":"search[B >: A](elem: B, from: Int, to: Int)(implicit ord: Ordering[B]): SearchResult","d":"scala.collection.SeqOps","k":"def","x":"Searches within an interval in this sorted sequence for a specific element. If this\nsequence is an IndexedSeq, a binary search is used. Otherwise, a linear search\nis used."},
{"l":"api/scala/collection/SeqOps.html#segmentLength-db6","e":false,"i":"","n":"segmentLength","t":"segmentLength(p: A => Boolean): Int","d":"scala.collection.SeqOps","k":"def","x":"Computes the length of the longest segment that starts from the first element\nand whose elements all satisfy some predicate."},
{"l":"api/scala/collection/SeqOps.html#segmentLength-fffffe31","e":false,"i":"","n":"segmentLength","t":"segmentLength(p: A => Boolean, from: Int): Int","d":"scala.collection.SeqOps","k":"def","x":"Computes the length of the longest segment that starts from some index\nand whose elements all satisfy some predicate."},
{"l":"api/scala/collection/SeqOps.html#sortBy-fffff0c5","e":false,"i":"","n":"sortBy","t":"sortBy[B](f: A => B)(implicit ord: Ordering[B]): C","d":"scala.collection.SeqOps","k":"def","x":"Sorts this sequence according to the Ordering which results from transforming\nan implicitly given Ordering with a transformation function."},
{"l":"api/scala/collection/SeqOps.html#sortWith-fffffa25","e":false,"i":"","n":"sortWith","t":"sortWith(lt: (A, A) => Boolean): C","d":"scala.collection.SeqOps","k":"def","x":"Sorts this sequence according to a comparison function."},
{"l":"api/scala/collection/SeqOps.html#sorted-ffffff34","e":false,"i":"","n":"sorted","t":"sorted[B >: A](implicit ord: Ordering[B]): C","d":"scala.collection.SeqOps","k":"def","x":"Sorts this sequence according to an Ordering."},
{"l":"api/scala/collection/SeqOps.html#startsWith-fffff863","e":false,"i":"","n":"startsWith","t":"startsWith[B >: A](that: IterableOnce[B], offset: Int): Boolean","d":"scala.collection.SeqOps","k":"def","x":"Tests whether this sequence contains the given sequence at a given index."},
{"l":"api/scala/collection/SeqOps.html#union-ddb","e":false,"i":"","n":"union","t":"union[B >: A](that: Seq[B]): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"Produces a new sequence which contains all elements of this sequence and also all elements of\na given sequence. xs union ys  is equivalent to xs ++ ys.\n"},
{"l":"api/scala/collection/SeqOps.html#updated-fffffb3c","e":false,"i":"","n":"updated","t":"updated[B >: A](index: Int, elem: B): CC[B]","d":"scala.collection.SeqOps","k":"def","x":"A copy of this sequence with one single replaced element."},
{"l":"api/scala/collection/SeqOps$.html#","e":false,"i":"","n":"SeqOps","t":"SeqOps","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SeqView.html#","e":false,"i":"","n":"SeqView","t":"SeqView[+A] extends SeqOps[A, View, View[A]], View[A]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/SeqView.html#appendedAll-fffff126","e":false,"i":"","n":"appendedAll","t":"appendedAll[B >: A](suffix: SomeSeqOps[B]): SeqView[B]","d":"scala.collection.SeqView","k":"def","x":""},
{"l":"api/scala/collection/SeqView.html#concat-fffff126","e":false,"i":"","n":"concat","t":"concat[B >: A](suffix: SomeSeqOps[B]): SeqView[B]","d":"scala.collection.SeqView","k":"def","x":""},
{"l":"api/scala/collection/SeqView.html#prependedAll-fffff126","e":false,"i":"","n":"prependedAll","t":"prependedAll[B >: A](prefix: SomeSeqOps[B]): SeqView[B]","d":"scala.collection.SeqView","k":"def","x":""},
{"l":"api/scala/collection/SeqView$.html#","e":false,"i":"","n":"SeqView","t":"SeqView","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SeqView$$Appended.html#","e":false,"i":"","n":"Appended","t":"Appended[+A](underlying: SomeSeqOps[A], elem: A) extends Appended[A], SeqView[A]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$Appended.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): A","d":"scala.collection.SeqView.Appended","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$Appended.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.Appended","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$Concat.html#","e":false,"i":"","n":"Concat","t":"Concat[A](prefix: SomeSeqOps[A], suffix: SomeSeqOps[A]) extends Concat[A], SeqView[A]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$Concat.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): A","d":"scala.collection.SeqView.Concat","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$Concat.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.Concat","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$Drop.html#","e":false,"i":"","n":"Drop","t":"Drop[A](underlying: SomeSeqOps[A], n: Int) extends Drop[A], SeqView[A]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$Drop.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.SeqView.Drop","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$Drop.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.Drop","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$DropRight.html#","e":false,"i":"","n":"DropRight","t":"DropRight[A](underlying: SomeSeqOps[A], n: Int) extends DropRight[A], SeqView[A]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$DropRight.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.SeqView.DropRight","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$DropRight.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.DropRight","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$Id.html#","e":false,"i":"","n":"Id","t":"Id[+A](underlying: SomeSeqOps[A]) extends AbstractSeqView[A]","d":"scala.collection.SeqView","k":"class","x":"A view that doesn’t apply any transformation to an underlying sequence"},
{"l":"api/scala/collection/SeqView$$Id.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): A","d":"scala.collection.SeqView.Id","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$Id.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.SeqView.Id","k":"def","x":"An scala.collection.Iterator over the elements of this sequence."},
{"l":"api/scala/collection/SeqView$$Id.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.Id","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$Map.html#","e":false,"i":"","n":"Map","t":"Map[+A, +B](underlying: SomeSeqOps[A], f: A => B) extends Map[A, B], SeqView[B]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$Map.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): B","d":"scala.collection.SeqView.Map","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$Map.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.Map","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$Prepended.html#","e":false,"i":"","n":"Prepended","t":"Prepended[+A](elem: A, underlying: SomeSeqOps[A]) extends Prepended[A], SeqView[A]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$Prepended.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): A","d":"scala.collection.SeqView.Prepended","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$Prepended.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.Prepended","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$Reverse.html#","e":false,"i":"","n":"Reverse","t":"Reverse[A](underlying: SomeSeqOps[A]) extends AbstractSeqView[A]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$Reverse.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.SeqView.Reverse","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$Reverse.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.SeqView.Reverse","k":"def","x":"An scala.collection.Iterator over the elements of this sequence."},
{"l":"api/scala/collection/SeqView$$Reverse.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.Reverse","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$Sorted.html#","e":false,"i":"","n":"Sorted","t":"Sorted[A, B >: A] extends SeqView[A]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$Sorted.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.SeqView.Sorted","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$Sorted.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.SeqView.Sorted","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/SeqView$$Sorted.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.Sorted","k":"def","x":"The length (number of elements) of the view. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$Sorted.html#<init>-e6c","e":false,"i":"","n":"this","t":"this(underlying: SomeSeqOps[A], ord: Ordering[B])","d":"scala.collection.SeqView.Sorted","k":"def","x":""},
{"l":"api/scala/collection/SeqView$$Take.html#","e":false,"i":"","n":"Take","t":"Take[+A](underlying: SomeSeqOps[A], n: Int) extends Take[A], SeqView[A]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$Take.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(idx: Int): A","d":"scala.collection.SeqView.Take","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$Take.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.Take","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/SeqView$$TakeRight.html#","e":false,"i":"","n":"TakeRight","t":"TakeRight[+A](underlying: SomeSeqOps[A], n: Int) extends TakeRight[A], SeqView[A]","d":"scala.collection.SeqView","k":"class","x":""},
{"l":"api/scala/collection/SeqView$$TakeRight.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.collection.SeqView.TakeRight","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/SeqView$$TakeRight.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.SeqView.TakeRight","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/Set.html#","e":false,"i":"","n":"Set","t":"Set[A] extends Iterable[A], SetOps[A, Set, Set[A]], Equals, IterableFactoryDefaults[A, Set]","d":"scala.collection","k":"trait","x":"Base trait for set collections.\n"},
{"l":"api/scala/collection/Set.html#canEqual-4ad","e":false,"i":"","n":"canEqual","t":"canEqual(that: Any): Boolean","d":"scala.collection.Set","k":"def","x":"Checks whether this instance can possibly equal that."},
{"l":"api/scala/collection/Set$.html#","e":false,"i":"","n":"Set","t":"Set extends Delegate[Set]","d":"scala.collection","k":"object","x":" This object provides a set of operations to create Iterable values."},
{"l":"api/scala/collection/SetOps.html#","e":false,"i":"","n":"SetOps","t":"SetOps[A, +CC[_], +C <: SetOps[A, CC, C]] extends IterableOps[A, CC, C], A => Boolean","d":"scala.collection","k":"trait","x":"Base trait for set operations"},
{"l":"api/scala/collection/SetOps.html#&-dde","e":false,"i":"","n":"&","t":"&(that: Set[A]): C","d":"scala.collection.SetOps","k":"def","x":"Alias for intersect"},
{"l":"api/scala/collection/SetOps.html#&~-dde","e":false,"i":"","n":"&~","t":"&~(that: Set[A]): C","d":"scala.collection.SetOps","k":"def","x":"Alias for diff"},
{"l":"api/scala/collection/SetOps.html#+-fffff2c5","e":false,"i":"","n":"+","t":"+(elem: A): C","d":"scala.collection.SetOps","k":"def","x":""},
{"l":"api/scala/collection/SetOps.html#+-fffff5c7","e":false,"i":"","n":"+","t":"+(elem1: A, elem2: A, elems: A*): C","d":"scala.collection.SetOps","k":"def","x":""},
{"l":"api/scala/collection/SetOps.html#++-fffff87d","e":false,"i":"","n":"++","t":"++(that: IterableOnce[A]): C","d":"scala.collection.SetOps","k":"def","x":"Alias for concat"},
{"l":"api/scala/collection/SetOps.html#--fffff2c5","e":false,"i":"","n":"-","t":"-(elem: A): C","d":"scala.collection.SetOps","k":"def","x":""},
{"l":"api/scala/collection/SetOps.html#--fffff5c7","e":false,"i":"","n":"-","t":"-(elem1: A, elem2: A, elems: A*): C","d":"scala.collection.SetOps","k":"def","x":""},
{"l":"api/scala/collection/SetOps.html#---fffff87d","e":false,"i":"","n":"--","t":"--(that: IterableOnce[A]): C","d":"scala.collection.SetOps","k":"def","x":""},
{"l":"api/scala/collection/SetOps.html#apply-4ad","e":false,"i":"","n":"apply","t":"apply(elem: A): Boolean","d":"scala.collection.SetOps","k":"def","x":"Tests if some element is contained in this set."},
{"l":"api/scala/collection/SetOps.html#concat-fffff87d","e":false,"i":"","n":"concat","t":"concat(that: IterableOnce[A]): C","d":"scala.collection.SetOps","k":"def","x":"Creates a new set by adding all elements contained in another collection to this set, omitting duplicates."},
{"l":"api/scala/collection/SetOps.html#contains-4ad","e":false,"i":"","n":"contains","t":"contains(elem: A): Boolean","d":"scala.collection.SetOps","k":"def","x":""},
{"l":"api/scala/collection/SetOps.html#diff-dde","e":false,"i":"","n":"diff","t":"diff(that: Set[A]): C","d":"scala.collection.SetOps","k":"def","x":"Computes the difference of this set and another set.\n"},
{"l":"api/scala/collection/SetOps.html#intersect-dde","e":false,"i":"","n":"intersect","t":"intersect(that: Set[A]): C","d":"scala.collection.SetOps","k":"def","x":"Computes the intersection between this set and another set.\n"},
{"l":"api/scala/collection/SetOps.html#subsetOf-b06","e":false,"i":"","n":"subsetOf","t":"subsetOf(that: Set[A]): Boolean","d":"scala.collection.SetOps","k":"def","x":"Tests whether this set is a subset of another set.\n"},
{"l":"api/scala/collection/SetOps.html#subsets-fffffbef","e":false,"i":"","n":"subsets","t":"subsets(len: Int): Iterator[C]","d":"scala.collection.SetOps","k":"def","x":"An iterator over all subsets of this set of the given size.\nIf the requested size is impossible, an empty iterator is returned.\n"},
{"l":"api/scala/collection/SetOps.html#subsets-fffff136","e":false,"i":"","n":"subsets","t":"subsets(): Iterator[C]","d":"scala.collection.SetOps","k":"def","x":"An iterator over all subsets of this set.\n"},
{"l":"api/scala/collection/SetOps.html#union-dde","e":false,"i":"","n":"union","t":"union(that: Set[A]): C","d":"scala.collection.SetOps","k":"def","x":"Computes the union between of set and another set.\n"},
{"l":"api/scala/collection/SetOps.html#|-dde","e":false,"i":"","n":"|","t":"|(that: Set[A]): C","d":"scala.collection.SetOps","k":"def","x":"Alias for union"},
{"l":"api/scala/collection/SortedIterableFactory.html#","e":false,"i":"","n":"SortedIterableFactory","t":"SortedIterableFactory[+CC[_]] extends EvidenceIterableFactory[CC, Ordering]","d":"scala.collection","k":"trait","x":"Base trait for companion objects of collections that require an implicit Ordering."},
{"l":"api/scala/collection/SortedIterableFactory$.html#","e":false,"i":"","n":"SortedIterableFactory","t":"SortedIterableFactory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SortedIterableFactory$$Delegate.html#","e":false,"i":"","n":"Delegate","t":"Delegate[CC[_]](delegate: EvidenceIterableFactory[CC, Ordering]) extends Delegate[CC, Ordering], SortedIterableFactory[CC]","d":"scala.collection.SortedIterableFactory","k":"class","x":""},
{"l":"api/scala/collection/SortedMap.html#","e":false,"i":"","n":"SortedMap","t":"SortedMap[K, +V] extends Map[K, V], SortedMapOps[K, V, SortedMap, SortedMap[K, V]], SortedMapFactoryDefaults[K, V, SortedMap, Iterable, Map]","d":"scala.collection","k":"trait","x":"A Map whose keys are sorted according to a scala.math.Ordering"},
{"l":"api/scala/collection/SortedMap.html#sortedMapFactory-0","e":false,"i":"","n":"sortedMapFactory","t":"sortedMapFactory: SortedMapFactory[SortedMap]","d":"scala.collection.SortedMap","k":"def","x":"The companion object of this sorted map, providing various factory methods.\n"},
{"l":"api/scala/collection/SortedMap.html#unsorted-0","e":false,"i":"","n":"unsorted","t":"unsorted: Map[K, V]","d":"scala.collection.SortedMap","k":"def","x":""},
{"l":"api/scala/collection/SortedMap$.html#","e":false,"i":"","n":"SortedMap","t":"SortedMap extends Delegate[SortedMap]","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SortedMapFactory.html#","e":false,"i":"","n":"SortedMapFactory","t":"SortedMapFactory[+CC[_, _]] extends Serializable","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/SortedMapFactory.html#apply-908","e":false,"i":"","n":"apply","t":"apply[K : Ordering, V](elems: (K, V)*): CC[K, V]","d":"scala.collection.SortedMapFactory","k":"def","x":""},
{"l":"api/scala/collection/SortedMapFactory.html#empty-793","e":false,"i":"","n":"empty","t":"empty[K : Ordering, V]: CC[K, V]","d":"scala.collection.SortedMapFactory","k":"def","x":""},
{"l":"api/scala/collection/SortedMapFactory.html#from-fffffc7c","e":false,"i":"","n":"from","t":"from[K : Ordering, V](it: IterableOnce[(K, V)]): CC[K, V]","d":"scala.collection.SortedMapFactory","k":"def","x":""},
{"l":"api/scala/collection/SortedMapFactory.html#newBuilder-fffff50b","e":false,"i":"","n":"newBuilder","t":"newBuilder[K : Ordering, V]: Builder[(K, V), CC[K, V]]","d":"scala.collection.SortedMapFactory","k":"def","x":""},
{"l":"api/scala/collection/SortedMapFactory.html#sortedMapFactory-fffffd42","e":false,"i":"","n":"sortedMapFactory","t":"sortedMapFactory[K : Ordering, V]: Factory[(K, V), CC[K, V]]","d":"scala.collection.SortedMapFactory","k":"def","x":""},
{"l":"api/scala/collection/SortedMapFactory$.html#","e":false,"i":"","n":"SortedMapFactory","t":"SortedMapFactory","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SortedMapFactory$.html#toBuildFrom-6c2","e":false,"i":"","n":"toBuildFrom","t":"toBuildFrom[K : Ordering, V, CC[_, _]](factory: SortedMapFactory[CC]): BuildFrom[Any, (K, V), CC[K, V]]","d":"scala.collection.SortedMapFactory","k":"def","x":""},
{"l":"api/scala/collection/SortedMapFactory$.html#toFactory-714","e":false,"i":"","n":"toFactory","t":"toFactory[K : Ordering, V, CC[_, _]](factory: SortedMapFactory[CC]): Factory[(K, V), CC[K, V]]","d":"scala.collection.SortedMapFactory","k":"def","x":"Implicit conversion that fixes the key and value types of factory to K and V,\nrespectively.\n"},
{"l":"api/scala/collection/SortedMapFactory$$Delegate.html#","e":false,"i":"","n":"Delegate","t":"Delegate[CC[_, _]](delegate: SortedMapFactory[CC]) extends SortedMapFactory[CC]","d":"scala.collection.SortedMapFactory","k":"class","x":""},
{"l":"api/scala/collection/SortedMapFactory$$Delegate.html#empty-793","e":false,"i":"","n":"empty","t":"empty[K : Ordering, V]: CC[K, V]","d":"scala.collection.SortedMapFactory.Delegate","k":"def","x":""},
{"l":"api/scala/collection/SortedMapFactory$$Delegate.html#from-fffffc7c","e":false,"i":"","n":"from","t":"from[K : Ordering, V](it: IterableOnce[(K, V)]): CC[K, V]","d":"scala.collection.SortedMapFactory.Delegate","k":"def","x":""},
{"l":"api/scala/collection/SortedMapFactory$$Delegate.html#newBuilder-fffff50b","e":false,"i":"","n":"newBuilder","t":"newBuilder[K : Ordering, V]: Builder[(K, V), CC[K, V]]","d":"scala.collection.SortedMapFactory.Delegate","k":"def","x":""},
{"l":"api/scala/collection/SortedMapFactoryDefaults.html#","e":false,"i":"","n":"SortedMapFactoryDefaults","t":"SortedMapFactoryDefaults[K, +V, +CC <: ([x, y] =>> Map[x, y] & SortedMapOps[x, y, CC, CC[x, y]] & UnsortedCC[x, y]), +WithFilterCC <: ([x] =>> IterableOps[x, WithFilterCC, WithFilterCC[x]] & Iterable[x]), +UnsortedCC <: (Map)] extends SortedMapOps[K, V, CC, CC[K, V]], MapOps[K, V, UnsortedCC, CC[K, V]]","d":"scala.collection","k":"trait","x":"This trait provides default implementations for the factory methods fromSpecific and\nnewSpecificBuilder that need to be refined when implementing a collection type that refines\nthe CC and C type parameters. It is used for sorted maps."},
{"l":"api/scala/collection/SortedMapOps.html#","e":false,"i":"","n":"SortedMapOps","t":"SortedMapOps[K, +V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, _]), +C <: SortedMapOps[K, V, CC, C]] extends MapOps[K, V, Map, C], SortedOps[K, C]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/SortedMapOps.html#collect-fffff267","e":false,"i":"","n":"collect","t":"collect[K2, V2](pf: PartialFunction[(K, V), (K2, V2)])(implicit ordering: Ordering[K2]): CC[K2, V2]","d":"scala.collection.SortedMapOps","k":"def","x":"Builds a new sorted map by applying a partial function to all elements of this map\non which the function is defined.\n"},
{"l":"api/scala/collection/SortedMapOps.html#firstKey-0","e":false,"i":"","n":"firstKey","t":"firstKey: K","d":"scala.collection.SortedMapOps","k":"def","x":"Returns the first key of the collection."},
{"l":"api/scala/collection/SortedMapOps.html#flatMap-307","e":false,"i":"","n":"flatMap","t":"flatMap[K2, V2](f: ((K, V)) => IterableOnce[(K2, V2)])(implicit ordering: Ordering[K2]): CC[K2, V2]","d":"scala.collection.SortedMapOps","k":"def","x":"Builds a new sorted map by applying a function to all elements of this map\nand using the elements of the resulting collections.\n"},
{"l":"api/scala/collection/SortedMapOps.html#iteratorFrom-303","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: K): Iterator[(K, V)]","d":"scala.collection.SortedMapOps","k":"def","x":"Creates an iterator over all the key/value pairs\ncontained in this map having a key greater than or\nequal to start according to the ordering of\nthis map. x.iteratorFrom(y) is equivalent\nto but often more efficient than x.from(y).iterator.\n"},
{"l":"api/scala/collection/SortedMapOps.html#keysIteratorFrom-303","e":false,"i":"","n":"keysIteratorFrom","t":"keysIteratorFrom(start: K): Iterator[K]","d":"scala.collection.SortedMapOps","k":"def","x":"Creates an iterator over all the keys(or elements)  contained in this\ncollection greater than or equal to start\naccording to the ordering of this collection. x.keysIteratorFrom(y)\nis equivalent to but often more efficient than\nx.from(y).keysIterator.\n"},
{"l":"api/scala/collection/SortedMapOps.html#lastKey-0","e":false,"i":"","n":"lastKey","t":"lastKey: K","d":"scala.collection.SortedMapOps","k":"def","x":"Returns the last key of the collection."},
{"l":"api/scala/collection/SortedMapOps.html#map-307","e":false,"i":"","n":"map","t":"map[K2, V2](f: ((K, V)) => (K2, V2))(implicit ordering: Ordering[K2]): CC[K2, V2]","d":"scala.collection.SortedMapOps","k":"def","x":"Builds a new sorted map by applying a function to all elements of this map.\n"},
{"l":"api/scala/collection/SortedMapOps.html#maxBefore-fffffb50","e":false,"i":"","n":"maxBefore","t":"maxBefore(key: K): Option[(K, V)]","d":"scala.collection.SortedMapOps","k":"def","x":"Find the element with largest key less than a given key."},
{"l":"api/scala/collection/SortedMapOps.html#minAfter-fffffb50","e":false,"i":"","n":"minAfter","t":"minAfter(key: K): Option[(K, V)]","d":"scala.collection.SortedMapOps","k":"def","x":"Find the element with smallest key larger than or equal to a given key."},
{"l":"api/scala/collection/SortedMapOps.html#rangeTo-8e8","e":false,"i":"","n":"rangeTo","t":"rangeTo(to: K): C","d":"scala.collection.SortedMapOps","k":"def","x":"Create a range projection of this collection with no lower-bound."},
{"l":"api/scala/collection/SortedMapOps.html#sortedMapFactory-0","e":false,"i":"","n":"sortedMapFactory","t":"sortedMapFactory: SortedMapFactory[CC]","d":"scala.collection.SortedMapOps","k":"def","x":"The companion object of this sorted map, providing various factory methods.\n"},
{"l":"api/scala/collection/SortedMapOps.html#unsorted-0","e":false,"i":"","n":"unsorted","t":"unsorted: Map[K, V]","d":"scala.collection.SortedMapOps","k":"def","x":""},
{"l":"api/scala/collection/SortedMapOps.html#valuesIteratorFrom-303","e":false,"i":"","n":"valuesIteratorFrom","t":"valuesIteratorFrom(start: K): Iterator[V]","d":"scala.collection.SortedMapOps","k":"def","x":"Creates an iterator over all the values contained in this\nmap that are associated with a key greater than or equal to start\naccording to the ordering of this map. x.valuesIteratorFrom(y) is\nequivalent to but often more efficient than\nx.from(y).valuesIterator.\n"},
{"l":"api/scala/collection/SortedMapOps$.html#","e":false,"i":"","n":"SortedMapOps","t":"SortedMapOps","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SortedMapOps$$WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter[K, +V, +IterableCC[_], +MapCC <: (Map), +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, _])](self: SortedMapOps[K, V, CC, _] & MapOps[K, V, MapCC, _] & IterableOps[(K, V), IterableCC, _], p: ((K, V)) => Boolean) extends WithFilter[K, V, IterableCC, MapCC]","d":"scala.collection.SortedMapOps","k":"class","x":"Specializes MapWithFilter for sorted Map collections"},
{"l":"api/scala/collection/SortedMapOps$$WithFilter.html#flatMap-307","e":false,"i":"","n":"flatMap","t":"flatMap[K2 : Ordering, V2](f: ((K, V)) => IterableOnce[(K2, V2)]): CC[K2, V2]","d":"scala.collection.SortedMapOps.WithFilter","k":"def","x":""},
{"l":"api/scala/collection/SortedMapOps$$WithFilter.html#map-307","e":false,"i":"","n":"map","t":"map[K2 : Ordering, V2](f: ((K, V)) => (K2, V2)): CC[K2, V2]","d":"scala.collection.SortedMapOps.WithFilter","k":"def","x":""},
{"l":"api/scala/collection/SortedOps.html#","e":false,"i":"","n":"SortedOps","t":"SortedOps[A, +C]","d":"scala.collection","k":"trait","x":"Base trait for sorted collections"},
{"l":"api/scala/collection/SortedOps.html#compare-cc1","e":false,"i":"","n":"compare","t":"compare(k0: A, k1: A): Int","d":"scala.collection.SortedOps","k":"def","x":"Comparison function that orders keys."},
{"l":"api/scala/collection/SortedOps.html#firstKey-0","e":false,"i":"","n":"firstKey","t":"firstKey: A","d":"scala.collection.SortedOps","k":"def","x":"Returns the first key of the collection."},
{"l":"api/scala/collection/SortedOps.html#from-d26","e":false,"i":"","n":"from","t":"from(from: A): C","d":"scala.collection.SortedOps","k":"def","x":"Creates a ranged projection of this collection with no upper-bound.\n"},
{"l":"api/scala/collection/SortedOps.html#lastKey-0","e":false,"i":"","n":"lastKey","t":"lastKey: A","d":"scala.collection.SortedOps","k":"def","x":"Returns the last key of the collection."},
{"l":"api/scala/collection/SortedOps.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[A]","d":"scala.collection.SortedOps","k":"def","x":""},
{"l":"api/scala/collection/SortedOps.html#range-fffffab9","e":false,"i":"","n":"range","t":"range(from: A, until: A): C","d":"scala.collection.SortedOps","k":"def","x":"Creates a ranged projection of this collection with both a lower-bound\nand an upper-bound.\n"},
{"l":"api/scala/collection/SortedOps.html#rangeFrom-d26","e":false,"i":"","n":"rangeFrom","t":"rangeFrom(from: A): C","d":"scala.collection.SortedOps","k":"def","x":"Creates a ranged projection of this collection with no upper-bound.\n"},
{"l":"api/scala/collection/SortedOps.html#rangeImpl-fffffe8d","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[A], until: Option[A]): C","d":"scala.collection.SortedOps","k":"def","x":"Creates a ranged projection of this collection. Any mutations in the\nranged projection will update this collection and vice versa."},
{"l":"api/scala/collection/SortedOps.html#rangeTo-d26","e":false,"i":"","n":"rangeTo","t":"rangeTo(to: A): C","d":"scala.collection.SortedOps","k":"def","x":"Create a range projection of this collection with no lower-bound."},
{"l":"api/scala/collection/SortedOps.html#rangeUntil-d26","e":false,"i":"","n":"rangeUntil","t":"rangeUntil(until: A): C","d":"scala.collection.SortedOps","k":"def","x":"Creates a ranged projection of this collection with no lower-bound.\n"},
{"l":"api/scala/collection/SortedOps.html#to-d26","e":false,"i":"","n":"to","t":"to(to: A): C","d":"scala.collection.SortedOps","k":"def","x":"Create a range projection of this collection with no lower-bound."},
{"l":"api/scala/collection/SortedOps.html#until-d26","e":false,"i":"","n":"until","t":"until(until: A): C","d":"scala.collection.SortedOps","k":"def","x":"Creates a ranged projection of this collection with no lower-bound.\n"},
{"l":"api/scala/collection/SortedSet.html#","e":false,"i":"","n":"SortedSet","t":"SortedSet[A] extends Set[A], SortedSetOps[A, SortedSet, SortedSet[A]], SortedSetFactoryDefaults[A, SortedSet, Set]","d":"scala.collection","k":"trait","x":"Base type of sorted sets"},
{"l":"api/scala/collection/SortedSet.html#sortedIterableFactory-0","e":false,"i":"","n":"sortedIterableFactory","t":"sortedIterableFactory: SortedIterableFactory[SortedSet]","d":"scala.collection.SortedSet","k":"def","x":"The companion object of this sorted set, providing various factory methods.\n"},
{"l":"api/scala/collection/SortedSet.html#unsorted-0","e":false,"i":"","n":"unsorted","t":"unsorted: Set[A]","d":"scala.collection.SortedSet","k":"def","x":""},
{"l":"api/scala/collection/SortedSet$.html#","e":false,"i":"","n":"SortedSet","t":"SortedSet extends Delegate[SortedSet]","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SortedSetFactoryDefaults.html#","e":false,"i":"","n":"SortedSetFactoryDefaults","t":"SortedSetFactoryDefaults[+A, +CC <: ([X] =>> SortedSet[X] & SortedSetOps[X, CC, CC[X]]), +WithFilterCC <: ([x] =>> IterableOps[x, WithFilterCC, WithFilterCC[x]] & Set[x])] extends SortedSetOps[A, CC, CC[A]]","d":"scala.collection","k":"trait","x":"This trait provides default implementations for the factory methods fromSpecific and\nnewSpecificBuilder that need to be refined when implementing a collection type that refines\nthe CC and C type parameters. It is used for sorted sets."},
{"l":"api/scala/collection/SortedSetOps.html#","e":false,"i":"","n":"SortedSetOps","t":"SortedSetOps[A, +CC <: (SortedSet), +C <: SortedSetOps[A, CC, C]] extends SetOps[A, Set, C], SortedOps[A, C]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/SortedSetOps.html#collect-fffff96f","e":false,"i":"","n":"collect","t":"collect[B](pf: PartialFunction[A, B])(implicit ev: Ordering[B]): CC[B]","d":"scala.collection.SortedSetOps","k":"def","x":"Builds a new sorted collection by applying a partial function to all elements of this set\non which the function is defined.\n"},
{"l":"api/scala/collection/SortedSetOps.html#firstKey-0","e":false,"i":"","n":"firstKey","t":"firstKey: A","d":"scala.collection.SortedSetOps","k":"def","x":"Returns the first key of the collection."},
{"l":"api/scala/collection/SortedSetOps.html#flatMap-d4f","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: A => IterableOnce[B])(implicit ev: Ordering[B]): CC[B]","d":"scala.collection.SortedSetOps","k":"def","x":"Builds a new sorted collection by applying a function to all elements of this set\nand using the elements of the resulting collections.\n"},
{"l":"api/scala/collection/SortedSetOps.html#iteratorFrom-303","e":false,"i":"","n":"iteratorFrom","t":"iteratorFrom(start: A): Iterator[A]","d":"scala.collection.SortedSetOps","k":"def","x":"Creates an iterator that contains all values from this collection\ngreater than or equal to start according to the ordering of\nthis collection. x.iteratorFrom(y) is equivalent to but will usually\nbe more efficient than x.from(y).iterator\n"},
{"l":"api/scala/collection/SortedSetOps.html#keysIteratorFrom-303","e":false,"i":"","n":"keysIteratorFrom","t":"keysIteratorFrom(start: A): Iterator[A]","d":"scala.collection.SortedSetOps","k":"def","x":""},
{"l":"api/scala/collection/SortedSetOps.html#lastKey-0","e":false,"i":"","n":"lastKey","t":"lastKey: A","d":"scala.collection.SortedSetOps","k":"def","x":"Returns the last key of the collection."},
{"l":"api/scala/collection/SortedSetOps.html#map-d4f","e":false,"i":"","n":"map","t":"map[B](f: A => B)(implicit ev: Ordering[B]): CC[B]","d":"scala.collection.SortedSetOps","k":"def","x":"Builds a new sorted collection by applying a function to all elements of this set.\n"},
{"l":"api/scala/collection/SortedSetOps.html#maxBefore-fffffb50","e":false,"i":"","n":"maxBefore","t":"maxBefore(key: A): Option[A]","d":"scala.collection.SortedSetOps","k":"def","x":"Find the largest element less than a given key."},
{"l":"api/scala/collection/SortedSetOps.html#minAfter-fffffb50","e":false,"i":"","n":"minAfter","t":"minAfter(key: A): Option[A]","d":"scala.collection.SortedSetOps","k":"def","x":"Find the smallest element larger than or equal to a given key."},
{"l":"api/scala/collection/SortedSetOps.html#rangeTo-c22","e":false,"i":"","n":"rangeTo","t":"rangeTo(to: A): C","d":"scala.collection.SortedSetOps","k":"def","x":"Create a range projection of this collection with no lower-bound."},
{"l":"api/scala/collection/SortedSetOps.html#sortedIterableFactory-0","e":false,"i":"","n":"sortedIterableFactory","t":"sortedIterableFactory: SortedIterableFactory[CC]","d":"scala.collection.SortedSetOps","k":"def","x":"The companion object of this sorted set, providing various factory methods.\n"},
{"l":"api/scala/collection/SortedSetOps.html#unsorted-0","e":false,"i":"","n":"unsorted","t":"unsorted: Set[A]","d":"scala.collection.SortedSetOps","k":"def","x":""},
{"l":"api/scala/collection/SortedSetOps.html#zip-fffff585","e":false,"i":"","n":"zip","t":"zip[B](that: IterableOnce[B])(implicit ev: Ordering[(A, B)]): CC[(A, B)]","d":"scala.collection.SortedSetOps","k":"def","x":"Returns a set formed from this set and another iterable collection\nby combining corresponding elements in pairs.\nIf one of the two collections is longer than the other, its remaining elements are ignored.\n"},
{"l":"api/scala/collection/SortedSetOps$.html#","e":false,"i":"","n":"SortedSetOps","t":"SortedSetOps","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/SortedSetOps$$WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter[+A, +IterableCC[_], +CC <: (SortedSet)](self: SortedSetOps[A, CC, _] & IterableOps[A, IterableCC, _], p: A => Boolean) extends WithFilter[A, IterableCC]","d":"scala.collection.SortedSetOps","k":"class","x":"Specialize WithFilter for sorted collections"},
{"l":"api/scala/collection/SortedSetOps$$WithFilter.html#flatMap-d4f","e":false,"i":"","n":"flatMap","t":"flatMap[B : Ordering](f: A => IterableOnce[B]): CC[B]","d":"scala.collection.SortedSetOps.WithFilter","k":"def","x":""},
{"l":"api/scala/collection/SortedSetOps$$WithFilter.html#map-d4f","e":false,"i":"","n":"map","t":"map[B : Ordering](f: A => B): CC[B]","d":"scala.collection.SortedSetOps.WithFilter","k":"def","x":""},
{"l":"api/scala/collection/SpecificIterableFactory.html#","e":false,"i":"","n":"SpecificIterableFactory","t":"SpecificIterableFactory[-A, +C] extends Factory[A, C]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/SpecificIterableFactory.html#apply-dbe","e":false,"i":"","n":"apply","t":"apply(xs: A*): C","d":"scala.collection.SpecificIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/SpecificIterableFactory.html#empty-0","e":false,"i":"","n":"empty","t":"empty: C","d":"scala.collection.SpecificIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/SpecificIterableFactory.html#fill-fffffa1c","e":false,"i":"","n":"fill","t":"fill(n: Int)(elem: => A): C","d":"scala.collection.SpecificIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/SpecificIterableFactory.html#newBuilder-0","e":false,"i":"","n":"newBuilder","t":"newBuilder: Builder[A, C]","d":"scala.collection.SpecificIterableFactory","k":"def","x":"Get a Builder for the collection. For non-strict collection types this will use an intermediate buffer.\nBuilding collections with fromSpecific is preferred because it can be lazy for lazy collections."},
{"l":"api/scala/collection/SpecificIterableFactory.html#specificIterableFactory-0","e":false,"i":"","n":"specificIterableFactory","t":"specificIterableFactory: Factory[A, C]","d":"scala.collection.SpecificIterableFactory","k":"def","x":""},
{"l":"api/scala/collection/Stepper.html#","e":false,"i":"","n":"Stepper","t":"Stepper[+A]","d":"scala.collection","k":"trait","x":"Steppers exist to enable creating Java streams over Scala collections, see\nscala.jdk.StreamConverters. Besides that use case, they allow iterating over collections\nholding unboxed primitives (e.g., Array[Int]) without boxing the elements."},
{"l":"api/scala/collection/Stepper.html#characteristics-0","e":false,"i":"","n":"characteristics","t":"characteristics: Int","d":"scala.collection.Stepper","k":"def","x":"Returns a set of characteristics of this Stepper and its elements. See method\ncharacteristics in java.util.Spliterator.\n"},
{"l":"api/scala/collection/Stepper.html#estimateSize-0","e":false,"i":"","n":"estimateSize","t":"estimateSize: Long","d":"scala.collection.Stepper","k":"def","x":"Returns an estimate of the number of elements of this Stepper, or Long.MaxValue. See\nmethod estimateSize in java.util.Spliterator.\n"},
{"l":"api/scala/collection/Stepper.html#hasStep-0","e":false,"i":"","n":"hasStep","t":"hasStep: Boolean","d":"scala.collection.Stepper","k":"def","x":"Check if there's an element available."},
{"l":"api/scala/collection/Stepper.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.Stepper","k":"def","x":"Returns an Iterator corresponding to this Stepper. Note that Iterators corresponding to\nprimitive Steppers box the elements.\n"},
{"l":"api/scala/collection/Stepper.html#javaIterator-81f","e":false,"i":"","n":"javaIterator","t":"javaIterator[B >: A]: Iterator[_]","d":"scala.collection.Stepper","k":"def","x":"Returns a Java java.util.Iterator corresponding to this Stepper."},
{"l":"api/scala/collection/Stepper.html#nextStep-993","e":false,"i":"","n":"nextStep","t":"nextStep(): A","d":"scala.collection.Stepper","k":"def","x":"Return the next element and advance the stepper"},
{"l":"api/scala/collection/Stepper.html#spliterator-fffffdcc","e":false,"i":"","n":"spliterator","t":"spliterator[B >: A]: Spliterator[_]","d":"scala.collection.Stepper","k":"def","x":"Returns a java.util.Spliterator corresponding to this Stepper."},
{"l":"api/scala/collection/Stepper.html#trySplit-509","e":false,"i":"","n":"trySplit","t":"trySplit(): Stepper[A]","d":"scala.collection.Stepper","k":"def","x":"Split this stepper, if applicable. The elements of the current Stepper are split up between\nthe resulting Stepper and the current stepper."},
{"l":"api/scala/collection/Stepper$.html#","e":false,"i":"","n":"Stepper","t":"Stepper","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/Stepper$$EfficientSplit.html#","e":false,"i":"","n":"EfficientSplit","t":"EfficientSplit","d":"scala.collection.Stepper","k":"trait","x":"A marker trait that indicates that a Stepper can call trySplit with at worst O(log N) time\nand space complexity, and that the division is likely to be reasonably even. Steppers marked\nwith EfficientSplit can be converted to parallel streams with the asJavaParStream method\ndefined in scala.jdk.StreamConverters.\n"},
{"l":"api/scala/collection/StepperShape.html#","e":false,"i":"","n":"StepperShape","t":"StepperShape[-T, S <: Stepper[_]]","d":"scala.collection","k":"trait","x":"An implicit StepperShape instance is used in the IterableOnce.stepper to return a possibly\nspecialized Stepper S according to the element type T.\n"},
{"l":"api/scala/collection/StepperShape.html#parUnbox-fffff816","e":false,"i":"","n":"parUnbox","t":"parUnbox(st: AnyStepper[T] & EfficientSplit): S & EfficientSplit","d":"scala.collection.StepperShape","k":"def","x":"Create an unboxing primitive parallel (i.e. with EfficientSplit) Stepper from a boxed AnyStepper.\nThis is an identity operation for reference shapes."},
{"l":"api/scala/collection/StepperShape.html#seqUnbox-fffff816","e":false,"i":"","n":"seqUnbox","t":"seqUnbox(st: AnyStepper[T]): S","d":"scala.collection.StepperShape","k":"def","x":"Create an unboxing primitive sequential Stepper from a boxed AnyStepper.\nThis is an identity operation for reference shapes."},
{"l":"api/scala/collection/StepperShape.html#shape-0","e":false,"i":"","n":"shape","t":"shape: Shape","d":"scala.collection.StepperShape","k":"def","x":"Return the Int constant (as defined in the StepperShape companion object) for this StepperShape."},
{"l":"api/scala/collection/StepperShape$.html#","e":false,"i":"","n":"StepperShape","t":"StepperShape extends StepperShapeLowPriority1","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/StepperShape$.html#ByteShape-0","e":false,"i":"","n":"ByteShape","t":"ByteShape: Shape","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#CharShape-0","e":false,"i":"","n":"CharShape","t":"CharShape: Shape","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#DoubleShape-0","e":false,"i":"","n":"DoubleShape","t":"DoubleShape: Shape","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#FloatShape-0","e":false,"i":"","n":"FloatShape","t":"FloatShape: Shape","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#IntShape-0","e":false,"i":"","n":"IntShape","t":"IntShape: Shape","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#LongShape-0","e":false,"i":"","n":"LongShape","t":"LongShape: Shape","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#ReferenceShape-0","e":false,"i":"","n":"ReferenceShape","t":"ReferenceShape: Shape","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#ShortShape-0","e":false,"i":"","n":"ShortShape","t":"ShortShape: Shape","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#byteStepperShape-0","e":false,"i":"","n":"byteStepperShape","t":"byteStepperShape: StepperShape[Byte, IntStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#charStepperShape-0","e":false,"i":"","n":"charStepperShape","t":"charStepperShape: StepperShape[Char, IntStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#doubleStepperShape-0","e":false,"i":"","n":"doubleStepperShape","t":"doubleStepperShape: StepperShape[Double, DoubleStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#floatStepperShape-0","e":false,"i":"","n":"floatStepperShape","t":"floatStepperShape: StepperShape[Float, DoubleStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#intStepperShape-0","e":false,"i":"","n":"intStepperShape","t":"intStepperShape: StepperShape[Int, IntStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#jByteStepperShape-0","e":false,"i":"","n":"jByteStepperShape","t":"jByteStepperShape: StepperShape[Byte, IntStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#jCharacterStepperShape-0","e":false,"i":"","n":"jCharacterStepperShape","t":"jCharacterStepperShape: StepperShape[Character, IntStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#jDoubleStepperShape-0","e":false,"i":"","n":"jDoubleStepperShape","t":"jDoubleStepperShape: StepperShape[Double, DoubleStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#jFloatStepperShape-0","e":false,"i":"","n":"jFloatStepperShape","t":"jFloatStepperShape: StepperShape[Float, DoubleStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#jIntegerStepperShape-0","e":false,"i":"","n":"jIntegerStepperShape","t":"jIntegerStepperShape: StepperShape[Integer, IntStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#jLongStepperShape-0","e":false,"i":"","n":"jLongStepperShape","t":"jLongStepperShape: StepperShape[Long, LongStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#jShortStepperShape-0","e":false,"i":"","n":"jShortStepperShape","t":"jShortStepperShape: StepperShape[Short, IntStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#longStepperShape-0","e":false,"i":"","n":"longStepperShape","t":"longStepperShape: StepperShape[Long, LongStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$.html#shortStepperShape-0","e":false,"i":"","n":"shortStepperShape","t":"shortStepperShape: StepperShape[Short, IntStepper]","d":"scala.collection.StepperShape","k":"val","x":""},
{"l":"api/scala/collection/StepperShape$$Shape.html#","e":false,"i":"","n":"Shape","t":"Shape extends AnyVal","d":"scala.collection.StepperShape","k":"class","x":""},
{"l":"api/scala/collection/StepperShapeLowPriority1.html#","e":false,"i":"","n":"StepperShapeLowPriority1","t":"StepperShapeLowPriority1 extends StepperShapeLowPriority2","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/StepperShapeLowPriority1.html#anyStepperShape-187","e":false,"i":"","n":"anyStepperShape","t":"anyStepperShape[T]: StepperShape[T, AnyStepper[T]]","d":"scala.collection.StepperShapeLowPriority1","k":"def","x":""},
{"l":"api/scala/collection/StepperShapeLowPriority2.html#","e":false,"i":"","n":"StepperShapeLowPriority2","t":"StepperShapeLowPriority2","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/StepperShapeLowPriority2.html#anyStepperShapePrototype-0","e":false,"i":"","n":"anyStepperShapePrototype","t":"anyStepperShapePrototype: StepperShape[AnyRef, Stepper[AnyRef]]","d":"scala.collection.StepperShapeLowPriority2","k":"val","x":""},
{"l":"api/scala/collection/StepperShapeLowPriority2.html#baseStepperShape-187","e":false,"i":"","n":"baseStepperShape","t":"baseStepperShape[T]: StepperShape[T, Stepper[T]]","d":"scala.collection.StepperShapeLowPriority2","k":"def","x":""},
{"l":"api/scala/collection/StrictOptimizedClassTagSeqFactory.html#","e":false,"i":"","n":"StrictOptimizedClassTagSeqFactory","t":"StrictOptimizedClassTagSeqFactory[+CC <: ([A] =>> SeqOps[A, Seq, Seq[A]])] extends ClassTagSeqFactory[CC]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/StrictOptimizedIterableOps.html#","e":false,"i":"","n":"StrictOptimizedIterableOps","t":"StrictOptimizedIterableOps[+A, +CC[_], +C] extends IterableOps[A, CC, C]","d":"scala.collection","k":"trait","x":"Trait that overrides iterable operations to take advantage of strict builders.\n"},
{"l":"api/scala/collection/StrictOptimizedLinearSeqOps.html#","e":false,"i":"","n":"StrictOptimizedLinearSeqOps","t":"StrictOptimizedLinearSeqOps[+A, +CC <: (LinearSeq), +C <: LinearSeq[A] & StrictOptimizedLinearSeqOps[A, CC, C]] extends LinearSeqOps[A, CC, C], StrictOptimizedSeqOps[A, CC, C]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/StrictOptimizedMapOps.html#","e":false,"i":"","n":"StrictOptimizedMapOps","t":"StrictOptimizedMapOps[K, +V, +CC <: ([_, _] =>> IterableOps[_, AnyConstr, _]), +C] extends MapOps[K, V, CC, C], StrictOptimizedIterableOps[(K, V), Iterable, C]","d":"scala.collection","k":"trait","x":"Trait that overrides map operations to take advantage of strict builders.\n"},
{"l":"api/scala/collection/StrictOptimizedSeqFactory.html#","e":false,"i":"","n":"StrictOptimizedSeqFactory","t":"StrictOptimizedSeqFactory[+CC <: ([A] =>> SeqOps[A, Seq, Seq[A]])] extends SeqFactory[CC]","d":"scala.collection","k":"trait","x":""},
{"l":"api/scala/collection/StrictOptimizedSeqOps.html#","e":false,"i":"","n":"StrictOptimizedSeqOps","t":"StrictOptimizedSeqOps[+A, +CC[_], +C] extends SeqOps[A, CC, C], StrictOptimizedIterableOps[A, CC, C]","d":"scala.collection","k":"trait","x":"Trait that overrides operations on sequences in order\nto take advantage of strict builders.\n"},
{"l":"api/scala/collection/StrictOptimizedSetOps.html#","e":false,"i":"","n":"StrictOptimizedSetOps","t":"StrictOptimizedSetOps[A, +CC[_], +C <: SetOps[A, CC, C]] extends SetOps[A, CC, C], StrictOptimizedIterableOps[A, CC, C]","d":"scala.collection","k":"trait","x":"Trait that overrides set operations to take advantage of strict builders.\n"},
{"l":"api/scala/collection/StrictOptimizedSortedMapOps.html#","e":false,"i":"","n":"StrictOptimizedSortedMapOps","t":"StrictOptimizedSortedMapOps[K, +V, +CC <: ([X, Y] =>> Map[X, Y] & SortedMapOps[X, Y, CC, _]), +C <: SortedMapOps[K, V, CC, C]] extends SortedMapOps[K, V, CC, C], StrictOptimizedMapOps[K, V, Map, C]","d":"scala.collection","k":"trait","x":"Trait that overrides sorted map operations to take advantage of strict builders.\n"},
{"l":"api/scala/collection/StrictOptimizedSortedSetOps.html#","e":false,"i":"","n":"StrictOptimizedSortedSetOps","t":"StrictOptimizedSortedSetOps[A, +CC <: (SortedSet), +C <: SortedSetOps[A, CC, C]] extends SortedSetOps[A, CC, C], StrictOptimizedSetOps[A, Set, C]","d":"scala.collection","k":"trait","x":"Trait that overrides sorted set operations to take advantage of strict builders.\n"},
{"l":"api/scala/collection/StringOps$.html#","e":false,"i":"","n":"StringOps","t":"StringOps","d":"scala.collection","k":"object","x":""},
{"l":"api/scala/collection/StringOps$$WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter(p: Char => Boolean, s: String)","d":"scala.collection.StringOps","k":"class","x":"A lazy filtered string. No filtering is applied until one of foreach, map or flatMap is called."},
{"l":"api/scala/collection/StringOps$$WithFilter.html#flatMap-fffffa22","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: Char => IterableOnce[B]): IndexedSeq[B]","d":"scala.collection.StringOps.WithFilter","k":"def","x":"Builds a new collection by applying a function to all chars of this filtered string\nand using the elements of the resulting collections.\n"},
{"l":"api/scala/collection/StringOps$$WithFilter.html#flatMap-8f6","e":false,"i":"","n":"flatMap","t":"flatMap(f: Char => String): String","d":"scala.collection.StringOps.WithFilter","k":"def","x":"Builds a new string by applying a function to all chars of this filtered string\nand using the elements of the resulting Strings.\n"},
{"l":"api/scala/collection/StringOps$$WithFilter.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: Char => U): Unit","d":"scala.collection.StringOps.WithFilter","k":"def","x":"Apply f to each element for its side effects.\nNote: [U] parameter needed to help scalac's type inference.\n"},
{"l":"api/scala/collection/StringOps$$WithFilter.html#map-fffffa22","e":false,"i":"","n":"map","t":"map[B](f: Char => B): IndexedSeq[B]","d":"scala.collection.StringOps.WithFilter","k":"def","x":"Builds a new collection by applying a function to all chars of this filtered string.\n"},
{"l":"api/scala/collection/StringOps$$WithFilter.html#map-8f6","e":false,"i":"","n":"map","t":"map(f: Char => Char): String","d":"scala.collection.StringOps.WithFilter","k":"def","x":"Builds a new string by applying a function to all chars of this filtered string.\n"},
{"l":"api/scala/collection/StringOps$$WithFilter.html#withFilter-b72","e":false,"i":"","n":"withFilter","t":"withFilter(q: Char => Boolean): WithFilter","d":"scala.collection.StringOps.WithFilter","k":"def","x":"Creates a new non-strict filter which combines this filter with the given predicate."},
{"l":"api/scala/collection/StringOps.html#","e":false,"i":"","n":"StringOps","t":"StringOps(s: String) extends AnyVal","d":"scala.collection","k":"class","x":"Provides extension methods for strings."},
{"l":"api/scala/collection/StringOps.html#*-78c","e":false,"i":"","n":"*","t":"*(n: Int): String","d":"scala.collection.StringOps","k":"def","x":"Return the current string concatenated n times.\n"},
{"l":"api/scala/collection/StringOps.html#++-fffffdd9","e":false,"i":"","n":"++","t":"++[B >: Char](suffix: Iterable[B]): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Alias for concat"},
{"l":"api/scala/collection/StringOps.html#++-fffff340","e":false,"i":"","n":"++","t":"++(suffix: IterableOnce[Char]): String","d":"scala.collection.StringOps","k":"def","x":"Alias for concat"},
{"l":"api/scala/collection/StringOps.html#++-fffff2ca","e":false,"i":"","n":"++","t":"++(xs: String): String","d":"scala.collection.StringOps","k":"def","x":"Alias for concat"},
{"l":"api/scala/collection/StringOps.html#++:-858","e":false,"i":"","n":"++:","t":"++:[B >: Char](prefix: IterableOnce[B]): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Alias for prependedAll"},
{"l":"api/scala/collection/StringOps.html#++:-fffff2ca","e":false,"i":"","n":"++:","t":"++:(prefix: String): String","d":"scala.collection.StringOps","k":"def","x":"Alias for prependedAll"},
{"l":"api/scala/collection/StringOps.html#+:-11e","e":false,"i":"","n":"+:","t":"+:[B >: Char](elem: B): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Alias for prepended"},
{"l":"api/scala/collection/StringOps.html#+:-fffffd83","e":false,"i":"","n":"+:","t":"+:(c: Char): String","d":"scala.collection.StringOps","k":"def","x":"Alias for prepended"},
{"l":"api/scala/collection/StringOps.html#:+-11e","e":false,"i":"","n":":+","t":":+[B >: Char](elem: B): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Alias for appended"},
{"l":"api/scala/collection/StringOps.html#:+-fffffd83","e":false,"i":"","n":":+","t":":+(c: Char): String","d":"scala.collection.StringOps","k":"def","x":"Alias for appended"},
{"l":"api/scala/collection/StringOps.html#:++-858","e":false,"i":"","n":":++","t":":++[B >: Char](suffix: IterableOnce[B]): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Alias for appendedAll"},
{"l":"api/scala/collection/StringOps.html#:++-fffff2ca","e":false,"i":"","n":":++","t":":++(suffix: String): String","d":"scala.collection.StringOps","k":"def","x":"Alias for appendedAll"},
{"l":"api/scala/collection/StringOps.html#<-fffffd1b","e":false,"i":"","n":"<","t":"<(that: String): Boolean","d":"scala.collection.StringOps","k":"def","x":"Returns true if this is less than that"},
{"l":"api/scala/collection/StringOps.html#<=-fffffd1b","e":false,"i":"","n":"<=","t":"<=(that: String): Boolean","d":"scala.collection.StringOps","k":"def","x":"Returns true if this is less than or equal to that."},
{"l":"api/scala/collection/StringOps.html#>-fffffd1b","e":false,"i":"","n":">","t":">(that: String): Boolean","d":"scala.collection.StringOps","k":"def","x":"Returns true if this is greater than that."},
{"l":"api/scala/collection/StringOps.html#>=-fffffd1b","e":false,"i":"","n":">=","t":">=(that: String): Boolean","d":"scala.collection.StringOps","k":"def","x":"Returns true if this is greater than or equal to that."},
{"l":"api/scala/collection/StringOps.html#addString-ff4","e":false,"i":"","n":"addString","t":"addString(b: StringBuilder): b.type","d":"scala.collection.StringOps","k":"def","x":"Appends this string to a string builder."},
{"l":"api/scala/collection/StringOps.html#addString-e99","e":false,"i":"","n":"addString","t":"addString(b: StringBuilder, sep: String): b.type","d":"scala.collection.StringOps","k":"def","x":"Appends this string to a string builder using a separator string."},
{"l":"api/scala/collection/StringOps.html#addString-de3","e":false,"i":"","n":"addString","t":"addString(b: StringBuilder, start: String, sep: String, end: String): b.type","d":"scala.collection.StringOps","k":"def","x":"Appends this string to a string builder using start, end and separator strings."},
{"l":"api/scala/collection/StringOps.html#appended-11e","e":false,"i":"","n":"appended","t":"appended[B >: Char](elem: B): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"A copy of the string with an element appended"},
{"l":"api/scala/collection/StringOps.html#appended-fffffd83","e":false,"i":"","n":"appended","t":"appended(c: Char): String","d":"scala.collection.StringOps","k":"def","x":"A copy of the string with an element appended"},
{"l":"api/scala/collection/StringOps.html#appendedAll-858","e":false,"i":"","n":"appendedAll","t":"appendedAll[B >: Char](suffix: IterableOnce[B]): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"A copy of the string with all elements from a collection appended"},
{"l":"api/scala/collection/StringOps.html#appendedAll-fffff2ca","e":false,"i":"","n":"appendedAll","t":"appendedAll(suffix: String): String","d":"scala.collection.StringOps","k":"def","x":"A copy of the string with another string appended"},
{"l":"api/scala/collection/StringOps.html#apply-fffffd85","e":false,"i":"","n":"apply","t":"apply(i: Int): Char","d":"scala.collection.StringOps","k":"def","x":"Get the char at the specified index."},
{"l":"api/scala/collection/StringOps.html#capitalize-0","e":false,"i":"","n":"capitalize","t":"capitalize: String","d":"scala.collection.StringOps","k":"def","x":"Returns this string with first character converted to upper case.\nIf the first character of the string is capitalized, it is returned unchanged.\nThis method does not convert characters outside the Basic Multilingual Plane (BMP).\n"},
{"l":"api/scala/collection/StringOps.html#charStepper-0","e":false,"i":"","n":"charStepper","t":"charStepper: IntStepper & EfficientSplit","d":"scala.collection.StringOps","k":"def","x":"Steps over characters in this string. Values are packed in Int for efficiency\nand compatibility with Java 8 Streams which have an efficient specialization for Int.\n"},
{"l":"api/scala/collection/StringOps.html#codePointStepper-0","e":false,"i":"","n":"codePointStepper","t":"codePointStepper: IntStepper & EfficientSplit","d":"scala.collection.StringOps","k":"def","x":"Steps over code points in this string.\n"},
{"l":"api/scala/collection/StringOps.html#collect-fffff816","e":false,"i":"","n":"collect","t":"collect(pf: PartialFunction[Char, Char]): String","d":"scala.collection.StringOps","k":"def","x":"Builds a new String by applying a partial function to all chars of this String\non which the function is defined.\n"},
{"l":"api/scala/collection/StringOps.html#collect-fffff642","e":false,"i":"","n":"collect","t":"collect[B](pf: PartialFunction[Char, B]): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Builds a new collection by applying a partial function to all chars of this String\non which the function is defined.\n"},
{"l":"api/scala/collection/StringOps.html#combinations-fffffbef","e":false,"i":"","n":"combinations","t":"combinations(n: Int): Iterator[String]","d":"scala.collection.StringOps","k":"def","x":"Iterates over combinations of elements."},
{"l":"api/scala/collection/StringOps.html#compare-a62","e":false,"i":"","n":"compare","t":"compare(that: String): Int","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#concat-858","e":false,"i":"","n":"concat","t":"concat[B >: Char](suffix: IterableOnce[B]): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Returns a new collection containing the chars from this string followed by the elements from the\nright hand operand.\n"},
{"l":"api/scala/collection/StringOps.html#concat-fffff340","e":false,"i":"","n":"concat","t":"concat(suffix: IterableOnce[Char]): String","d":"scala.collection.StringOps","k":"def","x":"Returns a new string containing the chars from this string followed by the chars from the\nright hand operand.\n"},
{"l":"api/scala/collection/StringOps.html#concat-fffff2ca","e":false,"i":"","n":"concat","t":"concat(suffix: String): String","d":"scala.collection.StringOps","k":"def","x":"Returns a new string containing the chars from this string followed by the chars from the\nright hand operand.\n"},
{"l":"api/scala/collection/StringOps.html#contains-502","e":false,"i":"","n":"contains","t":"contains(elem: Char): Boolean","d":"scala.collection.StringOps","k":"def","x":"Tests whether this string contains the given character.\n"},
{"l":"api/scala/collection/StringOps.html#copyToArray-27","e":false,"i":"","n":"copyToArray","t":"copyToArray(xs: Array[Char]): Int","d":"scala.collection.StringOps","k":"def","x":"Copy chars of this string to an array.\nFills the given array xs starting at index 0.\nCopying will stop once either the entire string has been copied\nor the end of the array is reached\n"},
{"l":"api/scala/collection/StringOps.html#copyToArray-fffffae0","e":false,"i":"","n":"copyToArray","t":"copyToArray(xs: Array[Char], start: Int): Int","d":"scala.collection.StringOps","k":"def","x":"Copy chars of this string to an array.\nFills the given array xs starting at index start.\nCopying will stop once either the entire string has been copied\nor the end of the array is reached\n"},
{"l":"api/scala/collection/StringOps.html#copyToArray-47","e":false,"i":"","n":"copyToArray","t":"copyToArray(xs: Array[Char], start: Int, len: Int): Int","d":"scala.collection.StringOps","k":"def","x":"Copy chars of this string to an array.\nFills the given array xs starting at index start with at most len chars.\nCopying will stop once either the entire string has been copied,\nor the end of the array is reached or len chars have been copied.\n"},
{"l":"api/scala/collection/StringOps.html#count-db6","e":false,"i":"","n":"count","t":"count(p: Char => Boolean): Int","d":"scala.collection.StringOps","k":"def","x":"Counts the number of chars in this string which satisfy a predicate"},
{"l":"api/scala/collection/StringOps.html#diff-aad","e":false,"i":"","n":"diff","t":"diff[B >: Char](that: Seq[B]): String","d":"scala.collection.StringOps","k":"def","x":"Computes the multiset difference between this string and another sequence.\n"},
{"l":"api/scala/collection/StringOps.html#distinct-0","e":false,"i":"","n":"distinct","t":"distinct: String","d":"scala.collection.StringOps","k":"def","x":"Selects all distinct chars of this string ignoring the duplicates.\n"},
{"l":"api/scala/collection/StringOps.html#distinctBy-2a5","e":false,"i":"","n":"distinctBy","t":"distinctBy[B](f: Char => B): String","d":"scala.collection.StringOps","k":"def","x":"Selects all distinct chars of this string ignoring the duplicates as determined by == after applying\nthe transforming function f.\n"},
{"l":"api/scala/collection/StringOps.html#drop-78c","e":false,"i":"","n":"drop","t":"drop(n: Int): String","d":"scala.collection.StringOps","k":"def","x":"The rest of the string without its n first chars."},
{"l":"api/scala/collection/StringOps.html#dropRight-78c","e":false,"i":"","n":"dropRight","t":"dropRight(n: Int): String","d":"scala.collection.StringOps","k":"def","x":"The rest of the string without its n last chars."},
{"l":"api/scala/collection/StringOps.html#dropWhile-8f6","e":false,"i":"","n":"dropWhile","t":"dropWhile(p: Char => Boolean): String","d":"scala.collection.StringOps","k":"def","x":"Drops longest prefix of chars that satisfy a predicate.\n"},
{"l":"api/scala/collection/StringOps.html#exists-fffff66f","e":false,"i":"","n":"exists","t":"exists(p: Char => Boolean): Boolean","d":"scala.collection.StringOps","k":"def","x":"Tests whether a predicate holds for at least one char of this string."},
{"l":"api/scala/collection/StringOps.html#filter-8f6","e":false,"i":"","n":"filter","t":"filter(pred: Char => Boolean): String","d":"scala.collection.StringOps","k":"def","x":"Selects all chars of this string which satisfy a predicate."},
{"l":"api/scala/collection/StringOps.html#filterNot-8f6","e":false,"i":"","n":"filterNot","t":"filterNot(pred: Char => Boolean): String","d":"scala.collection.StringOps","k":"def","x":"Selects all chars of this string which do not satisfy a predicate."},
{"l":"api/scala/collection/StringOps.html#find-94e","e":false,"i":"","n":"find","t":"find(p: Char => Boolean): Option[Char]","d":"scala.collection.StringOps","k":"def","x":"Finds the first char of the string satisfying a predicate, if any.\n"},
{"l":"api/scala/collection/StringOps.html#flatMap-fffffa22","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: Char => IterableOnce[B]): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Builds a new collection by applying a function to all chars of this string\nand using the elements of the resulting collections.\n"},
{"l":"api/scala/collection/StringOps.html#flatMap-8f6","e":false,"i":"","n":"flatMap","t":"flatMap(f: Char => String): String","d":"scala.collection.StringOps","k":"def","x":"Builds a new string by applying a function to all chars of this string\nand using the elements of the resulting strings.\n"},
{"l":"api/scala/collection/StringOps.html#fold-fffff9e1","e":false,"i":"","n":"fold","t":"fold[A1 >: Char](z: A1)(op: (A1, A1) => A1): A1","d":"scala.collection.StringOps","k":"def","x":"Alias for foldLeft."},
{"l":"api/scala/collection/StringOps.html#foldLeft-fffff9e1","e":false,"i":"","n":"foldLeft","t":"foldLeft[B](z: B)(op: (B, Char) => B): B","d":"scala.collection.StringOps","k":"def","x":"Applies the given binary operator op to the given initial value z and all chars\nin this string, going left to right. Returns the initial value if this string is\nempty."},
{"l":"api/scala/collection/StringOps.html#foldRight-fffff9e1","e":false,"i":"","n":"foldRight","t":"foldRight[B](z: B)(op: (Char, B) => B): B","d":"scala.collection.StringOps","k":"def","x":"Applies the given binary operator op to all chars in this string and the given\ninitial value z, going right to left. Returns the initial value if this string is\nempty."},
{"l":"api/scala/collection/StringOps.html#forall-fffff66f","e":false,"i":"","n":"forall","t":"forall(p: Char => Boolean): Boolean","d":"scala.collection.StringOps","k":"def","x":"Tests whether a predicate holds for all chars of this string.\n"},
{"l":"api/scala/collection/StringOps.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: Char => U): Unit","d":"scala.collection.StringOps","k":"def","x":"Apply f to each element for its side effects.\nNote: [U] parameter needed to help scalac's type inference.\n"},
{"l":"api/scala/collection/StringOps.html#format-a90","e":false,"i":"","n":"format","t":"format(args: Any*): String","d":"scala.collection.StringOps","k":"def","x":"Uses the underlying string as a pattern (in a fashion similar to\nprintf in C), and uses the supplied arguments to fill in the\nholes."},
{"l":"api/scala/collection/StringOps.html#formatLocal-52a","e":false,"i":"","n":"formatLocal","t":"formatLocal(l: Locale, args: Any*): String","d":"scala.collection.StringOps","k":"def","x":"Like format(args*) but takes an initial Locale parameter\nwhich influences formatting as in java.lang.String's format."},
{"l":"api/scala/collection/StringOps.html#groupBy-f68","e":false,"i":"","n":"groupBy","t":"groupBy[K](f: Char => K): Map[K, String]","d":"scala.collection.StringOps","k":"def","x":"Partitions this string into a map of strings according to some discriminator function.\n"},
{"l":"api/scala/collection/StringOps.html#grouped-fffffbef","e":false,"i":"","n":"grouped","t":"grouped(size: Int): Iterator[String]","d":"scala.collection.StringOps","k":"def","x":"Partitions elements in fixed size strings."},
{"l":"api/scala/collection/StringOps.html#head-0","e":false,"i":"","n":"head","t":"head: Char","d":"scala.collection.StringOps","k":"def","x":"Selects the first char of this string."},
{"l":"api/scala/collection/StringOps.html#headOption-0","e":false,"i":"","n":"headOption","t":"headOption: Option[Char]","d":"scala.collection.StringOps","k":"def","x":"Optionally selects the first char."},
{"l":"api/scala/collection/StringOps.html#indexWhere-fffffe31","e":false,"i":"","n":"indexWhere","t":"indexWhere(p: Char => Boolean, from: Int): Int","d":"scala.collection.StringOps","k":"def","x":"Finds index of the first char satisfying some predicate after or at some start index.\n"},
{"l":"api/scala/collection/StringOps.html#indices-0","e":false,"i":"","n":"indices","t":"indices: Range","d":"scala.collection.StringOps","k":"def","x":"Produces the range of all indices of this string.\n"},
{"l":"api/scala/collection/StringOps.html#init-0","e":false,"i":"","n":"init","t":"init: String","d":"scala.collection.StringOps","k":"def","x":"The initial part of the string without its last char."},
{"l":"api/scala/collection/StringOps.html#inits-0","e":false,"i":"","n":"inits","t":"inits: Iterator[String]","d":"scala.collection.StringOps","k":"def","x":"Iterates over the inits of this string. The first value will be this\nstring and the final one will be an empty string, with the intervening\nvalues the results of successive applications of init.\n"},
{"l":"api/scala/collection/StringOps.html#intersect-aad","e":false,"i":"","n":"intersect","t":"intersect[B >: Char](that: Seq[B]): String","d":"scala.collection.StringOps","k":"def","x":"Computes the multiset intersection between this string and another sequence.\n"},
{"l":"api/scala/collection/StringOps.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[Char]","d":"scala.collection.StringOps","k":"def","x":"Iterator can be used only once"},
{"l":"api/scala/collection/StringOps.html#knownSize-0","e":false,"i":"","n":"knownSize","t":"knownSize: Int","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#last-0","e":false,"i":"","n":"last","t":"last: Char","d":"scala.collection.StringOps","k":"def","x":"Selects the last char of this string."},
{"l":"api/scala/collection/StringOps.html#lastIndexWhere-fffffe31","e":false,"i":"","n":"lastIndexWhere","t":"lastIndexWhere(p: Char => Boolean, end: Int): Int","d":"scala.collection.StringOps","k":"def","x":"Finds index of the last char satisfying some predicate before or at some end index.\n"},
{"l":"api/scala/collection/StringOps.html#lastOption-0","e":false,"i":"","n":"lastOption","t":"lastOption: Option[Char]","d":"scala.collection.StringOps","k":"def","x":"Optionally selects the last char."},
{"l":"api/scala/collection/StringOps.html#lazyZip-fffffd84","e":false,"i":"","n":"lazyZip","t":"lazyZip[B](that: Iterable[B]): LazyZip2[Char, B, String]","d":"scala.collection.StringOps","k":"def","x":"Analogous to zip except that the elements in each collection are not consumed until a strict operation is\ninvoked on the returned LazyZip2 decorator."},
{"l":"api/scala/collection/StringOps.html#lengthCompare-fffffbe0","e":false,"i":"","n":"lengthCompare","t":"lengthCompare(len: Int): Int","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#lengthIs-0","e":false,"i":"","n":"lengthIs","t":"lengthIs: Int","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#lines-0","e":false,"i":"","n":"lines","t":"lines: Iterator[String]","d":"scala.collection.StringOps","k":"def","x":"Return all lines in this string in an iterator, excluding trailing line\nend characters; i.e., apply .stripLineEnd to all lines\nreturned by linesWithSeparators.\n"},
{"l":"api/scala/collection/StringOps.html#linesIterator-0","e":false,"i":"","n":"linesIterator","t":"linesIterator: Iterator[String]","d":"scala.collection.StringOps","k":"def","x":"Lines in this string, where a line is terminated by\n\"\\n\", \"\\r\", \"\\r\\n\", or the end of the string.\nA line may be empty. Line terminators are removed.\n"},
{"l":"api/scala/collection/StringOps.html#linesWithSeparators-0","e":false,"i":"","n":"linesWithSeparators","t":"linesWithSeparators: Iterator[String]","d":"scala.collection.StringOps","k":"def","x":"Return an iterator of all lines embedded in this string,\nincluding trailing line separator characters."},
{"l":"api/scala/collection/StringOps.html#map-fffffa22","e":false,"i":"","n":"map","t":"map[B](f: Char => B): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Builds a new collection by applying a function to all chars of this string.\n"},
{"l":"api/scala/collection/StringOps.html#map-8f6","e":false,"i":"","n":"map","t":"map(f: Char => Char): String","d":"scala.collection.StringOps","k":"def","x":"Builds a new string by applying a function to all chars of this string.\n"},
{"l":"api/scala/collection/StringOps.html#mkString-d94","e":false,"i":"","n":"mkString","t":"mkString(start: String, sep: String, end: String): String","d":"scala.collection.StringOps","k":"def","x":"Displays all elements of this string in a string using start, end, and\nseparator strings.\n"},
{"l":"api/scala/collection/StringOps.html#mkString-fffff2ca","e":false,"i":"","n":"mkString","t":"mkString(sep: String): String","d":"scala.collection.StringOps","k":"def","x":"Displays all elements of this string in a string using a separator string.\n"},
{"l":"api/scala/collection/StringOps.html#mkString-0","e":false,"i":"","n":"mkString","t":"mkString: String","d":"scala.collection.StringOps","k":"def","x":"Returns this string"},
{"l":"api/scala/collection/StringOps.html#nonEmpty-0","e":false,"i":"","n":"nonEmpty","t":"nonEmpty: Boolean","d":"scala.collection.StringOps","k":"def","x":"Tests whether the string is not empty."},
{"l":"api/scala/collection/StringOps.html#padTo-fffff059","e":false,"i":"","n":"padTo","t":"padTo[B >: Char](len: Int, elem: B): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Returns a collection with an element appended until a given target length is reached.\n"},
{"l":"api/scala/collection/StringOps.html#padTo-9ea","e":false,"i":"","n":"padTo","t":"padTo(len: Int, elem: Char): String","d":"scala.collection.StringOps","k":"def","x":"Returns a string with a char appended until a given target length is reached.\n"},
{"l":"api/scala/collection/StringOps.html#partition-243","e":false,"i":"","n":"partition","t":"partition(p: Char => Boolean): (String, String)","d":"scala.collection.StringOps","k":"def","x":"A pair of, first, all chars that satisfy predicate p and, second, all chars that do not."},
{"l":"api/scala/collection/StringOps.html#partitionMap-243","e":false,"i":"","n":"partitionMap","t":"partitionMap(f: Char => Either[Char, Char]): (String, String)","d":"scala.collection.StringOps","k":"def","x":"Applies a function f to each character of the string and returns a pair of strings: the first one\nmade of those characters returned by f that were wrapped in scala.util.Left, and the second\none made of those wrapped in scala.util.Right."},
{"l":"api/scala/collection/StringOps.html#patch-760","e":false,"i":"","n":"patch","t":"patch[B >: Char](from: Int, other: IterableOnce[B], replaced: Int): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"Produces a new collection where a slice of characters in this string is replaced by another collection."},
{"l":"api/scala/collection/StringOps.html#patch-cf8","e":false,"i":"","n":"patch","t":"patch(from: Int, other: IterableOnce[Char], replaced: Int): String","d":"scala.collection.StringOps","k":"def","x":"Produces a new collection where a slice of characters in this string is replaced by another collection."},
{"l":"api/scala/collection/StringOps.html#patch-fffff580","e":false,"i":"","n":"patch","t":"patch(from: Int, other: String, replaced: Int): String","d":"scala.collection.StringOps","k":"def","x":"Produces a new string where a slice of characters in this string is replaced by another string."},
{"l":"api/scala/collection/StringOps.html#permutations-0","e":false,"i":"","n":"permutations","t":"permutations: Iterator[String]","d":"scala.collection.StringOps","k":"def","x":"Iterates over distinct permutations of elements.\n"},
{"l":"api/scala/collection/StringOps.html#prepended-11e","e":false,"i":"","n":"prepended","t":"prepended[B >: Char](elem: B): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"A copy of the string with an element prepended"},
{"l":"api/scala/collection/StringOps.html#prepended-fffffd83","e":false,"i":"","n":"prepended","t":"prepended(c: Char): String","d":"scala.collection.StringOps","k":"def","x":"A copy of the string with an char prepended"},
{"l":"api/scala/collection/StringOps.html#prependedAll-858","e":false,"i":"","n":"prependedAll","t":"prependedAll[B >: Char](prefix: IterableOnce[B]): IndexedSeq[B]","d":"scala.collection.StringOps","k":"def","x":"A copy of the string with all elements from a collection prepended"},
{"l":"api/scala/collection/StringOps.html#prependedAll-fffff2ca","e":false,"i":"","n":"prependedAll","t":"prependedAll(prefix: String): String","d":"scala.collection.StringOps","k":"def","x":"A copy of the string with another string prepended"},
{"l":"api/scala/collection/StringOps.html#r-0","e":false,"i":"","n":"r","t":"r: Regex","d":"scala.collection.StringOps","k":"def","x":"You can follow a string with .r, turning it into a Regex. E.g."},
{"l":"api/scala/collection/StringOps.html#r-fffff5ef","e":false,"i":"","n":"r","t":"r(groupNames: String*): Regex","d":"scala.collection.StringOps","k":"def","x":"You can follow a string with .r(g1, ... , gn), turning it into a Regex,\nwith group names g1 through gn."},
{"l":"api/scala/collection/StringOps.html#replaceAllLiterally-fffff52f","e":false,"i":"","n":"replaceAllLiterally","t":"replaceAllLiterally(literal: String, replacement: String): String","d":"scala.collection.StringOps","k":"def","x":"Replace all literal occurrences of literal with the literal string replacement.\nThis method is equivalent to java.lang.String#replace.\n"},
{"l":"api/scala/collection/StringOps.html#reverse-0","e":false,"i":"","n":"reverse","t":"reverse: String","d":"scala.collection.StringOps","k":"def","x":"Returns new sequence with elements in reversed order."},
{"l":"api/scala/collection/StringOps.html#reverseIterator-0","e":false,"i":"","n":"reverseIterator","t":"reverseIterator: Iterator[Char]","d":"scala.collection.StringOps","k":"def","x":"An iterator yielding chars in reversed order."},
{"l":"api/scala/collection/StringOps.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#sizeCompare-fffffbe0","e":false,"i":"","n":"sizeCompare","t":"sizeCompare(otherSize: Int): Int","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#sizeIs-0","e":false,"i":"","n":"sizeIs","t":"sizeIs: Int","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#slice-245","e":false,"i":"","n":"slice","t":"slice(from: Int, until: Int): String","d":"scala.collection.StringOps","k":"def","x":"Selects an interval of elements.  The returned string is made up\nof all elements x which satisfy the invariant:"},
{"l":"api/scala/collection/StringOps.html#sliding-fffff156","e":false,"i":"","n":"sliding","t":"sliding(size: Int, step: Int): Iterator[String]","d":"scala.collection.StringOps","k":"def","x":"Groups chars in fixed size blocks by passing a \"sliding window\"\nover them (as opposed to partitioning them, as is done in grouped.)"},
{"l":"api/scala/collection/StringOps.html#sortBy-fffffd97","e":false,"i":"","n":"sortBy","t":"sortBy[B](f: Char => B)(implicit ord: Ordering[B]): String","d":"scala.collection.StringOps","k":"def","x":"Sorts this string according to the Ordering which results from transforming\nan implicitly given Ordering with a transformation function."},
{"l":"api/scala/collection/StringOps.html#sortWith-fffff6f7","e":false,"i":"","n":"sortWith","t":"sortWith(lt: (Char, Char) => Boolean): String","d":"scala.collection.StringOps","k":"def","x":"Sorts this string according to a comparison function."},
{"l":"api/scala/collection/StringOps.html#sorted-fffffc06","e":false,"i":"","n":"sorted","t":"sorted[B >: Char](implicit ord: Ordering[B]): String","d":"scala.collection.StringOps","k":"def","x":"Sorts the characters of this string according to an Ordering."},
{"l":"api/scala/collection/StringOps.html#span-243","e":false,"i":"","n":"span","t":"span(p: Char => Boolean): (String, String)","d":"scala.collection.StringOps","k":"def","x":"Splits this string into a prefix/suffix pair according to a predicate."},
{"l":"api/scala/collection/StringOps.html#split-fffff425","e":false,"i":"","n":"split","t":"split(separator: Char): Array[String]","d":"scala.collection.StringOps","k":"def","x":"Split this string around the separator character"},
{"l":"api/scala/collection/StringOps.html#split-b87","e":false,"i":"","n":"split","t":"split(separators: Array[Char]): Array[String]","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#splitAt-fffffbd9","e":false,"i":"","n":"splitAt","t":"splitAt(n: Int): (String, String)","d":"scala.collection.StringOps","k":"def","x":"Splits this string into two at a given position.\nNote: c splitAt n is equivalent to (c take n, c drop n).\n"},
{"l":"api/scala/collection/StringOps.html#stepper-0","e":false,"i":"","n":"stepper","t":"stepper: IntStepper & EfficientSplit","d":"scala.collection.StringOps","k":"def","x":"Stepper can be used with Java 8 Streams. This method is equivalent to a call to\ncharStepper. See also codePointStepper.\n"},
{"l":"api/scala/collection/StringOps.html#stripLineEnd-0","e":false,"i":"","n":"stripLineEnd","t":"stripLineEnd: String","d":"scala.collection.StringOps","k":"def","x":"Strip the trailing line separator from this string if there is one.\nThe line separator is taken as \"\\n\", \"\\r\", or \"\\r\\n\".\n"},
{"l":"api/scala/collection/StringOps.html#stripMargin-fffffd83","e":false,"i":"","n":"stripMargin","t":"stripMargin(marginChar: Char): String","d":"scala.collection.StringOps","k":"def","x":"For every line in this string:"},
{"l":"api/scala/collection/StringOps.html#stripMargin-0","e":false,"i":"","n":"stripMargin","t":"stripMargin: String","d":"scala.collection.StringOps","k":"def","x":"For every line in this string:"},
{"l":"api/scala/collection/StringOps.html#stripPrefix-fffff2ca","e":false,"i":"","n":"stripPrefix","t":"stripPrefix(prefix: String): String","d":"scala.collection.StringOps","k":"def","x":"Returns this string with the given prefix stripped. If this string does not\nstart with prefix, it is returned unchanged.\n"},
{"l":"api/scala/collection/StringOps.html#stripSuffix-fffff2ca","e":false,"i":"","n":"stripSuffix","t":"stripSuffix(suffix: String): String","d":"scala.collection.StringOps","k":"def","x":"Returns this string with the given suffix stripped. If this string does not\nend with suffix, it is returned unchanged.\n"},
{"l":"api/scala/collection/StringOps.html#tail-0","e":false,"i":"","n":"tail","t":"tail: String","d":"scala.collection.StringOps","k":"def","x":"The rest of the string without its first char."},
{"l":"api/scala/collection/StringOps.html#tails-0","e":false,"i":"","n":"tails","t":"tails: Iterator[String]","d":"scala.collection.StringOps","k":"def","x":"Iterates over the tails of this string. The first value will be this\nstring and the final one will be an empty string, with the intervening\nvalues the results of successive applications of tail.\n"},
{"l":"api/scala/collection/StringOps.html#take-78c","e":false,"i":"","n":"take","t":"take(n: Int): String","d":"scala.collection.StringOps","k":"def","x":"A string containing the first n chars of this string."},
{"l":"api/scala/collection/StringOps.html#takeRight-78c","e":false,"i":"","n":"takeRight","t":"takeRight(n: Int): String","d":"scala.collection.StringOps","k":"def","x":"A string containing the last n chars of this string."},
{"l":"api/scala/collection/StringOps.html#takeWhile-8f6","e":false,"i":"","n":"takeWhile","t":"takeWhile(p: Char => Boolean): String","d":"scala.collection.StringOps","k":"def","x":"Takes longest prefix of chars that satisfy a predicate."},
{"l":"api/scala/collection/StringOps.html#toArray-fffff5df","e":false,"i":"","n":"toArray","t":"toArray[B >: Char](implicit tag: ClassTag[B]): Array[B]","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#toBoolean-0","e":false,"i":"","n":"toBoolean","t":"toBoolean: Boolean","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#toBooleanOption-0","e":false,"i":"","n":"toBooleanOption","t":"toBooleanOption: Option[Boolean]","d":"scala.collection.StringOps","k":"def","x":"Try to parse as a Boolean"},
{"l":"api/scala/collection/StringOps.html#toByte-0","e":false,"i":"","n":"toByte","t":"toByte: Byte","d":"scala.collection.StringOps","k":"def","x":"Parse as a Byte (string must contain only decimal digits and optional leading - or +)."},
{"l":"api/scala/collection/StringOps.html#toByteOption-0","e":false,"i":"","n":"toByteOption","t":"toByteOption: Option[Byte]","d":"scala.collection.StringOps","k":"def","x":"Try to parse as a Byte"},
{"l":"api/scala/collection/StringOps.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.collection.StringOps","k":"def","x":"Parse as a Double (surrounding whitespace is removed with a trim)."},
{"l":"api/scala/collection/StringOps.html#toDoubleOption-0","e":false,"i":"","n":"toDoubleOption","t":"toDoubleOption: Option[Double]","d":"scala.collection.StringOps","k":"def","x":"Try to parse as a Double"},
{"l":"api/scala/collection/StringOps.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.collection.StringOps","k":"def","x":"Parse as a Float (surrounding whitespace is removed with a trim)."},
{"l":"api/scala/collection/StringOps.html#toFloatOption-0","e":false,"i":"","n":"toFloatOption","t":"toFloatOption: Option[Float]","d":"scala.collection.StringOps","k":"def","x":"Try to parse as a Float"},
{"l":"api/scala/collection/StringOps.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.collection.StringOps","k":"def","x":"Parse as an Int (string must contain only decimal digits and optional leading - or +)."},
{"l":"api/scala/collection/StringOps.html#toIntOption-0","e":false,"i":"","n":"toIntOption","t":"toIntOption: Option[Int]","d":"scala.collection.StringOps","k":"def","x":"Try to parse as an Int"},
{"l":"api/scala/collection/StringOps.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.collection.StringOps","k":"def","x":"Parse as a Long (string must contain only decimal digits and optional leading - or +)."},
{"l":"api/scala/collection/StringOps.html#toLongOption-0","e":false,"i":"","n":"toLongOption","t":"toLongOption: Option[Long]","d":"scala.collection.StringOps","k":"def","x":"Try to parse as a Long"},
{"l":"api/scala/collection/StringOps.html#toShort-0","e":false,"i":"","n":"toShort","t":"toShort: Short","d":"scala.collection.StringOps","k":"def","x":"Parse as a Short (string must contain only decimal digits and optional leading - or +)."},
{"l":"api/scala/collection/StringOps.html#toShortOption-0","e":false,"i":"","n":"toShortOption","t":"toShortOption: Option[Short]","d":"scala.collection.StringOps","k":"def","x":"Try to parse as a Short"},
{"l":"api/scala/collection/StringOps.html#updated-9ea","e":false,"i":"","n":"updated","t":"updated(index: Int, elem: Char): String","d":"scala.collection.StringOps","k":"def","x":"A copy of this string with one single replaced element."},
{"l":"api/scala/collection/StringOps.html#view-0","e":false,"i":"","n":"view","t":"view: StringView","d":"scala.collection.StringOps","k":"def","x":""},
{"l":"api/scala/collection/StringOps.html#withFilter-b72","e":false,"i":"","n":"withFilter","t":"withFilter(p: Char => Boolean): WithFilter","d":"scala.collection.StringOps","k":"def","x":"Creates a non-strict filter of this string.\n"},
{"l":"api/scala/collection/StringView.html#","e":false,"i":"","n":"StringView","t":"StringView(s: String) extends AbstractIndexedSeqView[Char]","d":"scala.collection","k":"class","x":""},
{"l":"api/scala/collection/StringView.html#apply-fffffd85","e":false,"i":"","n":"apply","t":"apply(n: Int): Char","d":"scala.collection.StringView","k":"def","x":"Gets the element at the specified index. This operation is provided for convenience in Seq. It should\nnot be assumed to be efficient unless you have an IndexedSeq."},
{"l":"api/scala/collection/StringView.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.collection.StringView","k":"def","x":"The length (number of elements) of the sequence. size is an alias for length in Seq collections."},
{"l":"api/scala/collection/View.html#","e":false,"i":"","n":"View","t":"View[+A] extends Iterable[A], IterableOps[A, View, View[A]], IterableFactoryDefaults[A, View], Serializable","d":"scala.collection","k":"trait","x":"Views are collections whose transformation operations are non strict: the resulting elements\nare evaluated only when the view is effectively traversed (e.g. using foreach or foldLeft),\nor when the view is converted to a strict collection type (using the to operation).\n"},
{"l":"api/scala/collection/View.html#force-0","e":false,"i":"","n":"force","t":"force: IndexedSeq[A]","d":"scala.collection.View","k":"def","x":""},
{"l":"api/scala/collection/View$.html#","e":false,"i":"","n":"View","t":"View extends IterableFactory[View]","d":"scala.collection","k":"object","x":"This object reifies operations on views as case classes"},
{"l":"api/scala/collection/View$.html#SomeIterableOps-0","e":false,"i":"","n":"SomeIterableOps","t":"SomeIterableOps[A] = IterableOps[A, AnyConstr, _]","d":"scala.collection.View","k":"type","x":"An IterableOps whose collection type and collection type constructor are unknown"},
{"l":"api/scala/collection/View$.html#empty-fdc","e":false,"i":"","n":"empty","t":"empty[A]: View[A]","d":"scala.collection.View","k":"def","x":"An empty collection"},
{"l":"api/scala/collection/View$.html#from-d63","e":false,"i":"","n":"from","t":"from[E](it: IterableOnce[E]): View[E]","d":"scala.collection.View","k":"def","x":""},
{"l":"api/scala/collection/View$.html#fromIteratorProvider-fffff88e","e":false,"i":"","n":"fromIteratorProvider","t":"fromIteratorProvider[A](it: () => Iterator[A]): View[A]","d":"scala.collection.View","k":"def","x":""},
{"l":"api/scala/collection/View$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, View[A]]","d":"scala.collection.View","k":"def","x":""},
{"l":"api/scala/collection/View$$Appended.html#","e":false,"i":"","n":"Appended","t":"Appended[+A](underlying: SomeIterableOps[A], elem: A) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that appends an element to its elements"},
{"l":"api/scala/collection/View$$Appended.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Appended","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Collect.html#","e":false,"i":"","n":"Collect","t":"Collect[+A, B](underlying: SomeIterableOps[A], pf: PartialFunction[A, B]) extends AbstractView[B]","d":"scala.collection.View","k":"class","x":"A view that collects elements of the underlying collection."},
{"l":"api/scala/collection/View$$Collect.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[B]","d":"scala.collection.View.Collect","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Concat.html#","e":false,"i":"","n":"Concat","t":"Concat[A](prefix: SomeIterableOps[A], suffix: SomeIterableOps[A]) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that concatenates elements of the prefix collection or iterator with the elements\nof the suffix collection or iterator.\n"},
{"l":"api/scala/collection/View$$Concat.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Concat","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$DistinctBy.html#","e":false,"i":"","n":"DistinctBy","t":"DistinctBy[A, B](underlying: SomeIterableOps[A], f: A => B) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that removes the duplicated elements as determined by the transformation function f"},
{"l":"api/scala/collection/View$$DistinctBy.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.DistinctBy","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Drop.html#","e":false,"i":"","n":"Drop","t":"Drop[A](underlying: SomeIterableOps[A], n: Int) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that drops leading elements of the underlying collection."},
{"l":"api/scala/collection/View$$Drop.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Drop","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$DropRight.html#","e":false,"i":"","n":"DropRight","t":"DropRight[A](underlying: SomeIterableOps[A], n: Int) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that drops trailing elements of the underlying collection."},
{"l":"api/scala/collection/View$$DropRight.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.DropRight","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$DropWhile.html#","e":false,"i":"","n":"DropWhile","t":"DropWhile[A](underlying: SomeIterableOps[A], p: A => Boolean) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":""},
{"l":"api/scala/collection/View$$DropWhile.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.DropWhile","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Elems.html#","e":false,"i":"","n":"Elems","t":"Elems[A](xs: A*) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view with given elements"},
{"l":"api/scala/collection/View$$Elems.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Elems","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Empty$.html#","e":false,"i":"","n":"Empty","t":"Empty extends AbstractView[Nothing]","d":"scala.collection.View","k":"object","x":"The empty view"},
{"l":"api/scala/collection/View$$Empty$.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[Nothing]","d":"scala.collection.View.Empty","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Fill.html#","e":false,"i":"","n":"Fill","t":"Fill[A](n: Int)(elem: => A) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view containing the results of some element computation a number of times."},
{"l":"api/scala/collection/View$$Fill.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Fill","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Filter.html#","e":false,"i":"","n":"Filter","t":"Filter[A](val underlying: SomeIterableOps[A], val p: A => Boolean, val isFlipped: Boolean) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that filters an underlying collection."},
{"l":"api/scala/collection/View$$Filter.html#isFlipped-0","e":false,"i":"","n":"isFlipped","t":"isFlipped: Boolean","d":"scala.collection.View.Filter","k":"val","x":""},
{"l":"api/scala/collection/View$$Filter.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Filter","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Filter.html#p-0","e":false,"i":"","n":"p","t":"p: A => Boolean","d":"scala.collection.View.Filter","k":"val","x":""},
{"l":"api/scala/collection/View$$Filter.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: SomeIterableOps[A]","d":"scala.collection.View.Filter","k":"val","x":""},
{"l":"api/scala/collection/View$$Filter$.html#","e":false,"i":"","n":"Filter","t":"Filter","d":"scala.collection.View","k":"object","x":""},
{"l":"api/scala/collection/View$$Filter$.html#apply-8f7","e":false,"i":"","n":"apply","t":"apply[A](underlying: Iterable[A], p: A => Boolean, isFlipped: Boolean): Filter[A]","d":"scala.collection.View.Filter","k":"def","x":""},
{"l":"api/scala/collection/View$$FlatMap.html#","e":false,"i":"","n":"FlatMap","t":"FlatMap[A, B](underlying: SomeIterableOps[A], f: A => IterableOnce[B]) extends AbstractView[B]","d":"scala.collection.View","k":"class","x":"A view that flatmaps elements of the underlying collection."},
{"l":"api/scala/collection/View$$FlatMap.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[B]","d":"scala.collection.View.FlatMap","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Iterate.html#","e":false,"i":"","n":"Iterate","t":"Iterate[A](start: A, len: Int)(f: A => A) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view containing repeated applications of a function to a start value"},
{"l":"api/scala/collection/View$$Iterate.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Iterate","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$LeftPartitionMapped.html#","e":false,"i":"","n":"LeftPartitionMapped","t":"LeftPartitionMapped[A, A1, A2](underlying: SomeIterableOps[A], f: A => Either[A1, A2]) extends AbstractView[A1]","d":"scala.collection.View","k":"class","x":""},
{"l":"api/scala/collection/View$$LeftPartitionMapped.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: AbstractIterator[A1]","d":"scala.collection.View.LeftPartitionMapped","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Map.html#","e":false,"i":"","n":"Map","t":"Map[+A, +B](underlying: SomeIterableOps[A], f: A => B) extends AbstractView[B]","d":"scala.collection.View","k":"class","x":"A view that maps elements of the underlying collection."},
{"l":"api/scala/collection/View$$Map.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[B]","d":"scala.collection.View.Map","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$PadTo.html#","e":false,"i":"","n":"PadTo","t":"PadTo[A](underlying: SomeIterableOps[A], len: Int, elem: A) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":""},
{"l":"api/scala/collection/View$$PadTo.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.PadTo","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Prepended.html#","e":false,"i":"","n":"Prepended","t":"Prepended[+A](elem: A, underlying: SomeIterableOps[A]) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that prepends an element to its elements"},
{"l":"api/scala/collection/View$$Prepended.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Prepended","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$RightPartitionMapped.html#","e":false,"i":"","n":"RightPartitionMapped","t":"RightPartitionMapped[A, A1, A2](underlying: SomeIterableOps[A], f: A => Either[A1, A2]) extends AbstractView[A2]","d":"scala.collection.View","k":"class","x":""},
{"l":"api/scala/collection/View$$RightPartitionMapped.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: AbstractIterator[A2]","d":"scala.collection.View.RightPartitionMapped","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$ScanLeft.html#","e":false,"i":"","n":"ScanLeft","t":"ScanLeft[+A, +B](underlying: SomeIterableOps[A], z: B, op: (B, A) => B) extends AbstractView[B]","d":"scala.collection.View","k":"class","x":""},
{"l":"api/scala/collection/View$$ScanLeft.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[B]","d":"scala.collection.View.ScanLeft","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Single.html#","e":false,"i":"","n":"Single","t":"Single[A](a: A) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view with exactly one element"},
{"l":"api/scala/collection/View$$Single.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Single","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Tabulate.html#","e":false,"i":"","n":"Tabulate","t":"Tabulate[A](n: Int)(f: Int => A) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view containing values of a given function over a range of integer values starting from 0."},
{"l":"api/scala/collection/View$$Tabulate.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Tabulate","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Take.html#","e":false,"i":"","n":"Take","t":"Take[+A](underlying: SomeIterableOps[A], n: Int) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that takes leading elements of the underlying collection."},
{"l":"api/scala/collection/View$$Take.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Take","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$TakeRight.html#","e":false,"i":"","n":"TakeRight","t":"TakeRight[+A](underlying: SomeIterableOps[A], n: Int) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that takes trailing elements of the underlying collection."},
{"l":"api/scala/collection/View$$TakeRight.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.TakeRight","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$TakeWhile.html#","e":false,"i":"","n":"TakeWhile","t":"TakeWhile[A](underlying: SomeIterableOps[A], p: A => Boolean) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":""},
{"l":"api/scala/collection/View$$TakeWhile.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.TakeWhile","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Unfold.html#","e":false,"i":"","n":"Unfold","t":"Unfold[A, S](initial: S)(f: S => Option[(A, S)]) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":"A view that uses a function f to produce elements of type A and update\nan internal state S.\n"},
{"l":"api/scala/collection/View$$Unfold.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Unfold","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Updated.html#","e":false,"i":"","n":"Updated","t":"Updated[A](underlying: SomeIterableOps[A], index: Int, elem: A) extends AbstractView[A]","d":"scala.collection.View","k":"class","x":""},
{"l":"api/scala/collection/View$$Updated.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.collection.View.Updated","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$Zip.html#","e":false,"i":"","n":"Zip","t":"Zip[A, B](underlying: SomeIterableOps[A], other: Iterable[B]) extends AbstractView[(A, B)]","d":"scala.collection.View","k":"class","x":"A view that zips elements of the underlying collection with the elements\nof another collection.\n"},
{"l":"api/scala/collection/View$$Zip.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(A, B)]","d":"scala.collection.View.Zip","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$ZipAll.html#","e":false,"i":"","n":"ZipAll","t":"ZipAll[A, B](underlying: SomeIterableOps[A], other: Iterable[B], thisElem: A, thatElem: B) extends AbstractView[(A, B)]","d":"scala.collection.View","k":"class","x":"A view that zips elements of the underlying collection with the elements\nof another collection. If one of the two collections is shorter than the other,\nplaceholder elements are used to extend the shorter collection to the length of the longer.\n"},
{"l":"api/scala/collection/View$$ZipAll.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(A, B)]","d":"scala.collection.View.ZipAll","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/View$$ZipWithIndex.html#","e":false,"i":"","n":"ZipWithIndex","t":"ZipWithIndex[A](underlying: SomeIterableOps[A]) extends AbstractView[(A, Int)]","d":"scala.collection.View","k":"class","x":""},
{"l":"api/scala/collection/View$$ZipWithIndex.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(A, Int)]","d":"scala.collection.View.ZipWithIndex","k":"def","x":"An scala.collection.Iterator over the elements of this view."},
{"l":"api/scala/collection/WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter[+A, +CC[_]] extends Serializable","d":"scala.collection","k":"class","x":"A template trait that contains just the map, flatMap, foreach and withFilter methods\nof trait Iterable.\n"},
{"l":"api/scala/collection/WithFilter.html#flatMap-5d3","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: A => IterableOnce[B]): CC[B]","d":"scala.collection.WithFilter","k":"def","x":"Builds a new collection by applying a function to all elements of the\nfiltered outer collection containing this WithFilter instance that satisfy\n"},
{"l":"api/scala/collection/WithFilter.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: A => U): Unit","d":"scala.collection.WithFilter","k":"def","x":"Applies a function f to all elements of the filtered outer collection.\n"},
{"l":"api/scala/collection/WithFilter.html#map-5d3","e":false,"i":"","n":"map","t":"map[B](f: A => B): CC[B]","d":"scala.collection.WithFilter","k":"def","x":"Builds a new collection by applying a function to all elements of the\nfiltered outer collection.\n"},
{"l":"api/scala/collection/WithFilter.html#withFilter-fffffb75","e":false,"i":"","n":"withFilter","t":"withFilter(q: A => Boolean): WithFilter[A, CC]","d":"scala.collection.WithFilter","k":"def","x":"Further refines the filter for this filtered collection.\n"},
{"l":"api/scala/compat.html#","e":false,"i":"","n":"scala.compat","t":"scala.compat","d":"","k":"package","x":""},
{"l":"api/scala/compat/Platform$.html#","e":false,"i":"","n":"Platform","t":"Platform","d":"scala.compat","k":"object","x":""},
{"l":"api/scala/compat/Platform$.html#ConcurrentModificationException-0","e":false,"i":"","n":"ConcurrentModificationException","t":"ConcurrentModificationException = ConcurrentModificationException","d":"scala.compat.Platform","k":"type","x":"This is a type alias for java.util.ConcurrentModificationException,\nwhich may be thrown by methods that detect an invalid modification of an object.\nFor example, many common collection types do not allow modifying a collection\nwhile it is being iterated over.\n"},
{"l":"api/scala/compat/Platform$.html#EOL-0","e":false,"i":"","n":"EOL","t":"EOL: String","d":"scala.compat.Platform","k":"val","x":"The default line separator."},
{"l":"api/scala/compat/Platform$.html#StackOverflowError-0","e":false,"i":"","n":"StackOverflowError","t":"StackOverflowError = StackOverflowError","d":"scala.compat.Platform","k":"type","x":"Thrown when a stack overflow occurs because a method or function recurses too deeply."},
{"l":"api/scala/compat/Platform$.html#arrayclear-ed5","e":false,"i":"","n":"arrayclear","t":"arrayclear(arr: Array[Int]): Unit","d":"scala.compat.Platform","k":"def","x":"Assigns the value of 0 to each element in the array."},
{"l":"api/scala/compat/Platform$.html#arraycopy-fffff933","e":false,"i":"","n":"arraycopy","t":"arraycopy(src: AnyRef, srcPos: Int, dest: AnyRef, destPos: Int, length: Int): Unit","d":"scala.compat.Platform","k":"def","x":"Copies length elements of array src starting at position srcPos to the\narray dest starting at position destPos. If src==dest, the copying will\nbehave as if the elements copied from src were first copied to a temporary\narray before being copied back into the array at the destination positions.\n"},
{"l":"api/scala/compat/Platform$.html#collectGarbage-94c","e":false,"i":"","n":"collectGarbage","t":"collectGarbage(): Unit","d":"scala.compat.Platform","k":"def","x":"Runs the garbage collector."},
{"l":"api/scala/compat/Platform$.html#createArray-296","e":false,"i":"","n":"createArray","t":"createArray(elemClass: Class[_], length: Int): AnyRef","d":"scala.compat.Platform","k":"def","x":"Creates a new array of the specified type and given length."},
{"l":"api/scala/compat/Platform$.html#currentTime-0","e":false,"i":"","n":"currentTime","t":"currentTime: Long","d":"scala.compat.Platform","k":"def","x":"The current time in milliseconds. The time is counted since 1 January 1970\nUTC."},
{"l":"api/scala/compat/Platform$.html#defaultCharsetName-0","e":false,"i":"","n":"defaultCharsetName","t":"defaultCharsetName: String","d":"scala.compat.Platform","k":"def","x":"The name of the default character set encoding as a string"},
{"l":"api/scala/compat/Platform$.html#getClassForName-b9f","e":false,"i":"","n":"getClassForName","t":"getClassForName(name: String): Class[_]","d":"scala.compat.Platform","k":"def","x":"Returns the Class object associated with the class or interface with the given string name using the current ClassLoader.\nOn the JVM, invoking this method is equivalent to: java.lang.Class.forName(name)"},
{"l":"api/scala/compiletime.html#","e":false,"i":"","n":"scala.compiletime","t":"scala.compiletime","d":"","k":"package","x":""},
{"l":"api/scala/compiletime.html#asMatchable-957","e":false,"i":"extension [T](x: T)","n":"asMatchable","t":"asMatchable: x.type & Matchable","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#byName-fffff7d2","e":false,"i":"","n":"byName","t":"byName[T](x: => T): T","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#codeOf-9f8","e":false,"i":"","n":"codeOf","t":"codeOf(arg: Any): String","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#constValue-fffff7c4","e":false,"i":"","n":"constValue","t":"constValue[T]: T","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#constValueOpt-4ee","e":false,"i":"","n":"constValueOpt","t":"constValueOpt[T]: Option[T]","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#constValueTuple-ffffff96","e":false,"i":"","n":"constValueTuple","t":"constValueTuple[T <: Tuple]: T","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#deferred-0","e":false,"i":"","n":"deferred","t":"deferred: Nothing","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#erasedValue-fffff7c4","e":false,"i":"","n":"erasedValue","t":"erasedValue[T]: T","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#error-8c0","e":false,"i":"","n":"error","t":"error(inline msg: String): Nothing","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#requireConst-fffff71f","e":false,"i":"","n":"requireConst","t":"requireConst(inline x: Boolean | Byte | Short | Int | Long | Float | Double | Char | String): Unit","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#summonAll-ffffff96","e":false,"i":"","n":"summonAll","t":"summonAll[T <: Tuple]: T","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#summonFrom-5d3","e":false,"i":"","n":"summonFrom","t":"summonFrom[T](f: Nothing => T): T","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#summonInline-fffff7c4","e":false,"i":"","n":"summonInline","t":"summonInline[T]: T","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime.html#uninitialized-0","e":false,"i":"","n":"uninitialized","t":"uninitialized: Nothing","d":"scala.compiletime","k":"def","x":""},
{"l":"api/scala/compiletime/ops.html#","e":false,"i":"","n":"scala.compiletime.ops","t":"scala.compiletime.ops","d":"","k":"package","x":""},
{"l":"api/scala/compiletime/ops/any$.html#","e":false,"i":"","n":"any","t":"any","d":"scala.compiletime.ops","k":"object","x":""},
{"l":"api/scala/compiletime/ops/any$.html#!=-0","e":false,"i":"","n":"!=","t":"!=[X, Y] <: Boolean","d":"scala.compiletime.ops.any","k":"type","x":""},
{"l":"api/scala/compiletime/ops/any$.html#==-0","e":false,"i":"","n":"==","t":"==[X, Y] <: Boolean","d":"scala.compiletime.ops.any","k":"type","x":""},
{"l":"api/scala/compiletime/ops/any$.html#IsConst-0","e":false,"i":"","n":"IsConst","t":"IsConst[X] <: Boolean","d":"scala.compiletime.ops.any","k":"type","x":""},
{"l":"api/scala/compiletime/ops/any$.html#ToString-0","e":false,"i":"","n":"ToString","t":"ToString[X] <: String","d":"scala.compiletime.ops.any","k":"type","x":""},
{"l":"api/scala/compiletime/ops/boolean$.html#","e":false,"i":"","n":"boolean","t":"boolean","d":"scala.compiletime.ops","k":"object","x":""},
{"l":"api/scala/compiletime/ops/boolean$.html#!-0","e":false,"i":"","n":"!","t":"![X <: Boolean] <: Boolean","d":"scala.compiletime.ops.boolean","k":"type","x":""},
{"l":"api/scala/compiletime/ops/boolean$.html#&&-0","e":false,"i":"","n":"&&","t":"&&[X <: Boolean, Y <: Boolean] <: Boolean","d":"scala.compiletime.ops.boolean","k":"type","x":""},
{"l":"api/scala/compiletime/ops/boolean$.html#^-0","e":false,"i":"","n":"^","t":"^[X <: Boolean, Y <: Boolean] <: Boolean","d":"scala.compiletime.ops.boolean","k":"type","x":""},
{"l":"api/scala/compiletime/ops/boolean$.html#||-0","e":false,"i":"","n":"||","t":"||[X <: Boolean, Y <: Boolean] <: Boolean","d":"scala.compiletime.ops.boolean","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#","e":false,"i":"","n":"double","t":"double","d":"scala.compiletime.ops","k":"object","x":""},
{"l":"api/scala/compiletime/ops/double$.html#%-0","e":false,"i":"","n":"%","t":"%[X <: Double, Y <: Double] <: Double","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#*-0","e":false,"i":"","n":"*","t":"*[X <: Double, Y <: Double] <: Double","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#+-0","e":false,"i":"","n":"+","t":"+[X <: Double, Y <: Double] <: Double","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#--0","e":false,"i":"","n":"-","t":"-[X <: Double, Y <: Double] <: Double","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#/-0","e":false,"i":"","n":"/","t":"/[X <: Double, Y <: Double] <: Double","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#<-0","e":false,"i":"","n":"<","t":"<[X <: Double, Y <: Double] <: Boolean","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#<=-0","e":false,"i":"","n":"<=","t":"<=[X <: Double, Y <: Double] <: Boolean","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#>-0","e":false,"i":"","n":">","t":">[X <: Double, Y <: Double] <: Boolean","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#>=-0","e":false,"i":"","n":">=","t":">=[X <: Double, Y <: Double] <: Boolean","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#Abs-0","e":false,"i":"","n":"Abs","t":"Abs[X <: Double] <: Double","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#Max-0","e":false,"i":"","n":"Max","t":"Max[X <: Double, Y <: Double] <: Double","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#Min-0","e":false,"i":"","n":"Min","t":"Min[X <: Double, Y <: Double] <: Double","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#Negate-0","e":false,"i":"","n":"Negate","t":"Negate[X <: Double] <: Double","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#ToFloat-0","e":false,"i":"","n":"ToFloat","t":"ToFloat[X <: Double] <: Float","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#ToInt-0","e":false,"i":"","n":"ToInt","t":"ToInt[X <: Double] <: Int","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/double$.html#ToLong-0","e":false,"i":"","n":"ToLong","t":"ToLong[X <: Double] <: Long","d":"scala.compiletime.ops.double","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#","e":false,"i":"","n":"float","t":"float","d":"scala.compiletime.ops","k":"object","x":""},
{"l":"api/scala/compiletime/ops/float$.html#%-0","e":false,"i":"","n":"%","t":"%[X <: Float, Y <: Float] <: Float","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#*-0","e":false,"i":"","n":"*","t":"*[X <: Float, Y <: Float] <: Float","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#+-0","e":false,"i":"","n":"+","t":"+[X <: Float, Y <: Float] <: Float","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#--0","e":false,"i":"","n":"-","t":"-[X <: Float, Y <: Float] <: Float","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#/-0","e":false,"i":"","n":"/","t":"/[X <: Float, Y <: Float] <: Float","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#<-0","e":false,"i":"","n":"<","t":"<[X <: Float, Y <: Float] <: Boolean","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#<=-0","e":false,"i":"","n":"<=","t":"<=[X <: Float, Y <: Float] <: Boolean","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#>-0","e":false,"i":"","n":">","t":">[X <: Float, Y <: Float] <: Boolean","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#>=-0","e":false,"i":"","n":">=","t":">=[X <: Float, Y <: Float] <: Boolean","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#Abs-0","e":false,"i":"","n":"Abs","t":"Abs[X <: Float] <: Float","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#Max-0","e":false,"i":"","n":"Max","t":"Max[X <: Float, Y <: Float] <: Float","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#Min-0","e":false,"i":"","n":"Min","t":"Min[X <: Float, Y <: Float] <: Float","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#Negate-0","e":false,"i":"","n":"Negate","t":"Negate[X <: Float] <: Float","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#ToDouble-0","e":false,"i":"","n":"ToDouble","t":"ToDouble[X <: Float] <: Double","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#ToInt-0","e":false,"i":"","n":"ToInt","t":"ToInt[X <: Float] <: Int","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/float$.html#ToLong-0","e":false,"i":"","n":"ToLong","t":"ToLong[X <: Float] <: Long","d":"scala.compiletime.ops.float","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#","e":false,"i":"","n":"int","t":"int","d":"scala.compiletime.ops","k":"object","x":""},
{"l":"api/scala/compiletime/ops/int$.html#%-0","e":false,"i":"","n":"%","t":"%[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#*-0","e":false,"i":"","n":"*","t":"*[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#+-0","e":false,"i":"","n":"+","t":"+[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#--0","e":false,"i":"","n":"-","t":"-[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#/-0","e":false,"i":"","n":"/","t":"/[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#<-0","e":false,"i":"","n":"<","t":"<[X <: Int, Y <: Int] <: Boolean","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#<<-0","e":false,"i":"","n":"<<","t":"<<[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#<=-0","e":false,"i":"","n":"<=","t":"<=[X <: Int, Y <: Int] <: Boolean","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#>-0","e":false,"i":"","n":">","t":">[X <: Int, Y <: Int] <: Boolean","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#>=-0","e":false,"i":"","n":">=","t":">=[X <: Int, Y <: Int] <: Boolean","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#>>-0","e":false,"i":"","n":">>","t":">>[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#>>>-0","e":false,"i":"","n":">>>","t":">>>[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#Abs-0","e":false,"i":"","n":"Abs","t":"Abs[X <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#BitwiseAnd-0","e":false,"i":"","n":"BitwiseAnd","t":"BitwiseAnd[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#BitwiseOr-0","e":false,"i":"","n":"BitwiseOr","t":"BitwiseOr[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#Max-0","e":false,"i":"","n":"Max","t":"Max[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#Min-0","e":false,"i":"","n":"Min","t":"Min[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#Negate-0","e":false,"i":"","n":"Negate","t":"Negate[X <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#NumberOfLeadingZeros-0","e":false,"i":"","n":"NumberOfLeadingZeros","t":"NumberOfLeadingZeros[X <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#S-0","e":false,"i":"","n":"S","t":"S[N <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#ToDouble-0","e":false,"i":"","n":"ToDouble","t":"ToDouble[X <: Int] <: Double","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#ToFloat-0","e":false,"i":"","n":"ToFloat","t":"ToFloat[X <: Int] <: Float","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#ToLong-0","e":false,"i":"","n":"ToLong","t":"ToLong[X <: Int] <: Long","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#ToString-0","e":false,"i":"","n":"ToString","t":"ToString[X <: Int] <: String","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/int$.html#^-0","e":false,"i":"","n":"^","t":"^[X <: Int, Y <: Int] <: Int","d":"scala.compiletime.ops.int","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#","e":false,"i":"","n":"long","t":"long","d":"scala.compiletime.ops","k":"object","x":""},
{"l":"api/scala/compiletime/ops/long$.html#%-0","e":false,"i":"","n":"%","t":"%[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#*-0","e":false,"i":"","n":"*","t":"*[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#+-0","e":false,"i":"","n":"+","t":"+[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#--0","e":false,"i":"","n":"-","t":"-[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#/-0","e":false,"i":"","n":"/","t":"/[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#<-0","e":false,"i":"","n":"<","t":"<[X <: Long, Y <: Long] <: Boolean","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#<<-0","e":false,"i":"","n":"<<","t":"<<[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#<=-0","e":false,"i":"","n":"<=","t":"<=[X <: Long, Y <: Long] <: Boolean","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#>-0","e":false,"i":"","n":">","t":">[X <: Long, Y <: Long] <: Boolean","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#>=-0","e":false,"i":"","n":">=","t":">=[X <: Long, Y <: Long] <: Boolean","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#>>-0","e":false,"i":"","n":">>","t":">>[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#>>>-0","e":false,"i":"","n":">>>","t":">>>[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#Abs-0","e":false,"i":"","n":"Abs","t":"Abs[X <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#BitwiseAnd-0","e":false,"i":"","n":"BitwiseAnd","t":"BitwiseAnd[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#BitwiseOr-0","e":false,"i":"","n":"BitwiseOr","t":"BitwiseOr[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#Max-0","e":false,"i":"","n":"Max","t":"Max[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#Min-0","e":false,"i":"","n":"Min","t":"Min[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#Negate-0","e":false,"i":"","n":"Negate","t":"Negate[X <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#NumberOfLeadingZeros-0","e":false,"i":"","n":"NumberOfLeadingZeros","t":"NumberOfLeadingZeros[X <: Long] <: Int","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#S-0","e":false,"i":"","n":"S","t":"S[N <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#ToDouble-0","e":false,"i":"","n":"ToDouble","t":"ToDouble[X <: Long] <: Double","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#ToFloat-0","e":false,"i":"","n":"ToFloat","t":"ToFloat[X <: Long] <: Float","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#ToInt-0","e":false,"i":"","n":"ToInt","t":"ToInt[X <: Long] <: Int","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/long$.html#^-0","e":false,"i":"","n":"^","t":"^[X <: Long, Y <: Long] <: Long","d":"scala.compiletime.ops.long","k":"type","x":""},
{"l":"api/scala/compiletime/ops/string$.html#","e":false,"i":"","n":"string","t":"string","d":"scala.compiletime.ops","k":"object","x":""},
{"l":"api/scala/compiletime/ops/string$.html#+-0","e":false,"i":"","n":"+","t":"+[X <: String, Y <: String] <: String","d":"scala.compiletime.ops.string","k":"type","x":""},
{"l":"api/scala/compiletime/ops/string$.html#CharAt-0","e":false,"i":"","n":"CharAt","t":"CharAt[S <: String, Idx <: Int] <: Char","d":"scala.compiletime.ops.string","k":"type","x":""},
{"l":"api/scala/compiletime/ops/string$.html#Length-0","e":false,"i":"","n":"Length","t":"Length[X <: String] <: Int","d":"scala.compiletime.ops.string","k":"type","x":""},
{"l":"api/scala/compiletime/ops/string$.html#Matches-0","e":false,"i":"","n":"Matches","t":"Matches[S <: String, Regex <: String] <: Boolean","d":"scala.compiletime.ops.string","k":"type","x":""},
{"l":"api/scala/compiletime/ops/string$.html#Substring-0","e":false,"i":"","n":"Substring","t":"Substring[S <: String, IBeg <: Int, IEnd <: Int] <: String","d":"scala.compiletime.ops.string","k":"type","x":""},
{"l":"api/scala/compiletime/testing.html#","e":false,"i":"","n":"scala.compiletime.testing","t":"scala.compiletime.testing","d":"","k":"package","x":""},
{"l":"api/scala/compiletime/testing.html#typeCheckErrors-94d","e":false,"i":"","n":"typeCheckErrors","t":"typeCheckErrors(inline code: String): List[Error]","d":"scala.compiletime.testing","k":"def","x":""},
{"l":"api/scala/compiletime/testing.html#typeChecks-fffffd1b","e":false,"i":"","n":"typeChecks","t":"typeChecks(inline code: String): Boolean","d":"scala.compiletime.testing","k":"def","x":""},
{"l":"api/scala/compiletime/testing/Error.html#","e":false,"i":"","n":"Error","t":"Error(message: String, lineContent: String, column: Int, kind: ErrorKind)","d":"scala.compiletime.testing","k":"class","x":""},
{"l":"api/scala/compiletime/testing/ErrorKind.html#","e":false,"i":"","n":"ErrorKind","t":"ErrorKind","d":"scala.compiletime.testing","k":"trait","x":""},
{"l":"api/scala/compiletime/testing/ErrorKind$.html#","e":false,"i":"","n":"ErrorKind","t":"ErrorKind","d":"scala.compiletime.testing","k":"object","x":""},
{"l":"api/scala/compiletime/testing/ErrorKind$$Parser$.html#","e":false,"i":"","n":"Parser","t":"Parser extends ErrorKind","d":"scala.compiletime.testing.ErrorKind","k":"object","x":""},
{"l":"api/scala/compiletime/testing/ErrorKind$$Typer$.html#","e":false,"i":"","n":"Typer","t":"Typer extends ErrorKind","d":"scala.compiletime.testing.ErrorKind","k":"object","x":""},
{"l":"api/scala/compiletime/Erased.html#","e":false,"i":"","n":"Erased","t":"Erased","d":"scala.compiletime","k":"trait","x":""},
{"l":"api/scala/concurrent.html#","e":false,"i":"","n":"scala.concurrent","t":"scala.concurrent","d":"","k":"package","x":"This package object contains primitives for concurrent and parallel programming."},
{"l":"api/scala/concurrent.html#CancellationException-0","e":false,"i":"","n":"CancellationException","t":"CancellationException = CancellationException","d":"scala.concurrent","k":"type","x":""},
{"l":"api/scala/concurrent.html#ExecutionException-0","e":false,"i":"","n":"ExecutionException","t":"ExecutionException = ExecutionException","d":"scala.concurrent","k":"type","x":""},
{"l":"api/scala/concurrent.html#TimeoutException-0","e":false,"i":"","n":"TimeoutException","t":"TimeoutException = TimeoutException","d":"scala.concurrent","k":"type","x":""},
{"l":"api/scala/concurrent.html#blocking-fffff7d2","e":false,"i":"","n":"blocking","t":"blocking[T](body: => T): T","d":"scala.concurrent","k":"def","x":"Used to designate a piece of code which potentially blocks, allowing the current BlockContext to adjust\nthe runtime's behavior.\nProperly marking blocking code may improve performance or avoid deadlocks."},
{"l":"api/scala/concurrent/duration.html#","e":false,"i":"","n":"scala.concurrent.duration","t":"scala.concurrent.duration","d":"","k":"package","x":""},
{"l":"api/scala/concurrent/duration.html#DAYS-0","e":false,"i":"","n":"DAYS","t":"DAYS: TimeUnit","d":"scala.concurrent.duration","k":"val","x":""},
{"l":"api/scala/concurrent/duration.html#DoubleMult-5b2","e":false,"i":"","n":"DoubleMult","t":"DoubleMult(f: Double): DoubleMult","d":"scala.concurrent.duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration.html#DurationDouble-5b2","e":false,"i":"","n":"DurationDouble","t":"DurationDouble(d: Double): DurationDouble","d":"scala.concurrent.duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration.html#DurationInt-fffffbe0","e":false,"i":"","n":"DurationInt","t":"DurationInt(n: Int): DurationInt","d":"scala.concurrent.duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration.html#DurationLong-fffff788","e":false,"i":"","n":"DurationLong","t":"DurationLong(n: Long): DurationLong","d":"scala.concurrent.duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration.html#HOURS-0","e":false,"i":"","n":"HOURS","t":"HOURS: TimeUnit","d":"scala.concurrent.duration","k":"val","x":""},
{"l":"api/scala/concurrent/duration.html#IntMult-fffffbe0","e":false,"i":"","n":"IntMult","t":"IntMult(i: Int): IntMult","d":"scala.concurrent.duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration.html#LongMult-fffff788","e":false,"i":"","n":"LongMult","t":"LongMult(i: Long): LongMult","d":"scala.concurrent.duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration.html#MICROSECONDS-0","e":false,"i":"","n":"MICROSECONDS","t":"MICROSECONDS: TimeUnit","d":"scala.concurrent.duration","k":"val","x":""},
{"l":"api/scala/concurrent/duration.html#MILLISECONDS-0","e":false,"i":"","n":"MILLISECONDS","t":"MILLISECONDS: TimeUnit","d":"scala.concurrent.duration","k":"val","x":""},
{"l":"api/scala/concurrent/duration.html#MINUTES-0","e":false,"i":"","n":"MINUTES","t":"MINUTES: TimeUnit","d":"scala.concurrent.duration","k":"val","x":""},
{"l":"api/scala/concurrent/duration.html#NANOSECONDS-0","e":false,"i":"","n":"NANOSECONDS","t":"NANOSECONDS: TimeUnit","d":"scala.concurrent.duration","k":"val","x":""},
{"l":"api/scala/concurrent/duration.html#SECONDS-0","e":false,"i":"","n":"SECONDS","t":"SECONDS: TimeUnit","d":"scala.concurrent.duration","k":"val","x":""},
{"l":"api/scala/concurrent/duration.html#TimeUnit-0","e":false,"i":"","n":"TimeUnit","t":"TimeUnit = TimeUnit","d":"scala.concurrent.duration","k":"type","x":""},
{"l":"api/scala/concurrent/duration.html#durationToPair-fffff0b1","e":false,"i":"","n":"durationToPair","t":"durationToPair(d: Duration): (Long, TimeUnit)","d":"scala.concurrent.duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration.html#pairIntToDuration-ab1","e":false,"i":"","n":"pairIntToDuration","t":"pairIntToDuration(p: (Int, TimeUnit)): Duration","d":"scala.concurrent.duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration.html#pairLongToDuration-2c0","e":false,"i":"","n":"pairLongToDuration","t":"pairLongToDuration(p: (Long, TimeUnit)): FiniteDuration","d":"scala.concurrent.duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/Deadline.html#","e":false,"i":"","n":"Deadline","t":"Deadline extends Ordered[Deadline]","d":"scala.concurrent.duration","k":"class","x":"This class stores a deadline, as obtained via Deadline.now or the\nduration DSL:"},
{"l":"api/scala/concurrent/duration/Deadline.html#+-fffffed1","e":false,"i":"","n":"+","t":"+(other: FiniteDuration): Deadline","d":"scala.concurrent.duration.Deadline","k":"def","x":"Return a deadline advanced (i.e., moved into the future) by the given duration.\n"},
{"l":"api/scala/concurrent/duration/Deadline.html#--fffffed1","e":false,"i":"","n":"-","t":"-(other: FiniteDuration): Deadline","d":"scala.concurrent.duration.Deadline","k":"def","x":"Return a deadline moved backwards (i.e., towards the past) by the given duration.\n"},
{"l":"api/scala/concurrent/duration/Deadline.html#--fffff351","e":false,"i":"","n":"-","t":"-(other: Deadline): FiniteDuration","d":"scala.concurrent.duration.Deadline","k":"def","x":"Calculate time difference between this and the other deadline, where the result is directed (i.e., may be negative).\n"},
{"l":"api/scala/concurrent/duration/Deadline.html#compare-5c4","e":false,"i":"","n":"compare","t":"compare(other: Deadline): Int","d":"scala.concurrent.duration.Deadline","k":"def","x":"The natural ordering for deadline is determined by the natural order of the underlying (finite) duration.\n"},
{"l":"api/scala/concurrent/duration/Deadline.html#hasTimeLeft-fffff760","e":false,"i":"","n":"hasTimeLeft","t":"hasTimeLeft(): Boolean","d":"scala.concurrent.duration.Deadline","k":"def","x":"Determine whether the deadline still lies in the future at the point where this method is called."},
{"l":"api/scala/concurrent/duration/Deadline.html#isOverdue-fffff760","e":false,"i":"","n":"isOverdue","t":"isOverdue(): Boolean","d":"scala.concurrent.duration.Deadline","k":"def","x":"Determine whether the deadline lies in the past at the point where this method is called."},
{"l":"api/scala/concurrent/duration/Deadline.html#timeLeft-0","e":false,"i":"","n":"timeLeft","t":"timeLeft: FiniteDuration","d":"scala.concurrent.duration.Deadline","k":"def","x":"Calculate time difference between this duration and now; the result is negative if the deadline has passed."},
{"l":"api/scala/concurrent/duration/Deadline$.html#","e":false,"i":"","n":"Deadline","t":"Deadline","d":"scala.concurrent.duration","k":"object","x":""},
{"l":"api/scala/concurrent/duration/Deadline$.html#now-0","e":false,"i":"","n":"now","t":"now: Deadline","d":"scala.concurrent.duration.Deadline","k":"def","x":"Construct a deadline due exactly at the point where this method is called. Useful for then\nadvancing it to obtain a future deadline, or for sampling the current time exactly once and\nthen comparing it to multiple deadlines (using subtraction).\n"},
{"l":"api/scala/concurrent/duration/Deadline$$DeadlineIsOrdered$.html#","e":false,"i":"","n":"DeadlineIsOrdered","t":"DeadlineIsOrdered extends Ordering[Deadline]","d":"scala.concurrent.duration.Deadline","k":"object","x":"The natural ordering for deadline is determined by the natural order of the underlying (finite) duration.\n"},
{"l":"api/scala/concurrent/duration/Deadline$$DeadlineIsOrdered$.html#compare-521","e":false,"i":"","n":"compare","t":"compare(a: Deadline, b: Deadline): Int","d":"scala.concurrent.duration.Deadline.DeadlineIsOrdered","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/concurrent/duration/DoubleMult.html#","e":false,"i":"","n":"DoubleMult","t":"DoubleMult(f: Double) extends AnyVal","d":"scala.concurrent.duration","k":"class","x":""},
{"l":"api/scala/concurrent/duration/DoubleMult.html#*-fffff03e","e":false,"i":"","n":"*","t":"*(d: Duration): Duration","d":"scala.concurrent.duration.DoubleMult","k":"def","x":""},
{"l":"api/scala/concurrent/duration/Duration$.html#","e":false,"i":"","n":"Duration","t":"Duration","d":"scala.concurrent.duration","k":"object","x":""},
{"l":"api/scala/concurrent/duration/Duration$.html#Inf-0","e":false,"i":"","n":"Inf","t":"Inf: Infinite","d":"scala.concurrent.duration.Duration","k":"val","x":"Infinite duration: greater than any other (apart from Undefined) and not equal to any other\nbut itself. This value closely corresponds to Double.PositiveInfinity,\nmatching its semantics in arithmetic operations.\n"},
{"l":"api/scala/concurrent/duration/Duration$.html#MinusInf-0","e":false,"i":"","n":"MinusInf","t":"MinusInf: Infinite","d":"scala.concurrent.duration.Duration","k":"val","x":"Infinite duration: less than any other and not equal to any other\nbut itself. This value closely corresponds to Double.NegativeInfinity,\nmatching its semantics in arithmetic operations.\n"},
{"l":"api/scala/concurrent/duration/Duration$.html#Undefined-0","e":false,"i":"","n":"Undefined","t":"Undefined: Infinite","d":"scala.concurrent.duration.Duration","k":"val","x":"The Undefined value corresponds closely to Double.NaN:"},
{"l":"api/scala/concurrent/duration/Duration$.html#Zero-0","e":false,"i":"","n":"Zero","t":"Zero: FiniteDuration","d":"scala.concurrent.duration.Duration","k":"val","x":"Preconstructed value of 0.days.\n"},
{"l":"api/scala/concurrent/duration/Duration$.html#apply-fffff40e","e":false,"i":"","n":"apply","t":"apply(length: Double, unit: TimeUnit): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Construct a Duration from the given length and unit. Observe that nanosecond precision may be lost if"},
{"l":"api/scala/concurrent/duration/Duration$.html#apply-92","e":false,"i":"","n":"apply","t":"apply(length: Long, unit: TimeUnit): FiniteDuration","d":"scala.concurrent.duration.Duration","k":"def","x":"Construct a finite duration from the given length and time unit. The unit given is retained\nthroughout calculations as long as possible, so that it can be retrieved later.\n"},
{"l":"api/scala/concurrent/duration/Duration$.html#apply-537","e":false,"i":"","n":"apply","t":"apply(length: Long, unit: String): FiniteDuration","d":"scala.concurrent.duration.Duration","k":"def","x":"Construct a finite duration from the given length and time unit, where the latter is\nlooked up in a list of string representation. Valid choices are:"},
{"l":"api/scala/concurrent/duration/Duration$.html#apply-fffff524","e":false,"i":"","n":"apply","t":"apply(s: String): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Parse String into Duration.  Format is \"<length><unit>\", where\nwhitespace is allowed before, between and after the parts. Infinities are\ndesignated by \"Inf\", \"PlusInf\", \"+Inf\", \"Duration.Inf\" and \"-Inf\", \"MinusInf\" or \"Duration.MinusInf\".\nUndefined is designated by \"Duration.Undefined\".\n"},
{"l":"api/scala/concurrent/duration/Duration$.html#create-92","e":false,"i":"","n":"create","t":"create(length: Long, unit: TimeUnit): FiniteDuration","d":"scala.concurrent.duration.Duration","k":"def","x":"Construct a finite duration from the given length and time unit. The unit given is retained\nthroughout calculations as long as possible, so that it can be retrieved later.\n"},
{"l":"api/scala/concurrent/duration/Duration$.html#create-fffff40e","e":false,"i":"","n":"create","t":"create(length: Double, unit: TimeUnit): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Construct a Duration from the given length and unit. Observe that nanosecond precision may be lost if"},
{"l":"api/scala/concurrent/duration/Duration$.html#create-537","e":false,"i":"","n":"create","t":"create(length: Long, unit: String): FiniteDuration","d":"scala.concurrent.duration.Duration","k":"def","x":"Construct a finite duration from the given length and time unit, where the latter is\nlooked up in a list of string representation. Valid choices are:"},
{"l":"api/scala/concurrent/duration/Duration$.html#create-fffff524","e":false,"i":"","n":"create","t":"create(s: String): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Parse String into Duration.  Format is \"<length><unit>\", where\nwhitespace is allowed before, between and after the parts. Infinities are\ndesignated by \"Inf\", \"PlusInf\", \"+Inf\" and \"-Inf\" or \"MinusInf\".\n"},
{"l":"api/scala/concurrent/duration/Duration$.html#fromNanos-b58","e":false,"i":"","n":"fromNanos","t":"fromNanos(nanos: Double): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Construct a possibly infinite or undefined Duration from the given number of nanoseconds."},
{"l":"api/scala/concurrent/duration/Duration$.html#fromNanos-fd2","e":false,"i":"","n":"fromNanos","t":"fromNanos(nanos: Long): FiniteDuration","d":"scala.concurrent.duration.Duration","k":"def","x":"Construct a finite duration from the given number of nanoseconds. The\nresult will have the coarsest possible time unit which can exactly express\nthis duration.\n"},
{"l":"api/scala/concurrent/duration/Duration$.html#unapply-fffffd22","e":false,"i":"","n":"unapply","t":"unapply(s: String): Option[(Long, TimeUnit)]","d":"scala.concurrent.duration.Duration","k":"def","x":"Extract length and time unit out of a string, where the format must match the description for apply(String).\nThe extractor will not match for malformed strings or non-finite durations.\n"},
{"l":"api/scala/concurrent/duration/Duration$.html#unapply-fffff7bc","e":false,"i":"","n":"unapply","t":"unapply(d: Duration): Option[(Long, TimeUnit)]","d":"scala.concurrent.duration.Duration","k":"def","x":"Extract length and time unit out of a duration, if it is finite.\n"},
{"l":"api/scala/concurrent/duration/Duration$$DurationIsOrdered$.html#","e":false,"i":"","n":"DurationIsOrdered","t":"DurationIsOrdered extends Ordering[Duration]","d":"scala.concurrent.duration.Duration","k":"object","x":"The natural ordering of durations matches the natural ordering for Double, including non-finite values.\n"},
{"l":"api/scala/concurrent/duration/Duration$$DurationIsOrdered$.html#compare-4a9","e":false,"i":"","n":"compare","t":"compare(a: Duration, b: Duration): Int","d":"scala.concurrent.duration.Duration.DurationIsOrdered","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#","e":false,"i":"","n":"Infinite","t":"Infinite extends Duration","d":"scala.concurrent.duration.Duration","k":"class","x":""},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#*-b58","e":false,"i":"","n":"*","t":"*(factor: Double): Duration","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return this duration multiplied by the scalar factor. When involving non-finite factors the semantics match those\nof Double."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#+-fffff03e","e":false,"i":"","n":"+","t":"+(other: Duration): Duration","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the sum of that duration and this. When involving non-finite summands the semantics match those\nof Double."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#--fffff03e","e":false,"i":"","n":"-","t":"-(other: Duration): Duration","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the difference of that duration and this. When involving non-finite summands the semantics match those\nof Double."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#/-b58","e":false,"i":"","n":"/","t":"/(divisor: Double): Duration","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return this duration divided by the scalar factor. When involving non-finite factors the semantics match those\nof Double."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#/-b18","e":false,"i":"","n":"/","t":"/(divisor: Duration): Double","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the quotient of this and that duration as floating-point number. The semantics are\ndetermined by Double as if calculating the quotient of the nanosecond lengths of both factors.\n"},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#isFinite-0","e":false,"i":"","n":"isFinite","t":"isFinite: Boolean","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"This method returns whether this duration is finite, which is not the same as\n!isInfinite for Double because this method also returns false for Duration.Undefined.\n"},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#length-0","e":false,"i":"","n":"length","t":"length: Long","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Obtain the length of this Duration measured in the unit obtained by the unit method."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#toCoarsest-0","e":false,"i":"","n":"toCoarsest","t":"toCoarsest: Duration","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return duration which is equal to this duration but with a coarsest Unit, or self in case it is already the coarsest Unit"},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#toDays-0","e":false,"i":"","n":"toDays","t":"toDays: Long","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the length of this duration measured in whole days, rounding towards zero."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#toHours-0","e":false,"i":"","n":"toHours","t":"toHours: Long","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the length of this duration measured in whole hours, rounding towards zero."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#toMicros-0","e":false,"i":"","n":"toMicros","t":"toMicros: Long","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the length of this duration measured in whole microseconds, rounding towards zero."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#toMillis-0","e":false,"i":"","n":"toMillis","t":"toMillis: Long","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the length of this duration measured in whole milliseconds, rounding towards zero."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#toMinutes-0","e":false,"i":"","n":"toMinutes","t":"toMinutes: Long","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the length of this duration measured in whole minutes, rounding towards zero."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#toNanos-0","e":false,"i":"","n":"toNanos","t":"toNanos: Long","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the length of this duration measured in whole nanoseconds, rounding towards zero."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#toSeconds-0","e":false,"i":"","n":"toSeconds","t":"toSeconds: Long","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Return the length of this duration measured in whole seconds, rounding towards zero."},
{"l":"api/scala/concurrent/duration/Duration$$Infinite.html#unit-0","e":false,"i":"","n":"unit","t":"unit: TimeUnit","d":"scala.concurrent.duration.Duration.Infinite","k":"def","x":"Obtain the time unit in which the length of this duration is measured."},
{"l":"api/scala/concurrent/duration/Duration.html#","e":false,"i":"","n":"Duration","t":"Duration extends Serializable, Ordered[Duration]","d":"scala.concurrent.duration","k":"class","x":""},
{"l":"api/scala/concurrent/duration/Duration.html#*-b58","e":false,"i":"","n":"*","t":"*(factor: Double): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return this duration multiplied by the scalar factor. When involving non-finite factors the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#+-fffff03e","e":false,"i":"","n":"+","t":"+(other: Duration): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the sum of that duration and this. When involving non-finite summands the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#--fffff03e","e":false,"i":"","n":"-","t":"-(other: Duration): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the difference of that duration and this. When involving non-finite summands the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#/-b58","e":false,"i":"","n":"/","t":"/(divisor: Double): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return this duration divided by the scalar factor. When involving non-finite factors the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#/-b18","e":false,"i":"","n":"/","t":"/(divisor: Duration): Double","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the quotient of this and that duration as floating-point number. The semantics are\ndetermined by Double as if calculating the quotient of the nanosecond lengths of both factors.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#div-b58","e":false,"i":"","n":"div","t":"div(divisor: Double): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return this duration divided by the scalar factor. When involving non-finite factors the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#div-b18","e":false,"i":"","n":"div","t":"div(other: Duration): Double","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the quotient of this and that duration as floating-point number. The semantics are\ndetermined by Double as if calculating the quotient of the nanosecond lengths of both factors.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#gt-fffff5c1","e":false,"i":"","n":"gt","t":"gt(other: Duration): Boolean","d":"scala.concurrent.duration.Duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/Duration.html#gteq-fffff5c1","e":false,"i":"","n":"gteq","t":"gteq(other: Duration): Boolean","d":"scala.concurrent.duration.Duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/Duration.html#isFinite-0","e":false,"i":"","n":"isFinite","t":"isFinite: Boolean","d":"scala.concurrent.duration.Duration","k":"def","x":"This method returns whether this duration is finite, which is not the same as\n!isInfinite for Double because this method also returns false for Duration.Undefined.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#length-0","e":false,"i":"","n":"length","t":"length: Long","d":"scala.concurrent.duration.Duration","k":"def","x":"Obtain the length of this Duration measured in the unit obtained by the unit method.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#lt-fffff5c1","e":false,"i":"","n":"lt","t":"lt(other: Duration): Boolean","d":"scala.concurrent.duration.Duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/Duration.html#lteq-fffff5c1","e":false,"i":"","n":"lteq","t":"lteq(other: Duration): Boolean","d":"scala.concurrent.duration.Duration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/Duration.html#max-fffff03e","e":false,"i":"","n":"max","t":"max(other: Duration): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the larger of this and that duration as determined by the natural ordering.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#min-fffff03e","e":false,"i":"","n":"min","t":"min(other: Duration): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the smaller of this and that duration as determined by the natural ordering.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#minus-fffff03e","e":false,"i":"","n":"minus","t":"minus(other: Duration): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the difference of that duration and this. When involving non-finite summands the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#mul-b58","e":false,"i":"","n":"mul","t":"mul(factor: Double): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return this duration multiplied by the scalar factor. When involving non-finite factors the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#neg-7ff","e":false,"i":"","n":"neg","t":"neg(): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Negate this duration. The only two values which are mapped to themselves are Duration.Zero and Duration.Undefined.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#plus-fffff03e","e":false,"i":"","n":"plus","t":"plus(other: Duration): Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the sum of that duration and this. When involving non-finite summands the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#toCoarsest-0","e":false,"i":"","n":"toCoarsest","t":"toCoarsest: Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Return duration which is equal to this duration but with a coarsest Unit, or self in case it is already the coarsest Unit"},
{"l":"api/scala/concurrent/duration/Duration.html#toDays-0","e":false,"i":"","n":"toDays","t":"toDays: Long","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the length of this duration measured in whole days, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#toHours-0","e":false,"i":"","n":"toHours","t":"toHours: Long","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the length of this duration measured in whole hours, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#toMicros-0","e":false,"i":"","n":"toMicros","t":"toMicros: Long","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the length of this duration measured in whole microseconds, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#toMillis-0","e":false,"i":"","n":"toMillis","t":"toMillis: Long","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the length of this duration measured in whole milliseconds, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#toMinutes-0","e":false,"i":"","n":"toMinutes","t":"toMinutes: Long","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the length of this duration measured in whole minutes, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#toNanos-0","e":false,"i":"","n":"toNanos","t":"toNanos: Long","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the length of this duration measured in whole nanoseconds, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#toSeconds-0","e":false,"i":"","n":"toSeconds","t":"toSeconds: Long","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the length of this duration measured in whole seconds, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#toUnit-fffff461","e":false,"i":"","n":"toUnit","t":"toUnit(unit: TimeUnit): Double","d":"scala.concurrent.duration.Duration","k":"def","x":"Return the number of nanoseconds as floating point number, scaled down to the given unit.\nThe result may not precisely represent this duration due to the Double datatype's inherent\nlimitations (mantissa size effectively 53 bits). Non-finite durations are represented as\n- Duration.Undefined is mapped to Double.NaN\n- Duration.Inf is mapped to Double.PositiveInfinity\n- Duration.MinusInf is mapped to Double.NegativeInfinity\n"},
{"l":"api/scala/concurrent/duration/Duration.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: Duration","d":"scala.concurrent.duration.Duration","k":"def","x":"Negate this duration. The only two values which are mapped to themselves are Duration.Zero and Duration.Undefined.\n"},
{"l":"api/scala/concurrent/duration/Duration.html#unit-0","e":false,"i":"","n":"unit","t":"unit: TimeUnit","d":"scala.concurrent.duration.Duration","k":"def","x":"Obtain the time unit in which the length of this duration is measured.\n"},
{"l":"api/scala/concurrent/duration/DurationConversions.html#","e":false,"i":"","n":"DurationConversions","t":"DurationConversions","d":"scala.concurrent.duration","k":"trait","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#day-0","e":false,"i":"","n":"day","t":"day: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#day-e38","e":false,"i":"","n":"day","t":"day[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#days-0","e":false,"i":"","n":"days","t":"days: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#days-e38","e":false,"i":"","n":"days","t":"days[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#hour-0","e":false,"i":"","n":"hour","t":"hour: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#hour-e38","e":false,"i":"","n":"hour","t":"hour[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#hours-0","e":false,"i":"","n":"hours","t":"hours: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#hours-e38","e":false,"i":"","n":"hours","t":"hours[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#micro-0","e":false,"i":"","n":"micro","t":"micro: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#micro-e38","e":false,"i":"","n":"micro","t":"micro[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#micros-0","e":false,"i":"","n":"micros","t":"micros: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#micros-e38","e":false,"i":"","n":"micros","t":"micros[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#microsecond-0","e":false,"i":"","n":"microsecond","t":"microsecond: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#microsecond-e38","e":false,"i":"","n":"microsecond","t":"microsecond[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#microseconds-0","e":false,"i":"","n":"microseconds","t":"microseconds: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#microseconds-e38","e":false,"i":"","n":"microseconds","t":"microseconds[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#milli-0","e":false,"i":"","n":"milli","t":"milli: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#milli-e38","e":false,"i":"","n":"milli","t":"milli[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#millis-0","e":false,"i":"","n":"millis","t":"millis: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#millis-e38","e":false,"i":"","n":"millis","t":"millis[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#millisecond-0","e":false,"i":"","n":"millisecond","t":"millisecond: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#millisecond-e38","e":false,"i":"","n":"millisecond","t":"millisecond[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#milliseconds-0","e":false,"i":"","n":"milliseconds","t":"milliseconds: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#milliseconds-e38","e":false,"i":"","n":"milliseconds","t":"milliseconds[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#minute-0","e":false,"i":"","n":"minute","t":"minute: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#minute-e38","e":false,"i":"","n":"minute","t":"minute[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#minutes-0","e":false,"i":"","n":"minutes","t":"minutes: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#minutes-e38","e":false,"i":"","n":"minutes","t":"minutes[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#nano-0","e":false,"i":"","n":"nano","t":"nano: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#nano-e38","e":false,"i":"","n":"nano","t":"nano[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#nanos-0","e":false,"i":"","n":"nanos","t":"nanos: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#nanos-e38","e":false,"i":"","n":"nanos","t":"nanos[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#nanosecond-0","e":false,"i":"","n":"nanosecond","t":"nanosecond: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#nanosecond-e38","e":false,"i":"","n":"nanosecond","t":"nanosecond[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#nanoseconds-0","e":false,"i":"","n":"nanoseconds","t":"nanoseconds: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#nanoseconds-e38","e":false,"i":"","n":"nanoseconds","t":"nanoseconds[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#second-0","e":false,"i":"","n":"second","t":"second: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#second-e38","e":false,"i":"","n":"second","t":"second[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#seconds-0","e":false,"i":"","n":"seconds","t":"seconds: FiniteDuration","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions.html#seconds-e38","e":false,"i":"","n":"seconds","t":"seconds[C](c: C)(implicit ev: Classifier[C]): ev.R","d":"scala.concurrent.duration.DurationConversions","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions$.html#","e":false,"i":"","n":"DurationConversions","t":"DurationConversions","d":"scala.concurrent.duration","k":"object","x":"This object just holds some cogs which make the DSL machine work, not for direct consumption.\n"},
{"l":"api/scala/concurrent/duration/DurationConversions$$Classifier.html#","e":false,"i":"","n":"Classifier","t":"Classifier[C]","d":"scala.concurrent.duration.DurationConversions","k":"trait","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions$$Classifier.html#R-0","e":false,"i":"","n":"R","t":"R","d":"scala.concurrent.duration.DurationConversions.Classifier","k":"type","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions$$Classifier.html#convert-fffffb21","e":false,"i":"","n":"convert","t":"convert(d: FiniteDuration): R","d":"scala.concurrent.duration.DurationConversions.Classifier","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions$$fromNowConvert$.html#","e":false,"i":"","n":"fromNowConvert","t":"fromNowConvert extends Classifier[fromNow.type]","d":"scala.concurrent.duration.DurationConversions","k":"object","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions$$fromNowConvert$.html#R-0","e":false,"i":"","n":"R","t":"R = Deadline","d":"scala.concurrent.duration.DurationConversions.fromNowConvert","k":"type","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions$$fromNowConvert$.html#convert-fffffed1","e":false,"i":"","n":"convert","t":"convert(d: FiniteDuration): Deadline","d":"scala.concurrent.duration.DurationConversions.fromNowConvert","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions$$spanConvert$.html#","e":false,"i":"","n":"spanConvert","t":"spanConvert extends Classifier[span.type]","d":"scala.concurrent.duration.DurationConversions","k":"object","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions$$spanConvert$.html#R-0","e":false,"i":"","n":"R","t":"R = FiniteDuration","d":"scala.concurrent.duration.DurationConversions.spanConvert","k":"type","x":""},
{"l":"api/scala/concurrent/duration/DurationConversions$$spanConvert$.html#convert-51c","e":false,"i":"","n":"convert","t":"convert(d: FiniteDuration): FiniteDuration","d":"scala.concurrent.duration.DurationConversions.spanConvert","k":"def","x":""},
{"l":"api/scala/concurrent/duration/DurationDouble.html#","e":false,"i":"","n":"DurationDouble","t":"DurationDouble(d: Double) extends AnyVal, DurationConversions","d":"scala.concurrent.duration","k":"class","x":""},
{"l":"api/scala/concurrent/duration/DurationInt.html#","e":false,"i":"","n":"DurationInt","t":"DurationInt(n: Int) extends AnyVal, DurationConversions","d":"scala.concurrent.duration","k":"class","x":""},
{"l":"api/scala/concurrent/duration/DurationLong.html#","e":false,"i":"","n":"DurationLong","t":"DurationLong(n: Long) extends AnyVal, DurationConversions","d":"scala.concurrent.duration","k":"class","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration$.html#","e":false,"i":"","n":"FiniteDuration","t":"FiniteDuration","d":"scala.concurrent.duration","k":"object","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration$.html#apply-92","e":false,"i":"","n":"apply","t":"apply(length: Long, unit: TimeUnit): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration$.html#apply-537","e":false,"i":"","n":"apply","t":"apply(length: Long, unit: String): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration$$FiniteDurationIsOrdered$.html#","e":false,"i":"","n":"FiniteDurationIsOrdered","t":"FiniteDurationIsOrdered extends Ordering[FiniteDuration]","d":"scala.concurrent.duration.FiniteDuration","k":"object","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration$$FiniteDurationIsOrdered$.html#compare-98b","e":false,"i":"","n":"compare","t":"compare(a: FiniteDuration, b: FiniteDuration): Int","d":"scala.concurrent.duration.FiniteDuration.FiniteDurationIsOrdered","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#","e":false,"i":"","n":"FiniteDuration","t":"FiniteDuration(val length: Long, val unit: TimeUnit) extends Duration","d":"scala.concurrent.duration","k":"class","x":"This class represents a finite duration. Its addition and subtraction operators are overloaded to retain\nthis guarantee statically. The range of this class is limited to +-(2^63-1)ns, which is roughly 292  years.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#*-b58","e":false,"i":"","n":"*","t":"*(factor: Double): Duration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return this duration multiplied by the scalar factor. When involving non-finite factors the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#*-fd2","e":false,"i":"","n":"*","t":"*(factor: Long): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the product of this duration and the given integer factor.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#+-fffff03e","e":false,"i":"","n":"+","t":"+(other: Duration): Duration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the sum of that duration and this. When involving non-finite summands the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#+-51c","e":false,"i":"","n":"+","t":"+(other: FiniteDuration): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#--fffff03e","e":false,"i":"","n":"-","t":"-(other: Duration): Duration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the difference of that duration and this. When involving non-finite summands the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#--51c","e":false,"i":"","n":"-","t":"-(other: FiniteDuration): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#/-b58","e":false,"i":"","n":"/","t":"/(divisor: Double): Duration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return this duration divided by the scalar factor. When involving non-finite factors the semantics match those\nof Double.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#/-b18","e":false,"i":"","n":"/","t":"/(divisor: Duration): Double","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the quotient of this and that duration as floating-point number. The semantics are\ndetermined by Double as if calculating the quotient of the nanosecond lengths of both factors.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#/-fd2","e":false,"i":"","n":"/","t":"/(divisor: Long): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the quotient of this duration and the given integer factor.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#compare-608","e":false,"i":"","n":"compare","t":"compare(other: Duration): Int","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Result of comparing this with operand that."},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#div-fd2","e":false,"i":"","n":"div","t":"div(divisor: Long): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the quotient of this duration and the given integer factor.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#fromNow-0","e":false,"i":"","n":"fromNow","t":"fromNow: Deadline","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Construct a Deadline from this duration by adding it to the current instant Deadline.now.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#isFinite-0","e":false,"i":"","n":"isFinite","t":"isFinite: Boolean","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"This method returns whether this duration is finite, which is not the same as\n!isInfinite for Double because this method also returns false for Duration.Undefined.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#length-0","e":false,"i":"","n":"length","t":"length: Long","d":"scala.concurrent.duration.FiniteDuration","k":"val","x":"Obtain the length of this Duration measured in the unit obtained by the unit method.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#max-51c","e":false,"i":"","n":"max","t":"max(other: FiniteDuration): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#min-51c","e":false,"i":"","n":"min","t":"min(other: FiniteDuration): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#minus-51c","e":false,"i":"","n":"minus","t":"minus(other: FiniteDuration): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#mul-fd2","e":false,"i":"","n":"mul","t":"mul(factor: Long): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the product of this duration and the given integer factor.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#plus-51c","e":false,"i":"","n":"plus","t":"plus(other: FiniteDuration): FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":""},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#toDays-0","e":false,"i":"","n":"toDays","t":"toDays: Long","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the length of this duration measured in whole days, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#toHours-0","e":false,"i":"","n":"toHours","t":"toHours: Long","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the length of this duration measured in whole hours, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#toMicros-0","e":false,"i":"","n":"toMicros","t":"toMicros: Long","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the length of this duration measured in whole microseconds, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#toMillis-0","e":false,"i":"","n":"toMillis","t":"toMillis: Long","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the length of this duration measured in whole milliseconds, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#toMinutes-0","e":false,"i":"","n":"toMinutes","t":"toMinutes: Long","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the length of this duration measured in whole minutes, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#toNanos-0","e":false,"i":"","n":"toNanos","t":"toNanos: Long","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the length of this duration measured in whole nanoseconds, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#toSeconds-0","e":false,"i":"","n":"toSeconds","t":"toSeconds: Long","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the length of this duration measured in whole seconds, rounding towards zero.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#toUnit-fffff461","e":false,"i":"","n":"toUnit","t":"toUnit(u: TimeUnit): Double","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Return the number of nanoseconds as floating point number, scaled down to the given unit.\nThe result may not precisely represent this duration due to the Double datatype's inherent\nlimitations (mantissa size effectively 53 bits). Non-finite durations are represented as\n- Duration.Undefined is mapped to Double.NaN\n- Duration.Inf is mapped to Double.PositiveInfinity\n- Duration.MinusInf is mapped to Double.NegativeInfinity\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: FiniteDuration","d":"scala.concurrent.duration.FiniteDuration","k":"def","x":"Negate this duration. The only two values which are mapped to themselves are Duration.Zero and Duration.Undefined.\n"},
{"l":"api/scala/concurrent/duration/FiniteDuration.html#unit-0","e":false,"i":"","n":"unit","t":"unit: TimeUnit","d":"scala.concurrent.duration.FiniteDuration","k":"val","x":"Obtain the time unit in which the length of this duration is measured.\n"},
{"l":"api/scala/concurrent/duration/IntMult.html#","e":false,"i":"","n":"IntMult","t":"IntMult(i: Int) extends AnyVal","d":"scala.concurrent.duration","k":"class","x":""},
{"l":"api/scala/concurrent/duration/IntMult.html#*-fffff03e","e":false,"i":"","n":"*","t":"*(d: Duration): Duration","d":"scala.concurrent.duration.IntMult","k":"def","x":""},
{"l":"api/scala/concurrent/duration/IntMult.html#*-51c","e":false,"i":"","n":"*","t":"*(d: FiniteDuration): FiniteDuration","d":"scala.concurrent.duration.IntMult","k":"def","x":""},
{"l":"api/scala/concurrent/duration/LongMult.html#","e":false,"i":"","n":"LongMult","t":"LongMult(i: Long) extends AnyVal","d":"scala.concurrent.duration","k":"class","x":""},
{"l":"api/scala/concurrent/duration/LongMult.html#*-fffff03e","e":false,"i":"","n":"*","t":"*(d: Duration): Duration","d":"scala.concurrent.duration.LongMult","k":"def","x":""},
{"l":"api/scala/concurrent/duration/LongMult.html#*-51c","e":false,"i":"","n":"*","t":"*(d: FiniteDuration): FiniteDuration","d":"scala.concurrent.duration.LongMult","k":"def","x":""},
{"l":"api/scala/concurrent/duration/fromNow$.html#","e":false,"i":"","n":"fromNow","t":"fromNow","d":"scala.concurrent.duration","k":"object","x":"This object can be used as closing token for declaring a deadline at some future point\nin time:"},
{"l":"api/scala/concurrent/duration/span$.html#","e":false,"i":"","n":"span","t":"span","d":"scala.concurrent.duration","k":"object","x":"This object can be used as closing token if you prefer dot-less style but do not want\nto enable language.postfixOps:"},
{"l":"api/scala/concurrent/Await$.html#","e":false,"i":"","n":"Await","t":"Await","d":"scala.concurrent","k":"object","x":"Await is what is used to ensure proper handling of blocking for Awaitable instances."},
{"l":"api/scala/concurrent/Await$.html#ready-fffff4b2","e":false,"i":"","n":"ready","t":"ready[T](awaitable: Awaitable[T], atMost: Duration): awaitable.type","d":"scala.concurrent.Await","k":"def","x":"Await the \"completed\" state of an Awaitable."},
{"l":"api/scala/concurrent/Await$.html#result-fffff7c4","e":false,"i":"","n":"result","t":"result[T](awaitable: Awaitable[T], atMost: Duration): T","d":"scala.concurrent.Await","k":"def","x":"Await and return the result (of type T) of an Awaitable."},
{"l":"api/scala/concurrent/Awaitable.html#","e":false,"i":"","n":"Awaitable","t":"Awaitable[+T]","d":"scala.concurrent","k":"trait","x":"An object that may eventually be completed with a result value of type T which may be\nawaited using blocking methods."},
{"l":"api/scala/concurrent/Awaitable.html#ready-e57","e":false,"i":"","n":"ready","t":"ready(atMost: Duration)(implicit permit: CanAwait): this.type","d":"scala.concurrent.Awaitable","k":"def","x":"Await the \"completed\" state of this Awaitable."},
{"l":"api/scala/concurrent/Awaitable.html#result-ba9","e":false,"i":"","n":"result","t":"result(atMost: Duration)(implicit permit: CanAwait): T","d":"scala.concurrent.Awaitable","k":"def","x":"Await and return the result (of type T) of this Awaitable."},
{"l":"api/scala/concurrent/Batchable.html#","e":false,"i":"","n":"Batchable","t":"Batchable","d":"scala.concurrent","k":"trait","x":"Marker trait to indicate that a Runnable is Batchable by BatchingExecutors\n"},
{"l":"api/scala/concurrent/BlockContext.html#","e":false,"i":"","n":"BlockContext","t":"BlockContext","d":"scala.concurrent","k":"trait","x":"A context to be notified by scala.concurrent.blocking when\na thread is about to block. In effect this trait provides\nthe implementation for scala.concurrent.Await.\nscala.concurrent.Await.result and scala.concurrent.Await.ready\nlocates an instance of BlockContext by first looking for one\nprovided through BlockContext.withBlockContext and failing that,\nchecking whether Thread.currentThread is an instance of BlockContext.\nSo a thread pool can have its java.lang.Thread instances implement\nBlockContext. There's a default BlockContext used if the thread\ndoesn't implement BlockContext."},
{"l":"api/scala/concurrent/BlockContext.html#blockOn-ffffff69","e":false,"i":"","n":"blockOn","t":"blockOn[T](thunk: => T)(implicit permission: CanAwait): T","d":"scala.concurrent.BlockContext","k":"def","x":"Used internally by the framework;\nDesignates (and eventually executes) a thunk which potentially blocks the calling java.lang.Thread."},
{"l":"api/scala/concurrent/BlockContext$.html#","e":false,"i":"","n":"BlockContext","t":"BlockContext","d":"scala.concurrent","k":"object","x":""},
{"l":"api/scala/concurrent/BlockContext$.html#current-0","e":false,"i":"","n":"current","t":"current: BlockContext","d":"scala.concurrent.BlockContext","k":"def","x":""},
{"l":"api/scala/concurrent/BlockContext$.html#defaultBlockContext-0","e":false,"i":"","n":"defaultBlockContext","t":"defaultBlockContext: BlockContext","d":"scala.concurrent.BlockContext","k":"def","x":"The default block context will execute the supplied thunk immediately."},
{"l":"api/scala/concurrent/BlockContext$.html#usingBlockContext-85","e":false,"i":"","n":"usingBlockContext","t":"usingBlockContext[I, T](blockContext: BlockContext)(f: BlockContext => T): T","d":"scala.concurrent.BlockContext","k":"def","x":"Installs the BlockContext blockContext around the invocation to f and passes in the previously installed BlockContext to f."},
{"l":"api/scala/concurrent/BlockContext$.html#withBlockContext-203","e":false,"i":"","n":"withBlockContext","t":"withBlockContext[T](blockContext: BlockContext)(body: => T): T","d":"scala.concurrent.BlockContext","k":"def","x":"Installs a current BlockContext around executing body.\n"},
{"l":"api/scala/concurrent/CanAwait.html#","e":false,"i":"","n":"CanAwait","t":"CanAwait","d":"scala.concurrent","k":"trait","x":"This marker trait is used by Await to ensure that Awaitable.ready and Awaitable.result\nare not directly called by user code. An implicit instance of this trait is only available when\nuser code is currently calling the methods on Await.\n"},
{"l":"api/scala/concurrent/Channel.html#","e":false,"i":"","n":"Channel","t":"Channel[A]","d":"scala.concurrent","k":"class","x":"This class provides a simple FIFO queue of data objects,\nwhich are read by one or more reader threads.\n"},
{"l":"api/scala/concurrent/Channel.html#read-0","e":false,"i":"","n":"read","t":"read: A","d":"scala.concurrent.Channel","k":"def","x":"Retrieve the next waiting object from the FIFO queue,\nblocking if necessary until an object is available.\n"},
{"l":"api/scala/concurrent/Channel.html#write-fffff71f","e":false,"i":"","n":"write","t":"write(x: A): Unit","d":"scala.concurrent.Channel","k":"def","x":"Append a value to the FIFO queue to be read by read.\nThis operation is nonblocking and can be executed by any thread.\n"},
{"l":"api/scala/concurrent/DelayedLazyVal.html#","e":false,"i":"","n":"DelayedLazyVal","t":"DelayedLazyVal[T](f: () => T, body: => Unit)(implicit exec: ExecutionContext)","d":"scala.concurrent","k":"class","x":"A DelayedLazyVal is a wrapper for lengthy computations which have a\nvalid partially computed result."},
{"l":"api/scala/concurrent/DelayedLazyVal.html#apply-993","e":false,"i":"","n":"apply","t":"apply(): T","d":"scala.concurrent.DelayedLazyVal","k":"def","x":"The current result of f(), or the final result if complete.\n"},
{"l":"api/scala/concurrent/DelayedLazyVal.html#isDone-0","e":false,"i":"","n":"isDone","t":"isDone: Boolean","d":"scala.concurrent.DelayedLazyVal","k":"def","x":"Whether the computation is complete.\n"},
{"l":"api/scala/concurrent/ExecutionContext.html#","e":false,"i":"","n":"ExecutionContext","t":"ExecutionContext","d":"scala.concurrent","k":"trait","x":"An ExecutionContext can execute program logic asynchronously,\ntypically but not necessarily on a thread pool."},
{"l":"api/scala/concurrent/ExecutionContext.html#execute-47d","e":false,"i":"","n":"execute","t":"execute(runnable: Runnable): Unit","d":"scala.concurrent.ExecutionContext","k":"def","x":"Runs a block of code on this execution context.\n"},
{"l":"api/scala/concurrent/ExecutionContext.html#prepare-646","e":false,"i":"","n":"prepare","t":"prepare(): ExecutionContext","d":"scala.concurrent.ExecutionContext","k":"def","x":"Prepares for the execution of a task. Returns the prepared\nexecution context. The recommended implementation of\nprepare is to return this."},
{"l":"api/scala/concurrent/ExecutionContext.html#reportFailure-4b8","e":false,"i":"","n":"reportFailure","t":"reportFailure(cause: Throwable): Unit","d":"scala.concurrent.ExecutionContext","k":"def","x":"Reports that an asynchronous computation failed.\n"},
{"l":"api/scala/concurrent/ExecutionContext$.html#","e":false,"i":"","n":"ExecutionContext","t":"ExecutionContext","d":"scala.concurrent","k":"object","x":"Contains factory methods for creating execution contexts.\n"},
{"l":"api/scala/concurrent/ExecutionContext$.html#defaultReporter-0","e":false,"i":"","n":"defaultReporter","t":"defaultReporter: Throwable => Unit","d":"scala.concurrent.ExecutionContext","k":"val","x":"The default reporter simply prints the stack trace of the Throwable to System.err.\n"},
{"l":"api/scala/concurrent/ExecutionContext$.html#fromExecutor-772","e":false,"i":"","n":"fromExecutor","t":"fromExecutor(e: Executor, reporter: Throwable => Unit): ExecutionContextExecutor","d":"scala.concurrent.ExecutionContext","k":"def","x":"Creates an ExecutionContext from the given Executor.\n"},
{"l":"api/scala/concurrent/ExecutionContext$.html#fromExecutor-6cf","e":false,"i":"","n":"fromExecutor","t":"fromExecutor(e: Executor): ExecutionContextExecutor","d":"scala.concurrent.ExecutionContext","k":"def","x":"Creates an ExecutionContext from the given Executor with the default reporter.\n"},
{"l":"api/scala/concurrent/ExecutionContext$.html#fromExecutorService-6c2","e":false,"i":"","n":"fromExecutorService","t":"fromExecutorService(e: ExecutorService, reporter: Throwable => Unit): ExecutionContextExecutorService","d":"scala.concurrent.ExecutionContext","k":"def","x":"Creates an ExecutionContext from the given ExecutorService.\n"},
{"l":"api/scala/concurrent/ExecutionContext$.html#fromExecutorService-fffffae7","e":false,"i":"","n":"fromExecutorService","t":"fromExecutorService(e: ExecutorService): ExecutionContextExecutorService","d":"scala.concurrent.ExecutionContext","k":"def","x":"Creates an ExecutionContext from the given ExecutorService with the default reporter."},
{"l":"api/scala/concurrent/ExecutionContext$.html#global-0","e":false,"i":"","n":"global","t":"global: ExecutionContextExecutor","d":"scala.concurrent.ExecutionContext","k":"val","x":"The global ExecutionContext. This default ExecutionContext implementation is backed by a work-stealing thread\npool. It can be configured via the following system properties:"},
{"l":"api/scala/concurrent/ExecutionContext$$Implicits$.html#","e":false,"i":"","n":"Implicits","t":"Implicits","d":"scala.concurrent.ExecutionContext","k":"object","x":""},
{"l":"api/scala/concurrent/ExecutionContext$$Implicits$.html#global-0","e":false,"i":"","n":"global","t":"global: ExecutionContext","d":"scala.concurrent.ExecutionContext.Implicits","k":"def","x":"An accessor that can be used to import the global ExecutionContext into the implicit scope,\nsee ExecutionContext.global.\n"},
{"l":"api/scala/concurrent/ExecutionContext$$parasitic$.html#","e":false,"i":"","n":"parasitic","t":"parasitic extends ExecutionContextExecutor","d":"scala.concurrent.ExecutionContext","k":"object","x":"WARNING: Only ever execute logic which will quickly return control to the caller."},
{"l":"api/scala/concurrent/ExecutionContext$$parasitic$.html#submitAsyncBatched-47d","e":false,"i":"","n":"submitAsyncBatched","t":"submitAsyncBatched(runnable: Runnable): Unit","d":"scala.concurrent.ExecutionContext.parasitic","k":"def","x":"WARNING: Never use both submitAsyncBatched and submitSyncBatched in the same\nimplementation of BatchingExecutor\n"},
{"l":"api/scala/concurrent/ExecutionContext$$parasitic$.html#submitSyncBatched-47d","e":false,"i":"","n":"submitSyncBatched","t":"submitSyncBatched(runnable: Runnable): Unit","d":"scala.concurrent.ExecutionContext.parasitic","k":"def","x":"WARNING: Never use both submitAsyncBatched and submitSyncBatched in the same\nimplementation of BatchingExecutor\n"},
{"l":"api/scala/concurrent/ExecutionContextExecutor.html#","e":false,"i":"","n":"ExecutionContextExecutor","t":"ExecutionContextExecutor extends ExecutionContext, Executor","d":"scala.concurrent","k":"trait","x":"An ExecutionContext that is also a\nJava Executor.\n"},
{"l":"api/scala/concurrent/ExecutionContextExecutorService.html#","e":false,"i":"","n":"ExecutionContextExecutorService","t":"ExecutionContextExecutorService extends ExecutionContextExecutor, ExecutorService","d":"scala.concurrent","k":"trait","x":"An ExecutionContext that is also a\nJava ExecutorService.\n"},
{"l":"api/scala/concurrent/Future.html#","e":false,"i":"","n":"Future","t":"Future[+T] extends Awaitable[T]","d":"scala.concurrent","k":"trait","x":"A Future represents a value which may or may not be currently available,\nbut will be available at some point, or an exception if that value could not be made available."},
{"l":"api/scala/concurrent/Future.html#andThen-fffffa6c","e":false,"i":"","n":"andThen","t":"andThen[U](pf: PartialFunction[Try[T], U])(implicit executor: ExecutionContext): Future[T]","d":"scala.concurrent.Future","k":"def","x":"Applies the side-effecting function to the result of this future, and returns\na new future with the result of this future."},
{"l":"api/scala/concurrent/Future.html#collect-fffffa6c","e":false,"i":"","n":"collect","t":"collect[S](pf: PartialFunction[T, S])(implicit executor: ExecutionContext): Future[S]","d":"scala.concurrent.Future","k":"def","x":"Creates a new future by mapping the value of the current future, if the given partial function is defined at that value."},
{"l":"api/scala/concurrent/Future.html#failed-0","e":false,"i":"","n":"failed","t":"failed: Future[Throwable]","d":"scala.concurrent.Future","k":"def","x":"The returned Future will be successfully completed with the Throwable of the original Future\nif the original Future fails."},
{"l":"api/scala/concurrent/Future.html#fallbackTo-fffff631","e":false,"i":"","n":"fallbackTo","t":"fallbackTo[U >: T](that: Future[U]): Future[U]","d":"scala.concurrent.Future","k":"def","x":"Creates a new future which holds the result of this future if it was completed successfully, or, if not,\nthe result of the that future if that is completed successfully.\nIf both futures are failed, the resulting future holds the throwable object of the first future."},
{"l":"api/scala/concurrent/Future.html#filter-bdd","e":false,"i":"","n":"filter","t":"filter(p: T => Boolean)(implicit executor: ExecutionContext): Future[T]","d":"scala.concurrent.Future","k":"def","x":"Creates a new future by filtering the value of the current future with a predicate."},
{"l":"api/scala/concurrent/Future.html#flatMap-a8c","e":false,"i":"","n":"flatMap","t":"flatMap[S](f: T => Future[S])(implicit executor: ExecutionContext): Future[S]","d":"scala.concurrent.Future","k":"def","x":"Creates a new future by applying a function to the successful result of\nthis future, and returns the result of the function as the new future.\nIf this future is completed with an exception then the new future will\nalso contain this exception."},
{"l":"api/scala/concurrent/Future.html#flatten-fffff6ed","e":false,"i":"","n":"flatten","t":"flatten[S](implicit ev: T <:< Future[S]): Future[S]","d":"scala.concurrent.Future","k":"def","x":"Creates a new future with one level of nesting flattened, this method is equivalent\nto flatMap(identity).\n"},
{"l":"api/scala/concurrent/Future.html#foreach-fffffbd2","e":false,"i":"","n":"foreach","t":"foreach[U](f: T => U)(implicit executor: ExecutionContext): Unit","d":"scala.concurrent.Future","k":"def","x":"Asynchronously processes the value in the future once the value becomes available."},
{"l":"api/scala/concurrent/Future.html#isCompleted-0","e":false,"i":"","n":"isCompleted","t":"isCompleted: Boolean","d":"scala.concurrent.Future","k":"def","x":"Returns whether the future had already been completed with\na value or an exception."},
{"l":"api/scala/concurrent/Future.html#map-a8c","e":false,"i":"","n":"map","t":"map[S](f: T => S)(implicit executor: ExecutionContext): Future[S]","d":"scala.concurrent.Future","k":"def","x":"Creates a new future by applying a function to the successful result of\nthis future. If this future is completed with an exception then the new\nfuture will also contain this exception."},
{"l":"api/scala/concurrent/Future.html#mapTo-986","e":false,"i":"","n":"mapTo","t":"mapTo[S](implicit tag: ClassTag[S]): Future[S]","d":"scala.concurrent.Future","k":"def","x":"Creates a new Future[S] which is completed with this Future's result if\nthat conforms to S's erased type or a ClassCastException otherwise.\n"},
{"l":"api/scala/concurrent/Future.html#onComplete-fffffbd2","e":false,"i":"","n":"onComplete","t":"onComplete[U](f: Try[T] => U)(implicit executor: ExecutionContext): Unit","d":"scala.concurrent.Future","k":"def","x":"When this future is completed, either through an exception, or a value,\napply the provided function."},
{"l":"api/scala/concurrent/Future.html#recover-fffffa6c","e":false,"i":"","n":"recover","t":"recover[U >: T](pf: PartialFunction[Throwable, U])(implicit executor: ExecutionContext): Future[U]","d":"scala.concurrent.Future","k":"def","x":"Creates a new future that will handle any matching throwable that this\nfuture might contain. If there is no match, or if this future contains\na valid result then the new future will contain the same."},
{"l":"api/scala/concurrent/Future.html#recoverWith-fffffa6c","e":false,"i":"","n":"recoverWith","t":"recoverWith[U >: T](pf: PartialFunction[Throwable, Future[U]])(implicit executor: ExecutionContext): Future[U]","d":"scala.concurrent.Future","k":"def","x":"Creates a new future that will handle any matching throwable that this\nfuture might contain by assigning it a value of another future."},
{"l":"api/scala/concurrent/Future.html#transform-79d","e":false,"i":"","n":"transform","t":"transform[S](s: T => S, f: Throwable => Throwable)(implicit executor: ExecutionContext): Future[S]","d":"scala.concurrent.Future","k":"def","x":"Creates a new future by applying the 's' function to the successful result of\nthis future, or the 'f' function to the failed result. If there is any non-fatal\nexception thrown when 's' or 'f' is applied, that exception will be propagated\nto the resulting future.\n"},
{"l":"api/scala/concurrent/Future.html#transform-a8c","e":false,"i":"","n":"transform","t":"transform[S](f: Try[T] => Try[S])(implicit executor: ExecutionContext): Future[S]","d":"scala.concurrent.Future","k":"def","x":"Creates a new Future by applying the specified function to the result\nof this Future. If there is any non-fatal exception thrown when 'f'\nis applied then that exception will be propagated to the resulting future.\n"},
{"l":"api/scala/concurrent/Future.html#transformWith-a8c","e":false,"i":"","n":"transformWith","t":"transformWith[S](f: Try[T] => Future[S])(implicit executor: ExecutionContext): Future[S]","d":"scala.concurrent.Future","k":"def","x":"Creates a new Future by applying the specified function, which produces a Future, to the result\nof this Future. If there is any non-fatal exception thrown when 'f'\nis applied then that exception will be propagated to the resulting future.\n"},
{"l":"api/scala/concurrent/Future.html#value-0","e":false,"i":"","n":"value","t":"value: Option[Try[T]]","d":"scala.concurrent.Future","k":"def","x":"The current value of this Future."},
{"l":"api/scala/concurrent/Future.html#withFilter-bdd","e":false,"i":"","n":"withFilter","t":"withFilter(p: T => Boolean)(implicit executor: ExecutionContext): Future[T]","d":"scala.concurrent.Future","k":"def","x":"Used by for-comprehensions."},
{"l":"api/scala/concurrent/Future.html#zip-fffff631","e":false,"i":"","n":"zip","t":"zip[U](that: Future[U]): Future[(T, U)]","d":"scala.concurrent.Future","k":"def","x":"Zips the values of this and that future, and creates\na new future holding the tuple of their results."},
{"l":"api/scala/concurrent/Future.html#zipWith-fffffdfe","e":false,"i":"","n":"zipWith","t":"zipWith[U, R](that: Future[U])(f: (T, U) => R)(implicit executor: ExecutionContext): Future[R]","d":"scala.concurrent.Future","k":"def","x":"Zips the values of this and that future using a function f,\nand creates a new future holding the result."},
{"l":"api/scala/concurrent/Future$.html#","e":false,"i":"","n":"Future","t":"Future","d":"scala.concurrent","k":"object","x":"Future companion object."},
{"l":"api/scala/concurrent/Future$.html#apply-18b","e":false,"i":"","n":"apply","t":"apply[T](body: => T)(implicit executor: ExecutionContext): Future[T]","d":"scala.concurrent.Future","k":"def","x":"Starts an asynchronous computation and returns a Future instance with the result of that computation."},
{"l":"api/scala/concurrent/Future$.html#delegate-18b","e":false,"i":"","n":"delegate","t":"delegate[T](body: => Future[T])(implicit executor: ExecutionContext): Future[T]","d":"scala.concurrent.Future","k":"def","x":"Starts an asynchronous computation and returns a Future instance with the result of that computation once it completes."},
{"l":"api/scala/concurrent/Future$.html#failed-fffffa57","e":false,"i":"","n":"failed","t":"failed[T](exception: Throwable): Future[T]","d":"scala.concurrent.Future","k":"def","x":"Creates an already completed Future with the specified exception.\n"},
{"l":"api/scala/concurrent/Future$.html#find-fffff9e8","e":false,"i":"","n":"find","t":"find[T](futures: Iterable[Future[T]])(p: T => Boolean)(implicit executor: ExecutionContext): Future[Option[T]]","d":"scala.concurrent.Future","k":"def","x":"Asynchronously and non-blockingly returns a Future that will hold the optional result\nof the first Future with a result that matches the predicate, failed Futures will be ignored.\n"},
{"l":"api/scala/concurrent/Future$.html#firstCompletedOf-496","e":false,"i":"","n":"firstCompletedOf","t":"firstCompletedOf[T](futures: IterableOnce[Future[T]])(implicit executor: ExecutionContext): Future[T]","d":"scala.concurrent.Future","k":"def","x":"Asynchronously and non-blockingly returns a new Future to the result of the first future\nin the list that is completed. This means no matter if it is completed as a success or as a failure.\n"},
{"l":"api/scala/concurrent/Future$.html#fold-1e2","e":false,"i":"","n":"fold","t":"fold[T, R](futures: IterableOnce[Future[T]])(zero: R)(op: (R, T) => R)(implicit executor: ExecutionContext): Future[R]","d":"scala.concurrent.Future","k":"def","x":"A non-blocking, asynchronous fold over the specified futures, with the start value of the given zero.\nThe fold is performed on the thread where the last future is completed,\nthe result will be the first failure of any of the futures, or any failure in the actual fold,\nor the result of the fold."},
{"l":"api/scala/concurrent/Future$.html#foldLeft-4b7","e":false,"i":"","n":"foldLeft","t":"foldLeft[T, R](futures: Iterable[Future[T]])(zero: R)(op: (R, T) => R)(implicit executor: ExecutionContext): Future[R]","d":"scala.concurrent.Future","k":"def","x":"A non-blocking, asynchronous left fold over the specified futures,\nwith the start value of the given zero.\nThe fold is performed asynchronously in left-to-right order as the futures become completed.\nThe result will be the first failure of any of the futures, or any failure in the actual fold,\nor the result of the fold."},
{"l":"api/scala/concurrent/Future$.html#fromTry-fffff28a","e":false,"i":"","n":"fromTry","t":"fromTry[T](result: Try[T]): Future[T]","d":"scala.concurrent.Future","k":"def","x":"Creates an already completed Future with the specified result or exception.\n"},
{"l":"api/scala/concurrent/Future$.html#reduce-fffffcd5","e":false,"i":"","n":"reduce","t":"reduce[T, R >: T](futures: IterableOnce[Future[T]])(op: (R, T) => R)(implicit executor: ExecutionContext): Future[R]","d":"scala.concurrent.Future","k":"def","x":"Initiates a non-blocking, asynchronous, fold over the supplied futures\nwhere the fold-zero is the result value of the first Future in the collection."},
{"l":"api/scala/concurrent/Future$.html#reduceLeft-9aa","e":false,"i":"","n":"reduceLeft","t":"reduceLeft[T, R >: T](futures: Iterable[Future[T]])(op: (R, T) => R)(implicit executor: ExecutionContext): Future[R]","d":"scala.concurrent.Future","k":"def","x":"Initiates a non-blocking, asynchronous, left reduction over the supplied futures\nwhere the zero is the result value of the first Future."},
{"l":"api/scala/concurrent/Future$.html#sequence-fffffb44","e":false,"i":"","n":"sequence","t":"sequence[A, CC <: (IterableOnce), To](in: CC[Future[A]])(implicit bf: BuildFrom[CC[Future[A]], A, To], executor: ExecutionContext): Future[To]","d":"scala.concurrent.Future","k":"def","x":"Simple version of Future.traverse. Asynchronously and non-blockingly transforms, in essence, a IterableOnce[Future[A]]\ninto a Future[IterableOnce[A]]. Useful for reducing many Futures into a single Future.\n"},
{"l":"api/scala/concurrent/Future$.html#successful-ffffff0e","e":false,"i":"","n":"successful","t":"successful[T](result: T): Future[T]","d":"scala.concurrent.Future","k":"def","x":"Creates an already completed Future with the specified result.\n"},
{"l":"api/scala/concurrent/Future$.html#traverse-fffff185","e":false,"i":"","n":"traverse","t":"traverse[A, B, M <: (IterableOnce)](in: M[A])(fn: A => Future[B])(implicit bf: BuildFrom[M[A], B, M[B]], executor: ExecutionContext): Future[M[B]]","d":"scala.concurrent.Future","k":"def","x":"Asynchronously and non-blockingly transforms a IterableOnce[A] into a Future[IterableOnce[B]]\nusing the provided function A => Future[B].\nThis is useful for performing a parallel map. For example, to apply a function to all items of a list\nin parallel:"},
{"l":"api/scala/concurrent/Future$.html#unit-0","e":false,"i":"","n":"unit","t":"unit: Future[Unit]","d":"scala.concurrent.Future","k":"val","x":"A Future which is completed with the Unit value.\n"},
{"l":"api/scala/concurrent/Future$$never$.html#","e":false,"i":"","n":"never","t":"never extends Future[Nothing]","d":"scala.concurrent.Future","k":"object","x":"A Future which is never completed.\n"},
{"l":"api/scala/concurrent/JavaConversions$.html#","e":false,"i":"","n":"JavaConversions","t":"JavaConversions","d":"scala.concurrent","k":"object","x":"The JavaConversions object provides implicit conversions supporting\ninteroperability between Scala and Java concurrency classes.\n"},
{"l":"api/scala/concurrent/JavaConversions$.html#asExecutionContext-fffffae7","e":false,"i":"","n":"asExecutionContext","t":"asExecutionContext(exec: ExecutorService): ExecutionContextExecutorService","d":"scala.concurrent.JavaConversions","k":"def","x":"Creates a new ExecutionContext which uses the provided ExecutorService.\n"},
{"l":"api/scala/concurrent/JavaConversions$.html#asExecutionContext-6cf","e":false,"i":"","n":"asExecutionContext","t":"asExecutionContext(exec: Executor): ExecutionContextExecutor","d":"scala.concurrent.JavaConversions","k":"def","x":"Creates a new ExecutionContext which uses the provided Executor.\n"},
{"l":"api/scala/concurrent/OnCompleteRunnable.html#","e":false,"i":"","n":"OnCompleteRunnable","t":"OnCompleteRunnable extends Batchable","d":"scala.concurrent","k":"trait","x":""},
{"l":"api/scala/concurrent/Promise.html#","e":false,"i":"","n":"Promise","t":"Promise[T]","d":"scala.concurrent","k":"trait","x":"Promise is an object which can be completed with a value or failed\nwith an exception."},
{"l":"api/scala/concurrent/Promise.html#complete-fffff9c3","e":false,"i":"","n":"complete","t":"complete(result: Try[T]): this.type","d":"scala.concurrent.Promise","k":"def","x":"Completes the promise with either an exception or a value.\n"},
{"l":"api/scala/concurrent/Promise.html#completeWith-fffff2be","e":false,"i":"","n":"completeWith","t":"completeWith(other: Future[T]): this.type","d":"scala.concurrent.Promise","k":"def","x":"Completes this promise with the specified future, once that future is completed.\n"},
{"l":"api/scala/concurrent/Promise.html#failure-3d8","e":false,"i":"","n":"failure","t":"failure(cause: Throwable): this.type","d":"scala.concurrent.Promise","k":"def","x":"Completes the promise with an exception.\n"},
{"l":"api/scala/concurrent/Promise.html#future-0","e":false,"i":"","n":"future","t":"future: Future[T]","d":"scala.concurrent.Promise","k":"def","x":"Future containing the value of this promise.\n"},
{"l":"api/scala/concurrent/Promise.html#isCompleted-0","e":false,"i":"","n":"isCompleted","t":"isCompleted: Boolean","d":"scala.concurrent.Promise","k":"def","x":"Returns whether the promise has already been completed with\na value or an exception."},
{"l":"api/scala/concurrent/Promise.html#success-fffff5ff","e":false,"i":"","n":"success","t":"success(value: T): this.type","d":"scala.concurrent.Promise","k":"def","x":"Completes the promise with a value.\n"},
{"l":"api/scala/concurrent/Promise.html#tryComplete-369","e":false,"i":"","n":"tryComplete","t":"tryComplete(result: Try[T]): Boolean","d":"scala.concurrent.Promise","k":"def","x":"Tries to complete the promise with either a value or the exception."},
{"l":"api/scala/concurrent/Promise.html#tryCompleteWith-fffff2be","e":false,"i":"","n":"tryCompleteWith","t":"tryCompleteWith(other: Future[T]): this.type","d":"scala.concurrent.Promise","k":"def","x":"Attempts to complete this promise with the specified future, once that future is completed.\n"},
{"l":"api/scala/concurrent/Promise.html#tryFailure-fffff474","e":false,"i":"","n":"tryFailure","t":"tryFailure(cause: Throwable): Boolean","d":"scala.concurrent.Promise","k":"def","x":"Tries to complete the promise with an exception."},
{"l":"api/scala/concurrent/Promise.html#trySuccess-4ad","e":false,"i":"","n":"trySuccess","t":"trySuccess(value: T): Boolean","d":"scala.concurrent.Promise","k":"def","x":"Tries to complete the promise with a value."},
{"l":"api/scala/concurrent/Promise$.html#","e":false,"i":"","n":"Promise","t":"Promise","d":"scala.concurrent","k":"object","x":""},
{"l":"api/scala/concurrent/Promise$.html#apply-fffff29d","e":false,"i":"","n":"apply","t":"apply[T](): Promise[T]","d":"scala.concurrent.Promise","k":"def","x":"Creates a promise object which can be completed with a value.\n"},
{"l":"api/scala/concurrent/Promise$.html#failed-ffffff07","e":false,"i":"","n":"failed","t":"failed[T](exception: Throwable): Promise[T]","d":"scala.concurrent.Promise","k":"def","x":"Creates an already completed Promise with the specified exception.\n"},
{"l":"api/scala/concurrent/Promise$.html#fromTry-d34","e":false,"i":"","n":"fromTry","t":"fromTry[T](result: Try[T]): Promise[T]","d":"scala.concurrent.Promise","k":"def","x":"Creates an already completed Promise with the specified result or exception.\n"},
{"l":"api/scala/concurrent/Promise$.html#successful-fffff130","e":false,"i":"","n":"successful","t":"successful[T](result: T): Promise[T]","d":"scala.concurrent.Promise","k":"def","x":"Creates an already completed Promise with the specified result.\n"},
{"l":"api/scala/concurrent/SyncChannel.html#","e":false,"i":"","n":"SyncChannel","t":"SyncChannel[A]","d":"scala.concurrent","k":"class","x":"A SyncChannel allows one to exchange data synchronously between\na reader and a writer thread. The writer thread is blocked until the\ndata to be written has been read by a corresponding reader thread.\n"},
{"l":"api/scala/concurrent/SyncChannel.html#read-0","e":false,"i":"","n":"read","t":"read: A","d":"scala.concurrent.SyncChannel","k":"def","x":""},
{"l":"api/scala/concurrent/SyncChannel.html#write-fffff71f","e":false,"i":"","n":"write","t":"write(data: A): Unit","d":"scala.concurrent.SyncChannel","k":"def","x":""},
{"l":"api/scala/concurrent/SyncVar.html#","e":false,"i":"","n":"SyncVar","t":"SyncVar[A]","d":"scala.concurrent","k":"class","x":"A class to provide safe concurrent access to a mutable cell.\nAll methods are synchronized.\n"},
{"l":"api/scala/concurrent/SyncVar.html#get-0","e":false,"i":"","n":"get","t":"get: A","d":"scala.concurrent.SyncVar","k":"def","x":"Wait for this SyncVar to become defined and then get\nthe stored value without modifying it.\n"},
{"l":"api/scala/concurrent/SyncVar.html#get-681","e":false,"i":"","n":"get","t":"get(timeout: Long): Option[A]","d":"scala.concurrent.SyncVar","k":"def","x":"Wait at least timeout milliseconds (possibly more) for this SyncVar\nto become defined and then get its value.\n"},
{"l":"api/scala/concurrent/SyncVar.html#isSet-0","e":false,"i":"","n":"isSet","t":"isSet: Boolean","d":"scala.concurrent.SyncVar","k":"def","x":"Check whether a value is stored in the synchronized variable."},
{"l":"api/scala/concurrent/SyncVar.html#put-fffff71f","e":false,"i":"","n":"put","t":"put(x: A): Unit","d":"scala.concurrent.SyncVar","k":"def","x":"Place a value in the SyncVar. If the SyncVar already has a stored value,\nwait until another thread takes it."},
{"l":"api/scala/concurrent/SyncVar.html#take-993","e":false,"i":"","n":"take","t":"take(): A","d":"scala.concurrent.SyncVar","k":"def","x":"Wait for this SyncVar to become defined and then get\nthe stored value, unsetting it as a side effect.\n"},
{"l":"api/scala/concurrent/SyncVar.html#take-7d7","e":false,"i":"","n":"take","t":"take(timeout: Long): A","d":"scala.concurrent.SyncVar","k":"def","x":"Wait at least timeout milliseconds (possibly more) for this SyncVar\nto become defined and then get the stored value, unsetting it\nas a side effect.\n"},
{"l":"api/scala/deriving.html#","e":false,"i":"","n":"scala.deriving","t":"scala.deriving","d":"","k":"package","x":""},
{"l":"api/scala/deriving/Mirror.html#","e":false,"i":"","n":"Mirror","t":"Mirror","d":"scala.deriving","k":"trait","x":""},
{"l":"api/scala/deriving/Mirror.html#MirroredElemLabels-0","e":false,"i":"","n":"MirroredElemLabels","t":"MirroredElemLabels <: Tuple","d":"scala.deriving.Mirror","k":"type","x":""},
{"l":"api/scala/deriving/Mirror.html#MirroredLabel-0","e":false,"i":"","n":"MirroredLabel","t":"MirroredLabel <: String","d":"scala.deriving.Mirror","k":"type","x":""},
{"l":"api/scala/deriving/Mirror.html#MirroredMonoType-0","e":false,"i":"","n":"MirroredMonoType","t":"MirroredMonoType","d":"scala.deriving.Mirror","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$.html#","e":false,"i":"","n":"Mirror","t":"Mirror","d":"scala.deriving","k":"object","x":""},
{"l":"api/scala/deriving/Mirror$.html#Of-0","e":false,"i":"","n":"Of","t":"Of[T] = Mirror { type MirroredType = T; type MirroredMonoType = T; type MirroredElemTypes <: Tuple;  }","d":"scala.deriving.Mirror","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$.html#ProductOf-0","e":false,"i":"","n":"ProductOf","t":"ProductOf[T] = Product { type MirroredType = T; type MirroredMonoType = T; type MirroredElemTypes <: Tuple;  }","d":"scala.deriving.Mirror","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$.html#SumOf-0","e":false,"i":"","n":"SumOf","t":"SumOf[T] = Sum { type MirroredType = T; type MirroredMonoType = T; type MirroredElemTypes <: Tuple;  }","d":"scala.deriving.Mirror","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$.html#fromProductTyped-fffff4c1","e":false,"i":"extension [T](p: ProductOf[T])","n":"fromProductTyped","t":"fromProductTyped[A <: Product, Elems <: p.MirroredElemTypes](a: A)(using ProductOf[A] { type MirroredElemTypes = Elems;  }): T","d":"scala.deriving.Mirror","k":"def","x":""},
{"l":"api/scala/deriving/Mirror$.html#fromTuple-fffffb85","e":false,"i":"extension [T](p: ProductOf[T])","n":"fromTuple","t":"fromTuple(t: p.MirroredElemTypes): T","d":"scala.deriving.Mirror","k":"def","x":""},
{"l":"api/scala/deriving/Mirror$$Product.html#","e":false,"i":"","n":"Product","t":"Product extends Mirror","d":"scala.deriving.Mirror","k":"trait","x":""},
{"l":"api/scala/deriving/Mirror$$Product.html#fromProduct-3ba","e":false,"i":"","n":"fromProduct","t":"fromProduct(p: Product): MirroredMonoType","d":"scala.deriving.Mirror.Product","k":"def","x":""},
{"l":"api/scala/deriving/Mirror$$Singleton.html#","e":false,"i":"","n":"Singleton","t":"Singleton extends Product","d":"scala.deriving.Mirror","k":"trait","x":""},
{"l":"api/scala/deriving/Mirror$$Singleton.html#MirroredElemLabels-0","e":false,"i":"","n":"MirroredElemLabels","t":"MirroredElemLabels = EmptyTuple","d":"scala.deriving.Mirror.Singleton","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$$Singleton.html#MirroredElemTypes-0","e":false,"i":"","n":"MirroredElemTypes","t":"MirroredElemTypes = EmptyTuple","d":"scala.deriving.Mirror.Singleton","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$$Singleton.html#MirroredMonoType-0","e":false,"i":"","n":"MirroredMonoType","t":"MirroredMonoType = this.type","d":"scala.deriving.Mirror.Singleton","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$$Singleton.html#MirroredType-0","e":false,"i":"","n":"MirroredType","t":"MirroredType = this.type","d":"scala.deriving.Mirror.Singleton","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$$Singleton.html#fromProduct-de7","e":false,"i":"","n":"fromProduct","t":"fromProduct(p: Product): MirroredMonoType","d":"scala.deriving.Mirror.Singleton","k":"def","x":""},
{"l":"api/scala/deriving/Mirror$$SingletonProxy.html#","e":false,"i":"","n":"SingletonProxy","t":"SingletonProxy(val value: AnyRef) extends Product","d":"scala.deriving.Mirror","k":"class","x":""},
{"l":"api/scala/deriving/Mirror$$SingletonProxy.html#MirroredElemLabels-0","e":false,"i":"","n":"MirroredElemLabels","t":"MirroredElemLabels = EmptyTuple","d":"scala.deriving.Mirror.SingletonProxy","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$$SingletonProxy.html#MirroredElemTypes-0","e":false,"i":"","n":"MirroredElemTypes","t":"MirroredElemTypes = EmptyTuple","d":"scala.deriving.Mirror.SingletonProxy","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$$SingletonProxy.html#MirroredMonoType-0","e":false,"i":"","n":"MirroredMonoType","t":"MirroredMonoType = value.type","d":"scala.deriving.Mirror.SingletonProxy","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$$SingletonProxy.html#MirroredType-0","e":false,"i":"","n":"MirroredType","t":"MirroredType = value.type","d":"scala.deriving.Mirror.SingletonProxy","k":"type","x":""},
{"l":"api/scala/deriving/Mirror$$SingletonProxy.html#fromProduct-3ba","e":false,"i":"","n":"fromProduct","t":"fromProduct(p: Product): MirroredMonoType","d":"scala.deriving.Mirror.SingletonProxy","k":"def","x":""},
{"l":"api/scala/deriving/Mirror$$SingletonProxy.html#value-0","e":false,"i":"","n":"value","t":"value: AnyRef","d":"scala.deriving.Mirror.SingletonProxy","k":"val","x":""},
{"l":"api/scala/deriving/Mirror$$Sum.html#","e":false,"i":"","n":"Sum","t":"Sum extends Mirror","d":"scala.deriving.Mirror","k":"trait","x":""},
{"l":"api/scala/deriving/Mirror$$Sum.html#ordinal-fffffaf4","e":false,"i":"","n":"ordinal","t":"ordinal(x: MirroredMonoType): Int","d":"scala.deriving.Mirror.Sum","k":"def","x":""},
{"l":"api/scala/io.html#","e":false,"i":"","n":"scala.io","t":"scala.io","d":"","k":"package","x":""},
{"l":"api/scala/io/AnsiColor.html#","e":false,"i":"","n":"AnsiColor","t":"AnsiColor","d":"scala.io","k":"trait","x":"ANSI escape codes providing control over text formatting and color on supporting text terminals."},
{"l":"api/scala/io/AnsiColor.html#BLACK-0","e":false,"i":"","n":"BLACK","t":"BLACK: \"\\u001b[30m\"","d":"scala.io.AnsiColor","k":"val","x":"Foreground color for ANSI black"},
{"l":"api/scala/io/AnsiColor.html#BLACK_B-0","e":false,"i":"","n":"BLACK_B","t":"BLACK_B: \"\\u001b[40m\"","d":"scala.io.AnsiColor","k":"val","x":"Background color for ANSI black"},
{"l":"api/scala/io/AnsiColor.html#BLINK-0","e":false,"i":"","n":"BLINK","t":"BLINK: \"\\u001b[5m\"","d":"scala.io.AnsiColor","k":"val","x":"ANSI blink"},
{"l":"api/scala/io/AnsiColor.html#BLUE-0","e":false,"i":"","n":"BLUE","t":"BLUE: \"\\u001b[34m\"","d":"scala.io.AnsiColor","k":"val","x":"Foreground color for ANSI blue"},
{"l":"api/scala/io/AnsiColor.html#BLUE_B-0","e":false,"i":"","n":"BLUE_B","t":"BLUE_B: \"\\u001b[44m\"","d":"scala.io.AnsiColor","k":"val","x":"Background color for ANSI blue"},
{"l":"api/scala/io/AnsiColor.html#BOLD-0","e":false,"i":"","n":"BOLD","t":"BOLD: \"\\u001b[1m\"","d":"scala.io.AnsiColor","k":"val","x":"ANSI bold"},
{"l":"api/scala/io/AnsiColor.html#CYAN-0","e":false,"i":"","n":"CYAN","t":"CYAN: \"\\u001b[36m\"","d":"scala.io.AnsiColor","k":"val","x":"Foreground color for ANSI cyan"},
{"l":"api/scala/io/AnsiColor.html#CYAN_B-0","e":false,"i":"","n":"CYAN_B","t":"CYAN_B: \"\\u001b[46m\"","d":"scala.io.AnsiColor","k":"val","x":"Background color for ANSI cyan"},
{"l":"api/scala/io/AnsiColor.html#GREEN-0","e":false,"i":"","n":"GREEN","t":"GREEN: \"\\u001b[32m\"","d":"scala.io.AnsiColor","k":"val","x":"Foreground color for ANSI green"},
{"l":"api/scala/io/AnsiColor.html#GREEN_B-0","e":false,"i":"","n":"GREEN_B","t":"GREEN_B: \"\\u001b[42m\"","d":"scala.io.AnsiColor","k":"val","x":"Background color for ANSI green"},
{"l":"api/scala/io/AnsiColor.html#INVISIBLE-0","e":false,"i":"","n":"INVISIBLE","t":"INVISIBLE: \"\\u001b[8m\"","d":"scala.io.AnsiColor","k":"val","x":"ANSI invisible"},
{"l":"api/scala/io/AnsiColor.html#MAGENTA-0","e":false,"i":"","n":"MAGENTA","t":"MAGENTA: \"\\u001b[35m\"","d":"scala.io.AnsiColor","k":"val","x":"Foreground color for ANSI magenta"},
{"l":"api/scala/io/AnsiColor.html#MAGENTA_B-0","e":false,"i":"","n":"MAGENTA_B","t":"MAGENTA_B: \"\\u001b[45m\"","d":"scala.io.AnsiColor","k":"val","x":"Background color for ANSI magenta"},
{"l":"api/scala/io/AnsiColor.html#RED-0","e":false,"i":"","n":"RED","t":"RED: \"\\u001b[31m\"","d":"scala.io.AnsiColor","k":"val","x":"Foreground color for ANSI red"},
{"l":"api/scala/io/AnsiColor.html#RED_B-0","e":false,"i":"","n":"RED_B","t":"RED_B: \"\\u001b[41m\"","d":"scala.io.AnsiColor","k":"val","x":"Background color for ANSI red"},
{"l":"api/scala/io/AnsiColor.html#RESET-0","e":false,"i":"","n":"RESET","t":"RESET: \"\\u001b[0m\"","d":"scala.io.AnsiColor","k":"val","x":"Reset ANSI styles"},
{"l":"api/scala/io/AnsiColor.html#REVERSED-0","e":false,"i":"","n":"REVERSED","t":"REVERSED: \"\\u001b[7m\"","d":"scala.io.AnsiColor","k":"val","x":"ANSI reversed"},
{"l":"api/scala/io/AnsiColor.html#UNDERLINED-0","e":false,"i":"","n":"UNDERLINED","t":"UNDERLINED: \"\\u001b[4m\"","d":"scala.io.AnsiColor","k":"val","x":"ANSI underlines"},
{"l":"api/scala/io/AnsiColor.html#WHITE-0","e":false,"i":"","n":"WHITE","t":"WHITE: \"\\u001b[37m\"","d":"scala.io.AnsiColor","k":"val","x":"Foreground color for ANSI white"},
{"l":"api/scala/io/AnsiColor.html#WHITE_B-0","e":false,"i":"","n":"WHITE_B","t":"WHITE_B: \"\\u001b[47m\"","d":"scala.io.AnsiColor","k":"val","x":"Background color for ANSI white"},
{"l":"api/scala/io/AnsiColor.html#YELLOW-0","e":false,"i":"","n":"YELLOW","t":"YELLOW: \"\\u001b[33m\"","d":"scala.io.AnsiColor","k":"val","x":"Foreground color for ANSI yellow"},
{"l":"api/scala/io/AnsiColor.html#YELLOW_B-0","e":false,"i":"","n":"YELLOW_B","t":"YELLOW_B: \"\\u001b[43m\"","d":"scala.io.AnsiColor","k":"val","x":"Background color for ANSI yellow"},
{"l":"api/scala/io/AnsiColor$.html#","e":false,"i":"","n":"AnsiColor","t":"AnsiColor extends AnsiColor","d":"scala.io","k":"object","x":""},
{"l":"api/scala/io/BufferedSource.html#","e":false,"i":"","n":"BufferedSource","t":"BufferedSource(inputStream: InputStream, bufferSize: Int)(implicit val codec: Codec) extends Source","d":"scala.io","k":"class","x":"This object provides convenience methods to create an iterable\nrepresentation of a source file.\n"},
{"l":"api/scala/io/BufferedSource.html#bufferedReader-ffffff9e","e":false,"i":"","n":"bufferedReader","t":"bufferedReader(): BufferedReader","d":"scala.io.BufferedSource","k":"def","x":""},
{"l":"api/scala/io/BufferedSource.html#codec-0","e":false,"i":"","n":"codec","t":"codec: Codec","d":"scala.io.BufferedSource","k":"val","x":""},
{"l":"api/scala/io/BufferedSource.html#iter-0","e":false,"i":"","n":"iter","t":"iter: Iterator[Char]","d":"scala.io.BufferedSource","k":"val","x":"the actual iterator"},
{"l":"api/scala/io/BufferedSource.html#reader-eb1","e":false,"i":"","n":"reader","t":"reader(): InputStreamReader","d":"scala.io.BufferedSource","k":"def","x":""},
{"l":"api/scala/io/BufferedSource.html#<init>-bf6","e":false,"i":"","n":"this","t":"this(inputStream: InputStream)(implicit codec: Codec)","d":"scala.io.BufferedSource","k":"def","x":""},
{"l":"api/scala/io/BufferedSource$BufferedLineIterator.html#","e":false,"i":"","n":"BufferedLineIterator","t":"BufferedLineIterator extends AbstractIterator[String], Iterator[String]","d":"scala.io.BufferedSource","k":"class","x":""},
{"l":"api/scala/io/BufferedSource$BufferedLineIterator.html#nextLine-0","e":false,"i":"","n":"nextLine","t":"nextLine: String","d":"scala.io.BufferedSource.BufferedLineIterator","k":"var","x":""},
{"l":"api/scala/io/Codec.html#","e":false,"i":"","n":"Codec","t":"Codec(val charSet: Charset)","d":"scala.io","k":"class","x":"A class for character encoding/decoding preferences."},
{"l":"api/scala/io/Codec.html#Configure-0","e":false,"i":"","n":"Configure","t":"Configure[T] = (T => T, Boolean)","d":"scala.io.Codec","k":"type","x":""},
{"l":"api/scala/io/Codec.html#Handler-0","e":false,"i":"","n":"Handler","t":"Handler = CharacterCodingException => Int","d":"scala.io.Codec","k":"type","x":""},
{"l":"api/scala/io/Codec.html#charSet-0","e":false,"i":"","n":"charSet","t":"charSet: Charset","d":"scala.io.Codec","k":"val","x":""},
{"l":"api/scala/io/Codec.html#decoder-0","e":false,"i":"","n":"decoder","t":"decoder: CharsetDecoder","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec.html#decodingReplaceWith-fffffe7b","e":false,"i":"","n":"decodingReplaceWith","t":"decodingReplaceWith(newReplacement: String): this.type","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec.html#encoder-0","e":false,"i":"","n":"encoder","t":"encoder: CharsetEncoder","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec.html#encodingReplaceWith-588","e":false,"i":"","n":"encodingReplaceWith","t":"encodingReplaceWith(newReplacement: Array[Byte]): this.type","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec.html#name-0","e":false,"i":"","n":"name","t":"name: String","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec.html#onCodingException-ffffffa7","e":false,"i":"","n":"onCodingException","t":"onCodingException(handler: Handler): this.type","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec.html#onMalformedInput-e02","e":false,"i":"","n":"onMalformedInput","t":"onMalformedInput(newAction: CodingErrorAction): this.type","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec.html#onUnmappableCharacter-e02","e":false,"i":"","n":"onUnmappableCharacter","t":"onUnmappableCharacter(newAction: CodingErrorAction): this.type","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec.html#wrap-c97","e":false,"i":"","n":"wrap","t":"wrap(body: => Int): Int","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#","e":false,"i":"","n":"Codec","t":"Codec extends LowPriorityCodecImplicits","d":"scala.io","k":"object","x":""},
{"l":"api/scala/io/Codec$.html#ISO8859-0","e":false,"i":"","n":"ISO8859","t":"ISO8859: Codec","d":"scala.io.Codec","k":"val","x":""},
{"l":"api/scala/io/Codec$.html#UTF8-0","e":false,"i":"","n":"UTF8","t":"UTF8: Codec","d":"scala.io.Codec","k":"val","x":""},
{"l":"api/scala/io/Codec$.html#apply-fffffe7b","e":false,"i":"","n":"apply","t":"apply(encoding: String): Codec","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#apply-fffff6ba","e":false,"i":"","n":"apply","t":"apply(charSet: Charset): Codec","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#apply-f96","e":false,"i":"","n":"apply","t":"apply(decoder: CharsetDecoder): Codec","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#charset2codec-fffff6ba","e":false,"i":"","n":"charset2codec","t":"charset2codec(c: Charset): Codec","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#decoder2codec-f96","e":false,"i":"","n":"decoder2codec","t":"decoder2codec(cd: CharsetDecoder): Codec","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#default-0","e":false,"i":"","n":"default","t":"default: Codec","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#defaultCharsetCodec-0","e":false,"i":"","n":"defaultCharsetCodec","t":"defaultCharsetCodec: Codec","d":"scala.io.Codec","k":"def","x":"Optimistically these two possible defaults will be the same thing.\nIn practice this is not necessarily true, and in fact Sun classifies\nthe fact that you can influence anything at all via -Dfile.encoding\nas an accident, with any anomalies considered \"not a bug\".\n"},
{"l":"api/scala/io/Codec$.html#fileEncodingCodec-0","e":false,"i":"","n":"fileEncodingCodec","t":"fileEncodingCodec: Codec","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#fromUTF8-fffffc32","e":false,"i":"","n":"fromUTF8","t":"fromUTF8(bytes: Array[Byte]): Array[Char]","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#fromUTF8-f92","e":false,"i":"","n":"fromUTF8","t":"fromUTF8(bytes: Array[Byte], offset: Int, len: Int): Array[Char]","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#string2codec-fffffe7b","e":false,"i":"","n":"string2codec","t":"string2codec(s: String): Codec","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#toUTF8-fffff03d","e":false,"i":"","n":"toUTF8","t":"toUTF8(cs: CharSequence): Array[Byte]","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/Codec$.html#toUTF8-fffff312","e":false,"i":"","n":"toUTF8","t":"toUTF8(chars: Array[Char], offset: Int, len: Int): Array[Byte]","d":"scala.io.Codec","k":"def","x":""},
{"l":"api/scala/io/LowPriorityCodecImplicits.html#","e":false,"i":"","n":"LowPriorityCodecImplicits","t":"LowPriorityCodecImplicits","d":"scala.io","k":"trait","x":""},
{"l":"api/scala/io/LowPriorityCodecImplicits.html#fallbackSystemCodec-0","e":false,"i":"","n":"fallbackSystemCodec","t":"fallbackSystemCodec: Codec","d":"scala.io.LowPriorityCodecImplicits","k":"val","x":"The Codec of Last Resort."},
{"l":"api/scala/io/Source$.html#","e":false,"i":"","n":"Source","t":"Source","d":"scala.io","k":"object","x":"This object provides convenience methods to create an iterable\nrepresentation of a source file.\n"},
{"l":"api/scala/io/Source$.html#DefaultBufSize-0","e":false,"i":"","n":"DefaultBufSize","t":"DefaultBufSize: Int","d":"scala.io.Source","k":"val","x":""},
{"l":"api/scala/io/Source$.html#createBufferedSource-fffffc4b","e":false,"i":"","n":"createBufferedSource","t":"createBufferedSource(inputStream: InputStream, bufferSize: Int, reset: () => Source, close: () => Unit)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":"Reads data from inputStream with a buffered reader, using the encoding\nin implicit parameter codec.\n"},
{"l":"api/scala/io/Source$.html#fromBytes-cd3","e":false,"i":"","n":"fromBytes","t":"fromBytes(bytes: Array[Byte])(implicit codec: Codec): Source","d":"scala.io.Source","k":"def","x":"Create a Source from array of bytes, decoding\nthe bytes according to codec.\n"},
{"l":"api/scala/io/Source$.html#fromBytes-7e4","e":false,"i":"","n":"fromBytes","t":"fromBytes(bytes: Array[Byte], enc: String): Source","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source$.html#fromChar-7d","e":false,"i":"","n":"fromChar","t":"fromChar(c: Char): Source","d":"scala.io.Source","k":"def","x":"Creates a Source instance from a single character.\n"},
{"l":"api/scala/io/Source$.html#fromChars-45b","e":false,"i":"","n":"fromChars","t":"fromChars(chars: Array[Char]): Source","d":"scala.io.Source","k":"def","x":"creates Source from array of characters, with empty description.\n"},
{"l":"api/scala/io/Source$.html#fromFile-43f","e":false,"i":"","n":"fromFile","t":"fromFile(name: String)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":"creates Source from file with given name, setting its description to\nfilename.\n"},
{"l":"api/scala/io/Source$.html#fromFile-710","e":false,"i":"","n":"fromFile","t":"fromFile(name: String, enc: String): BufferedSource","d":"scala.io.Source","k":"def","x":"creates Source from file with given name, using given encoding, setting\nits description to filename.\n"},
{"l":"api/scala/io/Source$.html#fromFile-335","e":false,"i":"","n":"fromFile","t":"fromFile(uri: URI)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":"creates source from file with given file URI.\n"},
{"l":"api/scala/io/Source$.html#fromFile-86","e":false,"i":"","n":"fromFile","t":"fromFile(uri: URI, enc: String): BufferedSource","d":"scala.io.Source","k":"def","x":"creates Source from file with given file: URI\n"},
{"l":"api/scala/io/Source$.html#fromFile-fffff8ec","e":false,"i":"","n":"fromFile","t":"fromFile(file: File)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":"creates Source from file, using default character encoding, setting its\ndescription to filename.\n"},
{"l":"api/scala/io/Source$.html#fromFile-47d","e":false,"i":"","n":"fromFile","t":"fromFile(file: File, enc: String): BufferedSource","d":"scala.io.Source","k":"def","x":"same as fromFile(file, enc, Source.DefaultBufSize)\n"},
{"l":"api/scala/io/Source$.html#fromFile-a10","e":false,"i":"","n":"fromFile","t":"fromFile(file: File, enc: String, bufferSize: Int): BufferedSource","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source$.html#fromFile-fffff855","e":false,"i":"","n":"fromFile","t":"fromFile(file: File, bufferSize: Int)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":"Creates Source from file, using given character encoding, setting\nits description to filename. Input is buffered in a buffer of size\nbufferSize.\n"},
{"l":"api/scala/io/Source$.html#fromInputStream-fffffd07","e":false,"i":"","n":"fromInputStream","t":"fromInputStream(is: InputStream, enc: String): BufferedSource","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source$.html#fromInputStream-bf6","e":false,"i":"","n":"fromInputStream","t":"fromInputStream(is: InputStream)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source$.html#fromIterable-fffffae1","e":false,"i":"","n":"fromIterable","t":"fromIterable(iterable: Iterable[Char]): Source","d":"scala.io.Source","k":"def","x":"Creates a Source from an Iterable.\n"},
{"l":"api/scala/io/Source$.html#fromRawBytes-fffff0e9","e":false,"i":"","n":"fromRawBytes","t":"fromRawBytes(bytes: Array[Byte]): Source","d":"scala.io.Source","k":"def","x":"Create a Source from array of bytes, assuming\none byte per character (ISO-8859-1 encoding.)\n"},
{"l":"api/scala/io/Source$.html#fromResource-e32","e":false,"i":"","n":"fromResource","t":"fromResource(resource: String, classLoader: ClassLoader)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":"Reads data from a classpath resource, using either a context classloader (default) or a passed one.\n"},
{"l":"api/scala/io/Source$.html#fromString-fffff656","e":false,"i":"","n":"fromString","t":"fromString(s: String): Source","d":"scala.io.Source","k":"def","x":"creates Source from a String, with no description.\n"},
{"l":"api/scala/io/Source$.html#fromURI-335","e":false,"i":"","n":"fromURI","t":"fromURI(uri: URI)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":"creates Source from file with given file: URI\n"},
{"l":"api/scala/io/Source$.html#fromURL-710","e":false,"i":"","n":"fromURL","t":"fromURL(s: String, enc: String): BufferedSource","d":"scala.io.Source","k":"def","x":"same as fromURL(new URL(s))(Codec(enc))\n"},
{"l":"api/scala/io/Source$.html#fromURL-43f","e":false,"i":"","n":"fromURL","t":"fromURL(s: String)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":"same as fromURL(new URL(s))\n"},
{"l":"api/scala/io/Source$.html#fromURL-323","e":false,"i":"","n":"fromURL","t":"fromURL(url: URL, enc: String): BufferedSource","d":"scala.io.Source","k":"def","x":"same as fromInputStream(url.openStream())(Codec(enc))\n"},
{"l":"api/scala/io/Source$.html#fromURL-fffff912","e":false,"i":"","n":"fromURL","t":"fromURL(url: URL)(implicit codec: Codec): BufferedSource","d":"scala.io.Source","k":"def","x":"same as fromInputStream(url.openStream())(codec)\n"},
{"l":"api/scala/io/Source$.html#stdin-0","e":false,"i":"","n":"stdin","t":"stdin: BufferedSource","d":"scala.io.Source","k":"def","x":"Creates a Source from System.in.\n"},
{"l":"api/scala/io/Source.html#","e":false,"i":"","n":"Source","t":"Source extends Iterator[Char], Closeable","d":"scala.io","k":"class","x":"An iterable representation of source data.\nIt may be reset with the optional reset method."},
{"l":"api/scala/io/Source.html#ch-0","e":false,"i":"","n":"ch","t":"ch: Char","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source.html#close-94c","e":false,"i":"","n":"close","t":"close(): Unit","d":"scala.io.Source","k":"def","x":"The close() method closes the underlying resource."},
{"l":"api/scala/io/Source.html#descr-0","e":false,"i":"","n":"descr","t":"descr: String","d":"scala.io.Source","k":"var","x":"description of this source, default empty"},
{"l":"api/scala/io/Source.html#getLines-fffff136","e":false,"i":"","n":"getLines","t":"getLines(): Iterator[String]","d":"scala.io.Source","k":"def","x":"Returns an iterator who returns lines (NOT including newline character(s)).\nIt will treat any of \\r\\n, \\r, or \\n as a line separator (longest match) - if\nyou need more refined behavior you can subclass Source#LineIterator directly.\n"},
{"l":"api/scala/io/Source.html#hasNext-0","e":false,"i":"","n":"hasNext","t":"hasNext: Boolean","d":"scala.io.Source","k":"def","x":"Returns true if this source has more characters.\n"},
{"l":"api/scala/io/Source.html#nerrors-0","e":false,"i":"","n":"nerrors","t":"nerrors: Int","d":"scala.io.Source","k":"var","x":""},
{"l":"api/scala/io/Source.html#next-31e","e":false,"i":"","n":"next","t":"next(): Char","d":"scala.io.Source","k":"def","x":"Returns next character.\n"},
{"l":"api/scala/io/Source.html#nwarnings-0","e":false,"i":"","n":"nwarnings","t":"nwarnings: Int","d":"scala.io.Source","k":"var","x":""},
{"l":"api/scala/io/Source.html#pos-0","e":false,"i":"","n":"pos","t":"pos: Int","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source.html#report-fffff4f1","e":false,"i":"","n":"report","t":"report(pos: Int, msg: String, out: PrintStream): Unit","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source.html#reportError-fffff4f1","e":false,"i":"","n":"reportError","t":"reportError(pos: Int, msg: String, out: PrintStream): Unit","d":"scala.io.Source","k":"def","x":"Reports an error message to the output stream out.\n"},
{"l":"api/scala/io/Source.html#reportWarning-fffff4f1","e":false,"i":"","n":"reportWarning","t":"reportWarning(pos: Int, msg: String, out: PrintStream): Unit","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source.html#reset-fffff35b","e":false,"i":"","n":"reset","t":"reset(): Source","d":"scala.io.Source","k":"def","x":"The reset() method creates a fresh copy of this Source."},
{"l":"api/scala/io/Source.html#withClose-fffffccb","e":false,"i":"","n":"withClose","t":"withClose(f: () => Unit): this.type","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source.html#withDescription-fffff656","e":false,"i":"","n":"withDescription","t":"withDescription(text: String): this.type","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source.html#withPositioning-fffffffb","e":false,"i":"","n":"withPositioning","t":"withPositioning(on: Boolean): this.type","d":"scala.io.Source","k":"def","x":"Change or disable the positioner."},
{"l":"api/scala/io/Source.html#withPositioning-c12","e":false,"i":"","n":"withPositioning","t":"withPositioning(pos: Positioner): this.type","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source.html#withReset-fffffccb","e":false,"i":"","n":"withReset","t":"withReset(f: () => Source): this.type","d":"scala.io.Source","k":"def","x":""},
{"l":"api/scala/io/Source$LineIterator.html#","e":false,"i":"","n":"LineIterator","t":"LineIterator extends AbstractIterator[String], Iterator[String]","d":"scala.io.Source","k":"class","x":""},
{"l":"api/scala/io/Source$LineIterator.html#getc-fffff760","e":false,"i":"","n":"getc","t":"getc(): Boolean","d":"scala.io.Source.LineIterator","k":"def","x":""},
{"l":"api/scala/io/Source$LineIterator.html#hasNext-0","e":false,"i":"","n":"hasNext","t":"hasNext: Boolean","d":"scala.io.Source.LineIterator","k":"def","x":"Check if there is a next element available.\n"},
{"l":"api/scala/io/Source$LineIterator.html#isNewline-502","e":false,"i":"","n":"isNewline","t":"isNewline(ch: Char): Boolean","d":"scala.io.Source.LineIterator","k":"def","x":""},
{"l":"api/scala/io/Source$LineIterator.html#iter-0","e":false,"i":"","n":"iter","t":"iter: BufferedIterator[Char]","d":"scala.io.Source.LineIterator","k":"val","x":""},
{"l":"api/scala/io/Source$LineIterator.html#next-665","e":false,"i":"","n":"next","t":"next(): String","d":"scala.io.Source.LineIterator","k":"def","x":"Return the next element and advance the iterator.\n"},
{"l":"api/scala/io/Source$NoPositioner$.html#","e":false,"i":"","n":"NoPositioner","t":"NoPositioner extends Positioner","d":"scala.io.Source","k":"object","x":""},
{"l":"api/scala/io/Source$Positioner.html#","e":false,"i":"","n":"Positioner","t":"Positioner(encoder: Position)","d":"scala.io.Source","k":"class","x":""},
{"l":"api/scala/io/Source$Positioner.html#ccol-0","e":false,"i":"","n":"ccol","t":"ccol: Int","d":"scala.io.Source.Positioner","k":"var","x":""},
{"l":"api/scala/io/Source$Positioner.html#ch-0","e":false,"i":"","n":"ch","t":"ch: Char","d":"scala.io.Source.Positioner","k":"var","x":"the last character returned by next."},
{"l":"api/scala/io/Source$Positioner.html#cline-0","e":false,"i":"","n":"cline","t":"cline: Int","d":"scala.io.Source.Positioner","k":"var","x":"current line and column"},
{"l":"api/scala/io/Source$Positioner.html#next-31e","e":false,"i":"","n":"next","t":"next(): Char","d":"scala.io.Source.Positioner","k":"def","x":""},
{"l":"api/scala/io/Source$Positioner.html#pos-0","e":false,"i":"","n":"pos","t":"pos: Int","d":"scala.io.Source.Positioner","k":"var","x":"position of last character returned by next"},
{"l":"api/scala/io/Source$Positioner.html#tabinc-0","e":false,"i":"","n":"tabinc","t":"tabinc: Int","d":"scala.io.Source.Positioner","k":"var","x":"default col increment for tabs '\\t', set to 4 initially"},
{"l":"api/scala/io/Source$Positioner.html#<init>-fffff029","e":false,"i":"","n":"this","t":"this()","d":"scala.io.Source.Positioner","k":"def","x":""},
{"l":"api/scala/io/Source$RelaxedPosition$.html#","e":false,"i":"","n":"RelaxedPosition","t":"RelaxedPosition","d":"scala.io.Source","k":"object","x":"A Position implementation which ignores errors in\nthe positions.\n"},
{"l":"api/scala/io/Source$RelaxedPosition$.html#COLUMN_BITS-0","e":false,"i":"","n":"COLUMN_BITS","t":"COLUMN_BITS: 11","d":"scala.io.Source.RelaxedPosition","k":"val","x":"Number of bits used to encode the column number"},
{"l":"api/scala/io/Source$RelaxedPosition$.html#COLUMN_MASK-0","e":false,"i":"","n":"COLUMN_MASK","t":"COLUMN_MASK: 2047","d":"scala.io.Source.RelaxedPosition","k":"val","x":"Mask to decode the column number"},
{"l":"api/scala/io/Source$RelaxedPosition$.html#LINE_BITS-0","e":false,"i":"","n":"LINE_BITS","t":"LINE_BITS: 20","d":"scala.io.Source.RelaxedPosition","k":"val","x":"Number of bits used to encode the line number"},
{"l":"api/scala/io/Source$RelaxedPosition$.html#LINE_MASK-0","e":false,"i":"","n":"LINE_MASK","t":"LINE_MASK: 1048575","d":"scala.io.Source.RelaxedPosition","k":"val","x":"Mask to decode the line number"},
{"l":"api/scala/io/Source$RelaxedPosition$.html#checkInput-d2c","e":false,"i":"","n":"checkInput","t":"checkInput(line: Int, column: Int): Unit","d":"scala.io.Source.RelaxedPosition","k":"def","x":"Definable behavior for overflow conditions.\n"},
{"l":"api/scala/io/Source$RelaxedPosition$.html#column-fffffbe0","e":false,"i":"","n":"column","t":"column(pos: Int): Int","d":"scala.io.Source.RelaxedPosition","k":"def","x":"Returns the column number of the encoded position."},
{"l":"api/scala/io/Source$RelaxedPosition$.html#encode-f47","e":false,"i":"","n":"encode","t":"encode(line: Int, column: Int): Int","d":"scala.io.Source.RelaxedPosition","k":"def","x":"Encodes a position into a single integer."},
{"l":"api/scala/io/Source$RelaxedPosition$.html#line-fffffbe0","e":false,"i":"","n":"line","t":"line(pos: Int): Int","d":"scala.io.Source.RelaxedPosition","k":"def","x":"Returns the line number of the encoded position."},
{"l":"api/scala/io/Source$RelaxedPosition$.html#toString-78c","e":false,"i":"","n":"toString","t":"toString(pos: Int): String","d":"scala.io.Source.RelaxedPosition","k":"def","x":"Returns a string representation of the encoded position."},
{"l":"api/scala/io/Source$RelaxedPositioner$.html#","e":false,"i":"","n":"RelaxedPositioner","t":"RelaxedPositioner extends Positioner","d":"scala.io.Source","k":"object","x":""},
{"l":"api/scala/io/StdIn$.html#","e":false,"i":"","n":"StdIn","t":"StdIn","d":"scala.io","k":"object","x":""},
{"l":"api/scala/io/StdIn$.html#readBoolean-fffff760","e":false,"i":"","n":"readBoolean","t":"readBoolean(): Boolean","d":"scala.io.StdIn","k":"def","x":"Reads a boolean value from an entire line of the default input.\nHas a fairly liberal interpretation of the input.\n"},
{"l":"api/scala/io/StdIn$.html#readByte-d0","e":false,"i":"","n":"readByte","t":"readByte(): Byte","d":"scala.io.StdIn","k":"def","x":"Reads a byte value from an entire line of the default input.\n"},
{"l":"api/scala/io/StdIn$.html#readChar-31e","e":false,"i":"","n":"readChar","t":"readChar(): Char","d":"scala.io.StdIn","k":"def","x":"Reads a char value from an entire line of the default input.\n"},
{"l":"api/scala/io/StdIn$.html#readDouble-999","e":false,"i":"","n":"readDouble","t":"readDouble(): Double","d":"scala.io.StdIn","k":"def","x":"Reads a double value from an entire line of the default input.\n"},
{"l":"api/scala/io/StdIn$.html#readFloat-fffffb94","e":false,"i":"","n":"readFloat","t":"readFloat(): Float","d":"scala.io.StdIn","k":"def","x":"Reads a float value from an entire line of the default input."},
{"l":"api/scala/io/StdIn$.html#readInt-ffffff27","e":false,"i":"","n":"readInt","t":"readInt(): Int","d":"scala.io.StdIn","k":"def","x":"Reads an int value from an entire line of the default input.\n"},
{"l":"api/scala/io/StdIn$.html#readLine-835","e":false,"i":"","n":"readLine","t":"readLine(text: String, args: Any*): String","d":"scala.io.StdIn","k":"def","x":"Print and flush formatted text to the default output, and read a full line from the default input.\nReturns null if the end of the input stream has been reached.\n"},
{"l":"api/scala/io/StdIn$.html#readLine-665","e":false,"i":"","n":"readLine","t":"readLine(): String","d":"scala.io.StdIn","k":"def","x":"Read a full line from the default input.  Returns null if the end of the\ninput stream has been reached.\n"},
{"l":"api/scala/io/StdIn$.html#readLong-644","e":false,"i":"","n":"readLong","t":"readLong(): Long","d":"scala.io.StdIn","k":"def","x":"Reads an long value from an entire line of the default input.\n"},
{"l":"api/scala/io/StdIn$.html#readShort-fffffdb4","e":false,"i":"","n":"readShort","t":"readShort(): Short","d":"scala.io.StdIn","k":"def","x":"Reads a short value from an entire line of the default input.\n"},
{"l":"api/scala/io/StdIn$.html#readf-94d","e":false,"i":"","n":"readf","t":"readf(format: String): List[Any]","d":"scala.io.StdIn","k":"def","x":"Reads in some structured input (from the default input), specified by\na format specifier. See class java.text.MessageFormat for details of\nthe format specification.\n"},
{"l":"api/scala/io/StdIn$.html#readf1-fffff5f8","e":false,"i":"","n":"readf1","t":"readf1(format: String): Any","d":"scala.io.StdIn","k":"def","x":"Reads in some structured input (from the default input), specified by\na format specifier, returning only the first value extracted, according\nto the format specification.\n"},
{"l":"api/scala/io/StdIn$.html#readf2-fffff617","e":false,"i":"","n":"readf2","t":"readf2(format: String): (Any, Any)","d":"scala.io.StdIn","k":"def","x":"Reads in some structured input (from the default input), specified\nby a format specifier, returning only the first two values extracted,\naccording to the format specification.\n"},
{"l":"api/scala/io/StdIn$.html#readf3-fffff618","e":false,"i":"","n":"readf3","t":"readf3(format: String): (Any, Any, Any)","d":"scala.io.StdIn","k":"def","x":"Reads in some structured input (from the default input), specified\nby a format specifier, returning only the first three values extracted,\naccording to the format specification.\n"},
{"l":"api/scala/jdk.html#","e":false,"i":"","n":"scala.jdk","t":"scala.jdk","d":"","k":"package","x":"The jdk package contains utilities to interact with JDK classes."},
{"l":"api/scala/jdk/javaapi.html#","e":false,"i":"","n":"scala.jdk.javaapi","t":"scala.jdk.javaapi","d":"","k":"package","x":""},
{"l":"api/scala/jdk/javaapi/CollectionConverters$.html#","e":false,"i":"","n":"CollectionConverters","t":"CollectionConverters extends AsJavaConverters, AsScalaConverters","d":"scala.jdk.javaapi","k":"object","x":"This object contains methods that convert between Scala and Java collections."},
{"l":"api/scala/jdk/javaapi/DurationConverters$.html#","e":false,"i":"","n":"DurationConverters","t":"DurationConverters","d":"scala.jdk.javaapi","k":"object","x":"This object contains methods that convert between Scala and Java duration types."},
{"l":"api/scala/jdk/javaapi/DurationConverters$.html#toJava-fffffef7","e":false,"i":"","n":"toJava","t":"toJava(duration: FiniteDuration): Duration","d":"scala.jdk.javaapi.DurationConverters","k":"def","x":"Convert a Scala FiniteDuration to a Java duration. Note that the Scala duration keeps the\ntime unit it was created with, while a Java duration always is a pair of seconds and nanos,\nso the unit it lost.\n"},
{"l":"api/scala/jdk/javaapi/DurationConverters$.html#toScala-fffff977","e":false,"i":"","n":"toScala","t":"toScala(duration: Duration): FiniteDuration","d":"scala.jdk.javaapi.DurationConverters","k":"def","x":"Convert a Java duration to a Scala duration. If the nanosecond part of the Java duration is\nzero, the returned duration will have a time unit of seconds. If there is a nanoseconds part,\nthe Scala duration will have a time unit of nanoseconds.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#","e":false,"i":"","n":"FunctionConverters","t":"FunctionConverters","d":"scala.jdk.javaapi","k":"object","x":"This object contains methods that convert between Scala and Java function types."},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaBiConsumer-fffffd93","e":false,"i":"","n":"asJavaBiConsumer","t":"asJavaBiConsumer[T, U](sf: (T, U) => BoxedUnit): BiConsumer[T, U]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaBiFunction-fffffff6","e":false,"i":"","n":"asJavaBiFunction","t":"asJavaBiFunction[T, U, R](sf: (T, U) => R): BiFunction[T, U, R]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaBiPredicate-3ba","e":false,"i":"","n":"asJavaBiPredicate","t":"asJavaBiPredicate[T, U](sf: (T, U) => Boolean): BiPredicate[T, U]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaBinaryOperator-2fa","e":false,"i":"","n":"asJavaBinaryOperator","t":"asJavaBinaryOperator[T](sf: (T, T) => T): BinaryOperator[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaBooleanSupplier-20e","e":false,"i":"","n":"asJavaBooleanSupplier","t":"asJavaBooleanSupplier(sf: () => Boolean): BooleanSupplier","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaConsumer-fffff38c","e":false,"i":"","n":"asJavaConsumer","t":"asJavaConsumer[T](sf: T => BoxedUnit): Consumer[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaDoubleBinaryOperator-bfa","e":false,"i":"","n":"asJavaDoubleBinaryOperator","t":"asJavaDoubleBinaryOperator(sf: (Double, Double) => Double): DoubleBinaryOperator","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaDoubleConsumer-ffffffcc","e":false,"i":"","n":"asJavaDoubleConsumer","t":"asJavaDoubleConsumer(sf: Double => BoxedUnit): DoubleConsumer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaDoubleFunction-9df","e":false,"i":"","n":"asJavaDoubleFunction","t":"asJavaDoubleFunction[R](sf: Double => R): DoubleFunction[R]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaDoublePredicate-fffff8a1","e":false,"i":"","n":"asJavaDoublePredicate","t":"asJavaDoublePredicate(sf: Double => Boolean): DoublePredicate","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaDoubleSupplier-183","e":false,"i":"","n":"asJavaDoubleSupplier","t":"asJavaDoubleSupplier(sf: () => Double): DoubleSupplier","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaDoubleToIntFunction-fffff956","e":false,"i":"","n":"asJavaDoubleToIntFunction","t":"asJavaDoubleToIntFunction(sf: Double => Integer): DoubleToIntFunction","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaDoubleToLongFunction-fffff7e5","e":false,"i":"","n":"asJavaDoubleToLongFunction","t":"asJavaDoubleToLongFunction(sf: Double => Long): DoubleToLongFunction","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaDoubleUnaryOperator-dd","e":false,"i":"","n":"asJavaDoubleUnaryOperator","t":"asJavaDoubleUnaryOperator(sf: Double => Double): DoubleUnaryOperator","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaFunction-22f","e":false,"i":"","n":"asJavaFunction","t":"asJavaFunction[T, R](sf: T => R): Function[T, R]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaIntBinaryOperator-fffffe10","e":false,"i":"","n":"asJavaIntBinaryOperator","t":"asJavaIntBinaryOperator(sf: (Integer, Integer) => Integer): IntBinaryOperator","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaIntConsumer-fffff640","e":false,"i":"","n":"asJavaIntConsumer","t":"asJavaIntConsumer(sf: Integer => BoxedUnit): IntConsumer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaIntFunction-fffff191","e":false,"i":"","n":"asJavaIntFunction","t":"asJavaIntFunction[R](sf: Integer => R): IntFunction[R]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaIntPredicate-fffff0ad","e":false,"i":"","n":"asJavaIntPredicate","t":"asJavaIntPredicate(sf: Integer => Boolean): IntPredicate","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaIntSupplier-3d5","e":false,"i":"","n":"asJavaIntSupplier","t":"asJavaIntSupplier(sf: () => Integer): IntSupplier","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaIntToDoubleFunction-fffff26e","e":false,"i":"","n":"asJavaIntToDoubleFunction","t":"asJavaIntToDoubleFunction(sf: Integer => Double): IntToDoubleFunction","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaIntToLongFunction-759","e":false,"i":"","n":"asJavaIntToLongFunction","t":"asJavaIntToLongFunction(sf: Integer => Long): IntToLongFunction","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaIntUnaryOperator-2e9","e":false,"i":"","n":"asJavaIntUnaryOperator","t":"asJavaIntUnaryOperator(sf: Integer => Integer): IntUnaryOperator","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaLongBinaryOperator-fffff065","e":false,"i":"","n":"asJavaLongBinaryOperator","t":"asJavaLongBinaryOperator(sf: (Long, Long) => Long): LongBinaryOperator","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaLongConsumer-4b7","e":false,"i":"","n":"asJavaLongConsumer","t":"asJavaLongConsumer(sf: Long => BoxedUnit): LongConsumer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaLongFunction-fffff70a","e":false,"i":"","n":"asJavaLongFunction","t":"asJavaLongFunction[R](sf: Long => R): LongFunction[R]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaLongPredicate-fffff116","e":false,"i":"","n":"asJavaLongPredicate","t":"asJavaLongPredicate(sf: Long => Boolean): LongPredicate","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaLongSupplier-aae","e":false,"i":"","n":"asJavaLongSupplier","t":"asJavaLongSupplier(sf: () => Long): LongSupplier","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaLongToDoubleFunction-fffff9e5","e":false,"i":"","n":"asJavaLongToDoubleFunction","t":"asJavaLongToDoubleFunction(sf: Long => Double): LongToDoubleFunction","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaLongToIntFunction-f4b","e":false,"i":"","n":"asJavaLongToIntFunction","t":"asJavaLongToIntFunction(sf: Long => Integer): LongToIntFunction","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaLongUnaryOperator-6d2","e":false,"i":"","n":"asJavaLongUnaryOperator","t":"asJavaLongUnaryOperator(sf: Long => Long): LongUnaryOperator","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaObjDoubleConsumer-fffffc69","e":false,"i":"","n":"asJavaObjDoubleConsumer","t":"asJavaObjDoubleConsumer[T](sf: (T, Double) => BoxedUnit): ObjDoubleConsumer[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaObjIntConsumer-6c3","e":false,"i":"","n":"asJavaObjIntConsumer","t":"asJavaObjIntConsumer[T](sf: (T, Integer) => BoxedUnit): ObjIntConsumer[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaObjLongConsumer-494","e":false,"i":"","n":"asJavaObjLongConsumer","t":"asJavaObjLongConsumer[T](sf: (T, Long) => BoxedUnit): ObjLongConsumer[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaPredicate-ce1","e":false,"i":"","n":"asJavaPredicate","t":"asJavaPredicate[T](sf: T => Boolean): Predicate[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaSupplier-fffff203","e":false,"i":"","n":"asJavaSupplier","t":"asJavaSupplier[T](sf: () => T): Supplier[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaToDoubleBiFunction-ac1","e":false,"i":"","n":"asJavaToDoubleBiFunction","t":"asJavaToDoubleBiFunction[T, U](sf: (T, U) => Double): ToDoubleBiFunction[T, U]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaToDoubleFunction-3ba","e":false,"i":"","n":"asJavaToDoubleFunction","t":"asJavaToDoubleFunction[T](sf: T => Double): ToDoubleFunction[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaToIntBiFunction-55d","e":false,"i":"","n":"asJavaToIntBiFunction","t":"asJavaToIntBiFunction[T, U](sf: (T, U) => Integer): ToIntBiFunction[T, U]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaToIntFunction-fffffd96","e":false,"i":"","n":"asJavaToIntFunction","t":"asJavaToIntFunction[T](sf: T => Integer): ToIntFunction[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaToLongBiFunction-fffffbec","e":false,"i":"","n":"asJavaToLongBiFunction","t":"asJavaToLongBiFunction[T, U](sf: (T, U) => Long): ToLongBiFunction[T, U]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaToLongFunction-fffffba5","e":false,"i":"","n":"asJavaToLongFunction","t":"asJavaToLongFunction[T](sf: T => Long): ToLongFunction[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asJavaUnaryOperator-51d","e":false,"i":"","n":"asJavaUnaryOperator","t":"asJavaUnaryOperator[T](sf: T => T): UnaryOperator[T]","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromBiConsumer-1b1","e":false,"i":"","n":"asScalaFromBiConsumer","t":"asScalaFromBiConsumer[T, U](jf: BiConsumer[T, U]): (T, U) => BoxedUnit","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromBiFunction-410","e":false,"i":"","n":"asScalaFromBiFunction","t":"asScalaFromBiFunction[T, U, R](jf: BiFunction[T, U, R]): (T, U) => R","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromBiPredicate-4c6","e":false,"i":"","n":"asScalaFromBiPredicate","t":"asScalaFromBiPredicate[T, U](jf: BiPredicate[T, U]): (T, U) => Boolean","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromBinaryOperator-248","e":false,"i":"","n":"asScalaFromBinaryOperator","t":"asScalaFromBinaryOperator[T](jf: BinaryOperator[T]): (T, T) => T","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromBooleanSupplier-752","e":false,"i":"","n":"asScalaFromBooleanSupplier","t":"asScalaFromBooleanSupplier(jf: BooleanSupplier): () => Boolean","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromConsumer-e36","e":false,"i":"","n":"asScalaFromConsumer","t":"asScalaFromConsumer[T](jf: Consumer[T]): T => BoxedUnit","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromDoubleBinaryOperator-fffff246","e":false,"i":"","n":"asScalaFromDoubleBinaryOperator","t":"asScalaFromDoubleBinaryOperator(jf: DoubleBinaryOperator): (Double, Double) => Double","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromDoubleConsumer-fffff4b4","e":false,"i":"","n":"asScalaFromDoubleConsumer","t":"asScalaFromDoubleConsumer(jf: DoubleConsumer): Double => BoxedUnit","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromDoubleFunction-ec3","e":false,"i":"","n":"asScalaFromDoubleFunction","t":"asScalaFromDoubleFunction[R](jf: DoubleFunction[R]): Double => R","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromDoublePredicate-fffff241","e":false,"i":"","n":"asScalaFromDoublePredicate","t":"asScalaFromDoublePredicate(jf: DoublePredicate): Double => Boolean","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromDoubleSupplier-fffff81d","e":false,"i":"","n":"asScalaFromDoubleSupplier","t":"asScalaFromDoubleSupplier(jf: DoubleSupplier): () => Double","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromDoubleToIntFunction-fffff06c","e":false,"i":"","n":"asScalaFromDoubleToIntFunction","t":"asScalaFromDoubleToIntFunction(jf: DoubleToIntFunction): Double => Integer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromDoubleToLongFunction-83b","e":false,"i":"","n":"asScalaFromDoubleToLongFunction","t":"asScalaFromDoubleToLongFunction(jf: DoubleToLongFunction): Double => Long","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromDoubleUnaryOperator-a05","e":false,"i":"","n":"asScalaFromDoubleUnaryOperator","t":"asScalaFromDoubleUnaryOperator(jf: DoubleUnaryOperator): Double => Double","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromFunction-cd5","e":false,"i":"","n":"asScalaFromFunction","t":"asScalaFromFunction[T, R](jf: Function[T, R]): T => R","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromIntBinaryOperator-e54","e":false,"i":"","n":"asScalaFromIntBinaryOperator","t":"asScalaFromIntBinaryOperator(jf: IntBinaryOperator): (Integer, Integer) => Integer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromIntConsumer-342","e":false,"i":"","n":"asScalaFromIntConsumer","t":"asScalaFromIntConsumer(jf: IntConsumer): Integer => BoxedUnit","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromIntFunction-e8f","e":false,"i":"","n":"asScalaFromIntFunction","t":"asScalaFromIntFunction[R](jf: IntFunction[R]): Integer => R","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromIntPredicate-fffff573","e":false,"i":"","n":"asScalaFromIntPredicate","t":"asScalaFromIntPredicate(jf: IntPredicate): Integer => Boolean","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromIntSupplier-6ab","e":false,"i":"","n":"asScalaFromIntSupplier","t":"asScalaFromIntSupplier(jf: IntSupplier): () => Integer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromIntToDoubleFunction-fffff454","e":false,"i":"","n":"asScalaFromIntToDoubleFunction","t":"asScalaFromIntToDoubleFunction(jf: IntToDoubleFunction): Integer => Double","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromIntToLongFunction-fffff449","e":false,"i":"","n":"asScalaFromIntToLongFunction","t":"asScalaFromIntToLongFunction(jf: IntToLongFunction): Integer => Long","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromIntUnaryOperator-437","e":false,"i":"","n":"asScalaFromIntUnaryOperator","t":"asScalaFromIntUnaryOperator(jf: IntUnaryOperator): Integer => Integer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromLongBinaryOperator-fffffdfb","e":false,"i":"","n":"asScalaFromLongBinaryOperator","t":"asScalaFromLongBinaryOperator(jf: LongBinaryOperator): (Long, Long) => Long","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromLongConsumer-c29","e":false,"i":"","n":"asScalaFromLongConsumer","t":"asScalaFromLongConsumer(jf: LongConsumer): Long => BoxedUnit","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromLongFunction-e78","e":false,"i":"","n":"asScalaFromLongFunction","t":"asScalaFromLongFunction[R](jf: LongFunction[R]): Long => R","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromLongPredicate-fffff96c","e":false,"i":"","n":"asScalaFromLongPredicate","t":"asScalaFromLongPredicate(jf: LongPredicate): Long => Boolean","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromLongSupplier-f92","e":false,"i":"","n":"asScalaFromLongSupplier","t":"asScalaFromLongSupplier(jf: LongSupplier): () => Long","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromLongToDoubleFunction-63b","e":false,"i":"","n":"asScalaFromLongToDoubleFunction","t":"asScalaFromLongToDoubleFunction(jf: LongToDoubleFunction): Long => Double","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromLongToIntFunction-a17","e":false,"i":"","n":"asScalaFromLongToIntFunction","t":"asScalaFromLongToIntFunction(jf: LongToIntFunction): Long => Integer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromLongUnaryOperator-3b0","e":false,"i":"","n":"asScalaFromLongUnaryOperator","t":"asScalaFromLongUnaryOperator(jf: LongUnaryOperator): Long => Long","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromObjDoubleConsumer-ffffff19","e":false,"i":"","n":"asScalaFromObjDoubleConsumer","t":"asScalaFromObjDoubleConsumer[T](jf: ObjDoubleConsumer[T]): (T, Double) => BoxedUnit","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromObjIntConsumer-fffff35f","e":false,"i":"","n":"asScalaFromObjIntConsumer","t":"asScalaFromObjIntConsumer[T](jf: ObjIntConsumer[T]): (T, Integer) => BoxedUnit","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromObjLongConsumer-ffffff8e","e":false,"i":"","n":"asScalaFromObjLongConsumer","t":"asScalaFromObjLongConsumer[T](jf: ObjLongConsumer[T]): (T, Long) => BoxedUnit","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromPredicate-8ff","e":false,"i":"","n":"asScalaFromPredicate","t":"asScalaFromPredicate[T](jf: Predicate[T]): T => Boolean","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromSupplier-fffff19f","e":false,"i":"","n":"asScalaFromSupplier","t":"asScalaFromSupplier[T](jf: Supplier[T]): () => T","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromToDoubleBiFunction-fffff0c3","e":false,"i":"","n":"asScalaFromToDoubleBiFunction","t":"asScalaFromToDoubleBiFunction[T, U](jf: ToDoubleBiFunction[T, U]): (T, U) => Double","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromToDoubleFunction-fffffb48","e":false,"i":"","n":"asScalaFromToDoubleFunction","t":"asScalaFromToDoubleFunction[T](jf: ToDoubleFunction[T]): T => Double","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromToIntBiFunction-fffff1c3","e":false,"i":"","n":"asScalaFromToIntBiFunction","t":"asScalaFromToIntBiFunction[T, U](jf: ToIntBiFunction[T, U]): (T, U) => Integer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromToIntFunction-fffff82a","e":false,"i":"","n":"asScalaFromToIntFunction","t":"asScalaFromToIntFunction[T](jf: ToIntFunction[T]): T => Integer","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromToLongBiFunction-b8","e":false,"i":"","n":"asScalaFromToLongBiFunction","t":"asScalaFromToLongBiFunction[T, U](jf: ToLongBiFunction[T, U]): (T, U) => Long","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromToLongFunction-fffff83d","e":false,"i":"","n":"asScalaFromToLongFunction","t":"asScalaFromToLongFunction[T](jf: ToLongFunction[T]): T => Long","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":"Note: this method uses the boxed type java.lang.X (or BoxedUnit) instead of the\nprimitive type scala.X to improve compatibility when using it in Java code (the\nScala compiler emits C[Int] as C[Object] in bytecode due to\nscala/bug#4214). In Scala code, add\nimport scala.jdk.FunctionConverters._ and use the extension methods instead.\n"},
{"l":"api/scala/jdk/javaapi/FunctionConverters$.html#asScalaFromUnaryOperator-fffff1c3","e":false,"i":"","n":"asScalaFromUnaryOperator","t":"asScalaFromUnaryOperator[T](jf: UnaryOperator[T]): T => T","d":"scala.jdk.javaapi.FunctionConverters","k":"def","x":""},
{"l":"api/scala/jdk/javaapi/FutureConverters$.html#","e":false,"i":"","n":"FutureConverters","t":"FutureConverters","d":"scala.jdk.javaapi","k":"object","x":"This object contains methods that convert between Scala scala.concurrent.Future and Java java.util.concurrent.CompletionStage."},
{"l":"api/scala/jdk/javaapi/FutureConverters$.html#asJava-34c","e":false,"i":"","n":"asJava","t":"asJava[T](f: Future[T]): CompletionStage[T]","d":"scala.jdk.javaapi.FutureConverters","k":"def","x":"Returns a java.util.concurrent.CompletionStage that will be completed with the same value or exception as the\ngiven Scala scala.concurrent.Future when that completes. Since the Future is a read-only representation,\nthis CompletionStage does not support the toCompletableFuture method."},
{"l":"api/scala/jdk/javaapi/FutureConverters$.html#asScala-856","e":false,"i":"","n":"asScala","t":"asScala[T](cs: CompletionStage[T]): Future[T]","d":"scala.jdk.javaapi.FutureConverters","k":"def","x":"Returns a Scala scala.concurrent.Future that will be completed with the same value or exception as the\ngiven java.util.concurrent.CompletionStage when that completes. Transformations of the returned Future are\nexecuted asynchronously as specified by the ExecutionContext that is given to the combinator\nmethods.\n"},
{"l":"api/scala/jdk/javaapi/OptionConverters$.html#","e":false,"i":"","n":"OptionConverters","t":"OptionConverters","d":"scala.jdk.javaapi","k":"object","x":"This object contains methods that convert between Scala Option and Java Optional types."},
{"l":"api/scala/jdk/javaapi/OptionConverters$.html#toJava-a8e","e":false,"i":"","n":"toJava","t":"toJava[A](o: Option[A]): Optional[A]","d":"scala.jdk.javaapi.OptionConverters","k":"def","x":"Convert a Scala Option to a Java Optional"},
{"l":"api/scala/jdk/javaapi/OptionConverters$.html#toJavaOptionalDouble-fffff44e","e":false,"i":"","n":"toJavaOptionalDouble","t":"toJavaOptionalDouble(o: Option[Double]): OptionalDouble","d":"scala.jdk.javaapi.OptionConverters","k":"def","x":"Convert a Scala Option[java.lang.Double] to a Java OptionalDouble"},
{"l":"api/scala/jdk/javaapi/OptionConverters$.html#toJavaOptionalInt-fffff892","e":false,"i":"","n":"toJavaOptionalInt","t":"toJavaOptionalInt(o: Option[Integer]): OptionalInt","d":"scala.jdk.javaapi.OptionConverters","k":"def","x":"Convert a Scala Option[java.lang.Integer] to a Java OptionalInt"},
{"l":"api/scala/jdk/javaapi/OptionConverters$.html#toJavaOptionalLong-fffffa39","e":false,"i":"","n":"toJavaOptionalLong","t":"toJavaOptionalLong(o: Option[Long]): OptionalLong","d":"scala.jdk.javaapi.OptionConverters","k":"def","x":"Convert a Scala Option[java.lang.Long] to a Java OptionalLong"},
{"l":"api/scala/jdk/javaapi/OptionConverters$.html#toScala-ffffffce","e":false,"i":"","n":"toScala","t":"toScala[A](o: Optional[A]): Option[A]","d":"scala.jdk.javaapi.OptionConverters","k":"def","x":"Convert a Java Optional to a Scala Option"},
{"l":"api/scala/jdk/javaapi/OptionConverters$.html#toScala-9ce","e":false,"i":"","n":"toScala","t":"toScala(o: OptionalDouble): Option[Double]","d":"scala.jdk.javaapi.OptionConverters","k":"def","x":"Convert a Java OptionalDouble to a Scala Option[java.lang.Double]"},
{"l":"api/scala/jdk/javaapi/OptionConverters$.html#toScala-e6c","e":false,"i":"","n":"toScala","t":"toScala(o: OptionalInt): Option[Integer]","d":"scala.jdk.javaapi.OptionConverters","k":"def","x":"Convert a Java OptionalInt to a Scala Option[java.lang.Integer]"},
{"l":"api/scala/jdk/javaapi/OptionConverters$.html#toScala-bf9","e":false,"i":"","n":"toScala","t":"toScala(o: OptionalLong): Option[Long]","d":"scala.jdk.javaapi.OptionConverters","k":"def","x":"Convert a Java OptionalLong to a Scala Option[java.lang.Long]"},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#","e":false,"i":"","n":"StreamConverters","t":"StreamConverters","d":"scala.jdk.javaapi","k":"object","x":"This object contains methods to create Java Streams that operate on Scala collections\n(sequentially or in parallel). For more information on Java streams, consult the documentation\n(https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html)."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParDoubleStream-be4","e":false,"i":"","n":"asJavaParDoubleStream","t":"asJavaParDoubleStream(cc: IterableOnce[Double]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java DoubleStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParDoubleStreamFromFloat-be4","e":false,"i":"","n":"asJavaParDoubleStreamFromFloat","t":"asJavaParDoubleStreamFromFloat(cc: IterableOnce[Float]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java DoubleStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParIntStream-3fc","e":false,"i":"","n":"asJavaParIntStream","t":"asJavaParIntStream(cc: IterableOnce[Integer]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParIntStreamFromByte-3fc","e":false,"i":"","n":"asJavaParIntStreamFromByte","t":"asJavaParIntStreamFromByte(cc: IterableOnce[Byte]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParIntStreamFromChar-3fc","e":false,"i":"","n":"asJavaParIntStreamFromChar","t":"asJavaParIntStreamFromChar(cc: IterableOnce[Character]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParIntStreamFromShort-3fc","e":false,"i":"","n":"asJavaParIntStreamFromShort","t":"asJavaParIntStreamFromShort(cc: IterableOnce[Short]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParKeyDoubleStream-fffff1ba","e":false,"i":"","n":"asJavaParKeyDoubleStream","t":"asJavaParKeyDoubleStream[V](m: Map[Double, V]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java DoubleStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParKeyDoubleStreamFromFloat-fffff1ba","e":false,"i":"","n":"asJavaParKeyDoubleStreamFromFloat","t":"asJavaParKeyDoubleStreamFromFloat[V](m: Map[Float, V]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java DoubleStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParKeyIntStream-de6","e":false,"i":"","n":"asJavaParKeyIntStream","t":"asJavaParKeyIntStream[V](m: Map[Integer, V]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParKeyIntStreamFromByte-de6","e":false,"i":"","n":"asJavaParKeyIntStreamFromByte","t":"asJavaParKeyIntStreamFromByte[V](m: Map[Byte, V]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParKeyIntStreamFromChar-de6","e":false,"i":"","n":"asJavaParKeyIntStreamFromChar","t":"asJavaParKeyIntStreamFromChar[V](m: Map[Character, V]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParKeyIntStreamFromShort-de6","e":false,"i":"","n":"asJavaParKeyIntStreamFromShort","t":"asJavaParKeyIntStreamFromShort[V](m: Map[Short, V]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParKeyLongStream-fffffe65","e":false,"i":"","n":"asJavaParKeyLongStream","t":"asJavaParKeyLongStream[V](m: Map[Long, V]): LongStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java LongStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParKeyStream-fffffea8","e":false,"i":"","n":"asJavaParKeyStream","t":"asJavaParKeyStream[K, V](m: Map[K, V]): Stream[K]","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java Stream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParLongStream-fffffb0f","e":false,"i":"","n":"asJavaParLongStream","t":"asJavaParLongStream(cc: IterableOnce[Long]): LongStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java LongStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParStream-fffff0a4","e":false,"i":"","n":"asJavaParStream","t":"asJavaParStream[A](cc: IterableOnce[A]): Stream[A]","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java Stream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParValueDoubleStream-fffff1ba","e":false,"i":"","n":"asJavaParValueDoubleStream","t":"asJavaParValueDoubleStream[K](m: Map[K, Double]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java DoubleStream for the values of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParValueDoubleStreamFromFloat-fffff1ba","e":false,"i":"","n":"asJavaParValueDoubleStreamFromFloat","t":"asJavaParValueDoubleStreamFromFloat[K](m: Map[K, Float]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java DoubleStream for the values of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParValueIntStream-de6","e":false,"i":"","n":"asJavaParValueIntStream","t":"asJavaParValueIntStream[K](m: Map[K, Integer]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for the values of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParValueIntStreamFromByte-de6","e":false,"i":"","n":"asJavaParValueIntStreamFromByte","t":"asJavaParValueIntStreamFromByte[K](m: Map[K, Byte]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for the values of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParValueIntStreamFromChar-de6","e":false,"i":"","n":"asJavaParValueIntStreamFromChar","t":"asJavaParValueIntStreamFromChar[K](m: Map[K, Character]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for the values of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParValueIntStreamFromShort-de6","e":false,"i":"","n":"asJavaParValueIntStreamFromShort","t":"asJavaParValueIntStreamFromShort[K](m: Map[K, Short]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java IntStream for the values of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParValueLongStream-fffffe65","e":false,"i":"","n":"asJavaParValueLongStream","t":"asJavaParValueLongStream[K](m: Map[K, Long]): LongStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java LongStream for the values of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaParValueStream-fffffea8","e":false,"i":"","n":"asJavaParValueStream","t":"asJavaParValueStream[K, V](m: Map[K, V]): Stream[V]","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a parallel Java Stream for the values of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqDoubleStream-be4","e":false,"i":"","n":"asJavaSeqDoubleStream","t":"asJavaSeqDoubleStream(cc: IterableOnce[Double]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java DoubleStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqDoubleStreamFromFloat-be4","e":false,"i":"","n":"asJavaSeqDoubleStreamFromFloat","t":"asJavaSeqDoubleStreamFromFloat(cc: IterableOnce[Float]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java DoubleStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqIntStream-3fc","e":false,"i":"","n":"asJavaSeqIntStream","t":"asJavaSeqIntStream(cc: IterableOnce[Integer]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqIntStreamFromByte-3fc","e":false,"i":"","n":"asJavaSeqIntStreamFromByte","t":"asJavaSeqIntStreamFromByte(cc: IterableOnce[Byte]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqIntStreamFromChar-3fc","e":false,"i":"","n":"asJavaSeqIntStreamFromChar","t":"asJavaSeqIntStreamFromChar(cc: IterableOnce[Character]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqIntStreamFromShort-3fc","e":false,"i":"","n":"asJavaSeqIntStreamFromShort","t":"asJavaSeqIntStreamFromShort(cc: IterableOnce[Short]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqKeyDoubleStream-fffff1ba","e":false,"i":"","n":"asJavaSeqKeyDoubleStream","t":"asJavaSeqKeyDoubleStream[V](m: Map[Double, V]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java DoubleStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqKeyDoubleStreamFromFloat-fffff1ba","e":false,"i":"","n":"asJavaSeqKeyDoubleStreamFromFloat","t":"asJavaSeqKeyDoubleStreamFromFloat[V](m: Map[Float, V]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java DoubleStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqKeyIntStream-de6","e":false,"i":"","n":"asJavaSeqKeyIntStream","t":"asJavaSeqKeyIntStream[V](m: Map[Integer, V]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqKeyIntStreamFromByte-de6","e":false,"i":"","n":"asJavaSeqKeyIntStreamFromByte","t":"asJavaSeqKeyIntStreamFromByte[V](m: Map[Byte, V]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqKeyIntStreamFromChar-de6","e":false,"i":"","n":"asJavaSeqKeyIntStreamFromChar","t":"asJavaSeqKeyIntStreamFromChar[V](m: Map[Character, V]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqKeyIntStreamFromShort-de6","e":false,"i":"","n":"asJavaSeqKeyIntStreamFromShort","t":"asJavaSeqKeyIntStreamFromShort[V](m: Map[Short, V]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqKeyLongStream-fffffe65","e":false,"i":"","n":"asJavaSeqKeyLongStream","t":"asJavaSeqKeyLongStream[V](m: Map[Long, V]): LongStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java LongStream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqKeyStream-fffffea8","e":false,"i":"","n":"asJavaSeqKeyStream","t":"asJavaSeqKeyStream[K, V](m: Map[K, V]): Stream[K]","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java Stream for the keys of a Scala Map."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqLongStream-fffffb0f","e":false,"i":"","n":"asJavaSeqLongStream","t":"asJavaSeqLongStream(cc: IterableOnce[Long]): LongStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java LongStream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqStream-fffff0a4","e":false,"i":"","n":"asJavaSeqStream","t":"asJavaSeqStream[A](cc: IterableOnce[A]): Stream[A]","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java Stream for a Scala collection."},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqValueDoubleStream-fffff1ba","e":false,"i":"","n":"asJavaSeqValueDoubleStream","t":"asJavaSeqValueDoubleStream[K](m: Map[K, Double]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java DoubleStream for the values of a"},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqValueDoubleStreamFromFloat-fffff1ba","e":false,"i":"","n":"asJavaSeqValueDoubleStreamFromFloat","t":"asJavaSeqValueDoubleStreamFromFloat[K](m: Map[K, Float]): DoubleStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java DoubleStream for the values of a"},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqValueIntStream-de6","e":false,"i":"","n":"asJavaSeqValueIntStream","t":"asJavaSeqValueIntStream[K](m: Map[K, Integer]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for the values of a"},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqValueIntStreamFromByte-de6","e":false,"i":"","n":"asJavaSeqValueIntStreamFromByte","t":"asJavaSeqValueIntStreamFromByte[K](m: Map[K, Byte]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for the values of a"},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqValueIntStreamFromChar-de6","e":false,"i":"","n":"asJavaSeqValueIntStreamFromChar","t":"asJavaSeqValueIntStreamFromChar[K](m: Map[K, Character]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for the values of a"},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqValueIntStreamFromShort-de6","e":false,"i":"","n":"asJavaSeqValueIntStreamFromShort","t":"asJavaSeqValueIntStreamFromShort[K](m: Map[K, Short]): IntStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java IntStream for the values of a"},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqValueLongStream-fffffe65","e":false,"i":"","n":"asJavaSeqValueLongStream","t":"asJavaSeqValueLongStream[K](m: Map[K, Long]): LongStream","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java LongStream for the values of a"},
{"l":"api/scala/jdk/javaapi/StreamConverters$.html#asJavaSeqValueStream-fffffea8","e":false,"i":"","n":"asJavaSeqValueStream","t":"asJavaSeqValueStream[K, V](m: Map[K, V]): Stream[V]","d":"scala.jdk.javaapi.StreamConverters","k":"def","x":"Create a sequential Java Stream for the values of a Scala Map."},
{"l":"api/scala/jdk/Accumulator.html#","e":false,"i":"","n":"Accumulator","t":"Accumulator[A, +CC <: (Seq), +C <: Seq[A]] extends Seq[A], Builder[A, C]","d":"scala.jdk","k":"class","x":"Accumulators are mutable sequences with two distinct features:"},
{"l":"api/scala/jdk/Accumulator.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.jdk.Accumulator","k":"def","x":"Remove all accumulated elements from this accumulator."},
{"l":"api/scala/jdk/Accumulator.html#sizeLong-0","e":false,"i":"","n":"sizeLong","t":"sizeLong: Long","d":"scala.jdk.Accumulator","k":"def","x":"Size of the accumulated collection, as a Long"},
{"l":"api/scala/jdk/Accumulator$.html#","e":false,"i":"","n":"Accumulator","t":"Accumulator","d":"scala.jdk","k":"object","x":"Contains factory methods to build Accumulators."},
{"l":"api/scala/jdk/Accumulator$.html#apply-782","e":false,"i":"","n":"apply","t":"apply[A, C](elems: A*)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"Creates an Accumulator with the specified elements."},
{"l":"api/scala/jdk/Accumulator$.html#concat-782","e":false,"i":"","n":"concat","t":"concat[A, C](xss: Iterable[A]*)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"Concatenates all argument collections into a single Accumulator.\n"},
{"l":"api/scala/jdk/Accumulator$.html#empty-fffffa17","e":false,"i":"","n":"empty","t":"empty[A, C](implicit canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"An empty collection"},
{"l":"api/scala/jdk/Accumulator$.html#fill-ce0","e":false,"i":"","n":"fill","t":"fill[A, C](n: Int)(elem: => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"Produces an Accumulator containing the results of some element computation a number of times."},
{"l":"api/scala/jdk/Accumulator$.html#fill-7ef","e":false,"i":"","n":"fill","t":"fill[A, C](n1: Int, n2: Int)(elem: => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[C]","d":"scala.jdk.Accumulator","k":"def","x":"Produces a two-dimensional Accumulator containing the results of some element computation a number of times."},
{"l":"api/scala/jdk/Accumulator$.html#fill-fffffb8c","e":false,"i":"","n":"fill","t":"fill[A, C](n1: Int, n2: Int, n3: Int)(elem: => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[C]]","d":"scala.jdk.Accumulator","k":"def","x":"Produces a three-dimensional Accumulator containing the results of some element computation a number of times."},
{"l":"api/scala/jdk/Accumulator$.html#fill-88f","e":false,"i":"","n":"fill","t":"fill[A, C](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[AnyAccumulator[C]]]","d":"scala.jdk.Accumulator","k":"def","x":"Produces a four-dimensional Accumulator containing the results of some element computation a number of times."},
{"l":"api/scala/jdk/Accumulator$.html#fill-eec","e":false,"i":"","n":"fill","t":"fill[A, C](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[AnyAccumulator[AnyAccumulator[C]]]]","d":"scala.jdk.Accumulator","k":"def","x":"Produces a five-dimensional Accumulator containing the results of some element computation a number of times."},
{"l":"api/scala/jdk/Accumulator$.html#from-b8e","e":false,"i":"","n":"from","t":"from[A, C](source: IterableOnce[A])(implicit canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"Creates a target Accumulator from an existing source collection\n"},
{"l":"api/scala/jdk/Accumulator$.html#iterate-e74","e":false,"i":"","n":"iterate","t":"iterate[A, C](start: A, len: Int)(f: A => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"Produces an Accumulator containing repeated applications of a function to a start value.\n"},
{"l":"api/scala/jdk/Accumulator$.html#newBuilder-ffffff8f","e":false,"i":"","n":"newBuilder","t":"newBuilder[A, C](implicit canAccumulate: AccumulatorFactoryShape[A, C]): Builder[A, C]","d":"scala.jdk.Accumulator","k":"def","x":""},
{"l":"api/scala/jdk/Accumulator$.html#range-fffff4d7","e":false,"i":"","n":"range","t":"range[A, C](start: A, end: A)(implicit evidence$1: Integral[A], canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"Produces an Accumulator containing a sequence of increasing of integers.\n"},
{"l":"api/scala/jdk/Accumulator$.html#range-ba4","e":false,"i":"","n":"range","t":"range[A, C](start: A, end: A, step: A)(implicit evidence$1: Integral[A], canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"Produces an Accumulator containing equally spaced values in some integer interval."},
{"l":"api/scala/jdk/Accumulator$.html#tabulate-121","e":false,"i":"","n":"tabulate","t":"tabulate[A, C](n: Int)(f: Int => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"Produces an Accumulator containing values of a given function over a range of integer values starting from 0."},
{"l":"api/scala/jdk/Accumulator$.html#tabulate-e71","e":false,"i":"","n":"tabulate","t":"tabulate[A, C](n1: Int, n2: Int)(f: (Int, Int) => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[C]","d":"scala.jdk.Accumulator","k":"def","x":"Produces a two-dimensional Accumulator containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/jdk/Accumulator$.html#tabulate-54f","e":false,"i":"","n":"tabulate","t":"tabulate[A, C](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[C]]","d":"scala.jdk.Accumulator","k":"def","x":"Produces a three-dimensional Accumulator containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/jdk/Accumulator$.html#tabulate-fffff593","e":false,"i":"","n":"tabulate","t":"tabulate[A, C](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[AnyAccumulator[C]]]","d":"scala.jdk.Accumulator","k":"def","x":"Produces a four-dimensional Accumulator containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/jdk/Accumulator$.html#tabulate-ffffff31","e":false,"i":"","n":"tabulate","t":"tabulate[A, C](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => A)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): AnyAccumulator[AnyAccumulator[AnyAccumulator[AnyAccumulator[C]]]]","d":"scala.jdk.Accumulator","k":"def","x":"Produces a five-dimensional Accumulator containing values of a given function over ranges of integer values starting from 0."},
{"l":"api/scala/jdk/Accumulator$.html#toFactory-fffff089","e":false,"i":"","n":"toFactory","t":"toFactory[A, C](sa: Accumulator.type)(implicit canAccumulate: AccumulatorFactoryShape[A, C]): Factory[A, C]","d":"scala.jdk.Accumulator","k":"def","x":""},
{"l":"api/scala/jdk/Accumulator$.html#unfold-30","e":false,"i":"","n":"unfold","t":"unfold[A, S, C](init: S)(f: S => Option[(A, S)])(implicit canAccumulate: AccumulatorFactoryShape[A, C]): C","d":"scala.jdk.Accumulator","k":"def","x":"Produces an Accumulator that uses a function f to produce elements of type A\nand update an internal state of type S.\n"},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html#","e":false,"i":"","n":"AccumulatorFactoryShape","t":"AccumulatorFactoryShape extends LowPriorityAccumulatorFactoryShape","d":"scala.jdk.Accumulator","k":"object","x":""},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html#doubleAccumulatorFactoryShape-0","e":false,"i":"","n":"doubleAccumulatorFactoryShape","t":"doubleAccumulatorFactoryShape: AccumulatorFactoryShape[Double, DoubleAccumulator]","d":"scala.jdk.Accumulator.AccumulatorFactoryShape","k":"val","x":""},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html#intAccumulatorFactoryShape-0","e":false,"i":"","n":"intAccumulatorFactoryShape","t":"intAccumulatorFactoryShape: AccumulatorFactoryShape[Int, IntAccumulator]","d":"scala.jdk.Accumulator.AccumulatorFactoryShape","k":"val","x":""},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html#jDoubleAccumulatorFactoryShape-0","e":false,"i":"","n":"jDoubleAccumulatorFactoryShape","t":"jDoubleAccumulatorFactoryShape: AccumulatorFactoryShape[Double, DoubleAccumulator]","d":"scala.jdk.Accumulator.AccumulatorFactoryShape","k":"val","x":""},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html#jIntegerAccumulatorFactoryShape-0","e":false,"i":"","n":"jIntegerAccumulatorFactoryShape","t":"jIntegerAccumulatorFactoryShape: AccumulatorFactoryShape[Integer, IntAccumulator]","d":"scala.jdk.Accumulator.AccumulatorFactoryShape","k":"val","x":""},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html#jLongAccumulatorFactoryShape-0","e":false,"i":"","n":"jLongAccumulatorFactoryShape","t":"jLongAccumulatorFactoryShape: AccumulatorFactoryShape[Long, LongAccumulator]","d":"scala.jdk.Accumulator.AccumulatorFactoryShape","k":"val","x":""},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape$.html#longAccumulatorFactoryShape-0","e":false,"i":"","n":"longAccumulatorFactoryShape","t":"longAccumulatorFactoryShape: AccumulatorFactoryShape[Long, LongAccumulator]","d":"scala.jdk.Accumulator.AccumulatorFactoryShape","k":"val","x":""},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape.html#","e":false,"i":"","n":"AccumulatorFactoryShape","t":"AccumulatorFactoryShape[A, C]","d":"scala.jdk.Accumulator","k":"trait","x":"An implicit AccumulatorFactoryShape is used in Accumulator factory method to return\nspecialized variants according to the element type.\n"},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape.html#empty-0","e":false,"i":"","n":"empty","t":"empty: C","d":"scala.jdk.Accumulator.AccumulatorFactoryShape","k":"def","x":""},
{"l":"api/scala/jdk/Accumulator$$AccumulatorFactoryShape.html#factory-0","e":false,"i":"","n":"factory","t":"factory: Factory[A, C]","d":"scala.jdk.Accumulator.AccumulatorFactoryShape","k":"def","x":""},
{"l":"api/scala/jdk/Accumulator$$LowPriorityAccumulatorFactoryShape.html#","e":false,"i":"","n":"LowPriorityAccumulatorFactoryShape","t":"LowPriorityAccumulatorFactoryShape","d":"scala.jdk.Accumulator","k":"trait","x":""},
{"l":"api/scala/jdk/Accumulator$$LowPriorityAccumulatorFactoryShape.html#anyAccumulatorFactoryShape-fffff243","e":false,"i":"","n":"anyAccumulatorFactoryShape","t":"anyAccumulatorFactoryShape[A]: AccumulatorFactoryShape[A, AnyAccumulator[A]]","d":"scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape","k":"def","x":""},
{"l":"api/scala/jdk/AnyAccumulator.html#","e":false,"i":"","n":"AnyAccumulator","t":"AnyAccumulator[A] extends Accumulator[A, AnyAccumulator, AnyAccumulator[A]], SeqOps[A, AnyAccumulator, AnyAccumulator[A]], IterableFactoryDefaults[A, AnyAccumulator], Serializable","d":"scala.jdk","k":"class","x":"An Accumulator for arbitrary element types, see Accumulator."},
{"l":"api/scala/jdk/AnyAccumulator.html#addOne-fffffa72","e":false,"i":"","n":"addOne","t":"addOne(a: A): this.type","d":"scala.jdk.AnyAccumulator","k":"def","x":"Appends an element to this AnyAccumulator."},
{"l":"api/scala/jdk/AnyAccumulator.html#apply-7d7","e":false,"i":"","n":"apply","t":"apply(ix: Long): A","d":"scala.jdk.AnyAccumulator","k":"def","x":"Retrieves the ixth element."},
{"l":"api/scala/jdk/AnyAccumulator.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): A","d":"scala.jdk.AnyAccumulator","k":"def","x":"Retrieves the ixth element, using an Int index."},
{"l":"api/scala/jdk/AnyAccumulator.html#countLong-995","e":false,"i":"","n":"countLong","t":"countLong(p: A => Boolean): Long","d":"scala.jdk.AnyAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/AnyAccumulator.html#drain-c5c","e":false,"i":"","n":"drain","t":"drain[A1 <: A](that: AnyAccumulator[A1]): Unit","d":"scala.jdk.AnyAccumulator","k":"def","x":"Removes all elements from that and appends them to this AnyAccumulator."},
{"l":"api/scala/jdk/AnyAccumulator.html#efficientStepper-190","e":false,"i":"","n":"efficientStepper","t":"efficientStepper[S <: Stepper[_]](implicit shape: StepperShape[A, S]): S & EfficientSplit","d":"scala.jdk.AnyAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/AnyAccumulator.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.jdk.AnyAccumulator","k":"def","x":"Returns an Iterator over the contents of this AnyAccumulator."},
{"l":"api/scala/jdk/AnyAccumulator.html#update-63","e":false,"i":"","n":"update","t":"update(idx: Long, elem: A): Unit","d":"scala.jdk.AnyAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/AnyAccumulator.html#update-386","e":false,"i":"","n":"update","t":"update(idx: Int, elem: A): Unit","d":"scala.jdk.AnyAccumulator","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/jdk/AnyAccumulator$.html#","e":false,"i":"","n":"AnyAccumulator","t":"AnyAccumulator extends SeqFactory[AnyAccumulator]","d":"scala.jdk","k":"object","x":""},
{"l":"api/scala/jdk/AnyAccumulator$.html#adder-d22","e":false,"i":"","n":"adder","t":"adder[A]: BiConsumer[AnyAccumulator[A], A]","d":"scala.jdk.AnyAccumulator","k":"def","x":"A BiConsumer that adds an element to an AnyAccumulator, suitable for use with java.util.stream.Stream's collect method."},
{"l":"api/scala/jdk/AnyAccumulator$.html#empty-710","e":false,"i":"","n":"empty","t":"empty[A]: AnyAccumulator[A]","d":"scala.jdk.AnyAccumulator","k":"def","x":"An empty collection"},
{"l":"api/scala/jdk/AnyAccumulator$.html#from-fffff829","e":false,"i":"","n":"from","t":"from[A](source: IterableOnce[A]): AnyAccumulator[A]","d":"scala.jdk.AnyAccumulator","k":"def","x":"Creates a target $coll from an existing source collection\n"},
{"l":"api/scala/jdk/AnyAccumulator$.html#merger-d22","e":false,"i":"","n":"merger","t":"merger[A]: BiConsumer[AnyAccumulator[A], AnyAccumulator[A]]","d":"scala.jdk.AnyAccumulator","k":"def","x":"A BiConsumer that merges AnyAccumulators, suitable for use with java.util.stream.Stream's collect method."},
{"l":"api/scala/jdk/AnyAccumulator$.html#newBuilder-33c","e":false,"i":"","n":"newBuilder","t":"newBuilder[A]: Builder[A, AnyAccumulator[A]]","d":"scala.jdk.AnyAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/AnyAccumulator$.html#supplier-fffff6d1","e":false,"i":"","n":"supplier","t":"supplier[A]: Supplier[AnyAccumulator[A]]","d":"scala.jdk.AnyAccumulator","k":"def","x":"A Supplier of AnyAccumulators, suitable for use with java.util.stream.Stream's collect method."},
{"l":"api/scala/jdk/AnyAccumulator$.html#unboxedDoubleAdder-0","e":false,"i":"","n":"unboxedDoubleAdder","t":"unboxedDoubleAdder: ObjDoubleConsumer[AnyAccumulator[Double]]","d":"scala.jdk.AnyAccumulator","k":"def","x":"A BiConsumer that adds a Double to an AnyAccumulator, suitable for use with java.util.stream.Stream's collect method."},
{"l":"api/scala/jdk/AnyAccumulator$.html#unboxedIntAdder-0","e":false,"i":"","n":"unboxedIntAdder","t":"unboxedIntAdder: ObjIntConsumer[AnyAccumulator[Int]]","d":"scala.jdk.AnyAccumulator","k":"def","x":"A BiConsumer that adds an Int to an AnyAccumulator, suitable for use with java.util.stream.Stream's collect method."},
{"l":"api/scala/jdk/AnyAccumulator$.html#unboxedLongAdder-0","e":false,"i":"","n":"unboxedLongAdder","t":"unboxedLongAdder: ObjLongConsumer[AnyAccumulator[Long]]","d":"scala.jdk.AnyAccumulator","k":"def","x":"A BiConsumer that adds a Long to an AnyAccumulator, suitable for use with java.util.stream.Stream's collect method."},
{"l":"api/scala/jdk/AnyAccumulator$$SerializationProxy.html#","e":false,"i":"","n":"SerializationProxy","t":"SerializationProxy[A](acc: AnyAccumulator[A]) extends Serializable","d":"scala.jdk.AnyAccumulator","k":"class","x":""},
{"l":"api/scala/jdk/CollectionConverters$.html#","e":false,"i":"","n":"CollectionConverters","t":"CollectionConverters extends AsJavaExtensions, AsScalaExtensions","d":"scala.jdk","k":"object","x":"This object provides extension methods that convert between Scala and Java collections."},
{"l":"api/scala/jdk/DoubleAccumulator.html#","e":false,"i":"","n":"DoubleAccumulator","t":"DoubleAccumulator extends Accumulator[Double, AnyAccumulator, DoubleAccumulator], SeqOps[Double, AnyAccumulator, DoubleAccumulator], Serializable","d":"scala.jdk","k":"class","x":"A specialized Accumulator that holds Doubles without boxing, see Accumulator."},
{"l":"api/scala/jdk/DoubleAccumulator.html#addOne-1b7","e":false,"i":"","n":"addOne","t":"addOne(a: Double): this.type","d":"scala.jdk.DoubleAccumulator","k":"def","x":"Appends an element to this DoubleAccumulator."},
{"l":"api/scala/jdk/DoubleAccumulator.html#apply-9dd","e":false,"i":"","n":"apply","t":"apply(ix: Long): Double","d":"scala.jdk.DoubleAccumulator","k":"def","x":"Retrieves the ixth element."},
{"l":"api/scala/jdk/DoubleAccumulator.html#apply-640","e":false,"i":"","n":"apply","t":"apply(i: Int): Double","d":"scala.jdk.DoubleAccumulator","k":"def","x":"Retrieves the ixth element, using an Int index."},
{"l":"api/scala/jdk/DoubleAccumulator.html#collect-fffff89f","e":false,"i":"","n":"collect","t":"collect(pf: PartialFunction[Double, Double]): DoubleAccumulator","d":"scala.jdk.DoubleAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/DoubleAccumulator.html#countLong-995","e":false,"i":"","n":"countLong","t":"countLong(p: Double => Boolean): Long","d":"scala.jdk.DoubleAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/DoubleAccumulator.html#drain-fffff03c","e":false,"i":"","n":"drain","t":"drain(that: DoubleAccumulator): Unit","d":"scala.jdk.DoubleAccumulator","k":"def","x":"Removes all elements from that and appends them to this DoubleAccumulator."},
{"l":"api/scala/jdk/DoubleAccumulator.html#efficientStepper-190","e":false,"i":"","n":"efficientStepper","t":"efficientStepper[S <: Stepper[_]](implicit shape: StepperShape[Double, S]): S & EfficientSplit","d":"scala.jdk.DoubleAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/DoubleAccumulator.html#flatMap-bbf","e":false,"i":"","n":"flatMap","t":"flatMap(f: Double => IterableOnce[Double]): DoubleAccumulator","d":"scala.jdk.DoubleAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/DoubleAccumulator.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[Double]","d":"scala.jdk.DoubleAccumulator","k":"def","x":"Returns an Iterator over the contents of this DoubleAccumulator. The Iterator is not specialized."},
{"l":"api/scala/jdk/DoubleAccumulator.html#map-bbf","e":false,"i":"","n":"map","t":"map(f: Double => Double): DoubleAccumulator","d":"scala.jdk.DoubleAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/DoubleAccumulator.html#toArray-0","e":false,"i":"","n":"toArray","t":"toArray: Array[Double]","d":"scala.jdk.DoubleAccumulator","k":"def","x":"Copies the elements in this DoubleAccumulator into an Array[Double]"},
{"l":"api/scala/jdk/DoubleAccumulator.html#update-2e9","e":false,"i":"","n":"update","t":"update(idx: Long, elem: Double): Unit","d":"scala.jdk.DoubleAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/DoubleAccumulator.html#update-f8c","e":false,"i":"","n":"update","t":"update(idx: Int, elem: Double): Unit","d":"scala.jdk.DoubleAccumulator","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/jdk/DoubleAccumulator$.html#","e":false,"i":"","n":"DoubleAccumulator","t":"DoubleAccumulator extends SpecificIterableFactory[Double, DoubleAccumulator]","d":"scala.jdk","k":"object","x":""},
{"l":"api/scala/jdk/DoubleAccumulator$.html#adder-0","e":false,"i":"","n":"adder","t":"adder: ObjDoubleConsumer[DoubleAccumulator]","d":"scala.jdk.DoubleAccumulator","k":"def","x":"A BiConsumer that adds an element to an DoubleAccumulator, suitable for use with java.util.stream.DoubleStream's collect method."},
{"l":"api/scala/jdk/DoubleAccumulator$.html#boxedAdder-0","e":false,"i":"","n":"boxedAdder","t":"boxedAdder: BiConsumer[DoubleAccumulator, Double]","d":"scala.jdk.DoubleAccumulator","k":"def","x":"A BiConsumer that adds a boxed Double to an DoubleAccumulator, suitable for use with java.util.stream.Stream's collect method."},
{"l":"api/scala/jdk/DoubleAccumulator$.html#merger-0","e":false,"i":"","n":"merger","t":"merger: BiConsumer[DoubleAccumulator, DoubleAccumulator]","d":"scala.jdk.DoubleAccumulator","k":"def","x":"A BiConsumer that merges DoubleAccumulators, suitable for use with java.util.stream.DoubleStream's collect method.  Suitable for Stream[Double] also."},
{"l":"api/scala/jdk/DoubleAccumulator$.html#supplier-0","e":false,"i":"","n":"supplier","t":"supplier: Supplier[DoubleAccumulator]","d":"scala.jdk.DoubleAccumulator","k":"def","x":"A Supplier of DoubleAccumulators, suitable for use with java.util.stream.DoubleStream's collect method.  Suitable for Stream[Double] also."},
{"l":"api/scala/jdk/DoubleAccumulator$.html#toJavaDoubleAccumulator-fffffa12","e":false,"i":"","n":"toJavaDoubleAccumulator","t":"toJavaDoubleAccumulator(ia: DoubleAccumulator.type): SpecificIterableFactory[Double, DoubleAccumulator]","d":"scala.jdk.DoubleAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/DoubleAccumulator$$SerializationProxy.html#","e":false,"i":"","n":"SerializationProxy","t":"SerializationProxy[A](acc: DoubleAccumulator) extends Serializable","d":"scala.jdk.DoubleAccumulator","k":"class","x":""},
{"l":"api/scala/jdk/DurationConverters$.html#","e":false,"i":"","n":"DurationConverters","t":"DurationConverters","d":"scala.jdk","k":"object","x":"This object provides extension methods that convert between Scala and Java duration types."},
{"l":"api/scala/jdk/DurationConverters$.html#JavaDurationOps-992","e":false,"i":"","n":"JavaDurationOps","t":"JavaDurationOps(duration: Duration): JavaDurationOps","d":"scala.jdk.DurationConverters","k":"def","x":""},
{"l":"api/scala/jdk/DurationConverters$.html#ScalaDurationOps-51c","e":false,"i":"","n":"ScalaDurationOps","t":"ScalaDurationOps(duration: FiniteDuration): ScalaDurationOps","d":"scala.jdk.DurationConverters","k":"def","x":""},
{"l":"api/scala/jdk/DurationConverters$$JavaDurationOps.html#","e":false,"i":"","n":"JavaDurationOps","t":"JavaDurationOps(duration: Duration) extends AnyVal","d":"scala.jdk.DurationConverters","k":"class","x":""},
{"l":"api/scala/jdk/DurationConverters$$JavaDurationOps.html#toScala-0","e":false,"i":"","n":"toScala","t":"toScala: FiniteDuration","d":"scala.jdk.DurationConverters.JavaDurationOps","k":"def","x":"Convert a Java duration to a Scala duration, see javaapi.DurationConverters.toScala."},
{"l":"api/scala/jdk/DurationConverters$$ScalaDurationOps.html#","e":false,"i":"","n":"ScalaDurationOps","t":"ScalaDurationOps(duration: FiniteDuration) extends AnyVal","d":"scala.jdk.DurationConverters","k":"class","x":""},
{"l":"api/scala/jdk/DurationConverters$$ScalaDurationOps.html#toJava-0","e":false,"i":"","n":"toJava","t":"toJava: Duration","d":"scala.jdk.DurationConverters.ScalaDurationOps","k":"def","x":"Convert a Scala duration to a Java duration, see javaapi.DurationConverters.toJava."},
{"l":"api/scala/jdk/FunctionConverters$.html#","e":false,"i":"","n":"FunctionConverters","t":"FunctionConverters extends Priority0FunctionExtensions","d":"scala.jdk","k":"object","x":"This object provides extension methods that convert between Scala and Java function types."},
{"l":"api/scala/jdk/FunctionWrappers$.html#","e":false,"i":"","n":"FunctionWrappers","t":"FunctionWrappers","d":"scala.jdk","k":"object","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBiConsumer.html#","e":false,"i":"","n":"AsJavaBiConsumer","t":"AsJavaBiConsumer[T, U](sf: (T, U) => Unit) extends BiConsumer[T, U]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBiConsumer.html#accept-ef2","e":false,"i":"","n":"accept","t":"accept(x1: T, x2: U): Unit","d":"scala.jdk.FunctionWrappers.AsJavaBiConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBiFunction.html#","e":false,"i":"","n":"AsJavaBiFunction","t":"AsJavaBiFunction[T, U, R](sf: (T, U) => R) extends BiFunction[T, U, R]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBiFunction.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: U): R","d":"scala.jdk.FunctionWrappers.AsJavaBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBiPredicate.html#","e":false,"i":"","n":"AsJavaBiPredicate","t":"AsJavaBiPredicate[T, U](sf: (T, U) => Boolean) extends BiPredicate[T, U]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBiPredicate.html#test-fffff7fa","e":false,"i":"","n":"test","t":"test(x1: T, x2: U): Boolean","d":"scala.jdk.FunctionWrappers.AsJavaBiPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBinaryOperator.html#","e":false,"i":"","n":"AsJavaBinaryOperator","t":"AsJavaBinaryOperator[T](sf: (T, T) => T) extends BinaryOperator[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBinaryOperator.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: T): T","d":"scala.jdk.FunctionWrappers.AsJavaBinaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBooleanSupplier.html#","e":false,"i":"","n":"AsJavaBooleanSupplier","t":"AsJavaBooleanSupplier(sf: () => Boolean) extends BooleanSupplier","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaBooleanSupplier.html#getAsBoolean-fffff760","e":false,"i":"","n":"getAsBoolean","t":"getAsBoolean(): Boolean","d":"scala.jdk.FunctionWrappers.AsJavaBooleanSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaConsumer.html#","e":false,"i":"","n":"AsJavaConsumer","t":"AsJavaConsumer[T](sf: T => Unit) extends Consumer[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaConsumer.html#accept-fffff71f","e":false,"i":"","n":"accept","t":"accept(x1: T): Unit","d":"scala.jdk.FunctionWrappers.AsJavaConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleBinaryOperator.html#","e":false,"i":"","n":"AsJavaDoubleBinaryOperator","t":"AsJavaDoubleBinaryOperator(sf: (Double, Double) => Double) extends DoubleBinaryOperator","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleBinaryOperator.html#applyAsDouble-44b","e":false,"i":"","n":"applyAsDouble","t":"applyAsDouble(x1: Double, x2: Double): Double","d":"scala.jdk.FunctionWrappers.AsJavaDoubleBinaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleConsumer.html#","e":false,"i":"","n":"AsJavaDoubleConsumer","t":"AsJavaDoubleConsumer(sf: Double => Unit) extends DoubleConsumer","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleConsumer.html#accept-fffff7a5","e":false,"i":"","n":"accept","t":"accept(x1: Double): Unit","d":"scala.jdk.FunctionWrappers.AsJavaDoubleConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleFunction.html#","e":false,"i":"","n":"AsJavaDoubleFunction","t":"AsJavaDoubleFunction[R](sf: Double => R) extends DoubleFunction[R]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleFunction.html#apply-12c","e":false,"i":"","n":"apply","t":"apply(x1: Double): R","d":"scala.jdk.FunctionWrappers.AsJavaDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoublePredicate.html#","e":false,"i":"","n":"AsJavaDoublePredicate","t":"AsJavaDoublePredicate(sf: Double => Boolean) extends DoublePredicate","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoublePredicate.html#test-e67","e":false,"i":"","n":"test","t":"test(x1: Double): Boolean","d":"scala.jdk.FunctionWrappers.AsJavaDoublePredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleSupplier.html#","e":false,"i":"","n":"AsJavaDoubleSupplier","t":"AsJavaDoubleSupplier(sf: () => Double) extends DoubleSupplier","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleSupplier.html#getAsDouble-999","e":false,"i":"","n":"getAsDouble","t":"getAsDouble(): Double","d":"scala.jdk.FunctionWrappers.AsJavaDoubleSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleToIntFunction.html#","e":false,"i":"","n":"AsJavaDoubleToIntFunction","t":"AsJavaDoubleToIntFunction(sf: Double => Int) extends DoubleToIntFunction","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleToIntFunction.html#applyAsInt-fffff1ae","e":false,"i":"","n":"applyAsInt","t":"applyAsInt(x1: Double): Int","d":"scala.jdk.FunctionWrappers.AsJavaDoubleToIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleToLongFunction.html#","e":false,"i":"","n":"AsJavaDoubleToLongFunction","t":"AsJavaDoubleToLongFunction(sf: Double => Long) extends DoubleToLongFunction","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleToLongFunction.html#applyAsLong-fffff49d","e":false,"i":"","n":"applyAsLong","t":"applyAsLong(x1: Double): Long","d":"scala.jdk.FunctionWrappers.AsJavaDoubleToLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleUnaryOperator.html#","e":false,"i":"","n":"AsJavaDoubleUnaryOperator","t":"AsJavaDoubleUnaryOperator(sf: Double => Double) extends DoubleUnaryOperator","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaDoubleUnaryOperator.html#applyAsDouble-5b2","e":false,"i":"","n":"applyAsDouble","t":"applyAsDouble(x1: Double): Double","d":"scala.jdk.FunctionWrappers.AsJavaDoubleUnaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaFunction.html#","e":false,"i":"","n":"AsJavaFunction","t":"AsJavaFunction[T, R](sf: T => R) extends Function[T, R]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaFunction.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(x1: T): R","d":"scala.jdk.FunctionWrappers.AsJavaFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntBinaryOperator.html#","e":false,"i":"","n":"AsJavaIntBinaryOperator","t":"AsJavaIntBinaryOperator(sf: (Int, Int) => Int) extends IntBinaryOperator","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntBinaryOperator.html#applyAsInt-f47","e":false,"i":"","n":"applyAsInt","t":"applyAsInt(x1: Int, x2: Int): Int","d":"scala.jdk.FunctionWrappers.AsJavaIntBinaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntConsumer.html#","e":false,"i":"","n":"AsJavaIntConsumer","t":"AsJavaIntConsumer(sf: Int => Unit) extends IntConsumer","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntConsumer.html#accept-fffff3b3","e":false,"i":"","n":"accept","t":"accept(x1: Int): Unit","d":"scala.jdk.FunctionWrappers.AsJavaIntConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntFunction.html#","e":false,"i":"","n":"AsJavaIntFunction","t":"AsJavaIntFunction[R](sf: Int => R) extends IntFunction[R]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntFunction.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(x1: Int): R","d":"scala.jdk.FunctionWrappers.AsJavaIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntPredicate.html#","e":false,"i":"","n":"AsJavaIntPredicate","t":"AsJavaIntPredicate(sf: Int => Boolean) extends IntPredicate","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntPredicate.html#test-ffffff99","e":false,"i":"","n":"test","t":"test(x1: Int): Boolean","d":"scala.jdk.FunctionWrappers.AsJavaIntPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntSupplier.html#","e":false,"i":"","n":"AsJavaIntSupplier","t":"AsJavaIntSupplier(sf: () => Int) extends IntSupplier","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntSupplier.html#getAsInt-ffffff27","e":false,"i":"","n":"getAsInt","t":"getAsInt(): Int","d":"scala.jdk.FunctionWrappers.AsJavaIntSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntToDoubleFunction.html#","e":false,"i":"","n":"AsJavaIntToDoubleFunction","t":"AsJavaIntToDoubleFunction(sf: Int => Double) extends IntToDoubleFunction","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntToDoubleFunction.html#applyAsDouble-640","e":false,"i":"","n":"applyAsDouble","t":"applyAsDouble(x1: Int): Double","d":"scala.jdk.FunctionWrappers.AsJavaIntToDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntToLongFunction.html#","e":false,"i":"","n":"AsJavaIntToLongFunction","t":"AsJavaIntToLongFunction(sf: Int => Long) extends IntToLongFunction","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntToLongFunction.html#applyAsLong-fffff0ab","e":false,"i":"","n":"applyAsLong","t":"applyAsLong(x1: Int): Long","d":"scala.jdk.FunctionWrappers.AsJavaIntToLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntUnaryOperator.html#","e":false,"i":"","n":"AsJavaIntUnaryOperator","t":"AsJavaIntUnaryOperator(sf: Int => Int) extends IntUnaryOperator","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaIntUnaryOperator.html#applyAsInt-fffffbe0","e":false,"i":"","n":"applyAsInt","t":"applyAsInt(x1: Int): Int","d":"scala.jdk.FunctionWrappers.AsJavaIntUnaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongBinaryOperator.html#","e":false,"i":"","n":"AsJavaLongBinaryOperator","t":"AsJavaLongBinaryOperator(sf: (Long, Long) => Long) extends LongBinaryOperator","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongBinaryOperator.html#applyAsLong-fffff3cc","e":false,"i":"","n":"applyAsLong","t":"applyAsLong(x1: Long, x2: Long): Long","d":"scala.jdk.FunctionWrappers.AsJavaLongBinaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongConsumer.html#","e":false,"i":"","n":"AsJavaLongConsumer","t":"AsJavaLongConsumer(sf: Long => Unit) extends LongConsumer","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongConsumer.html#accept-fffffa90","e":false,"i":"","n":"accept","t":"accept(x1: Long): Unit","d":"scala.jdk.FunctionWrappers.AsJavaLongConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongFunction.html#","e":false,"i":"","n":"AsJavaLongFunction","t":"AsJavaLongFunction[R](sf: Long => R) extends LongFunction[R]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongFunction.html#apply-7d7","e":false,"i":"","n":"apply","t":"apply(x1: Long): R","d":"scala.jdk.FunctionWrappers.AsJavaLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongPredicate.html#","e":false,"i":"","n":"AsJavaLongPredicate","t":"AsJavaLongPredicate(sf: Long => Boolean) extends LongPredicate","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongPredicate.html#test-f9c","e":false,"i":"","n":"test","t":"test(x1: Long): Boolean","d":"scala.jdk.FunctionWrappers.AsJavaLongPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongSupplier.html#","e":false,"i":"","n":"AsJavaLongSupplier","t":"AsJavaLongSupplier(sf: () => Long) extends LongSupplier","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongSupplier.html#getAsLong-644","e":false,"i":"","n":"getAsLong","t":"getAsLong(): Long","d":"scala.jdk.FunctionWrappers.AsJavaLongSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongToDoubleFunction.html#","e":false,"i":"","n":"AsJavaLongToDoubleFunction","t":"AsJavaLongToDoubleFunction(sf: Long => Double) extends LongToDoubleFunction","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongToDoubleFunction.html#applyAsDouble-9dd","e":false,"i":"","n":"applyAsDouble","t":"applyAsDouble(x1: Long): Double","d":"scala.jdk.FunctionWrappers.AsJavaLongToDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongToIntFunction.html#","e":false,"i":"","n":"AsJavaLongToIntFunction","t":"AsJavaLongToIntFunction(sf: Long => Int) extends LongToIntFunction","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongToIntFunction.html#applyAsInt-fffff563","e":false,"i":"","n":"applyAsInt","t":"applyAsInt(x1: Long): Int","d":"scala.jdk.FunctionWrappers.AsJavaLongToIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongUnaryOperator.html#","e":false,"i":"","n":"AsJavaLongUnaryOperator","t":"AsJavaLongUnaryOperator(sf: Long => Long) extends LongUnaryOperator","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaLongUnaryOperator.html#applyAsLong-fffff788","e":false,"i":"","n":"applyAsLong","t":"applyAsLong(x1: Long): Long","d":"scala.jdk.FunctionWrappers.AsJavaLongUnaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaObjDoubleConsumer.html#","e":false,"i":"","n":"AsJavaObjDoubleConsumer","t":"AsJavaObjDoubleConsumer[T](sf: (T, Double) => Unit) extends ObjDoubleConsumer[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaObjDoubleConsumer.html#accept-fffff0f8","e":false,"i":"","n":"accept","t":"accept(x1: T, x2: Double): Unit","d":"scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaObjIntConsumer.html#","e":false,"i":"","n":"AsJavaObjIntConsumer","t":"AsJavaObjIntConsumer[T](sf: (T, Int) => Unit) extends ObjIntConsumer[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaObjIntConsumer.html#accept-fffff340","e":false,"i":"","n":"accept","t":"accept(x1: T, x2: Int): Unit","d":"scala.jdk.FunctionWrappers.AsJavaObjIntConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaObjLongConsumer.html#","e":false,"i":"","n":"AsJavaObjLongConsumer","t":"AsJavaObjLongConsumer[T](sf: (T, Long) => Unit) extends ObjLongConsumer[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaObjLongConsumer.html#accept-fffffca3","e":false,"i":"","n":"accept","t":"accept(x1: T, x2: Long): Unit","d":"scala.jdk.FunctionWrappers.AsJavaObjLongConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaPredicate.html#","e":false,"i":"","n":"AsJavaPredicate","t":"AsJavaPredicate[T](sf: T => Boolean) extends Predicate[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaPredicate.html#test-4ad","e":false,"i":"","n":"test","t":"test(x1: T): Boolean","d":"scala.jdk.FunctionWrappers.AsJavaPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaSupplier.html#","e":false,"i":"","n":"AsJavaSupplier","t":"AsJavaSupplier[T](sf: () => T) extends Supplier[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaSupplier.html#get-993","e":false,"i":"","n":"get","t":"get(): T","d":"scala.jdk.FunctionWrappers.AsJavaSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToDoubleBiFunction.html#","e":false,"i":"","n":"AsJavaToDoubleBiFunction","t":"AsJavaToDoubleBiFunction[T, U](sf: (T, U) => Double) extends ToDoubleBiFunction[T, U]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToDoubleBiFunction.html#applyAsDouble-fffffdbf","e":false,"i":"","n":"applyAsDouble","t":"applyAsDouble(x1: T, x2: U): Double","d":"scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToDoubleFunction.html#","e":false,"i":"","n":"AsJavaToDoubleFunction","t":"AsJavaToDoubleFunction[T](sf: T => Double) extends ToDoubleFunction[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToDoubleFunction.html#applyAsDouble-fffffeac","e":false,"i":"","n":"applyAsDouble","t":"applyAsDouble(x1: T): Double","d":"scala.jdk.FunctionWrappers.AsJavaToDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToIntBiFunction.html#","e":false,"i":"","n":"AsJavaToIntBiFunction","t":"AsJavaToIntBiFunction[T, U](sf: (T, U) => Int) extends ToIntBiFunction[T, U]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToIntBiFunction.html#applyAsInt-cc1","e":false,"i":"","n":"applyAsInt","t":"applyAsInt(x1: T, x2: U): Int","d":"scala.jdk.FunctionWrappers.AsJavaToIntBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToIntFunction.html#","e":false,"i":"","n":"AsJavaToIntFunction","t":"AsJavaToIntFunction[T](sf: T => Int) extends ToIntFunction[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToIntFunction.html#applyAsInt-fffffaf4","e":false,"i":"","n":"applyAsInt","t":"applyAsInt(x1: T): Int","d":"scala.jdk.FunctionWrappers.AsJavaToIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToLongBiFunction.html#","e":false,"i":"","n":"AsJavaToLongBiFunction","t":"AsJavaToLongBiFunction[T, U](sf: (T, U) => Long) extends ToLongBiFunction[T, U]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToLongBiFunction.html#applyAsLong-bea","e":false,"i":"","n":"applyAsLong","t":"applyAsLong(x1: T, x2: U): Long","d":"scala.jdk.FunctionWrappers.AsJavaToLongBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToLongFunction.html#","e":false,"i":"","n":"AsJavaToLongFunction","t":"AsJavaToLongFunction[T](sf: T => Long) extends ToLongFunction[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaToLongFunction.html#applyAsLong-fffff417","e":false,"i":"","n":"applyAsLong","t":"applyAsLong(x1: T): Long","d":"scala.jdk.FunctionWrappers.AsJavaToLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaUnaryOperator.html#","e":false,"i":"","n":"AsJavaUnaryOperator","t":"AsJavaUnaryOperator[T](sf: T => T) extends UnaryOperator[T]","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$AsJavaUnaryOperator.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(x1: T): T","d":"scala.jdk.FunctionWrappers.AsJavaUnaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBiConsumer.html#","e":false,"i":"","n":"FromJavaBiConsumer","t":"FromJavaBiConsumer[T, U](jf: BiConsumer[T, U]) extends (T, U) => Unit","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBiConsumer.html#apply-ef2","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: U): Unit","d":"scala.jdk.FunctionWrappers.FromJavaBiConsumer","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBiFunction.html#","e":false,"i":"","n":"FromJavaBiFunction","t":"FromJavaBiFunction[T, U, R](jf: BiFunction[T, U, R]) extends (T, U) => R","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBiFunction.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: U): R","d":"scala.jdk.FunctionWrappers.FromJavaBiFunction","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBiPredicate.html#","e":false,"i":"","n":"FromJavaBiPredicate","t":"FromJavaBiPredicate[T, U](jf: BiPredicate[T, U]) extends (T, U) => Boolean","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBiPredicate.html#apply-fffff7fa","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: U): Boolean","d":"scala.jdk.FunctionWrappers.FromJavaBiPredicate","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBinaryOperator.html#","e":false,"i":"","n":"FromJavaBinaryOperator","t":"FromJavaBinaryOperator[T](jf: BinaryOperator[T]) extends (T, T) => T","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBinaryOperator.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: T): T","d":"scala.jdk.FunctionWrappers.FromJavaBinaryOperator","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBooleanSupplier.html#","e":false,"i":"","n":"FromJavaBooleanSupplier","t":"FromJavaBooleanSupplier(jf: BooleanSupplier) extends () => Boolean","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaBooleanSupplier.html#apply-fffff760","e":false,"i":"","n":"apply","t":"apply(): Boolean","d":"scala.jdk.FunctionWrappers.FromJavaBooleanSupplier","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaConsumer.html#","e":false,"i":"","n":"FromJavaConsumer","t":"FromJavaConsumer[T](jf: Consumer[T]) extends T => Unit","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaConsumer.html#apply-fffff71f","e":false,"i":"","n":"apply","t":"apply(x1: T): Unit","d":"scala.jdk.FunctionWrappers.FromJavaConsumer","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleBinaryOperator.html#","e":false,"i":"","n":"FromJavaDoubleBinaryOperator","t":"FromJavaDoubleBinaryOperator(jf: DoubleBinaryOperator) extends (Double, Double) => Double","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleBinaryOperator.html#apply-44b","e":false,"i":"","n":"apply","t":"apply(x1: Double, x2: Double): Double","d":"scala.jdk.FunctionWrappers.FromJavaDoubleBinaryOperator","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleConsumer.html#","e":false,"i":"","n":"FromJavaDoubleConsumer","t":"FromJavaDoubleConsumer(jf: DoubleConsumer) extends Double => Unit","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleConsumer.html#apply-fffff7a5","e":false,"i":"","n":"apply","t":"apply(x1: Double): Unit","d":"scala.jdk.FunctionWrappers.FromJavaDoubleConsumer","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleFunction.html#","e":false,"i":"","n":"FromJavaDoubleFunction","t":"FromJavaDoubleFunction[R](jf: DoubleFunction[R]) extends Double => R","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleFunction.html#apply-12c","e":false,"i":"","n":"apply","t":"apply(x1: Double): R","d":"scala.jdk.FunctionWrappers.FromJavaDoubleFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoublePredicate.html#","e":false,"i":"","n":"FromJavaDoublePredicate","t":"FromJavaDoublePredicate(jf: DoublePredicate) extends Double => Boolean","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoublePredicate.html#apply-e67","e":false,"i":"","n":"apply","t":"apply(x1: Double): Boolean","d":"scala.jdk.FunctionWrappers.FromJavaDoublePredicate","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleSupplier.html#","e":false,"i":"","n":"FromJavaDoubleSupplier","t":"FromJavaDoubleSupplier(jf: DoubleSupplier) extends () => Double","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleSupplier.html#apply-999","e":false,"i":"","n":"apply","t":"apply(): Double","d":"scala.jdk.FunctionWrappers.FromJavaDoubleSupplier","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleToIntFunction.html#","e":false,"i":"","n":"FromJavaDoubleToIntFunction","t":"FromJavaDoubleToIntFunction(jf: DoubleToIntFunction) extends Double => Int","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleToIntFunction.html#apply-fffff1ae","e":false,"i":"","n":"apply","t":"apply(x1: Double): Int","d":"scala.jdk.FunctionWrappers.FromJavaDoubleToIntFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleToLongFunction.html#","e":false,"i":"","n":"FromJavaDoubleToLongFunction","t":"FromJavaDoubleToLongFunction(jf: DoubleToLongFunction) extends Double => Long","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleToLongFunction.html#apply-fffff49d","e":false,"i":"","n":"apply","t":"apply(x1: Double): Long","d":"scala.jdk.FunctionWrappers.FromJavaDoubleToLongFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleUnaryOperator.html#","e":false,"i":"","n":"FromJavaDoubleUnaryOperator","t":"FromJavaDoubleUnaryOperator(jf: DoubleUnaryOperator) extends Double => Double","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaDoubleUnaryOperator.html#apply-5b2","e":false,"i":"","n":"apply","t":"apply(x1: Double): Double","d":"scala.jdk.FunctionWrappers.FromJavaDoubleUnaryOperator","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaFunction.html#","e":false,"i":"","n":"FromJavaFunction","t":"FromJavaFunction[T, R](jf: Function[T, R]) extends T => R","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaFunction.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(x1: T): R","d":"scala.jdk.FunctionWrappers.FromJavaFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntBinaryOperator.html#","e":false,"i":"","n":"FromJavaIntBinaryOperator","t":"FromJavaIntBinaryOperator(jf: IntBinaryOperator) extends (Int, Int) => Int","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntBinaryOperator.html#apply-f47","e":false,"i":"","n":"apply","t":"apply(x1: Int, x2: Int): Int","d":"scala.jdk.FunctionWrappers.FromJavaIntBinaryOperator","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntConsumer.html#","e":false,"i":"","n":"FromJavaIntConsumer","t":"FromJavaIntConsumer(jf: IntConsumer) extends Int => Unit","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntConsumer.html#apply-fffff3b3","e":false,"i":"","n":"apply","t":"apply(x1: Int): Unit","d":"scala.jdk.FunctionWrappers.FromJavaIntConsumer","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntFunction.html#","e":false,"i":"","n":"FromJavaIntFunction","t":"FromJavaIntFunction[R](jf: IntFunction[R]) extends Int => R","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntFunction.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(x1: Int): R","d":"scala.jdk.FunctionWrappers.FromJavaIntFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntPredicate.html#","e":false,"i":"","n":"FromJavaIntPredicate","t":"FromJavaIntPredicate(jf: IntPredicate) extends Int => Boolean","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntPredicate.html#apply-ffffff99","e":false,"i":"","n":"apply","t":"apply(x1: Int): Boolean","d":"scala.jdk.FunctionWrappers.FromJavaIntPredicate","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntSupplier.html#","e":false,"i":"","n":"FromJavaIntSupplier","t":"FromJavaIntSupplier(jf: IntSupplier) extends () => Int","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntSupplier.html#apply-ffffff27","e":false,"i":"","n":"apply","t":"apply(): Int","d":"scala.jdk.FunctionWrappers.FromJavaIntSupplier","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntToDoubleFunction.html#","e":false,"i":"","n":"FromJavaIntToDoubleFunction","t":"FromJavaIntToDoubleFunction(jf: IntToDoubleFunction) extends Int => Double","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntToDoubleFunction.html#apply-640","e":false,"i":"","n":"apply","t":"apply(x1: Int): Double","d":"scala.jdk.FunctionWrappers.FromJavaIntToDoubleFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntToLongFunction.html#","e":false,"i":"","n":"FromJavaIntToLongFunction","t":"FromJavaIntToLongFunction(jf: IntToLongFunction) extends Int => Long","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntToLongFunction.html#apply-fffff0ab","e":false,"i":"","n":"apply","t":"apply(x1: Int): Long","d":"scala.jdk.FunctionWrappers.FromJavaIntToLongFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntUnaryOperator.html#","e":false,"i":"","n":"FromJavaIntUnaryOperator","t":"FromJavaIntUnaryOperator(jf: IntUnaryOperator) extends Int => Int","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaIntUnaryOperator.html#apply-fffffbe0","e":false,"i":"","n":"apply","t":"apply(x1: Int): Int","d":"scala.jdk.FunctionWrappers.FromJavaIntUnaryOperator","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongBinaryOperator.html#","e":false,"i":"","n":"FromJavaLongBinaryOperator","t":"FromJavaLongBinaryOperator(jf: LongBinaryOperator) extends (Long, Long) => Long","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongBinaryOperator.html#apply-fffff3cc","e":false,"i":"","n":"apply","t":"apply(x1: Long, x2: Long): Long","d":"scala.jdk.FunctionWrappers.FromJavaLongBinaryOperator","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongConsumer.html#","e":false,"i":"","n":"FromJavaLongConsumer","t":"FromJavaLongConsumer(jf: LongConsumer) extends Long => Unit","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongConsumer.html#apply-fffffa90","e":false,"i":"","n":"apply","t":"apply(x1: Long): Unit","d":"scala.jdk.FunctionWrappers.FromJavaLongConsumer","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongFunction.html#","e":false,"i":"","n":"FromJavaLongFunction","t":"FromJavaLongFunction[R](jf: LongFunction[R]) extends Long => R","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongFunction.html#apply-7d7","e":false,"i":"","n":"apply","t":"apply(x1: Long): R","d":"scala.jdk.FunctionWrappers.FromJavaLongFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongPredicate.html#","e":false,"i":"","n":"FromJavaLongPredicate","t":"FromJavaLongPredicate(jf: LongPredicate) extends Long => Boolean","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongPredicate.html#apply-f9c","e":false,"i":"","n":"apply","t":"apply(x1: Long): Boolean","d":"scala.jdk.FunctionWrappers.FromJavaLongPredicate","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongSupplier.html#","e":false,"i":"","n":"FromJavaLongSupplier","t":"FromJavaLongSupplier(jf: LongSupplier) extends () => Long","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongSupplier.html#apply-644","e":false,"i":"","n":"apply","t":"apply(): Long","d":"scala.jdk.FunctionWrappers.FromJavaLongSupplier","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongToDoubleFunction.html#","e":false,"i":"","n":"FromJavaLongToDoubleFunction","t":"FromJavaLongToDoubleFunction(jf: LongToDoubleFunction) extends Long => Double","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongToDoubleFunction.html#apply-9dd","e":false,"i":"","n":"apply","t":"apply(x1: Long): Double","d":"scala.jdk.FunctionWrappers.FromJavaLongToDoubleFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongToIntFunction.html#","e":false,"i":"","n":"FromJavaLongToIntFunction","t":"FromJavaLongToIntFunction(jf: LongToIntFunction) extends Long => Int","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongToIntFunction.html#apply-fffff563","e":false,"i":"","n":"apply","t":"apply(x1: Long): Int","d":"scala.jdk.FunctionWrappers.FromJavaLongToIntFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongUnaryOperator.html#","e":false,"i":"","n":"FromJavaLongUnaryOperator","t":"FromJavaLongUnaryOperator(jf: LongUnaryOperator) extends Long => Long","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaLongUnaryOperator.html#apply-fffff788","e":false,"i":"","n":"apply","t":"apply(x1: Long): Long","d":"scala.jdk.FunctionWrappers.FromJavaLongUnaryOperator","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaObjDoubleConsumer.html#","e":false,"i":"","n":"FromJavaObjDoubleConsumer","t":"FromJavaObjDoubleConsumer[T](jf: ObjDoubleConsumer[T]) extends (T, Double) => Unit","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaObjDoubleConsumer.html#apply-fffff0f8","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: Double): Unit","d":"scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaObjIntConsumer.html#","e":false,"i":"","n":"FromJavaObjIntConsumer","t":"FromJavaObjIntConsumer[T](jf: ObjIntConsumer[T]) extends (T, Int) => Unit","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaObjIntConsumer.html#apply-fffff340","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: Int): Unit","d":"scala.jdk.FunctionWrappers.FromJavaObjIntConsumer","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaObjLongConsumer.html#","e":false,"i":"","n":"FromJavaObjLongConsumer","t":"FromJavaObjLongConsumer[T](jf: ObjLongConsumer[T]) extends (T, Long) => Unit","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaObjLongConsumer.html#apply-fffffca3","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: Long): Unit","d":"scala.jdk.FunctionWrappers.FromJavaObjLongConsumer","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaPredicate.html#","e":false,"i":"","n":"FromJavaPredicate","t":"FromJavaPredicate[T](jf: Predicate[T]) extends T => Boolean","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaPredicate.html#apply-4ad","e":false,"i":"","n":"apply","t":"apply(x1: T): Boolean","d":"scala.jdk.FunctionWrappers.FromJavaPredicate","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaSupplier.html#","e":false,"i":"","n":"FromJavaSupplier","t":"FromJavaSupplier[T](jf: Supplier[T]) extends () => T","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaSupplier.html#apply-993","e":false,"i":"","n":"apply","t":"apply(): T","d":"scala.jdk.FunctionWrappers.FromJavaSupplier","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToDoubleBiFunction.html#","e":false,"i":"","n":"FromJavaToDoubleBiFunction","t":"FromJavaToDoubleBiFunction[T, U](jf: ToDoubleBiFunction[T, U]) extends (T, U) => Double","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToDoubleBiFunction.html#apply-fffffdbf","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: U): Double","d":"scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToDoubleFunction.html#","e":false,"i":"","n":"FromJavaToDoubleFunction","t":"FromJavaToDoubleFunction[T](jf: ToDoubleFunction[T]) extends T => Double","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToDoubleFunction.html#apply-fffffeac","e":false,"i":"","n":"apply","t":"apply(x1: T): Double","d":"scala.jdk.FunctionWrappers.FromJavaToDoubleFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToIntBiFunction.html#","e":false,"i":"","n":"FromJavaToIntBiFunction","t":"FromJavaToIntBiFunction[T, U](jf: ToIntBiFunction[T, U]) extends (T, U) => Int","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToIntBiFunction.html#apply-cc1","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: U): Int","d":"scala.jdk.FunctionWrappers.FromJavaToIntBiFunction","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToIntFunction.html#","e":false,"i":"","n":"FromJavaToIntFunction","t":"FromJavaToIntFunction[T](jf: ToIntFunction[T]) extends T => Int","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToIntFunction.html#apply-fffffaf4","e":false,"i":"","n":"apply","t":"apply(x1: T): Int","d":"scala.jdk.FunctionWrappers.FromJavaToIntFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToLongBiFunction.html#","e":false,"i":"","n":"FromJavaToLongBiFunction","t":"FromJavaToLongBiFunction[T, U](jf: ToLongBiFunction[T, U]) extends (T, U) => Long","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToLongBiFunction.html#apply-bea","e":false,"i":"","n":"apply","t":"apply(x1: T, x2: U): Long","d":"scala.jdk.FunctionWrappers.FromJavaToLongBiFunction","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToLongFunction.html#","e":false,"i":"","n":"FromJavaToLongFunction","t":"FromJavaToLongFunction[T](jf: ToLongFunction[T]) extends T => Long","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaToLongFunction.html#apply-fffff417","e":false,"i":"","n":"apply","t":"apply(x1: T): Long","d":"scala.jdk.FunctionWrappers.FromJavaToLongFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaUnaryOperator.html#","e":false,"i":"","n":"FromJavaUnaryOperator","t":"FromJavaUnaryOperator[T](jf: UnaryOperator[T]) extends T => T","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$FromJavaUnaryOperator.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(x1: T): T","d":"scala.jdk.FunctionWrappers.FromJavaUnaryOperator","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/jdk/FunctionWrappers$$RichBiConsumerAsFunction2.html#","e":false,"i":"","n":"RichBiConsumerAsFunction2","t":"RichBiConsumerAsFunction2[T, U](underlying: BiConsumer[T, U]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichBiConsumerAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, U) => Unit","d":"scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichBiFunctionAsFunction2.html#","e":false,"i":"","n":"RichBiFunctionAsFunction2","t":"RichBiFunctionAsFunction2[T, U, R](underlying: BiFunction[T, U, R]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichBiFunctionAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, U) => R","d":"scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichBiPredicateAsFunction2.html#","e":false,"i":"","n":"RichBiPredicateAsFunction2","t":"RichBiPredicateAsFunction2[T, U](underlying: BiPredicate[T, U]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichBiPredicateAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, U) => Boolean","d":"scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichBinaryOperatorAsFunction2.html#","e":false,"i":"","n":"RichBinaryOperatorAsFunction2","t":"RichBinaryOperatorAsFunction2[T](underlying: BinaryOperator[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichBinaryOperatorAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, T) => T","d":"scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichBooleanSupplierAsFunction0.html#","e":false,"i":"","n":"RichBooleanSupplierAsFunction0","t":"RichBooleanSupplierAsFunction0(underlying: BooleanSupplier) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichBooleanSupplierAsFunction0.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: () => Boolean","d":"scala.jdk.FunctionWrappers.RichBooleanSupplierAsFunction0","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichConsumerAsFunction1.html#","e":false,"i":"","n":"RichConsumerAsFunction1","t":"RichConsumerAsFunction1[T](underlying: Consumer[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichConsumerAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: T => Unit","d":"scala.jdk.FunctionWrappers.RichConsumerAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleBinaryOperatorAsFunction2.html#","e":false,"i":"","n":"RichDoubleBinaryOperatorAsFunction2","t":"RichDoubleBinaryOperatorAsFunction2(underlying: DoubleBinaryOperator) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleBinaryOperatorAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (Double, Double) => Double","d":"scala.jdk.FunctionWrappers.RichDoubleBinaryOperatorAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleConsumerAsFunction1.html#","e":false,"i":"","n":"RichDoubleConsumerAsFunction1","t":"RichDoubleConsumerAsFunction1(underlying: DoubleConsumer) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleConsumerAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Double => Unit","d":"scala.jdk.FunctionWrappers.RichDoubleConsumerAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleFunctionAsFunction1.html#","e":false,"i":"","n":"RichDoubleFunctionAsFunction1","t":"RichDoubleFunctionAsFunction1[R](underlying: DoubleFunction[R]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Double => R","d":"scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoublePredicateAsFunction1.html#","e":false,"i":"","n":"RichDoublePredicateAsFunction1","t":"RichDoublePredicateAsFunction1(underlying: DoublePredicate) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoublePredicateAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Double => Boolean","d":"scala.jdk.FunctionWrappers.RichDoublePredicateAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleSupplierAsFunction0.html#","e":false,"i":"","n":"RichDoubleSupplierAsFunction0","t":"RichDoubleSupplierAsFunction0(underlying: DoubleSupplier) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleSupplierAsFunction0.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: () => Double","d":"scala.jdk.FunctionWrappers.RichDoubleSupplierAsFunction0","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleToIntFunctionAsFunction1.html#","e":false,"i":"","n":"RichDoubleToIntFunctionAsFunction1","t":"RichDoubleToIntFunctionAsFunction1(underlying: DoubleToIntFunction) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleToIntFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Double => Int","d":"scala.jdk.FunctionWrappers.RichDoubleToIntFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleToLongFunctionAsFunction1.html#","e":false,"i":"","n":"RichDoubleToLongFunctionAsFunction1","t":"RichDoubleToLongFunctionAsFunction1(underlying: DoubleToLongFunction) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleToLongFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Double => Long","d":"scala.jdk.FunctionWrappers.RichDoubleToLongFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleUnaryOperatorAsFunction1.html#","e":false,"i":"","n":"RichDoubleUnaryOperatorAsFunction1","t":"RichDoubleUnaryOperatorAsFunction1(underlying: DoubleUnaryOperator) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichDoubleUnaryOperatorAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Double => Double","d":"scala.jdk.FunctionWrappers.RichDoubleUnaryOperatorAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsBooleanSupplier.html#","e":false,"i":"","n":"RichFunction0AsBooleanSupplier","t":"RichFunction0AsBooleanSupplier(underlying: () => Boolean) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsBooleanSupplier.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: BooleanSupplier","d":"scala.jdk.FunctionWrappers.RichFunction0AsBooleanSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsDoubleSupplier.html#","e":false,"i":"","n":"RichFunction0AsDoubleSupplier","t":"RichFunction0AsDoubleSupplier(underlying: () => Double) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsDoubleSupplier.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: DoubleSupplier","d":"scala.jdk.FunctionWrappers.RichFunction0AsDoubleSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsIntSupplier.html#","e":false,"i":"","n":"RichFunction0AsIntSupplier","t":"RichFunction0AsIntSupplier(underlying: () => Int) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsIntSupplier.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: IntSupplier","d":"scala.jdk.FunctionWrappers.RichFunction0AsIntSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsLongSupplier.html#","e":false,"i":"","n":"RichFunction0AsLongSupplier","t":"RichFunction0AsLongSupplier(underlying: () => Long) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsLongSupplier.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: LongSupplier","d":"scala.jdk.FunctionWrappers.RichFunction0AsLongSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsSupplier.html#","e":false,"i":"","n":"RichFunction0AsSupplier","t":"RichFunction0AsSupplier[T](underlying: () => T) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsSupplier.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Supplier[T]","d":"scala.jdk.FunctionWrappers.RichFunction0AsSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction0AsSupplier.html#asJavaSupplier-0","e":false,"i":"","n":"asJavaSupplier","t":"asJavaSupplier: Supplier[T]","d":"scala.jdk.FunctionWrappers.RichFunction0AsSupplier","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsConsumer.html#","e":false,"i":"","n":"RichFunction1AsConsumer","t":"RichFunction1AsConsumer[T](underlying: T => Unit) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsConsumer.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Consumer[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsConsumer.html#asJavaConsumer-0","e":false,"i":"","n":"asJavaConsumer","t":"asJavaConsumer: Consumer[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleConsumer.html#","e":false,"i":"","n":"RichFunction1AsDoubleConsumer","t":"RichFunction1AsDoubleConsumer(underlying: Double => Unit) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleConsumer.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: DoubleConsumer","d":"scala.jdk.FunctionWrappers.RichFunction1AsDoubleConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleFunction.html#","e":false,"i":"","n":"RichFunction1AsDoubleFunction","t":"RichFunction1AsDoubleFunction[R](underlying: Double => R) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: DoubleFunction[R]","d":"scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleFunction.html#asJavaDoubleFunction-0","e":false,"i":"","n":"asJavaDoubleFunction","t":"asJavaDoubleFunction: DoubleFunction[R]","d":"scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoublePredicate.html#","e":false,"i":"","n":"RichFunction1AsDoublePredicate","t":"RichFunction1AsDoublePredicate(underlying: Double => Boolean) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoublePredicate.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: DoublePredicate","d":"scala.jdk.FunctionWrappers.RichFunction1AsDoublePredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleToIntFunction.html#","e":false,"i":"","n":"RichFunction1AsDoubleToIntFunction","t":"RichFunction1AsDoubleToIntFunction(underlying: Double => Int) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleToIntFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: DoubleToIntFunction","d":"scala.jdk.FunctionWrappers.RichFunction1AsDoubleToIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleToLongFunction.html#","e":false,"i":"","n":"RichFunction1AsDoubleToLongFunction","t":"RichFunction1AsDoubleToLongFunction(underlying: Double => Long) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleToLongFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: DoubleToLongFunction","d":"scala.jdk.FunctionWrappers.RichFunction1AsDoubleToLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleUnaryOperator.html#","e":false,"i":"","n":"RichFunction1AsDoubleUnaryOperator","t":"RichFunction1AsDoubleUnaryOperator(underlying: Double => Double) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsDoubleUnaryOperator.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: DoubleUnaryOperator","d":"scala.jdk.FunctionWrappers.RichFunction1AsDoubleUnaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsFunction.html#","e":false,"i":"","n":"RichFunction1AsFunction","t":"RichFunction1AsFunction[T, R](underlying: T => R) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Function[T, R]","d":"scala.jdk.FunctionWrappers.RichFunction1AsFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsFunction.html#asJavaFunction-0","e":false,"i":"","n":"asJavaFunction","t":"asJavaFunction: Function[T, R]","d":"scala.jdk.FunctionWrappers.RichFunction1AsFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntConsumer.html#","e":false,"i":"","n":"RichFunction1AsIntConsumer","t":"RichFunction1AsIntConsumer(underlying: Int => Unit) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntConsumer.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: IntConsumer","d":"scala.jdk.FunctionWrappers.RichFunction1AsIntConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntFunction.html#","e":false,"i":"","n":"RichFunction1AsIntFunction","t":"RichFunction1AsIntFunction[R](underlying: Int => R) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: IntFunction[R]","d":"scala.jdk.FunctionWrappers.RichFunction1AsIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntFunction.html#asJavaIntFunction-0","e":false,"i":"","n":"asJavaIntFunction","t":"asJavaIntFunction: IntFunction[R]","d":"scala.jdk.FunctionWrappers.RichFunction1AsIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntPredicate.html#","e":false,"i":"","n":"RichFunction1AsIntPredicate","t":"RichFunction1AsIntPredicate(underlying: Int => Boolean) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntPredicate.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: IntPredicate","d":"scala.jdk.FunctionWrappers.RichFunction1AsIntPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntToDoubleFunction.html#","e":false,"i":"","n":"RichFunction1AsIntToDoubleFunction","t":"RichFunction1AsIntToDoubleFunction(underlying: Int => Double) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntToDoubleFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: IntToDoubleFunction","d":"scala.jdk.FunctionWrappers.RichFunction1AsIntToDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntToLongFunction.html#","e":false,"i":"","n":"RichFunction1AsIntToLongFunction","t":"RichFunction1AsIntToLongFunction(underlying: Int => Long) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntToLongFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: IntToLongFunction","d":"scala.jdk.FunctionWrappers.RichFunction1AsIntToLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntUnaryOperator.html#","e":false,"i":"","n":"RichFunction1AsIntUnaryOperator","t":"RichFunction1AsIntUnaryOperator(underlying: Int => Int) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsIntUnaryOperator.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: IntUnaryOperator","d":"scala.jdk.FunctionWrappers.RichFunction1AsIntUnaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongConsumer.html#","e":false,"i":"","n":"RichFunction1AsLongConsumer","t":"RichFunction1AsLongConsumer(underlying: Long => Unit) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongConsumer.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: LongConsumer","d":"scala.jdk.FunctionWrappers.RichFunction1AsLongConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongFunction.html#","e":false,"i":"","n":"RichFunction1AsLongFunction","t":"RichFunction1AsLongFunction[R](underlying: Long => R) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: LongFunction[R]","d":"scala.jdk.FunctionWrappers.RichFunction1AsLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongFunction.html#asJavaLongFunction-0","e":false,"i":"","n":"asJavaLongFunction","t":"asJavaLongFunction: LongFunction[R]","d":"scala.jdk.FunctionWrappers.RichFunction1AsLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongPredicate.html#","e":false,"i":"","n":"RichFunction1AsLongPredicate","t":"RichFunction1AsLongPredicate(underlying: Long => Boolean) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongPredicate.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: LongPredicate","d":"scala.jdk.FunctionWrappers.RichFunction1AsLongPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongToDoubleFunction.html#","e":false,"i":"","n":"RichFunction1AsLongToDoubleFunction","t":"RichFunction1AsLongToDoubleFunction(underlying: Long => Double) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongToDoubleFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: LongToDoubleFunction","d":"scala.jdk.FunctionWrappers.RichFunction1AsLongToDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongToIntFunction.html#","e":false,"i":"","n":"RichFunction1AsLongToIntFunction","t":"RichFunction1AsLongToIntFunction(underlying: Long => Int) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongToIntFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: LongToIntFunction","d":"scala.jdk.FunctionWrappers.RichFunction1AsLongToIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongUnaryOperator.html#","e":false,"i":"","n":"RichFunction1AsLongUnaryOperator","t":"RichFunction1AsLongUnaryOperator(underlying: Long => Long) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsLongUnaryOperator.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: LongUnaryOperator","d":"scala.jdk.FunctionWrappers.RichFunction1AsLongUnaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsPredicate.html#","e":false,"i":"","n":"RichFunction1AsPredicate","t":"RichFunction1AsPredicate[T](underlying: T => Boolean) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsPredicate.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Predicate[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsPredicate.html#asJavaPredicate-0","e":false,"i":"","n":"asJavaPredicate","t":"asJavaPredicate: Predicate[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToDoubleFunction.html#","e":false,"i":"","n":"RichFunction1AsToDoubleFunction","t":"RichFunction1AsToDoubleFunction[T](underlying: T => Double) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToDoubleFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ToDoubleFunction[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToDoubleFunction.html#asJavaToDoubleFunction-0","e":false,"i":"","n":"asJavaToDoubleFunction","t":"asJavaToDoubleFunction: ToDoubleFunction[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToIntFunction.html#","e":false,"i":"","n":"RichFunction1AsToIntFunction","t":"RichFunction1AsToIntFunction[T](underlying: T => Int) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToIntFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ToIntFunction[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToIntFunction.html#asJavaToIntFunction-0","e":false,"i":"","n":"asJavaToIntFunction","t":"asJavaToIntFunction: ToIntFunction[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToLongFunction.html#","e":false,"i":"","n":"RichFunction1AsToLongFunction","t":"RichFunction1AsToLongFunction[T](underlying: T => Long) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToLongFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ToLongFunction[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsToLongFunction.html#asJavaToLongFunction-0","e":false,"i":"","n":"asJavaToLongFunction","t":"asJavaToLongFunction: ToLongFunction[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsUnaryOperator.html#","e":false,"i":"","n":"RichFunction1AsUnaryOperator","t":"RichFunction1AsUnaryOperator[T](underlying: T => T) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsUnaryOperator.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: UnaryOperator[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction1AsUnaryOperator.html#asJavaUnaryOperator-0","e":false,"i":"","n":"asJavaUnaryOperator","t":"asJavaUnaryOperator: UnaryOperator[T]","d":"scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiConsumer.html#","e":false,"i":"","n":"RichFunction2AsBiConsumer","t":"RichFunction2AsBiConsumer[T, U](underlying: (T, U) => Unit) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiConsumer.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: BiConsumer[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiConsumer.html#asJavaBiConsumer-0","e":false,"i":"","n":"asJavaBiConsumer","t":"asJavaBiConsumer: BiConsumer[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiFunction.html#","e":false,"i":"","n":"RichFunction2AsBiFunction","t":"RichFunction2AsBiFunction[T, U, R](underlying: (T, U) => R) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: BiFunction[T, U, R]","d":"scala.jdk.FunctionWrappers.RichFunction2AsBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiFunction.html#asJavaBiFunction-0","e":false,"i":"","n":"asJavaBiFunction","t":"asJavaBiFunction: BiFunction[T, U, R]","d":"scala.jdk.FunctionWrappers.RichFunction2AsBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiPredicate.html#","e":false,"i":"","n":"RichFunction2AsBiPredicate","t":"RichFunction2AsBiPredicate[T, U](underlying: (T, U) => Boolean) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiPredicate.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: BiPredicate[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBiPredicate.html#asJavaBiPredicate-0","e":false,"i":"","n":"asJavaBiPredicate","t":"asJavaBiPredicate: BiPredicate[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBinaryOperator.html#","e":false,"i":"","n":"RichFunction2AsBinaryOperator","t":"RichFunction2AsBinaryOperator[T](underlying: (T, T) => T) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBinaryOperator.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: BinaryOperator[T]","d":"scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsBinaryOperator.html#asJavaBinaryOperator-0","e":false,"i":"","n":"asJavaBinaryOperator","t":"asJavaBinaryOperator: BinaryOperator[T]","d":"scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsDoubleBinaryOperator.html#","e":false,"i":"","n":"RichFunction2AsDoubleBinaryOperator","t":"RichFunction2AsDoubleBinaryOperator(underlying: (Double, Double) => Double) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsDoubleBinaryOperator.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: DoubleBinaryOperator","d":"scala.jdk.FunctionWrappers.RichFunction2AsDoubleBinaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsIntBinaryOperator.html#","e":false,"i":"","n":"RichFunction2AsIntBinaryOperator","t":"RichFunction2AsIntBinaryOperator(underlying: (Int, Int) => Int) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsIntBinaryOperator.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: IntBinaryOperator","d":"scala.jdk.FunctionWrappers.RichFunction2AsIntBinaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsLongBinaryOperator.html#","e":false,"i":"","n":"RichFunction2AsLongBinaryOperator","t":"RichFunction2AsLongBinaryOperator(underlying: (Long, Long) => Long) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsLongBinaryOperator.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: LongBinaryOperator","d":"scala.jdk.FunctionWrappers.RichFunction2AsLongBinaryOperator","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjDoubleConsumer.html#","e":false,"i":"","n":"RichFunction2AsObjDoubleConsumer","t":"RichFunction2AsObjDoubleConsumer[T](underlying: (T, Double) => Unit) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjDoubleConsumer.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ObjDoubleConsumer[T]","d":"scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjDoubleConsumer.html#asJavaObjDoubleConsumer-0","e":false,"i":"","n":"asJavaObjDoubleConsumer","t":"asJavaObjDoubleConsumer: ObjDoubleConsumer[T]","d":"scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjIntConsumer.html#","e":false,"i":"","n":"RichFunction2AsObjIntConsumer","t":"RichFunction2AsObjIntConsumer[T](underlying: (T, Int) => Unit) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjIntConsumer.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ObjIntConsumer[T]","d":"scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjIntConsumer.html#asJavaObjIntConsumer-0","e":false,"i":"","n":"asJavaObjIntConsumer","t":"asJavaObjIntConsumer: ObjIntConsumer[T]","d":"scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjLongConsumer.html#","e":false,"i":"","n":"RichFunction2AsObjLongConsumer","t":"RichFunction2AsObjLongConsumer[T](underlying: (T, Long) => Unit) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjLongConsumer.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ObjLongConsumer[T]","d":"scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsObjLongConsumer.html#asJavaObjLongConsumer-0","e":false,"i":"","n":"asJavaObjLongConsumer","t":"asJavaObjLongConsumer: ObjLongConsumer[T]","d":"scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToDoubleBiFunction.html#","e":false,"i":"","n":"RichFunction2AsToDoubleBiFunction","t":"RichFunction2AsToDoubleBiFunction[T, U](underlying: (T, U) => Double) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToDoubleBiFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ToDoubleBiFunction[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToDoubleBiFunction.html#asJavaToDoubleBiFunction-0","e":false,"i":"","n":"asJavaToDoubleBiFunction","t":"asJavaToDoubleBiFunction: ToDoubleBiFunction[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToIntBiFunction.html#","e":false,"i":"","n":"RichFunction2AsToIntBiFunction","t":"RichFunction2AsToIntBiFunction[T, U](underlying: (T, U) => Int) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToIntBiFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ToIntBiFunction[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToIntBiFunction.html#asJavaToIntBiFunction-0","e":false,"i":"","n":"asJavaToIntBiFunction","t":"asJavaToIntBiFunction: ToIntBiFunction[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToLongBiFunction.html#","e":false,"i":"","n":"RichFunction2AsToLongBiFunction","t":"RichFunction2AsToLongBiFunction[T, U](underlying: (T, U) => Long) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToLongBiFunction.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: ToLongBiFunction[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunction2AsToLongBiFunction.html#asJavaToLongBiFunction-0","e":false,"i":"","n":"asJavaToLongBiFunction","t":"asJavaToLongBiFunction: ToLongBiFunction[T, U]","d":"scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunctionAsFunction1.html#","e":false,"i":"","n":"RichFunctionAsFunction1","t":"RichFunctionAsFunction1[T, R](underlying: Function[T, R]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: T => R","d":"scala.jdk.FunctionWrappers.RichFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntBinaryOperatorAsFunction2.html#","e":false,"i":"","n":"RichIntBinaryOperatorAsFunction2","t":"RichIntBinaryOperatorAsFunction2(underlying: IntBinaryOperator) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntBinaryOperatorAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (Int, Int) => Int","d":"scala.jdk.FunctionWrappers.RichIntBinaryOperatorAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntConsumerAsFunction1.html#","e":false,"i":"","n":"RichIntConsumerAsFunction1","t":"RichIntConsumerAsFunction1(underlying: IntConsumer) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntConsumerAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Int => Unit","d":"scala.jdk.FunctionWrappers.RichIntConsumerAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntFunctionAsFunction1.html#","e":false,"i":"","n":"RichIntFunctionAsFunction1","t":"RichIntFunctionAsFunction1[R](underlying: IntFunction[R]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Int => R","d":"scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntPredicateAsFunction1.html#","e":false,"i":"","n":"RichIntPredicateAsFunction1","t":"RichIntPredicateAsFunction1(underlying: IntPredicate) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntPredicateAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Int => Boolean","d":"scala.jdk.FunctionWrappers.RichIntPredicateAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntSupplierAsFunction0.html#","e":false,"i":"","n":"RichIntSupplierAsFunction0","t":"RichIntSupplierAsFunction0(underlying: IntSupplier) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntSupplierAsFunction0.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: () => Int","d":"scala.jdk.FunctionWrappers.RichIntSupplierAsFunction0","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntToDoubleFunctionAsFunction1.html#","e":false,"i":"","n":"RichIntToDoubleFunctionAsFunction1","t":"RichIntToDoubleFunctionAsFunction1(underlying: IntToDoubleFunction) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntToDoubleFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Int => Double","d":"scala.jdk.FunctionWrappers.RichIntToDoubleFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntToLongFunctionAsFunction1.html#","e":false,"i":"","n":"RichIntToLongFunctionAsFunction1","t":"RichIntToLongFunctionAsFunction1(underlying: IntToLongFunction) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntToLongFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Int => Long","d":"scala.jdk.FunctionWrappers.RichIntToLongFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntUnaryOperatorAsFunction1.html#","e":false,"i":"","n":"RichIntUnaryOperatorAsFunction1","t":"RichIntUnaryOperatorAsFunction1(underlying: IntUnaryOperator) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichIntUnaryOperatorAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Int => Int","d":"scala.jdk.FunctionWrappers.RichIntUnaryOperatorAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongBinaryOperatorAsFunction2.html#","e":false,"i":"","n":"RichLongBinaryOperatorAsFunction2","t":"RichLongBinaryOperatorAsFunction2(underlying: LongBinaryOperator) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongBinaryOperatorAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (Long, Long) => Long","d":"scala.jdk.FunctionWrappers.RichLongBinaryOperatorAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongConsumerAsFunction1.html#","e":false,"i":"","n":"RichLongConsumerAsFunction1","t":"RichLongConsumerAsFunction1(underlying: LongConsumer) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongConsumerAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Long => Unit","d":"scala.jdk.FunctionWrappers.RichLongConsumerAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongFunctionAsFunction1.html#","e":false,"i":"","n":"RichLongFunctionAsFunction1","t":"RichLongFunctionAsFunction1[R](underlying: LongFunction[R]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Long => R","d":"scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongPredicateAsFunction1.html#","e":false,"i":"","n":"RichLongPredicateAsFunction1","t":"RichLongPredicateAsFunction1(underlying: LongPredicate) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongPredicateAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Long => Boolean","d":"scala.jdk.FunctionWrappers.RichLongPredicateAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongSupplierAsFunction0.html#","e":false,"i":"","n":"RichLongSupplierAsFunction0","t":"RichLongSupplierAsFunction0(underlying: LongSupplier) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongSupplierAsFunction0.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: () => Long","d":"scala.jdk.FunctionWrappers.RichLongSupplierAsFunction0","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongToDoubleFunctionAsFunction1.html#","e":false,"i":"","n":"RichLongToDoubleFunctionAsFunction1","t":"RichLongToDoubleFunctionAsFunction1(underlying: LongToDoubleFunction) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongToDoubleFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Long => Double","d":"scala.jdk.FunctionWrappers.RichLongToDoubleFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongToIntFunctionAsFunction1.html#","e":false,"i":"","n":"RichLongToIntFunctionAsFunction1","t":"RichLongToIntFunctionAsFunction1(underlying: LongToIntFunction) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongToIntFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Long => Int","d":"scala.jdk.FunctionWrappers.RichLongToIntFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongUnaryOperatorAsFunction1.html#","e":false,"i":"","n":"RichLongUnaryOperatorAsFunction1","t":"RichLongUnaryOperatorAsFunction1(underlying: LongUnaryOperator) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichLongUnaryOperatorAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Long => Long","d":"scala.jdk.FunctionWrappers.RichLongUnaryOperatorAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichObjDoubleConsumerAsFunction2.html#","e":false,"i":"","n":"RichObjDoubleConsumerAsFunction2","t":"RichObjDoubleConsumerAsFunction2[T](underlying: ObjDoubleConsumer[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichObjDoubleConsumerAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, Double) => Unit","d":"scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichObjIntConsumerAsFunction2.html#","e":false,"i":"","n":"RichObjIntConsumerAsFunction2","t":"RichObjIntConsumerAsFunction2[T](underlying: ObjIntConsumer[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichObjIntConsumerAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, Int) => Unit","d":"scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichObjLongConsumerAsFunction2.html#","e":false,"i":"","n":"RichObjLongConsumerAsFunction2","t":"RichObjLongConsumerAsFunction2[T](underlying: ObjLongConsumer[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichObjLongConsumerAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, Long) => Unit","d":"scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichPredicateAsFunction1.html#","e":false,"i":"","n":"RichPredicateAsFunction1","t":"RichPredicateAsFunction1[T](underlying: Predicate[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichPredicateAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: T => Boolean","d":"scala.jdk.FunctionWrappers.RichPredicateAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichSupplierAsFunction0.html#","e":false,"i":"","n":"RichSupplierAsFunction0","t":"RichSupplierAsFunction0[T](underlying: Supplier[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichSupplierAsFunction0.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: () => T","d":"scala.jdk.FunctionWrappers.RichSupplierAsFunction0","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToDoubleBiFunctionAsFunction2.html#","e":false,"i":"","n":"RichToDoubleBiFunctionAsFunction2","t":"RichToDoubleBiFunctionAsFunction2[T, U](underlying: ToDoubleBiFunction[T, U]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToDoubleBiFunctionAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, U) => Double","d":"scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToDoubleFunctionAsFunction1.html#","e":false,"i":"","n":"RichToDoubleFunctionAsFunction1","t":"RichToDoubleFunctionAsFunction1[T](underlying: ToDoubleFunction[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToDoubleFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: T => Double","d":"scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToIntBiFunctionAsFunction2.html#","e":false,"i":"","n":"RichToIntBiFunctionAsFunction2","t":"RichToIntBiFunctionAsFunction2[T, U](underlying: ToIntBiFunction[T, U]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToIntBiFunctionAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, U) => Int","d":"scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToIntFunctionAsFunction1.html#","e":false,"i":"","n":"RichToIntFunctionAsFunction1","t":"RichToIntFunctionAsFunction1[T](underlying: ToIntFunction[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToIntFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: T => Int","d":"scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToLongBiFunctionAsFunction2.html#","e":false,"i":"","n":"RichToLongBiFunctionAsFunction2","t":"RichToLongBiFunctionAsFunction2[T, U](underlying: ToLongBiFunction[T, U]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToLongBiFunctionAsFunction2.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: (T, U) => Long","d":"scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToLongFunctionAsFunction1.html#","e":false,"i":"","n":"RichToLongFunctionAsFunction1","t":"RichToLongFunctionAsFunction1[T](underlying: ToLongFunction[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichToLongFunctionAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: T => Long","d":"scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichUnaryOperatorAsFunction1.html#","e":false,"i":"","n":"RichUnaryOperatorAsFunction1","t":"RichUnaryOperatorAsFunction1[T](underlying: UnaryOperator[T]) extends AnyVal","d":"scala.jdk.FunctionWrappers","k":"class","x":""},
{"l":"api/scala/jdk/FunctionWrappers$$RichUnaryOperatorAsFunction1.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: T => T","d":"scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1","k":"def","x":""},
{"l":"api/scala/jdk/FutureConverters$.html#","e":false,"i":"","n":"FutureConverters","t":"FutureConverters","d":"scala.jdk","k":"object","x":"This object provides extension methods that convert between Scala scala.concurrent.Future and Java\njava.util.concurrent.CompletionStage"},
{"l":"api/scala/jdk/FutureConverters$.html#CompletionStageOps-547","e":false,"i":"","n":"CompletionStageOps","t":"CompletionStageOps[T](cs: CompletionStage[T]): CompletionStageOps[T]","d":"scala.jdk.FutureConverters","k":"def","x":""},
{"l":"api/scala/jdk/FutureConverters$.html#FutureOps-fffff631","e":false,"i":"","n":"FutureOps","t":"FutureOps[T](f: Future[T]): FutureOps[T]","d":"scala.jdk.FutureConverters","k":"def","x":""},
{"l":"api/scala/jdk/FutureConverters$$CompletionStageOps.html#","e":false,"i":"","n":"CompletionStageOps","t":"CompletionStageOps[T](cs: CompletionStage[T]) extends AnyVal","d":"scala.jdk.FutureConverters","k":"class","x":""},
{"l":"api/scala/jdk/FutureConverters$$CompletionStageOps.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Future[T]","d":"scala.jdk.FutureConverters.CompletionStageOps","k":"def","x":"Convert a Java CompletionStage to a Scala Future, see javaapi.FutureConverters.asScala."},
{"l":"api/scala/jdk/FutureConverters$$FutureOps.html#","e":false,"i":"","n":"FutureOps","t":"FutureOps[T](f: Future[T]) extends AnyVal","d":"scala.jdk.FutureConverters","k":"class","x":""},
{"l":"api/scala/jdk/FutureConverters$$FutureOps.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: CompletionStage[T]","d":"scala.jdk.FutureConverters.FutureOps","k":"def","x":"Convert a Scala Future to a Java CompletionStage, see javaapi.FutureConverters.asJava."},
{"l":"api/scala/jdk/IntAccumulator.html#","e":false,"i":"","n":"IntAccumulator","t":"IntAccumulator extends Accumulator[Int, AnyAccumulator, IntAccumulator], SeqOps[Int, AnyAccumulator, IntAccumulator], Serializable","d":"scala.jdk","k":"class","x":"A specialized Accumulator that holds Ints without boxing, see Accumulator."},
{"l":"api/scala/jdk/IntAccumulator.html#addOne-623","e":false,"i":"","n":"addOne","t":"addOne(a: Int): this.type","d":"scala.jdk.IntAccumulator","k":"def","x":"Appends an element to this IntAccumulator."},
{"l":"api/scala/jdk/IntAccumulator.html#apply-fffff563","e":false,"i":"","n":"apply","t":"apply(ix: Long): Int","d":"scala.jdk.IntAccumulator","k":"def","x":"Retrieves the ixth element."},
{"l":"api/scala/jdk/IntAccumulator.html#apply-fffffbe0","e":false,"i":"","n":"apply","t":"apply(i: Int): Int","d":"scala.jdk.IntAccumulator","k":"def","x":"Retrieves the ixth element, using an Int index."},
{"l":"api/scala/jdk/IntAccumulator.html#collect-fffffcad","e":false,"i":"","n":"collect","t":"collect(pf: PartialFunction[Int, Int]): IntAccumulator","d":"scala.jdk.IntAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/IntAccumulator.html#countLong-995","e":false,"i":"","n":"countLong","t":"countLong(p: Int => Boolean): Long","d":"scala.jdk.IntAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/IntAccumulator.html#drain-fffffa48","e":false,"i":"","n":"drain","t":"drain(that: IntAccumulator): Unit","d":"scala.jdk.IntAccumulator","k":"def","x":"Removes all elements from that and appends them to this IntAccumulator."},
{"l":"api/scala/jdk/IntAccumulator.html#efficientStepper-190","e":false,"i":"","n":"efficientStepper","t":"efficientStepper[S <: Stepper[_]](implicit shape: StepperShape[Int, S]): S & EfficientSplit","d":"scala.jdk.IntAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/IntAccumulator.html#flatMap-fffffd8d","e":false,"i":"","n":"flatMap","t":"flatMap(f: Int => IterableOnce[Int]): IntAccumulator","d":"scala.jdk.IntAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/IntAccumulator.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[Int]","d":"scala.jdk.IntAccumulator","k":"def","x":"Returns an Iterator over the contents of this IntAccumulator. The Iterator is not specialized."},
{"l":"api/scala/jdk/IntAccumulator.html#map-fffffd8d","e":false,"i":"","n":"map","t":"map(f: Int => Int): IntAccumulator","d":"scala.jdk.IntAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/IntAccumulator.html#toArray-0","e":false,"i":"","n":"toArray","t":"toArray: Array[Int]","d":"scala.jdk.IntAccumulator","k":"def","x":"Copies the elements in this IntAccumulator into an Array[Int]"},
{"l":"api/scala/jdk/IntAccumulator.html#update-eef","e":false,"i":"","n":"update","t":"update(idx: Long, elem: Int): Unit","d":"scala.jdk.IntAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/IntAccumulator.html#update-d2c","e":false,"i":"","n":"update","t":"update(idx: Int, elem: Int): Unit","d":"scala.jdk.IntAccumulator","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/jdk/IntAccumulator$.html#","e":false,"i":"","n":"IntAccumulator","t":"IntAccumulator extends SpecificIterableFactory[Int, IntAccumulator]","d":"scala.jdk","k":"object","x":""},
{"l":"api/scala/jdk/IntAccumulator$.html#adder-0","e":false,"i":"","n":"adder","t":"adder: ObjIntConsumer[IntAccumulator]","d":"scala.jdk.IntAccumulator","k":"def","x":"A BiConsumer that adds an element to an IntAccumulator, suitable for use with java.util.stream.IntStream's collect method."},
{"l":"api/scala/jdk/IntAccumulator$.html#boxedAdder-0","e":false,"i":"","n":"boxedAdder","t":"boxedAdder: BiConsumer[IntAccumulator, Int]","d":"scala.jdk.IntAccumulator","k":"def","x":"A BiConsumer that adds a boxed Int to an IntAccumulator, suitable for use with java.util.stream.Stream's collect method."},
{"l":"api/scala/jdk/IntAccumulator$.html#merger-0","e":false,"i":"","n":"merger","t":"merger: BiConsumer[IntAccumulator, IntAccumulator]","d":"scala.jdk.IntAccumulator","k":"def","x":"A BiConsumer that merges IntAccumulators, suitable for use with java.util.stream.IntStream's collect method.  Suitable for Stream[Int] also."},
{"l":"api/scala/jdk/IntAccumulator$.html#supplier-0","e":false,"i":"","n":"supplier","t":"supplier: Supplier[IntAccumulator]","d":"scala.jdk.IntAccumulator","k":"def","x":"A Supplier of IntAccumulators, suitable for use with java.util.stream.IntStream's collect method.  Suitable for Stream[Int] also."},
{"l":"api/scala/jdk/IntAccumulator$.html#toJavaIntegerAccumulator-fffffe86","e":false,"i":"","n":"toJavaIntegerAccumulator","t":"toJavaIntegerAccumulator(ia: IntAccumulator.type): SpecificIterableFactory[Integer, IntAccumulator]","d":"scala.jdk.IntAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/IntAccumulator$$SerializationProxy.html#","e":false,"i":"","n":"SerializationProxy","t":"SerializationProxy[A](acc: IntAccumulator) extends Serializable","d":"scala.jdk.IntAccumulator","k":"class","x":""},
{"l":"api/scala/jdk/LongAccumulator.html#","e":false,"i":"","n":"LongAccumulator","t":"LongAccumulator extends Accumulator[Long, AnyAccumulator, LongAccumulator], SeqOps[Long, AnyAccumulator, LongAccumulator], Serializable","d":"scala.jdk","k":"class","x":"A specialized Accumulator that holds Longs without boxing, see Accumulator."},
{"l":"api/scala/jdk/LongAccumulator.html#addOne-fffff061","e":false,"i":"","n":"addOne","t":"addOne(a: Long): this.type","d":"scala.jdk.LongAccumulator","k":"def","x":"Appends an element to this LongAccumulator."},
{"l":"api/scala/jdk/LongAccumulator.html#apply-fffff788","e":false,"i":"","n":"apply","t":"apply(ix: Long): Long","d":"scala.jdk.LongAccumulator","k":"def","x":"Retrieves the ixth element."},
{"l":"api/scala/jdk/LongAccumulator.html#apply-fffff0ab","e":false,"i":"","n":"apply","t":"apply(i: Int): Long","d":"scala.jdk.LongAccumulator","k":"def","x":"Retrieves the ixth element, using an Int index."},
{"l":"api/scala/jdk/LongAccumulator.html#collect-fffff794","e":false,"i":"","n":"collect","t":"collect(pf: PartialFunction[Long, Long]): LongAccumulator","d":"scala.jdk.LongAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/LongAccumulator.html#countLong-995","e":false,"i":"","n":"countLong","t":"countLong(p: Long => Boolean): Long","d":"scala.jdk.LongAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/LongAccumulator.html#drain-131","e":false,"i":"","n":"drain","t":"drain(that: LongAccumulator): Unit","d":"scala.jdk.LongAccumulator","k":"def","x":"Removes all elements from that and appends them to this LongAccumulator."},
{"l":"api/scala/jdk/LongAccumulator.html#efficientStepper-190","e":false,"i":"","n":"efficientStepper","t":"efficientStepper[S <: Stepper[_]](implicit shape: StepperShape[Long, S]): S & EfficientSplit","d":"scala.jdk.LongAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/LongAccumulator.html#flatMap-fffff2b4","e":false,"i":"","n":"flatMap","t":"flatMap(f: Long => IterableOnce[Long]): LongAccumulator","d":"scala.jdk.LongAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/LongAccumulator.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[Long]","d":"scala.jdk.LongAccumulator","k":"def","x":"Returns an Iterator over the contents of this LongAccumulator. The Iterator is not specialized."},
{"l":"api/scala/jdk/LongAccumulator.html#map-fffff2b4","e":false,"i":"","n":"map","t":"map(f: Long => Long): LongAccumulator","d":"scala.jdk.LongAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/LongAccumulator.html#toArray-0","e":false,"i":"","n":"toArray","t":"toArray: Array[Long]","d":"scala.jdk.LongAccumulator","k":"def","x":"Copies the elements in this LongAccumulator into an Array[Long]"},
{"l":"api/scala/jdk/LongAccumulator.html#update-fffff6d4","e":false,"i":"","n":"update","t":"update(idx: Long, elem: Long): Unit","d":"scala.jdk.LongAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/LongAccumulator.html#update-37","e":false,"i":"","n":"update","t":"update(idx: Int, elem: Long): Unit","d":"scala.jdk.LongAccumulator","k":"def","x":"Replaces element at given index with a new value.\n"},
{"l":"api/scala/jdk/LongAccumulator$.html#","e":false,"i":"","n":"LongAccumulator","t":"LongAccumulator extends SpecificIterableFactory[Long, LongAccumulator]","d":"scala.jdk","k":"object","x":""},
{"l":"api/scala/jdk/LongAccumulator$.html#adder-0","e":false,"i":"","n":"adder","t":"adder: ObjLongConsumer[LongAccumulator]","d":"scala.jdk.LongAccumulator","k":"def","x":"A BiConsumer that adds an element to an LongAccumulator, suitable for use with java.util.stream.LongStream's collect method."},
{"l":"api/scala/jdk/LongAccumulator$.html#boxedAdder-0","e":false,"i":"","n":"boxedAdder","t":"boxedAdder: BiConsumer[LongAccumulator, Long]","d":"scala.jdk.LongAccumulator","k":"def","x":"A BiConsumer that adds a boxed Long to an LongAccumulator, suitable for use with java.util.stream.Stream's collect method."},
{"l":"api/scala/jdk/LongAccumulator$.html#merger-0","e":false,"i":"","n":"merger","t":"merger: BiConsumer[LongAccumulator, LongAccumulator]","d":"scala.jdk.LongAccumulator","k":"def","x":"A BiConsumer that merges LongAccumulators, suitable for use with java.util.stream.LongStream's collect method.  Suitable for Stream[Long] also."},
{"l":"api/scala/jdk/LongAccumulator$.html#supplier-0","e":false,"i":"","n":"supplier","t":"supplier: Supplier[LongAccumulator]","d":"scala.jdk.LongAccumulator","k":"def","x":"A Supplier of LongAccumulators, suitable for use with java.util.stream.LongStream's collect method.  Suitable for Stream[Long] also."},
{"l":"api/scala/jdk/LongAccumulator$.html#toJavaLongAccumulator-a7d","e":false,"i":"","n":"toJavaLongAccumulator","t":"toJavaLongAccumulator(ia: LongAccumulator.type): SpecificIterableFactory[Long, LongAccumulator]","d":"scala.jdk.LongAccumulator","k":"def","x":""},
{"l":"api/scala/jdk/LongAccumulator$$SerializationProxy.html#","e":false,"i":"","n":"SerializationProxy","t":"SerializationProxy[A](acc: LongAccumulator) extends Serializable","d":"scala.jdk.LongAccumulator","k":"class","x":""},
{"l":"api/scala/jdk/OptionConverters$.html#","e":false,"i":"","n":"OptionConverters","t":"OptionConverters","d":"scala.jdk","k":"object","x":"This object provides extension methods that convert between Scala Option and Java Optional\ntypes."},
{"l":"api/scala/jdk/OptionConverters$.html#RichOption-62b","e":false,"i":"","n":"RichOption","t":"RichOption[A](o: Option[A]): RichOption[A]","d":"scala.jdk.OptionConverters","k":"def","x":"Provides conversions from Scala Option to Java Optional types"},
{"l":"api/scala/jdk/OptionConverters$.html#RichOptional-df1","e":false,"i":"","n":"RichOptional","t":"RichOptional[A](o: Optional[A]): RichOptional[A]","d":"scala.jdk.OptionConverters","k":"def","x":"Provides conversions from Java Optional to Scala Option and specialized Optional types"},
{"l":"api/scala/jdk/OptionConverters$.html#RichOptionalDouble-722","e":false,"i":"","n":"RichOptionalDouble","t":"RichOptionalDouble(o: OptionalDouble): RichOptionalDouble","d":"scala.jdk.OptionConverters","k":"def","x":"Provides conversions from OptionalDouble to Scala Option and the generic Optional"},
{"l":"api/scala/jdk/OptionConverters$.html#RichOptionalInt-fffff360","e":false,"i":"","n":"RichOptionalInt","t":"RichOptionalInt(o: OptionalInt): RichOptionalInt","d":"scala.jdk.OptionConverters","k":"def","x":"Provides conversions from OptionalInt to Scala Option and the generic Optional"},
{"l":"api/scala/jdk/OptionConverters$.html#RichOptionalLong-a78","e":false,"i":"","n":"RichOptionalLong","t":"RichOptionalLong(o: OptionalLong): RichOptionalLong","d":"scala.jdk.OptionConverters","k":"def","x":"Provides conversions from OptionalLong to Scala Option and the generic Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOption.html#","e":false,"i":"","n":"RichOption","t":"RichOption[A](o: Option[A]) extends AnyVal","d":"scala.jdk.OptionConverters","k":"class","x":"Provides conversions from Scala Option to Java Optional types"},
{"l":"api/scala/jdk/OptionConverters$$RichOption.html#asJava-0","e":false,"i":"","n":"asJava","t":"asJava: Optional[A]","d":"scala.jdk.OptionConverters.RichOption","k":"def","x":"Convert a Scala Option to a generic Java Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOption.html#toJava-0","e":false,"i":"","n":"toJava","t":"toJava: Optional[A]","d":"scala.jdk.OptionConverters.RichOption","k":"def","x":"Convert a Scala Option to a generic Java Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOption.html#toJavaPrimitive-fffff169","e":false,"i":"","n":"toJavaPrimitive","t":"toJavaPrimitive[O](implicit shape: OptionShape[A, O]): O","d":"scala.jdk.OptionConverters.RichOption","k":"def","x":"Convert a Scala Option to a specialized Java Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOptional.html#","e":false,"i":"","n":"RichOptional","t":"RichOptional[A](o: Optional[A]) extends AnyVal","d":"scala.jdk.OptionConverters","k":"class","x":"Provides conversions from Java Optional to Scala Option and specialized Optional types"},
{"l":"api/scala/jdk/OptionConverters$$RichOptional.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Option[A]","d":"scala.jdk.OptionConverters.RichOptional","k":"def","x":"Convert a Java Optional to a Scala Option"},
{"l":"api/scala/jdk/OptionConverters$$RichOptional.html#toJavaPrimitive-fffff169","e":false,"i":"","n":"toJavaPrimitive","t":"toJavaPrimitive[O](implicit shape: OptionShape[A, O]): O","d":"scala.jdk.OptionConverters.RichOptional","k":"def","x":"Convert a generic Java Optional to a specialized variant"},
{"l":"api/scala/jdk/OptionConverters$$RichOptional.html#toScala-0","e":false,"i":"","n":"toScala","t":"toScala: Option[A]","d":"scala.jdk.OptionConverters.RichOptional","k":"def","x":"Convert a Java Optional to a Scala Option"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalDouble.html#","e":false,"i":"","n":"RichOptionalDouble","t":"RichOptionalDouble(o: OptionalDouble) extends AnyVal","d":"scala.jdk.OptionConverters","k":"class","x":"Provides conversions from OptionalDouble to Scala Option and the generic Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalDouble.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Option[Double]","d":"scala.jdk.OptionConverters.RichOptionalDouble","k":"def","x":"Convert a Java OptionalDouble to a Scala Option"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalDouble.html#toJavaGeneric-0","e":false,"i":"","n":"toJavaGeneric","t":"toJavaGeneric: Optional[Double]","d":"scala.jdk.OptionConverters.RichOptionalDouble","k":"def","x":"Convert a Java OptionalDouble to a generic Java Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalDouble.html#toScala-0","e":false,"i":"","n":"toScala","t":"toScala: Option[Double]","d":"scala.jdk.OptionConverters.RichOptionalDouble","k":"def","x":"Convert a Java OptionalDouble to a Scala Option"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalInt.html#","e":false,"i":"","n":"RichOptionalInt","t":"RichOptionalInt(o: OptionalInt) extends AnyVal","d":"scala.jdk.OptionConverters","k":"class","x":"Provides conversions from OptionalInt to Scala Option and the generic Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalInt.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Option[Int]","d":"scala.jdk.OptionConverters.RichOptionalInt","k":"def","x":"Convert a Java OptionalInt to a Scala Option"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalInt.html#toJavaGeneric-0","e":false,"i":"","n":"toJavaGeneric","t":"toJavaGeneric: Optional[Int]","d":"scala.jdk.OptionConverters.RichOptionalInt","k":"def","x":"Convert a Java OptionalInt to a generic Java Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalInt.html#toScala-0","e":false,"i":"","n":"toScala","t":"toScala: Option[Int]","d":"scala.jdk.OptionConverters.RichOptionalInt","k":"def","x":"Convert a Java OptionalInt to a Scala Option"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalLong.html#","e":false,"i":"","n":"RichOptionalLong","t":"RichOptionalLong(o: OptionalLong) extends AnyVal","d":"scala.jdk.OptionConverters","k":"class","x":"Provides conversions from OptionalLong to Scala Option and the generic Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalLong.html#asScala-0","e":false,"i":"","n":"asScala","t":"asScala: Option[Long]","d":"scala.jdk.OptionConverters.RichOptionalLong","k":"def","x":"Convert a Java OptionalLong to a Scala Option"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalLong.html#toJavaGeneric-0","e":false,"i":"","n":"toJavaGeneric","t":"toJavaGeneric: Optional[Long]","d":"scala.jdk.OptionConverters.RichOptionalLong","k":"def","x":"Convert a Java OptionalLong to a generic Java Optional"},
{"l":"api/scala/jdk/OptionConverters$$RichOptionalLong.html#toScala-0","e":false,"i":"","n":"toScala","t":"toScala: Option[Long]","d":"scala.jdk.OptionConverters.RichOptionalLong","k":"def","x":"Convert a Java OptionalLong to a Scala Option"},
{"l":"api/scala/jdk/OptionShape.html#","e":false,"i":"","n":"OptionShape","t":"OptionShape[A, O]","d":"scala.jdk","k":"class","x":"A type class implementing conversions from a generic Scala Option or Java Optional to\na specialized Java variant (for Double, Int and Long).\n"},
{"l":"api/scala/jdk/OptionShape.html#fromJava-fffffeb3","e":false,"i":"","n":"fromJava","t":"fromJava(o: Optional[A]): O","d":"scala.jdk.OptionShape","k":"def","x":"Converts from Optional to the specialized variant O"},
{"l":"api/scala/jdk/OptionShape.html#fromScala-5d0","e":false,"i":"","n":"fromScala","t":"fromScala(o: Option[A]): O","d":"scala.jdk.OptionShape","k":"def","x":"Converts from Option to the specialized variant O"},
{"l":"api/scala/jdk/OptionShape$.html#","e":false,"i":"","n":"OptionShape","t":"OptionShape","d":"scala.jdk","k":"object","x":""},
{"l":"api/scala/jdk/OptionShape$.html#doubleOptionShape-0","e":false,"i":"","n":"doubleOptionShape","t":"doubleOptionShape: OptionShape[Double, OptionalDouble]","d":"scala.jdk.OptionShape","k":"val","x":""},
{"l":"api/scala/jdk/OptionShape$.html#intOptionShape-0","e":false,"i":"","n":"intOptionShape","t":"intOptionShape: OptionShape[Int, OptionalInt]","d":"scala.jdk.OptionShape","k":"val","x":""},
{"l":"api/scala/jdk/OptionShape$.html#jDoubleOptionShape-0","e":false,"i":"","n":"jDoubleOptionShape","t":"jDoubleOptionShape: OptionShape[Double, OptionalDouble]","d":"scala.jdk.OptionShape","k":"val","x":""},
{"l":"api/scala/jdk/OptionShape$.html#jIntegerOptionShape-0","e":false,"i":"","n":"jIntegerOptionShape","t":"jIntegerOptionShape: OptionShape[Integer, OptionalInt]","d":"scala.jdk.OptionShape","k":"val","x":""},
{"l":"api/scala/jdk/OptionShape$.html#jLongOptionShape-0","e":false,"i":"","n":"jLongOptionShape","t":"jLongOptionShape: OptionShape[Long, OptionalLong]","d":"scala.jdk.OptionShape","k":"val","x":""},
{"l":"api/scala/jdk/OptionShape$.html#longOptionShape-0","e":false,"i":"","n":"longOptionShape","t":"longOptionShape: OptionShape[Long, OptionalLong]","d":"scala.jdk.OptionShape","k":"val","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#","e":false,"i":"","n":"Priority0FunctionExtensions","t":"Priority0FunctionExtensions extends Priority1FunctionExtensions","d":"scala.jdk","k":"trait","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaBooleanSupplier-e00","e":false,"i":"","n":"enrichAsJavaBooleanSupplier","t":"enrichAsJavaBooleanSupplier(sf: () => Boolean): RichFunction0AsBooleanSupplier","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaDoubleBinaryOperator-fffff372","e":false,"i":"","n":"enrichAsJavaDoubleBinaryOperator","t":"enrichAsJavaDoubleBinaryOperator[A0, A1](sf: (A0, A1) => Double)(implicit evA0: A0 =:= Double, evA1: A1 =:= Double): RichFunction2AsDoubleBinaryOperator","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaDoubleConsumer-239","e":false,"i":"","n":"enrichAsJavaDoubleConsumer","t":"enrichAsJavaDoubleConsumer[A0](sf: A0 => Unit)(implicit evA0: A0 =:= Double): RichFunction1AsDoubleConsumer","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaDoublePredicate-239","e":false,"i":"","n":"enrichAsJavaDoublePredicate","t":"enrichAsJavaDoublePredicate[A0](sf: A0 => Boolean)(implicit evA0: A0 =:= Double): RichFunction1AsDoublePredicate","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaDoubleSupplier-e00","e":false,"i":"","n":"enrichAsJavaDoubleSupplier","t":"enrichAsJavaDoubleSupplier(sf: () => Double): RichFunction0AsDoubleSupplier","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaDoubleToIntFunction-239","e":false,"i":"","n":"enrichAsJavaDoubleToIntFunction","t":"enrichAsJavaDoubleToIntFunction[A0](sf: A0 => Int)(implicit evA0: A0 =:= Double): RichFunction1AsDoubleToIntFunction","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaDoubleToLongFunction-239","e":false,"i":"","n":"enrichAsJavaDoubleToLongFunction","t":"enrichAsJavaDoubleToLongFunction[A0](sf: A0 => Long)(implicit evA0: A0 =:= Double): RichFunction1AsDoubleToLongFunction","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaDoubleUnaryOperator-239","e":false,"i":"","n":"enrichAsJavaDoubleUnaryOperator","t":"enrichAsJavaDoubleUnaryOperator[A0](sf: A0 => Double)(implicit evA0: A0 =:= Double): RichFunction1AsDoubleUnaryOperator","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaIntBinaryOperator-fffff372","e":false,"i":"","n":"enrichAsJavaIntBinaryOperator","t":"enrichAsJavaIntBinaryOperator[A0, A1](sf: (A0, A1) => Int)(implicit evA0: A0 =:= Int, evA1: A1 =:= Int): RichFunction2AsIntBinaryOperator","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaIntConsumer-239","e":false,"i":"","n":"enrichAsJavaIntConsumer","t":"enrichAsJavaIntConsumer[A0](sf: A0 => Unit)(implicit evA0: A0 =:= Int): RichFunction1AsIntConsumer","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaIntPredicate-239","e":false,"i":"","n":"enrichAsJavaIntPredicate","t":"enrichAsJavaIntPredicate[A0](sf: A0 => Boolean)(implicit evA0: A0 =:= Int): RichFunction1AsIntPredicate","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaIntSupplier-e00","e":false,"i":"","n":"enrichAsJavaIntSupplier","t":"enrichAsJavaIntSupplier(sf: () => Int): RichFunction0AsIntSupplier","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaIntToDoubleFunction-239","e":false,"i":"","n":"enrichAsJavaIntToDoubleFunction","t":"enrichAsJavaIntToDoubleFunction[A0](sf: A0 => Double)(implicit evA0: A0 =:= Int): RichFunction1AsIntToDoubleFunction","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaIntToLongFunction-239","e":false,"i":"","n":"enrichAsJavaIntToLongFunction","t":"enrichAsJavaIntToLongFunction[A0](sf: A0 => Long)(implicit evA0: A0 =:= Int): RichFunction1AsIntToLongFunction","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaIntUnaryOperator-239","e":false,"i":"","n":"enrichAsJavaIntUnaryOperator","t":"enrichAsJavaIntUnaryOperator[A0](sf: A0 => Int)(implicit evA0: A0 =:= Int): RichFunction1AsIntUnaryOperator","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaLongBinaryOperator-fffff372","e":false,"i":"","n":"enrichAsJavaLongBinaryOperator","t":"enrichAsJavaLongBinaryOperator[A0, A1](sf: (A0, A1) => Long)(implicit evA0: A0 =:= Long, evA1: A1 =:= Long): RichFunction2AsLongBinaryOperator","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaLongConsumer-239","e":false,"i":"","n":"enrichAsJavaLongConsumer","t":"enrichAsJavaLongConsumer[A0](sf: A0 => Unit)(implicit evA0: A0 =:= Long): RichFunction1AsLongConsumer","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaLongPredicate-239","e":false,"i":"","n":"enrichAsJavaLongPredicate","t":"enrichAsJavaLongPredicate[A0](sf: A0 => Boolean)(implicit evA0: A0 =:= Long): RichFunction1AsLongPredicate","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaLongSupplier-e00","e":false,"i":"","n":"enrichAsJavaLongSupplier","t":"enrichAsJavaLongSupplier(sf: () => Long): RichFunction0AsLongSupplier","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaLongToDoubleFunction-239","e":false,"i":"","n":"enrichAsJavaLongToDoubleFunction","t":"enrichAsJavaLongToDoubleFunction[A0](sf: A0 => Double)(implicit evA0: A0 =:= Long): RichFunction1AsLongToDoubleFunction","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaLongToIntFunction-239","e":false,"i":"","n":"enrichAsJavaLongToIntFunction","t":"enrichAsJavaLongToIntFunction[A0](sf: A0 => Int)(implicit evA0: A0 =:= Long): RichFunction1AsLongToIntFunction","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsJavaLongUnaryOperator-239","e":false,"i":"","n":"enrichAsJavaLongUnaryOperator","t":"enrichAsJavaLongUnaryOperator[A0](sf: A0 => Long)(implicit evA0: A0 =:= Long): RichFunction1AsLongUnaryOperator","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromBiConsumer-fffffe92","e":false,"i":"","n":"enrichAsScalaFromBiConsumer","t":"enrichAsScalaFromBiConsumer[T, U](jf: BiConsumer[T, U]): RichBiConsumerAsFunction2[T, U]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromBiFunction-fffffe93","e":false,"i":"","n":"enrichAsScalaFromBiFunction","t":"enrichAsScalaFromBiFunction[T, U, R](jf: BiFunction[T, U, R]): RichBiFunctionAsFunction2[T, U, R]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromBiPredicate-2e6","e":false,"i":"","n":"enrichAsScalaFromBiPredicate","t":"enrichAsScalaFromBiPredicate[T, U](jf: BiPredicate[T, U]): RichBiPredicateAsFunction2[T, U]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromBinaryOperator-ffffff51","e":false,"i":"","n":"enrichAsScalaFromBinaryOperator","t":"enrichAsScalaFromBinaryOperator[T](jf: BinaryOperator[T]): RichBinaryOperatorAsFunction2[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromBooleanSupplier-fffff37c","e":false,"i":"","n":"enrichAsScalaFromBooleanSupplier","t":"enrichAsScalaFromBooleanSupplier(jf: BooleanSupplier): RichBooleanSupplierAsFunction0","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromConsumer-1f1","e":false,"i":"","n":"enrichAsScalaFromConsumer","t":"enrichAsScalaFromConsumer[T](jf: Consumer[T]): RichConsumerAsFunction1[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromDoubleBinaryOperator-fffff280","e":false,"i":"","n":"enrichAsScalaFromDoubleBinaryOperator","t":"enrichAsScalaFromDoubleBinaryOperator(jf: DoubleBinaryOperator): RichDoubleBinaryOperatorAsFunction2","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromDoubleConsumer-fffffba0","e":false,"i":"","n":"enrichAsScalaFromDoubleConsumer","t":"enrichAsScalaFromDoubleConsumer(jf: DoubleConsumer): RichDoubleConsumerAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromDoubleFunction-fd1","e":false,"i":"","n":"enrichAsScalaFromDoubleFunction","t":"enrichAsScalaFromDoubleFunction[R](jf: DoubleFunction[R]): RichDoubleFunctionAsFunction1[R]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromDoublePredicate-ca0","e":false,"i":"","n":"enrichAsScalaFromDoublePredicate","t":"enrichAsScalaFromDoublePredicate(jf: DoublePredicate): RichDoublePredicateAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromDoubleSupplier-e60","e":false,"i":"","n":"enrichAsScalaFromDoubleSupplier","t":"enrichAsScalaFromDoubleSupplier(jf: DoubleSupplier): RichDoubleSupplierAsFunction0","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromDoubleToIntFunction-74a","e":false,"i":"","n":"enrichAsScalaFromDoubleToIntFunction","t":"enrichAsScalaFromDoubleToIntFunction(jf: DoubleToIntFunction): RichDoubleToIntFunctionAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromDoubleToLongFunction-340","e":false,"i":"","n":"enrichAsScalaFromDoubleToLongFunction","t":"enrichAsScalaFromDoubleToLongFunction(jf: DoubleToLongFunction): RichDoubleToLongFunctionAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromDoubleUnaryOperator-fffff918","e":false,"i":"","n":"enrichAsScalaFromDoubleUnaryOperator","t":"enrichAsScalaFromDoubleUnaryOperator(jf: DoubleUnaryOperator): RichDoubleUnaryOperatorAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromFunction-fffff9f2","e":false,"i":"","n":"enrichAsScalaFromFunction","t":"enrichAsScalaFromFunction[T, R](jf: Function[T, R]): RichFunctionAsFunction1[T, R]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromIntBinaryOperator-dfc","e":false,"i":"","n":"enrichAsScalaFromIntBinaryOperator","t":"enrichAsScalaFromIntBinaryOperator(jf: IntBinaryOperator): RichIntBinaryOperatorAsFunction2","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromIntConsumer-e9e","e":false,"i":"","n":"enrichAsScalaFromIntConsumer","t":"enrichAsScalaFromIntConsumer(jf: IntConsumer): RichIntConsumerAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromIntFunction-f93","e":false,"i":"","n":"enrichAsScalaFromIntFunction","t":"enrichAsScalaFromIntFunction[R](jf: IntFunction[R]): RichIntFunctionAsFunction1[R]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromIntPredicate-440","e":false,"i":"","n":"enrichAsScalaFromIntPredicate","t":"enrichAsScalaFromIntPredicate(jf: IntPredicate): RichIntPredicateAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromIntSupplier-fca","e":false,"i":"","n":"enrichAsScalaFromIntSupplier","t":"enrichAsScalaFromIntSupplier(jf: IntSupplier): RichIntSupplierAsFunction0","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromIntToDoubleFunction-fffff77a","e":false,"i":"","n":"enrichAsScalaFromIntToDoubleFunction","t":"enrichAsScalaFromIntToDoubleFunction(jf: IntToDoubleFunction): RichIntToDoubleFunctionAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromIntToLongFunction-a90","e":false,"i":"","n":"enrichAsScalaFromIntToLongFunction","t":"enrichAsScalaFromIntToLongFunction(jf: IntToLongFunction): RichIntToLongFunctionAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromIntUnaryOperator-fffff9c0","e":false,"i":"","n":"enrichAsScalaFromIntUnaryOperator","t":"enrichAsScalaFromIntUnaryOperator(jf: IntUnaryOperator): RichIntUnaryOperatorAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromLongBinaryOperator-fffff660","e":false,"i":"","n":"enrichAsScalaFromLongBinaryOperator","t":"enrichAsScalaFromLongBinaryOperator(jf: LongBinaryOperator): RichLongBinaryOperatorAsFunction2","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromLongConsumer-fffff300","e":false,"i":"","n":"enrichAsScalaFromLongConsumer","t":"enrichAsScalaFromLongConsumer(jf: LongConsumer): RichLongConsumerAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromLongFunction-fffff731","e":false,"i":"","n":"enrichAsScalaFromLongFunction","t":"enrichAsScalaFromLongFunction[R](jf: LongFunction[R]): RichLongFunctionAsFunction1[R]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromLongPredicate-d0a","e":false,"i":"","n":"enrichAsScalaFromLongPredicate","t":"enrichAsScalaFromLongPredicate(jf: LongPredicate): RichLongPredicateAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromLongSupplier-fffff840","e":false,"i":"","n":"enrichAsScalaFromLongSupplier","t":"enrichAsScalaFromLongSupplier(jf: LongSupplier): RichLongSupplierAsFunction0","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromLongToDoubleFunction-fffff340","e":false,"i":"","n":"enrichAsScalaFromLongToDoubleFunction","t":"enrichAsScalaFromLongToDoubleFunction(jf: LongToDoubleFunction): RichLongToDoubleFunctionAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromLongToIntFunction-fffff974","e":false,"i":"","n":"enrichAsScalaFromLongToIntFunction","t":"enrichAsScalaFromLongToIntFunction(jf: LongToIntFunction): RichLongToIntFunctionAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromLongUnaryOperator-102","e":false,"i":"","n":"enrichAsScalaFromLongUnaryOperator","t":"enrichAsScalaFromLongUnaryOperator(jf: LongUnaryOperator): RichLongUnaryOperatorAsFunction1","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromObjDoubleConsumer-c81","e":false,"i":"","n":"enrichAsScalaFromObjDoubleConsumer","t":"enrichAsScalaFromObjDoubleConsumer[T](jf: ObjDoubleConsumer[T]): RichObjDoubleConsumerAsFunction2[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromObjIntConsumer-c71","e":false,"i":"","n":"enrichAsScalaFromObjIntConsumer","t":"enrichAsScalaFromObjIntConsumer[T](jf: ObjIntConsumer[T]): RichObjIntConsumerAsFunction2[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromObjLongConsumer-fffff417","e":false,"i":"","n":"enrichAsScalaFromObjLongConsumer","t":"enrichAsScalaFromObjLongConsumer[T](jf: ObjLongConsumer[T]): RichObjLongConsumerAsFunction2[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromPredicate-ef3","e":false,"i":"","n":"enrichAsScalaFromPredicate","t":"enrichAsScalaFromPredicate[T](jf: Predicate[T]): RichPredicateAsFunction1[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromSupplier-c31","e":false,"i":"","n":"enrichAsScalaFromSupplier","t":"enrichAsScalaFromSupplier[T](jf: Supplier[T]): RichSupplierAsFunction0[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromToDoubleBiFunction-fffff252","e":false,"i":"","n":"enrichAsScalaFromToDoubleBiFunction","t":"enrichAsScalaFromToDoubleBiFunction[T, U](jf: ToDoubleBiFunction[T, U]): RichToDoubleBiFunctionAsFunction2[T, U]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromToDoubleFunction-fffffd31","e":false,"i":"","n":"enrichAsScalaFromToDoubleFunction","t":"enrichAsScalaFromToDoubleFunction[T](jf: ToDoubleFunction[T]): RichToDoubleFunctionAsFunction1[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromToIntBiFunction-e6c","e":false,"i":"","n":"enrichAsScalaFromToIntBiFunction","t":"enrichAsScalaFromToIntBiFunction[T, U](jf: ToIntBiFunction[T, U]): RichToIntBiFunctionAsFunction2[T, U]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromToIntFunction-fffff2dd","e":false,"i":"","n":"enrichAsScalaFromToIntFunction","t":"enrichAsScalaFromToIntFunction[T](jf: ToIntFunction[T]): RichToIntFunctionAsFunction1[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromToLongBiFunction-fffff732","e":false,"i":"","n":"enrichAsScalaFromToLongBiFunction","t":"enrichAsScalaFromToLongBiFunction[T, U](jf: ToLongBiFunction[T, U]): RichToLongBiFunctionAsFunction2[T, U]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromToLongFunction-91","e":false,"i":"","n":"enrichAsScalaFromToLongFunction","t":"enrichAsScalaFromToLongFunction[T](jf: ToLongFunction[T]): RichToLongFunctionAsFunction1[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority0FunctionExtensions.html#enrichAsScalaFromUnaryOperator-fffff5eb","e":false,"i":"","n":"enrichAsScalaFromUnaryOperator","t":"enrichAsScalaFromUnaryOperator[T](jf: UnaryOperator[T]): RichUnaryOperatorAsFunction1[T]","d":"scala.jdk.Priority0FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#","e":false,"i":"","n":"Priority1FunctionExtensions","t":"Priority1FunctionExtensions extends Priority2FunctionExtensions","d":"scala.jdk","k":"trait","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaBinaryOperator-fffffd73","e":false,"i":"","n":"enrichAsJavaBinaryOperator","t":"enrichAsJavaBinaryOperator[T, A1, A2](sf: (T, A1) => A2)(implicit evA1: A1 =:= T, evA2: A2 =:= T): RichFunction2AsBinaryOperator[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaConsumer-51","e":false,"i":"","n":"enrichAsJavaConsumer","t":"enrichAsJavaConsumer[T](sf: T => Unit): RichFunction1AsConsumer[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaDoubleFunction-fffff318","e":false,"i":"","n":"enrichAsJavaDoubleFunction","t":"enrichAsJavaDoubleFunction[A0, R](sf: A0 => R)(implicit evA0: A0 =:= Double): RichFunction1AsDoubleFunction[R]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaIntFunction-fffff318","e":false,"i":"","n":"enrichAsJavaIntFunction","t":"enrichAsJavaIntFunction[A0, R](sf: A0 => R)(implicit evA0: A0 =:= Int): RichFunction1AsIntFunction[R]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaLongFunction-fffff318","e":false,"i":"","n":"enrichAsJavaLongFunction","t":"enrichAsJavaLongFunction[A0, R](sf: A0 => R)(implicit evA0: A0 =:= Long): RichFunction1AsLongFunction[R]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaObjDoubleConsumer-1a","e":false,"i":"","n":"enrichAsJavaObjDoubleConsumer","t":"enrichAsJavaObjDoubleConsumer[T, A1](sf: (T, A1) => Unit)(implicit evA1: A1 =:= Double): RichFunction2AsObjDoubleConsumer[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaObjIntConsumer-1a","e":false,"i":"","n":"enrichAsJavaObjIntConsumer","t":"enrichAsJavaObjIntConsumer[T, A1](sf: (T, A1) => Unit)(implicit evA1: A1 =:= Int): RichFunction2AsObjIntConsumer[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaObjLongConsumer-1a","e":false,"i":"","n":"enrichAsJavaObjLongConsumer","t":"enrichAsJavaObjLongConsumer[T, A1](sf: (T, A1) => Unit)(implicit evA1: A1 =:= Long): RichFunction2AsObjLongConsumer[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaPredicate-51","e":false,"i":"","n":"enrichAsJavaPredicate","t":"enrichAsJavaPredicate[T](sf: T => Boolean): RichFunction1AsPredicate[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaSupplier-271","e":false,"i":"","n":"enrichAsJavaSupplier","t":"enrichAsJavaSupplier[T](sf: () => T): RichFunction0AsSupplier[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaToDoubleFunction-51","e":false,"i":"","n":"enrichAsJavaToDoubleFunction","t":"enrichAsJavaToDoubleFunction[T](sf: T => Double): RichFunction1AsToDoubleFunction[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaToIntFunction-51","e":false,"i":"","n":"enrichAsJavaToIntFunction","t":"enrichAsJavaToIntFunction[T](sf: T => Int): RichFunction1AsToIntFunction[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaToLongFunction-51","e":false,"i":"","n":"enrichAsJavaToLongFunction","t":"enrichAsJavaToLongFunction[T](sf: T => Long): RichFunction1AsToLongFunction[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority1FunctionExtensions.html#enrichAsJavaUnaryOperator-fffff318","e":false,"i":"","n":"enrichAsJavaUnaryOperator","t":"enrichAsJavaUnaryOperator[T, A1](sf: T => A1)(implicit evA1: A1 =:= T): RichFunction1AsUnaryOperator[T]","d":"scala.jdk.Priority1FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority2FunctionExtensions.html#","e":false,"i":"","n":"Priority2FunctionExtensions","t":"Priority2FunctionExtensions extends Priority3FunctionExtensions","d":"scala.jdk","k":"trait","x":""},
{"l":"api/scala/jdk/Priority2FunctionExtensions.html#enrichAsJavaBiConsumer-672","e":false,"i":"","n":"enrichAsJavaBiConsumer","t":"enrichAsJavaBiConsumer[T, U](sf: (T, U) => Unit): RichFunction2AsBiConsumer[T, U]","d":"scala.jdk.Priority2FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority2FunctionExtensions.html#enrichAsJavaBiPredicate-672","e":false,"i":"","n":"enrichAsJavaBiPredicate","t":"enrichAsJavaBiPredicate[T, U](sf: (T, U) => Boolean): RichFunction2AsBiPredicate[T, U]","d":"scala.jdk.Priority2FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority2FunctionExtensions.html#enrichAsJavaFunction-892","e":false,"i":"","n":"enrichAsJavaFunction","t":"enrichAsJavaFunction[T, R](sf: T => R): RichFunction1AsFunction[T, R]","d":"scala.jdk.Priority2FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority2FunctionExtensions.html#enrichAsJavaToDoubleBiFunction-672","e":false,"i":"","n":"enrichAsJavaToDoubleBiFunction","t":"enrichAsJavaToDoubleBiFunction[T, U](sf: (T, U) => Double): RichFunction2AsToDoubleBiFunction[T, U]","d":"scala.jdk.Priority2FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority2FunctionExtensions.html#enrichAsJavaToIntBiFunction-672","e":false,"i":"","n":"enrichAsJavaToIntBiFunction","t":"enrichAsJavaToIntBiFunction[T, U](sf: (T, U) => Int): RichFunction2AsToIntBiFunction[T, U]","d":"scala.jdk.Priority2FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority2FunctionExtensions.html#enrichAsJavaToLongBiFunction-672","e":false,"i":"","n":"enrichAsJavaToLongBiFunction","t":"enrichAsJavaToLongBiFunction[T, U](sf: (T, U) => Long): RichFunction2AsToLongBiFunction[T, U]","d":"scala.jdk.Priority2FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/Priority3FunctionExtensions.html#","e":false,"i":"","n":"Priority3FunctionExtensions","t":"Priority3FunctionExtensions","d":"scala.jdk","k":"trait","x":""},
{"l":"api/scala/jdk/Priority3FunctionExtensions.html#enrichAsJavaBiFunction-eb3","e":false,"i":"","n":"enrichAsJavaBiFunction","t":"enrichAsJavaBiFunction[T, U, R](sf: (T, U) => R): RichFunction2AsBiFunction[T, U, R]","d":"scala.jdk.Priority3FunctionExtensions","k":"def","x":""},
{"l":"api/scala/jdk/StreamConverters$.html#","e":false,"i":"","n":"StreamConverters","t":"StreamConverters extends StreamExtensions","d":"scala.jdk","k":"object","x":"This object provides extension methods to create Java Streams that\noperate on Scala collections (sequentially or in parallel). For more information on Java\nstreams, consult the documentation\n(https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html)."},
{"l":"api/scala/math.html#","e":false,"i":"","n":"scala.math","t":"scala.math","d":"","k":"package","x":"The package object scala.math contains methods for performing basic\nnumeric operations such as elementary exponential, logarithmic, root and\ntrigonometric functions."},
{"l":"api/scala/math.html#E-0","e":false,"i":"","n":"E","t":"E: 2.718281828459045d","d":"scala.math","k":"val","x":"The Double value that is closer than any other to e, the base of\nthe natural logarithms."},
{"l":"api/scala/math.html#IEEEremainder-44b","e":false,"i":"","n":"IEEEremainder","t":"IEEEremainder(x: Double, y: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#Pi-0","e":false,"i":"","n":"Pi","t":"Pi: 3.141592653589793d","d":"scala.math","k":"val","x":"The Double value that is closer than any other to pi, the ratio of\nthe circumference of a circle to its diameter."},
{"l":"api/scala/math.html#abs-fffffbe0","e":false,"i":"","n":"abs","t":"abs(x: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#abs-fffff788","e":false,"i":"","n":"abs","t":"abs(x: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#abs-fffffb80","e":false,"i":"","n":"abs","t":"abs(x: Float): Float","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#abs-5b2","e":false,"i":"","n":"abs","t":"abs(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#acos-5b2","e":false,"i":"","n":"acos","t":"acos(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#addExact-f47","e":false,"i":"","n":"addExact","t":"addExact(x: Int, y: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#addExact-fffff3cc","e":false,"i":"","n":"addExact","t":"addExact(x: Long, y: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#asin-5b2","e":false,"i":"","n":"asin","t":"asin(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#atan-5b2","e":false,"i":"","n":"atan","t":"atan(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#atan2-44b","e":false,"i":"","n":"atan2","t":"atan2(y: Double, x: Double): Double","d":"scala.math","k":"def","x":"Converts rectangular coordinates (x, y) to polar (r, theta).\n"},
{"l":"api/scala/math.html#cbrt-5b2","e":false,"i":"","n":"cbrt","t":"cbrt(x: Double): Double","d":"scala.math","k":"def","x":"Returns the cube root of the given Double value.\n"},
{"l":"api/scala/math.html#ceil-5b2","e":false,"i":"","n":"ceil","t":"ceil(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#copySign-44b","e":false,"i":"","n":"copySign","t":"copySign(magnitude: Double, sign: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#copySign-14","e":false,"i":"","n":"copySign","t":"copySign(magnitude: Float, sign: Float): Float","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#cos-5b2","e":false,"i":"","n":"cos","t":"cos(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#cosh-5b2","e":false,"i":"","n":"cosh","t":"cosh(x: Double): Double","d":"scala.math","k":"def","x":"Returns the hyperbolic cosine of the given Double value."},
{"l":"api/scala/math.html#decrementExact-fffffbe0","e":false,"i":"","n":"decrementExact","t":"decrementExact(x: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#decrementExact-fffff788","e":false,"i":"","n":"decrementExact","t":"decrementExact(x: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#exp-5b2","e":false,"i":"","n":"exp","t":"exp(x: Double): Double","d":"scala.math","k":"def","x":"Returns Euler's number e raised to the power of a Double value.\n"},
{"l":"api/scala/math.html#expm1-5b2","e":false,"i":"","n":"expm1","t":"expm1(x: Double): Double","d":"scala.math","k":"def","x":"Returns exp(x) - 1."},
{"l":"api/scala/math.html#floor-5b2","e":false,"i":"","n":"floor","t":"floor(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#floorDiv-f47","e":false,"i":"","n":"floorDiv","t":"floorDiv(x: Int, y: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#floorDiv-fffff3cc","e":false,"i":"","n":"floorDiv","t":"floorDiv(x: Long, y: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#floorMod-f47","e":false,"i":"","n":"floorMod","t":"floorMod(x: Int, y: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#floorMod-fffff3cc","e":false,"i":"","n":"floorMod","t":"floorMod(x: Long, y: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#getExponent-a13","e":false,"i":"","n":"getExponent","t":"getExponent(f: Float): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#getExponent-fffff1ae","e":false,"i":"","n":"getExponent","t":"getExponent(d: Double): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#hypot-44b","e":false,"i":"","n":"hypot","t":"hypot(x: Double, y: Double): Double","d":"scala.math","k":"def","x":"Returns the square root of the sum of the squares of both given Double\nvalues without intermediate underflow or overflow."},
{"l":"api/scala/math.html#incrementExact-fffffbe0","e":false,"i":"","n":"incrementExact","t":"incrementExact(x: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#incrementExact-fffff788","e":false,"i":"","n":"incrementExact","t":"incrementExact(x: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#log-5b2","e":false,"i":"","n":"log","t":"log(x: Double): Double","d":"scala.math","k":"def","x":"Returns the natural logarithm of a Double value.\n"},
{"l":"api/scala/math.html#log10-5b2","e":false,"i":"","n":"log10","t":"log10(x: Double): Double","d":"scala.math","k":"def","x":"Returns the base 10 logarithm of the given Double value."},
{"l":"api/scala/math.html#log1p-5b2","e":false,"i":"","n":"log1p","t":"log1p(x: Double): Double","d":"scala.math","k":"def","x":"Returns the natural logarithm of the sum of the given Double value and 1."},
{"l":"api/scala/math.html#max-f47","e":false,"i":"","n":"max","t":"max(x: Int, y: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#max-fffff3cc","e":false,"i":"","n":"max","t":"max(x: Long, y: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#max-14","e":false,"i":"","n":"max","t":"max(x: Float, y: Float): Float","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#max-44b","e":false,"i":"","n":"max","t":"max(x: Double, y: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#min-f47","e":false,"i":"","n":"min","t":"min(x: Int, y: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#min-fffff3cc","e":false,"i":"","n":"min","t":"min(x: Long, y: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#min-14","e":false,"i":"","n":"min","t":"min(x: Float, y: Float): Float","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#min-44b","e":false,"i":"","n":"min","t":"min(x: Double, y: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#multiplyExact-f47","e":false,"i":"","n":"multiplyExact","t":"multiplyExact(x: Int, y: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#multiplyExact-fffff3cc","e":false,"i":"","n":"multiplyExact","t":"multiplyExact(x: Long, y: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#negateExact-fffffbe0","e":false,"i":"","n":"negateExact","t":"negateExact(x: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#negateExact-fffff788","e":false,"i":"","n":"negateExact","t":"negateExact(x: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#nextAfter-44b","e":false,"i":"","n":"nextAfter","t":"nextAfter(start: Double, direction: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#nextAfter-fffff647","e":false,"i":"","n":"nextAfter","t":"nextAfter(start: Float, direction: Double): Float","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#nextDown-5b2","e":false,"i":"","n":"nextDown","t":"nextDown(d: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#nextDown-fffffb80","e":false,"i":"","n":"nextDown","t":"nextDown(f: Float): Float","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#nextUp-5b2","e":false,"i":"","n":"nextUp","t":"nextUp(d: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#nextUp-fffffb80","e":false,"i":"","n":"nextUp","t":"nextUp(f: Float): Float","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#pow-44b","e":false,"i":"","n":"pow","t":"pow(x: Double, y: Double): Double","d":"scala.math","k":"def","x":"Returns the value of the first argument raised to the power of the\nsecond argument.\n"},
{"l":"api/scala/math.html#random-999","e":false,"i":"","n":"random","t":"random(): Double","d":"scala.math","k":"def","x":"Returns a Double value with a positive sign, greater than or equal\nto 0.0 and less than 1.0.\n"},
{"l":"api/scala/math.html#rint-5b2","e":false,"i":"","n":"rint","t":"rint(x: Double): Double","d":"scala.math","k":"def","x":"Returns the Double value that is closest in value to the\nargument and is equal to a mathematical integer.\n"},
{"l":"api/scala/math.html#round-fffff788","e":false,"i":"","n":"round","t":"round(x: Long): Long","d":"scala.math","k":"def","x":"There is no reason to round a Long, but this method prevents unintended conversion to Float followed by rounding to Int.\n"},
{"l":"api/scala/math.html#round-a13","e":false,"i":"","n":"round","t":"round(x: Float): Int","d":"scala.math","k":"def","x":"Returns the closest Int to the argument.\n"},
{"l":"api/scala/math.html#round-fffff49d","e":false,"i":"","n":"round","t":"round(x: Double): Long","d":"scala.math","k":"def","x":"Returns the closest Long to the argument.\n"},
{"l":"api/scala/math.html#scalb-647","e":false,"i":"","n":"scalb","t":"scalb(d: Double, scaleFactor: Int): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#scalb-7a1","e":false,"i":"","n":"scalb","t":"scalb(f: Float, scaleFactor: Int): Float","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#signum-fffffbe0","e":false,"i":"","n":"signum","t":"signum(x: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#signum-fffff788","e":false,"i":"","n":"signum","t":"signum(x: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#signum-fffffb80","e":false,"i":"","n":"signum","t":"signum(x: Float): Float","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#signum-5b2","e":false,"i":"","n":"signum","t":"signum(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#sin-5b2","e":false,"i":"","n":"sin","t":"sin(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#sinh-5b2","e":false,"i":"","n":"sinh","t":"sinh(x: Double): Double","d":"scala.math","k":"def","x":"Returns the hyperbolic sine of the given Double value."},
{"l":"api/scala/math.html#sqrt-5b2","e":false,"i":"","n":"sqrt","t":"sqrt(x: Double): Double","d":"scala.math","k":"def","x":"Returns the square root of a Double value.\n"},
{"l":"api/scala/math.html#subtractExact-f47","e":false,"i":"","n":"subtractExact","t":"subtractExact(x: Int, y: Int): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#subtractExact-fffff3cc","e":false,"i":"","n":"subtractExact","t":"subtractExact(x: Long, y: Long): Long","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#tan-5b2","e":false,"i":"","n":"tan","t":"tan(x: Double): Double","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#tanh-5b2","e":false,"i":"","n":"tanh","t":"tanh(x: Double): Double","d":"scala.math","k":"def","x":"Returns the hyperbolic tangent of the given Double value."},
{"l":"api/scala/math.html#toDegrees-5b2","e":false,"i":"","n":"toDegrees","t":"toDegrees(x: Double): Double","d":"scala.math","k":"def","x":"Converts an angle measured in radians to an approximately equivalent\nangle measured in degrees.\n"},
{"l":"api/scala/math.html#toIntExact-fffff563","e":false,"i":"","n":"toIntExact","t":"toIntExact(x: Long): Int","d":"scala.math","k":"def","x":""},
{"l":"api/scala/math.html#toRadians-5b2","e":false,"i":"","n":"toRadians","t":"toRadians(x: Double): Double","d":"scala.math","k":"def","x":"Converts an angle measured in degrees to an approximately equivalent\nangle measured in radians.\n"},
{"l":"api/scala/math.html#ulp-5b2","e":false,"i":"","n":"ulp","t":"ulp(x: Double): Double","d":"scala.math","k":"def","x":"Returns the size of an ulp of the given Double value."},
{"l":"api/scala/math.html#ulp-fffffb80","e":false,"i":"","n":"ulp","t":"ulp(x: Float): Float","d":"scala.math","k":"def","x":"Returns the size of an ulp of the given Float value."},
{"l":"api/scala/math/BigDecimal$.html#","e":false,"i":"","n":"BigDecimal","t":"BigDecimal","d":"scala.math","k":"object","x":""},
{"l":"api/scala/math/BigDecimal$.html#apply-788","e":false,"i":"","n":"apply","t":"apply(i: Int): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose value is equal to that of the\nspecified Integer value.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-f09","e":false,"i":"","n":"apply","t":"apply(i: Int, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose value is equal to that of the\nspecified Integer value, rounding if necessary.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-fffff48b","e":false,"i":"","n":"apply","t":"apply(l: Long): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose value is equal to that of the\nspecified long value.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-fffff1e6","e":false,"i":"","n":"apply","t":"apply(l: Long, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose value is equal to that of the\nspecified long value, but rounded if necessary.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-ecc","e":false,"i":"","n":"apply","t":"apply(unscaledVal: Long, scale: Int): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose unscaled value is equal to that\nof the specified long value.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-a45","e":false,"i":"","n":"apply","t":"apply(unscaledVal: Long, scale: Int, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose unscaled value is equal to that\nof the specified long value, but rounded if necessary.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-fffff856","e":false,"i":"","n":"apply","t":"apply(d: Double): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose value is equal to that of the\nspecified double value.  Equivalent to BigDecimal.decimal.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-afb","e":false,"i":"","n":"apply","t":"apply(d: Double, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose value is equal to that of the\nspecified double value, but rounded if necessary.  Equivalent to\nBigDecimal.decimal.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-fffff94f","e":false,"i":"","n":"apply","t":"apply(x: Array[Char]): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Translates a character array representation of a BigDecimal\ninto a BigDecimal.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-ffffffa2","e":false,"i":"","n":"apply","t":"apply(x: Array[Char], mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Translates a character array representation of a BigDecimal\ninto a BigDecimal, rounding if necessary.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-fffff30a","e":false,"i":"","n":"apply","t":"apply(x: String): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Translates the decimal String representation of a BigDecimal\ninto a BigDecimal.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-8c7","e":false,"i":"","n":"apply","t":"apply(x: String, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Translates the decimal String representation of a BigDecimal\ninto a BigDecimal, rounding if necessary.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-fffff282","e":false,"i":"","n":"apply","t":"apply(x: BigInt): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose value is equal to that of the\nspecified BigInt value.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-44f","e":false,"i":"","n":"apply","t":"apply(x: BigInt, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose value is equal to that of the\nspecified BigInt value, rounding if necessary.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-6b5","e":false,"i":"","n":"apply","t":"apply(unscaledVal: BigInt, scale: Int): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose unscaled value is equal to that\nof the specified BigInt value.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-dfc","e":false,"i":"","n":"apply","t":"apply(unscaledVal: BigInt, scale: Int, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal whose unscaled value is equal to that\nof the specified BigInt value.\n"},
{"l":"api/scala/math/BigDecimal$.html#apply-4","e":false,"i":"","n":"apply","t":"apply(bd: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal from a java.math.BigDecimal."},
{"l":"api/scala/math/BigDecimal$.html#binary-afb","e":false,"i":"","n":"binary","t":"binary(d: Double, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal by expanding the binary fraction\ncontained by Double value d into a decimal representation,\nrounding if necessary.  When a Float is converted to a\nDouble, the binary fraction is preserved, so this method\nalso works for converted Floats.\n"},
{"l":"api/scala/math/BigDecimal$.html#binary-fffff856","e":false,"i":"","n":"binary","t":"binary(d: Double): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal by expanding the binary fraction\ncontained by Double value d into a decimal representation.\nNote: this also works correctly on converted Floats.\n"},
{"l":"api/scala/math/BigDecimal$.html#decimal-afb","e":false,"i":"","n":"decimal","t":"decimal(d: Double, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal using the decimal text representation of Double value d, rounding if necessary."},
{"l":"api/scala/math/BigDecimal$.html#decimal-fffff856","e":false,"i":"","n":"decimal","t":"decimal(d: Double): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal using the decimal text representation of Double value d."},
{"l":"api/scala/math/BigDecimal$.html#decimal-fffff336","e":false,"i":"","n":"decimal","t":"decimal(f: Float, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal using the decimal text representation of Float value f, rounding if necessary.\nNote that BigDecimal.decimal(0.1f) != 0.1f since equality agrees with the Double representation, and\n0.1 != 0.1f.\n"},
{"l":"api/scala/math/BigDecimal$.html#decimal-13b","e":false,"i":"","n":"decimal","t":"decimal(f: Float): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal using the decimal text representation of Float value f.\nNote that BigDecimal.decimal(0.1f) != 0.1f since equality agrees with the Double representation, and\n0.1 != 0.1f.\n"},
{"l":"api/scala/math/BigDecimal$.html#decimal-fffff1e6","e":false,"i":"","n":"decimal","t":"decimal(l: Long, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal from a Long, rounding if necessary.  This is identical to BigDecimal(l, mc)."},
{"l":"api/scala/math/BigDecimal$.html#decimal-fffff48b","e":false,"i":"","n":"decimal","t":"decimal(l: Long): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal from a Long.  This is identical to BigDecimal(l)."},
{"l":"api/scala/math/BigDecimal$.html#decimal-fffffc0d","e":false,"i":"","n":"decimal","t":"decimal(bd: BigDecimal, mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal using a java.math.BigDecimal, rounding if necessary."},
{"l":"api/scala/math/BigDecimal$.html#defaultMathContext-0","e":false,"i":"","n":"defaultMathContext","t":"defaultMathContext: MathContext","d":"scala.math.BigDecimal","k":"val","x":""},
{"l":"api/scala/math/BigDecimal$.html#double2bigDecimal-fffff856","e":false,"i":"","n":"double2bigDecimal","t":"double2bigDecimal(d: Double): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Implicit conversion from Double to BigDecimal."},
{"l":"api/scala/math/BigDecimal$.html#exact-4","e":false,"i":"","n":"exact","t":"exact(repr: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal from a java.math.BigDecimal.  The\nprecision is the default for BigDecimal or enough to represent\nthe java.math.BigDecimal exactly, whichever is greater.\n"},
{"l":"api/scala/math/BigDecimal$.html#exact-fffff856","e":false,"i":"","n":"exact","t":"exact(d: Double): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal by fully expanding the binary fraction\ncontained by Double value d, adjusting the precision as\nnecessary.  Note: this works correctly on converted Floats also.\n"},
{"l":"api/scala/math/BigDecimal$.html#exact-fffff282","e":false,"i":"","n":"exact","t":"exact(bi: BigInt): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal that exactly represents a BigInt.\n"},
{"l":"api/scala/math/BigDecimal$.html#exact-fffff48b","e":false,"i":"","n":"exact","t":"exact(l: Long): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal that exactly represents a Long.  Note that\nall creation methods for BigDecimal that do not take a MathContext\nrepresent a Long; this is equivalent to apply, valueOf, etc..\n"},
{"l":"api/scala/math/BigDecimal$.html#exact-fffff30a","e":false,"i":"","n":"exact","t":"exact(s: String): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal that exactly represents the number\nspecified in a String.\n"},
{"l":"api/scala/math/BigDecimal$.html#exact-fffff94f","e":false,"i":"","n":"exact","t":"exact(cs: Array[Char]): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal that exactly represents the number\nspecified in base 10 in a character array.\n"},
{"l":"api/scala/math/BigDecimal$.html#int2bigDecimal-788","e":false,"i":"","n":"int2bigDecimal","t":"int2bigDecimal(i: Int): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Implicit conversion from Int to BigDecimal."},
{"l":"api/scala/math/BigDecimal$.html#javaBigDecimal2bigDecimal-4","e":false,"i":"","n":"javaBigDecimal2bigDecimal","t":"javaBigDecimal2bigDecimal(x: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Implicit conversion from java.math.BigDecimal to scala.BigDecimal."},
{"l":"api/scala/math/BigDecimal$.html#long2bigDecimal-fffff48b","e":false,"i":"","n":"long2bigDecimal","t":"long2bigDecimal(l: Long): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Implicit conversion from Long to BigDecimal."},
{"l":"api/scala/math/BigDecimal$.html#valueOf-fffff856","e":false,"i":"","n":"valueOf","t":"valueOf(d: Double): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal using the java BigDecimal static\nvalueOf constructor.  Equivalent to BigDecimal.decimal.\n"},
{"l":"api/scala/math/BigDecimal$.html#valueOf-fffff48b","e":false,"i":"","n":"valueOf","t":"valueOf(x: Long): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Constructs a BigDecimal using the java BigDecimal static\nvalueOf constructor.\n"},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#","e":false,"i":"","n":"RoundingMode","t":"RoundingMode extends Enumeration","d":"scala.math.BigDecimal","k":"object","x":""},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#CEILING-0","e":false,"i":"","n":"CEILING","t":"CEILING: Value","d":"scala.math.BigDecimal.RoundingMode","k":"val","x":""},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#DOWN-0","e":false,"i":"","n":"DOWN","t":"DOWN: Value","d":"scala.math.BigDecimal.RoundingMode","k":"val","x":""},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#FLOOR-0","e":false,"i":"","n":"FLOOR","t":"FLOOR: Value","d":"scala.math.BigDecimal.RoundingMode","k":"val","x":""},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#HALF_DOWN-0","e":false,"i":"","n":"HALF_DOWN","t":"HALF_DOWN: Value","d":"scala.math.BigDecimal.RoundingMode","k":"val","x":""},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#HALF_EVEN-0","e":false,"i":"","n":"HALF_EVEN","t":"HALF_EVEN: Value","d":"scala.math.BigDecimal.RoundingMode","k":"val","x":""},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#HALF_UP-0","e":false,"i":"","n":"HALF_UP","t":"HALF_UP: Value","d":"scala.math.BigDecimal.RoundingMode","k":"val","x":""},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#RoundingMode-0","e":false,"i":"","n":"RoundingMode","t":"RoundingMode = Value","d":"scala.math.BigDecimal.RoundingMode","k":"type","x":""},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#UNNECESSARY-0","e":false,"i":"","n":"UNNECESSARY","t":"UNNECESSARY: Value","d":"scala.math.BigDecimal.RoundingMode","k":"val","x":""},
{"l":"api/scala/math/BigDecimal$$RoundingMode$.html#UP-0","e":false,"i":"","n":"UP","t":"UP: Value","d":"scala.math.BigDecimal.RoundingMode","k":"val","x":""},
{"l":"api/scala/math/BigDecimal.html#","e":false,"i":"","n":"BigDecimal","t":"BigDecimal(val bigDecimal: BigDecimal, val mc: MathContext) extends ScalaNumber, ScalaNumericConversions, Serializable, Ordered[BigDecimal]","d":"scala.math","k":"class","x":"BigDecimal represents decimal floating-point numbers of arbitrary precision.\nBy default, the precision approximately matches that of IEEE 128-bit floating\npoint numbers (34 decimal digits, HALF_EVEN rounding mode).  Within the range\nof IEEE binary128 numbers, BigDecimal will agree with BigInt for both\nequality and hash codes (and will agree with primitive types as well).  Beyond\nthat range--numbers with more than 4934 digits when written out in full--the\nhashCode of BigInt and BigDecimal is allowed to diverge due to difficulty\nin efficiently computing both the decimal representation in BigDecimal and the\nbinary representation in BigInt."},
{"l":"api/scala/math/BigDecimal.html#%-fffff760","e":false,"i":"","n":"%","t":"%(that: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Remainder after dividing this by that.\n"},
{"l":"api/scala/math/BigDecimal.html#*-fffff760","e":false,"i":"","n":"*","t":"*(that: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Multiplication of BigDecimals\n"},
{"l":"api/scala/math/BigDecimal.html#+-fffff760","e":false,"i":"","n":"+","t":"+(that: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Addition of BigDecimals\n"},
{"l":"api/scala/math/BigDecimal.html#--fffff760","e":false,"i":"","n":"-","t":"-(that: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Subtraction of BigDecimals\n"},
{"l":"api/scala/math/BigDecimal.html#/-fffff760","e":false,"i":"","n":"/","t":"/(that: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Division of BigDecimals\n"},
{"l":"api/scala/math/BigDecimal.html#/%-901","e":false,"i":"","n":"/%","t":"/%(that: BigDecimal): (BigDecimal, BigDecimal)","d":"scala.math.BigDecimal","k":"def","x":"Division and Remainder - returns tuple containing the result of\ndivideToIntegralValue and the remainder.  The computation is exact: no rounding is applied.\n"},
{"l":"api/scala/math/BigDecimal.html#abs-0","e":false,"i":"","n":"abs","t":"abs: BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns the absolute value of this BigDecimal\n"},
{"l":"api/scala/math/BigDecimal.html#apply-fffff0a2","e":false,"i":"","n":"apply","t":"apply(mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns a new BigDecimal based on the supplied MathContext, rounded as needed.\n"},
{"l":"api/scala/math/BigDecimal.html#bigDecimal-0","e":false,"i":"","n":"bigDecimal","t":"bigDecimal: BigDecimal","d":"scala.math.BigDecimal","k":"val","x":""},
{"l":"api/scala/math/BigDecimal.html#charValue-0","e":false,"i":"","n":"charValue","t":"charValue: Char","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a Char.\nIf the BigDecimal is too big to fit in a Char, only the low-order 16 bits are returned.\nNote that this conversion can lose information about the overall magnitude of the\nBigDecimal value and that it always returns a positive result.\n"},
{"l":"api/scala/math/BigDecimal.html#compare-fb8","e":false,"i":"","n":"compare","t":"compare(that: BigDecimal): Int","d":"scala.math.BigDecimal","k":"def","x":"Compares this BigDecimal with the specified BigDecimal\n"},
{"l":"api/scala/math/BigDecimal.html#doubleValue-0","e":false,"i":"","n":"doubleValue","t":"doubleValue: Double","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a Double.\nif this BigDecimal has too great a magnitude to represent as a double,\nit will be converted to Double.NEGATIVE_INFINITY or\nDouble.POSITIVE_INFINITY as appropriate.\n"},
{"l":"api/scala/math/BigDecimal.html#equals-fffff771","e":false,"i":"","n":"equals","t":"equals(that: BigDecimal): Boolean","d":"scala.math.BigDecimal","k":"def","x":"Compares this BigDecimal with the specified BigDecimal for equality.\n"},
{"l":"api/scala/math/BigDecimal.html#floatValue-0","e":false,"i":"","n":"floatValue","t":"floatValue: Float","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a Float.\nif this BigDecimal has too great a magnitude to represent as a float,\nit will be converted to Float.NEGATIVE_INFINITY or\nFloat.POSITIVE_INFINITY as appropriate.\n"},
{"l":"api/scala/math/BigDecimal.html#intValue-0","e":false,"i":"","n":"intValue","t":"intValue: Int","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to an Int.\nIf the BigDecimal is too big to fit in an Int, only the low-order 32 bits\nare returned. Note that this conversion can lose information about the\noverall magnitude of the BigDecimal value as well as return a result with\nthe opposite sign.\n"},
{"l":"api/scala/math/BigDecimal.html#isBinaryDouble-0","e":false,"i":"","n":"isBinaryDouble","t":"isBinaryDouble: Boolean","d":"scala.math.BigDecimal","k":"def","x":"Tests whether this BigDecimal holds, to within precision, the binary representation of a Double."},
{"l":"api/scala/math/BigDecimal.html#isBinaryFloat-0","e":false,"i":"","n":"isBinaryFloat","t":"isBinaryFloat: Boolean","d":"scala.math.BigDecimal","k":"def","x":"Tests whether this BigDecimal holds, to within precision, the binary representation of a Float."},
{"l":"api/scala/math/BigDecimal.html#isDecimalDouble-0","e":false,"i":"","n":"isDecimalDouble","t":"isDecimalDouble: Boolean","d":"scala.math.BigDecimal","k":"def","x":"Tests whether this BigDecimal holds the decimal representation of a Double."},
{"l":"api/scala/math/BigDecimal.html#isDecimalFloat-0","e":false,"i":"","n":"isDecimalFloat","t":"isDecimalFloat: Boolean","d":"scala.math.BigDecimal","k":"def","x":"Tests whether this BigDecimal holds the decimal representation of a Float."},
{"l":"api/scala/math/BigDecimal.html#isExactDouble-0","e":false,"i":"","n":"isExactDouble","t":"isExactDouble: Boolean","d":"scala.math.BigDecimal","k":"def","x":"Tests whether this BigDecimal holds the exact expansion of a Double's binary fractional form into base 10."},
{"l":"api/scala/math/BigDecimal.html#isExactFloat-0","e":false,"i":"","n":"isExactFloat","t":"isExactFloat: Boolean","d":"scala.math.BigDecimal","k":"def","x":"Tests whether this BigDecimal holds the exact expansion of a Float's binary fractional form into base 10."},
{"l":"api/scala/math/BigDecimal.html#isValidLong-0","e":false,"i":"","n":"isValidLong","t":"isValidLong: Boolean","d":"scala.math.BigDecimal","k":"def","x":""},
{"l":"api/scala/math/BigDecimal.html#isWhole-0","e":false,"i":"","n":"isWhole","t":"isWhole: Boolean","d":"scala.math.BigDecimal","k":"def","x":""},
{"l":"api/scala/math/BigDecimal.html#longValue-0","e":false,"i":"","n":"longValue","t":"longValue: Long","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a Long.\nIf the BigDecimal is too big to fit in a Long, only the low-order 64 bits\nare returned. Note that this conversion can lose information about the\noverall magnitude of the BigDecimal value as well as return a result with\nthe opposite sign.\n"},
{"l":"api/scala/math/BigDecimal.html#max-fffff760","e":false,"i":"","n":"max","t":"max(that: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns the maximum of this and that, or this if the two are equal\n"},
{"l":"api/scala/math/BigDecimal.html#mc-0","e":false,"i":"","n":"mc","t":"mc: MathContext","d":"scala.math.BigDecimal","k":"val","x":""},
{"l":"api/scala/math/BigDecimal.html#min-fffff760","e":false,"i":"","n":"min","t":"min(that: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns the minimum of this and that, or this if the two are equal\n"},
{"l":"api/scala/math/BigDecimal.html#pow-788","e":false,"i":"","n":"pow","t":"pow(n: Int): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns a BigDecimal whose value is this ** n.\n"},
{"l":"api/scala/math/BigDecimal.html#precision-0","e":false,"i":"","n":"precision","t":"precision: Int","d":"scala.math.BigDecimal","k":"def","x":"Returns the precision of this BigDecimal.\n"},
{"l":"api/scala/math/BigDecimal.html#quot-fffff760","e":false,"i":"","n":"quot","t":"quot(that: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Divide to Integral value.\n"},
{"l":"api/scala/math/BigDecimal.html#remainder-fffff760","e":false,"i":"","n":"remainder","t":"remainder(that: BigDecimal): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Remainder after dividing this by that.\n"},
{"l":"api/scala/math/BigDecimal.html#round-fffff0a2","e":false,"i":"","n":"round","t":"round(mc: MathContext): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns a BigDecimal rounded according to the supplied MathContext settings, but\npreserving its own MathContext for future operations.\n"},
{"l":"api/scala/math/BigDecimal.html#rounded-0","e":false,"i":"","n":"rounded","t":"rounded: BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns a BigDecimal rounded according to its own MathContext"},
{"l":"api/scala/math/BigDecimal.html#scale-0","e":false,"i":"","n":"scale","t":"scale: Int","d":"scala.math.BigDecimal","k":"def","x":"Returns the scale of this BigDecimal.\n"},
{"l":"api/scala/math/BigDecimal.html#setScale-788","e":false,"i":"","n":"setScale","t":"setScale(scale: Int): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns a BigDecimal whose scale is the specified value, and whose value is\nnumerically equal to this BigDecimal's.\n"},
{"l":"api/scala/math/BigDecimal.html#setScale-fffff614","e":false,"i":"","n":"setScale","t":"setScale(scale: Int, mode: RoundingMode): BigDecimal","d":"scala.math.BigDecimal","k":"def","x":""},
{"l":"api/scala/math/BigDecimal.html#sign-0","e":false,"i":"","n":"sign","t":"sign: BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns the sign of this BigDecimal;\n -1 if it is less than 0,\n +1 if it is greater than 0,\n 0  if it is equal to 0.\n"},
{"l":"api/scala/math/BigDecimal.html#signum-0","e":false,"i":"","n":"signum","t":"signum: Int","d":"scala.math.BigDecimal","k":"def","x":"Returns the sign of this BigDecimal;\n -1 if it is less than 0,\n +1 if it is greater than 0,\n 0  if it is equal to 0.\n"},
{"l":"api/scala/math/BigDecimal.html#<init>-4","e":false,"i":"","n":"this","t":"this(bigDecimal: BigDecimal)","d":"scala.math.BigDecimal","k":"def","x":""},
{"l":"api/scala/math/BigDecimal.html#to-fffff462","e":false,"i":"","n":"to","t":"to(end: BigDecimal): Partial[BigDecimal, Inclusive[BigDecimal]]","d":"scala.math.BigDecimal","k":"def","x":"Like until, but inclusive of the end value."},
{"l":"api/scala/math/BigDecimal.html#to-37e","e":false,"i":"","n":"to","t":"to(end: BigDecimal, step: BigDecimal): Inclusive[BigDecimal]","d":"scala.math.BigDecimal","k":"def","x":"Like until, but inclusive of the end value."},
{"l":"api/scala/math/BigDecimal.html#toBigInt-0","e":false,"i":"","n":"toBigInt","t":"toBigInt: BigInt","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a scala.BigInt.\n"},
{"l":"api/scala/math/BigDecimal.html#toBigIntExact-0","e":false,"i":"","n":"toBigIntExact","t":"toBigIntExact: Option[BigInt]","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a scala.BigInt if it\ncan be done losslessly, returning Some(BigInt) or None.\n"},
{"l":"api/scala/math/BigDecimal.html#toByteExact-0","e":false,"i":"","n":"toByteExact","t":"toByteExact: Byte","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a scala.Byte, checking for lost information.\nIf this BigDecimal has a nonzero fractional part, or is out of the possible\nrange for a scala.Byte result, then a java.lang.ArithmeticException is\nthrown.\n"},
{"l":"api/scala/math/BigDecimal.html#toIntExact-0","e":false,"i":"","n":"toIntExact","t":"toIntExact: Int","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a scala.Int, checking for lost information.\nIf this BigDecimal has a nonzero fractional part, or is out of the possible\nrange for an scala.Int result, then a java.lang.ArithmeticException is\nthrown.\n"},
{"l":"api/scala/math/BigDecimal.html#toLongExact-0","e":false,"i":"","n":"toLongExact","t":"toLongExact: Long","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a scala.Long, checking for lost information.\nIf this BigDecimal has a nonzero fractional part, or is out of the possible\nrange for a scala.Long result, then a java.lang.ArithmeticException is\nthrown.\n"},
{"l":"api/scala/math/BigDecimal.html#toShortExact-0","e":false,"i":"","n":"toShortExact","t":"toShortExact: Short","d":"scala.math.BigDecimal","k":"def","x":"Converts this BigDecimal to a scala.Short, checking for lost information.\nIf this BigDecimal has a nonzero fractional part, or is out of the possible\nrange for a scala.Short result, then a java.lang.ArithmeticException is\nthrown.\n"},
{"l":"api/scala/math/BigDecimal.html#ulp-0","e":false,"i":"","n":"ulp","t":"ulp: BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns the size of an ulp, a unit in the last place, of this BigDecimal.\n"},
{"l":"api/scala/math/BigDecimal.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: BigDecimal","d":"scala.math.BigDecimal","k":"def","x":"Returns a BigDecimal whose value is the negation of this BigDecimal\n"},
{"l":"api/scala/math/BigDecimal.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: BigDecimal","d":"scala.math.BigDecimal","k":"def","x":""},
{"l":"api/scala/math/BigDecimal.html#until-fffff462","e":false,"i":"","n":"until","t":"until(end: BigDecimal): Partial[BigDecimal, Exclusive[BigDecimal]]","d":"scala.math.BigDecimal","k":"def","x":"Creates a partially constructed NumericRange[BigDecimal] in range\n[start;end), where start is the target BigDecimal.  The step\nmust be supplied via the \"by\" method of the returned object in order\nto receive the fully constructed range.  For example:"},
{"l":"api/scala/math/BigDecimal.html#until-fffff830","e":false,"i":"","n":"until","t":"until(end: BigDecimal, step: BigDecimal): Exclusive[BigDecimal]","d":"scala.math.BigDecimal","k":"def","x":"Same as the one-argument until, but creates the range immediately."},
{"l":"api/scala/math/BigInt$.html#","e":false,"i":"","n":"BigInt","t":"BigInt","d":"scala.math","k":"object","x":""},
{"l":"api/scala/math/BigInt$.html#apply-fa6","e":false,"i":"","n":"apply","t":"apply(i: Int): BigInt","d":"scala.math.BigInt","k":"def","x":"Constructs a BigInt whose value is equal to that of the\nspecified integer value.\n"},
{"l":"api/scala/math/BigInt$.html#apply-fffff629","e":false,"i":"","n":"apply","t":"apply(l: Long): BigInt","d":"scala.math.BigInt","k":"def","x":"Constructs a BigInt whose value is equal to that of the\nspecified long value.\n"},
{"l":"api/scala/math/BigInt$.html#apply-fffffdfb","e":false,"i":"","n":"apply","t":"apply(x: Array[Byte]): BigInt","d":"scala.math.BigInt","k":"def","x":"Translates a byte array containing the two's-complement binary\nrepresentation of a BigInt into a BigInt.\n"},
{"l":"api/scala/math/BigInt$.html#apply-434","e":false,"i":"","n":"apply","t":"apply(signum: Int, magnitude: Array[Byte]): BigInt","d":"scala.math.BigInt","k":"def","x":"Translates the sign-magnitude representation of a BigInt into a BigInt.\n"},
{"l":"api/scala/math/BigInt$.html#apply-fffffb06","e":false,"i":"","n":"apply","t":"apply(bitlength: Int, certainty: Int, rnd: Random): BigInt","d":"scala.math.BigInt","k":"def","x":"Constructs a randomly generated positive BigInt that is probably prime,\nwith the specified bitLength.\n"},
{"l":"api/scala/math/BigInt$.html#apply-c8d","e":false,"i":"","n":"apply","t":"apply(numbits: Int, rnd: Random): BigInt","d":"scala.math.BigInt","k":"def","x":"Constructs a randomly generated BigInt, uniformly distributed over the\nrange 0 to (2 ^ numBits - 1), inclusive.\n"},
{"l":"api/scala/math/BigInt$.html#apply-fffffc28","e":false,"i":"","n":"apply","t":"apply(x: String): BigInt","d":"scala.math.BigInt","k":"def","x":"Translates the decimal String representation of a BigInt into a BigInt.\n"},
{"l":"api/scala/math/BigInt$.html#apply-fffff1cb","e":false,"i":"","n":"apply","t":"apply(x: String, radix: Int): BigInt","d":"scala.math.BigInt","k":"def","x":"Translates the string representation of a BigInt in the\nspecified radix into a BigInt.\n"},
{"l":"api/scala/math/BigInt$.html#apply-ffffffd5","e":false,"i":"","n":"apply","t":"apply(x: BigInteger): BigInt","d":"scala.math.BigInt","k":"def","x":"Translates a java.math.BigInteger into a BigInt.\n"},
{"l":"api/scala/math/BigInt$.html#int2bigInt-fa6","e":false,"i":"","n":"int2bigInt","t":"int2bigInt(i: Int): BigInt","d":"scala.math.BigInt","k":"def","x":"Implicit conversion from Int to BigInt.\n"},
{"l":"api/scala/math/BigInt$.html#javaBigInteger2bigInt-ffffffd5","e":false,"i":"","n":"javaBigInteger2bigInt","t":"javaBigInteger2bigInt(x: BigInteger): BigInt","d":"scala.math.BigInt","k":"def","x":"Implicit conversion from java.math.BigInteger to scala.BigInt.\n"},
{"l":"api/scala/math/BigInt$.html#long2bigInt-fffff629","e":false,"i":"","n":"long2bigInt","t":"long2bigInt(l: Long): BigInt","d":"scala.math.BigInt","k":"def","x":"Implicit conversion from Long to BigInt.\n"},
{"l":"api/scala/math/BigInt$.html#probablePrime-c8d","e":false,"i":"","n":"probablePrime","t":"probablePrime(bitLength: Int, rnd: Random): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns a positive BigInt that is probably prime, with the specified bitLength.\n"},
{"l":"api/scala/math/BigInt.html#","e":false,"i":"","n":"BigInt","t":"BigInt extends ScalaNumber, ScalaNumericConversions, Serializable, Ordered[BigInt]","d":"scala.math","k":"class","x":"A type with efficient encoding of arbitrary integers."},
{"l":"api/scala/math/BigInt.html#%-7a0","e":false,"i":"","n":"%","t":"%(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Remainder of BigInts\n"},
{"l":"api/scala/math/BigInt.html#&-7a0","e":false,"i":"","n":"&","t":"&(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Bitwise and of BigInts\n"},
{"l":"api/scala/math/BigInt.html#&~-7a0","e":false,"i":"","n":"&~","t":"&~(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Bitwise and-not of BigInts. Returns a BigInt whose value is (this & ~that).\n"},
{"l":"api/scala/math/BigInt.html#*-7a0","e":false,"i":"","n":"*","t":"*(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Multiplication of BigInts\n"},
{"l":"api/scala/math/BigInt.html#+-7a0","e":false,"i":"","n":"+","t":"+(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Addition of BigInts\n"},
{"l":"api/scala/math/BigInt.html#--7a0","e":false,"i":"","n":"-","t":"-(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Subtraction of BigInts\n"},
{"l":"api/scala/math/BigInt.html#/-7a0","e":false,"i":"","n":"/","t":"/(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Division of BigInts\n"},
{"l":"api/scala/math/BigInt.html#/%-ffffff9f","e":false,"i":"","n":"/%","t":"/%(that: BigInt): (BigInt, BigInt)","d":"scala.math.BigInt","k":"def","x":"Returns a pair of two BigInts containing (this / that) and (this % that).\n"},
{"l":"api/scala/math/BigInt.html#<<-fa6","e":false,"i":"","n":"<<","t":"<<(n: Int): BigInt","d":"scala.math.BigInt","k":"def","x":"Leftshift of BigInt\n"},
{"l":"api/scala/math/BigInt.html#>>-fa6","e":false,"i":"","n":">>","t":">>(n: Int): BigInt","d":"scala.math.BigInt","k":"def","x":"(Signed) rightshift of BigInt\n"},
{"l":"api/scala/math/BigInt.html#^-7a0","e":false,"i":"","n":"^","t":"^(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Bitwise exclusive-or of BigInts\n"},
{"l":"api/scala/math/BigInt.html#abs-0","e":false,"i":"","n":"abs","t":"abs: BigInt","d":"scala.math.BigInt","k":"def","x":"Returns the absolute value of this BigInt\n"},
{"l":"api/scala/math/BigInt.html#bigInteger-0","e":false,"i":"","n":"bigInteger","t":"bigInteger: BigInteger","d":"scala.math.BigInt","k":"def","x":""},
{"l":"api/scala/math/BigInt.html#bitCount-0","e":false,"i":"","n":"bitCount","t":"bitCount: Int","d":"scala.math.BigInt","k":"def","x":"Returns the number of bits in the two's complement representation of this BigInt\nthat differ from its sign bit.\n"},
{"l":"api/scala/math/BigInt.html#bitLength-0","e":false,"i":"","n":"bitLength","t":"bitLength: Int","d":"scala.math.BigInt","k":"def","x":"Returns the number of bits in the minimal two's-complement representation of this BigInt,\nexcluding a sign bit.\n"},
{"l":"api/scala/math/BigInt.html#charValue-0","e":false,"i":"","n":"charValue","t":"charValue: Char","d":"scala.math.BigInt","k":"def","x":"Converts this BigInt to a .\nIf the BigInt is too big to fit in a char, only the low-order 16 bits are returned.\nNote that this conversion can lose information about the overall magnitude of the\nBigInt value and that it always returns a positive result.\n"},
{"l":"api/scala/math/BigInt.html#clearBit-fa6","e":false,"i":"","n":"clearBit","t":"clearBit(n: Int): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns a BigInt whose value is equivalent to this BigInt with the designated bit cleared.\n"},
{"l":"api/scala/math/BigInt.html#compare-dda","e":false,"i":"","n":"compare","t":"compare(that: BigInt): Int","d":"scala.math.BigInt","k":"def","x":"Compares this BigInt with the specified BigInt\n"},
{"l":"api/scala/math/BigInt.html#doubleValue-0","e":false,"i":"","n":"doubleValue","t":"doubleValue: Double","d":"scala.math.BigInt","k":"def","x":"Converts this BigInt to a double.\nif this BigInt has too great a magnitude to represent as a double,\nit will be converted to Double.NEGATIVE_INFINITY or\nDouble.POSITIVE_INFINITY as appropriate.\n"},
{"l":"api/scala/math/BigInt.html#equals-493","e":false,"i":"","n":"equals","t":"equals(that: BigInt): Boolean","d":"scala.math.BigInt","k":"def","x":"Compares this BigInt with the specified BigInt for equality.\n"},
{"l":"api/scala/math/BigInt.html#flipBit-fa6","e":false,"i":"","n":"flipBit","t":"flipBit(n: Int): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns a BigInt whose value is equivalent to this BigInt with the designated bit flipped.\n"},
{"l":"api/scala/math/BigInt.html#floatValue-0","e":false,"i":"","n":"floatValue","t":"floatValue: Float","d":"scala.math.BigInt","k":"def","x":"Converts this BigInt to a float.\nIf this BigInt has too great a magnitude to represent as a float,\nit will be converted to Float.NEGATIVE_INFINITY or\nFloat.POSITIVE_INFINITY as appropriate.\n"},
{"l":"api/scala/math/BigInt.html#gcd-7a0","e":false,"i":"","n":"gcd","t":"gcd(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns the greatest common divisor of abs(this) and abs(that)\n"},
{"l":"api/scala/math/BigInt.html#intValue-0","e":false,"i":"","n":"intValue","t":"intValue: Int","d":"scala.math.BigInt","k":"def","x":"Converts this BigInt to an .\nIf the BigInt is too big to fit in an int, only the low-order 32 bits\nare returned. Note that this conversion can lose information about the\noverall magnitude of the BigInt value as well as return a result with\nthe opposite sign.\n"},
{"l":"api/scala/math/BigInt.html#isProbablePrime-ffffff99","e":false,"i":"","n":"isProbablePrime","t":"isProbablePrime(certainty: Int): Boolean","d":"scala.math.BigInt","k":"def","x":"Returns true if this BigInt is probably prime, false if it's definitely composite."},
{"l":"api/scala/math/BigInt.html#isValidDouble-0","e":false,"i":"","n":"isValidDouble","t":"isValidDouble: Boolean","d":"scala.math.BigInt","k":"def","x":"Returns true iff this can be represented exactly by scala.Double; otherwise returns false.\n"},
{"l":"api/scala/math/BigInt.html#isValidFloat-0","e":false,"i":"","n":"isValidFloat","t":"isValidFloat: Boolean","d":"scala.math.BigInt","k":"def","x":"Returns true iff this can be represented exactly by scala.Float; otherwise returns false.\n"},
{"l":"api/scala/math/BigInt.html#isValidLong-0","e":false,"i":"","n":"isValidLong","t":"isValidLong: Boolean","d":"scala.math.BigInt","k":"def","x":""},
{"l":"api/scala/math/BigInt.html#isWhole-0","e":false,"i":"","n":"isWhole","t":"isWhole: Boolean","d":"scala.math.BigInt","k":"def","x":""},
{"l":"api/scala/math/BigInt.html#longValue-0","e":false,"i":"","n":"longValue","t":"longValue: Long","d":"scala.math.BigInt","k":"def","x":"Converts this BigInt to a .\nIf the BigInt is too big to fit in a long, only the low-order 64 bits\nare returned. Note that this conversion can lose information about the\noverall magnitude of the BigInt value as well as return a result with\nthe opposite sign.\n"},
{"l":"api/scala/math/BigInt.html#lowestSetBit-0","e":false,"i":"","n":"lowestSetBit","t":"lowestSetBit: Int","d":"scala.math.BigInt","k":"def","x":"Returns the index of the rightmost (lowest-order) one bit in this BigInt\n(the number of zero bits to the right of the rightmost one bit).\n"},
{"l":"api/scala/math/BigInt.html#max-7a0","e":false,"i":"","n":"max","t":"max(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns the maximum of this and that\n"},
{"l":"api/scala/math/BigInt.html#min-7a0","e":false,"i":"","n":"min","t":"min(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns the minimum of this and that\n"},
{"l":"api/scala/math/BigInt.html#mod-7a0","e":false,"i":"","n":"mod","t":"mod(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns a BigInt whose value is (this mod that).\nThis method differs from % in that it always returns a non-negative BigInt."},
{"l":"api/scala/math/BigInt.html#modInverse-7a0","e":false,"i":"","n":"modInverse","t":"modInverse(m: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns a BigInt whose value is (the inverse of  modulo ).\n"},
{"l":"api/scala/math/BigInt.html#modPow-fffff84d","e":false,"i":"","n":"modPow","t":"modPow(exp: BigInt, m: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns a BigInt whose value is\n( raised to the power of  modulo ).\n"},
{"l":"api/scala/math/BigInt.html#pow-fa6","e":false,"i":"","n":"pow","t":"pow(exp: Int): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns a BigInt whose value is ( raised to the power of ).\n"},
{"l":"api/scala/math/BigInt.html#setBit-fa6","e":false,"i":"","n":"setBit","t":"setBit(n: Int): BigInt","d":"scala.math.BigInt","k":"def","x":"Returns a BigInt whose value is equivalent to this BigInt with the designated bit set.\n"},
{"l":"api/scala/math/BigInt.html#sign-0","e":false,"i":"","n":"sign","t":"sign: BigInt","d":"scala.math.BigInt","k":"def","x":"Returns the sign of this BigInt;\n -1 if it is less than 0,\n +1 if it is greater than 0,\n 0  if it is equal to 0.\n"},
{"l":"api/scala/math/BigInt.html#signum-0","e":false,"i":"","n":"signum","t":"signum: Int","d":"scala.math.BigInt","k":"def","x":"Returns the sign of this BigInt;\n -1 if it is less than 0,\n +1 if it is greater than 0,\n 0  if it is equal to 0.\n"},
{"l":"api/scala/math/BigInt.html#testBit-ffffff99","e":false,"i":"","n":"testBit","t":"testBit(n: Int): Boolean","d":"scala.math.BigInt","k":"def","x":"Returns true if and only if the designated bit is set.\n"},
{"l":"api/scala/math/BigInt.html#<init>-ffffffd5","e":false,"i":"","n":"this","t":"this(bigInteger: BigInteger)","d":"scala.math.BigInt","k":"def","x":"Public constructor present for compatibility. Use the BigInt.apply companion object method instead."},
{"l":"api/scala/math/BigInt.html#to-3be","e":false,"i":"","n":"to","t":"to(end: BigInt, step: BigInt): Inclusive[BigInt]","d":"scala.math.BigInt","k":"def","x":"Like until, but inclusive of the end value.\n"},
{"l":"api/scala/math/BigInt.html#toByteArray-0","e":false,"i":"","n":"toByteArray","t":"toByteArray: Array[Byte]","d":"scala.math.BigInt","k":"def","x":"Returns a byte array containing the two's-complement representation of\nthis BigInt. The byte array will be in big-endian byte-order: the most\nsignificant byte is in the zeroth element. The array will contain the\nminimum number of bytes required to represent this BigInt, including at\nleast one sign bit.\n"},
{"l":"api/scala/math/BigInt.html#toString-78c","e":false,"i":"","n":"toString","t":"toString(radix: Int): String","d":"scala.math.BigInt","k":"def","x":"Returns the String representation in the specified radix of this BigInt.\n"},
{"l":"api/scala/math/BigInt.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: BigInt","d":"scala.math.BigInt","k":"def","x":"Returns a BigInt whose value is the negation of this BigInt\n"},
{"l":"api/scala/math/BigInt.html#unary_~-0","e":false,"i":"","n":"unary_~","t":"unary_~: BigInt","d":"scala.math.BigInt","k":"def","x":"Returns the bitwise complement of this BigInt\n"},
{"l":"api/scala/math/BigInt.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: BigInteger","d":"scala.math.BigInt","k":"def","x":""},
{"l":"api/scala/math/BigInt.html#until-fffff870","e":false,"i":"","n":"until","t":"until(end: BigInt, step: BigInt): Exclusive[BigInt]","d":"scala.math.BigInt","k":"def","x":"Create a NumericRange[BigInt] in range [start;end)\nwith the specified step, where start is the target BigInt.\n"},
{"l":"api/scala/math/BigInt.html#|-7a0","e":false,"i":"","n":"|","t":"|(that: BigInt): BigInt","d":"scala.math.BigInt","k":"def","x":"Bitwise or of BigInts\n"},
{"l":"api/scala/math/Equiv.html#","e":false,"i":"","n":"Equiv","t":"Equiv[T] extends Serializable","d":"scala.math","k":"trait","x":"A trait for representing equivalence relations.  It is important to\ndistinguish between a type that can be compared for equality or\nequivalence and a representation of equivalence on some type. This\ntrait is for representing the latter."},
{"l":"api/scala/math/Equiv.html#equiv-fffff7fa","e":false,"i":"","n":"equiv","t":"equiv(x: T, y: T): Boolean","d":"scala.math.Equiv","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$.html#","e":false,"i":"","n":"Equiv","t":"Equiv extends LowPriorityEquiv","d":"scala.math","k":"object","x":""},
{"l":"api/scala/math/Equiv$.html#Option-2e1","e":false,"i":"","n":"Option","t":"Option[T](implicit eqv: Equiv[T]): Equiv[Option[T]]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#Tuple2-fffffe3a","e":false,"i":"","n":"Tuple2","t":"Tuple2[T1, T2](implicit eqv1: Equiv[T1], eqv2: Equiv[T2]): Equiv[(T1, T2)]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#Tuple3-fffff593","e":false,"i":"","n":"Tuple3","t":"Tuple3[T1, T2, T3](implicit eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3]): Equiv[(T1, T2, T3)]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#Tuple4-fffff8ec","e":false,"i":"","n":"Tuple4","t":"Tuple4[T1, T2, T3, T4](implicit eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4]): Equiv[(T1, T2, T3, T4)]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#Tuple5-845","e":false,"i":"","n":"Tuple5","t":"Tuple5[T1, T2, T3, T4, T5](implicit eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5]): Equiv[(T1, T2, T3, T4, T5)]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#Tuple6-39e","e":false,"i":"","n":"Tuple6","t":"Tuple6[T1, T2, T3, T4, T5, T6](implicit eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5], eqv6: Equiv[T6]): Equiv[(T1, T2, T3, T4, T5, T6)]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#Tuple7-af7","e":false,"i":"","n":"Tuple7","t":"Tuple7[T1, T2, T3, T4, T5, T6, T7](implicit eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5], eqv6: Equiv[T6], eqv7: Equiv[T7]): Equiv[(T1, T2, T3, T4, T5, T6, T7)]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#Tuple8-fffffe50","e":false,"i":"","n":"Tuple8","t":"Tuple8[T1, T2, T3, T4, T5, T6, T7, T8](implicit eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5], eqv6: Equiv[T6], eqv7: Equiv[T7], eqv8: Equiv[T8]): Equiv[(T1, T2, T3, T4, T5, T6, T7, T8)]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#Tuple9-fffffda9","e":false,"i":"","n":"Tuple9","t":"Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9](implicit eqv1: Equiv[T1], eqv2: Equiv[T2], eqv3: Equiv[T3], eqv4: Equiv[T4], eqv5: Equiv[T5], eqv6: Equiv[T6], eqv7: Equiv[T7], eqv8: Equiv[T8], eqv9: Equiv[T9]): Equiv[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#apply-2e1","e":false,"i":"","n":"apply","t":"apply[T : Equiv]: Equiv[T]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#by-fffff4cf","e":false,"i":"","n":"by","t":"by[T, S : Equiv](f: T => S): Equiv[T]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#fromComparator-99f","e":false,"i":"","n":"fromComparator","t":"fromComparator[T](cmp: Comparator[T]): Equiv[T]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#fromFunction-d99","e":false,"i":"","n":"fromFunction","t":"fromFunction[T](cmp: (T, T) => Boolean): Equiv[T]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#reference-189","e":false,"i":"","n":"reference","t":"reference[T <: AnyRef]: Equiv[T]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$.html#universal-189","e":false,"i":"","n":"universal","t":"universal[T]: Equiv[T]","d":"scala.math.Equiv","k":"def","x":""},
{"l":"api/scala/math/Equiv$$BigDecimal$.html#","e":false,"i":"","n":"BigDecimal","t":"BigDecimal extends Equiv[BigDecimal]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$BigDecimal$.html#equiv-fffffc00","e":false,"i":"","n":"equiv","t":"equiv(x: BigDecimal, y: BigDecimal): Boolean","d":"scala.math.Equiv.BigDecimal","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$BigInt$.html#","e":false,"i":"","n":"BigInt","t":"BigInt extends Equiv[BigInt]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$BigInt$.html#equiv-fffff3c0","e":false,"i":"","n":"equiv","t":"equiv(x: BigInt, y: BigInt): Boolean","d":"scala.math.Equiv.BigInt","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$Boolean$.html#","e":false,"i":"","n":"Boolean","t":"Boolean extends Equiv[Boolean]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Boolean$.html#equiv-b60","e":false,"i":"","n":"equiv","t":"equiv(x: Boolean, y: Boolean): Boolean","d":"scala.math.Equiv.Boolean","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$Byte$.html#","e":false,"i":"","n":"Byte","t":"Byte extends Equiv[Byte]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Byte$.html#equiv-dc0","e":false,"i":"","n":"equiv","t":"equiv(x: Byte, y: Byte): Boolean","d":"scala.math.Equiv.Byte","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$Char$.html#","e":false,"i":"","n":"Char","t":"Char extends Equiv[Char]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Char$.html#equiv-fffff024","e":false,"i":"","n":"equiv","t":"equiv(x: Char, y: Char): Boolean","d":"scala.math.Equiv.Char","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$DeprecatedDoubleEquiv$.html#","e":false,"i":"","n":"DeprecatedDoubleEquiv","t":"DeprecatedDoubleEquiv extends StrictEquiv","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$DeprecatedFloatEquiv$.html#","e":false,"i":"","n":"DeprecatedFloatEquiv","t":"DeprecatedFloatEquiv extends StrictEquiv","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Double$.html#","e":false,"i":"","n":"Double","t":"Double","d":"scala.math.Equiv","k":"object","x":"Equivs for Doubles."},
{"l":"api/scala/math/Equiv$$Double$$IeeeEquiv$.html#","e":false,"i":"","n":"IeeeEquiv","t":"IeeeEquiv extends IeeeEquiv","d":"scala.math.Equiv.Double","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Double$$IeeeEquiv.html#","e":false,"i":"","n":"IeeeEquiv","t":"IeeeEquiv extends Equiv[Double]","d":"scala.math.Equiv.Double","k":"trait","x":"An equivalence for Doubles which is consistent with IEEE specifications."},
{"l":"api/scala/math/Equiv$$Double$$IeeeEquiv.html#equiv-fffff2ee","e":false,"i":"","n":"equiv","t":"equiv(x: Double, y: Double): Boolean","d":"scala.math.Equiv.Double.IeeeEquiv","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$Double$$StrictEquiv$.html#","e":false,"i":"","n":"StrictEquiv","t":"StrictEquiv extends StrictEquiv","d":"scala.math.Equiv.Double","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Double$$StrictEquiv.html#","e":false,"i":"","n":"StrictEquiv","t":"StrictEquiv extends Equiv[Double]","d":"scala.math.Equiv.Double","k":"trait","x":"An equivalence for Doubles which is reflexive (treats all NaNs\nas equivalent), and treats -0.0 and 0.0 as not equivalent; it\nbehaves the same as java.lang.Double.compare."},
{"l":"api/scala/math/Equiv$$Double$$StrictEquiv.html#equiv-fffff2ee","e":false,"i":"","n":"equiv","t":"equiv(x: Double, y: Double): Boolean","d":"scala.math.Equiv.Double.StrictEquiv","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$ExtraImplicits.html#","e":false,"i":"","n":"ExtraImplicits","t":"ExtraImplicits","d":"scala.math.Equiv","k":"trait","x":""},
{"l":"api/scala/math/Equiv$$ExtraImplicits.html#seqEquiv-fffffee2","e":false,"i":"","n":"seqEquiv","t":"seqEquiv[CC <: (Seq), T](implicit eqv: Equiv[T]): Equiv[CC[T]]","d":"scala.math.Equiv.ExtraImplicits","k":"def","x":"Not in the standard scope due to the potential for divergence:\nFor instance implicitly[Equiv[Any]] diverges in its presence.\n"},
{"l":"api/scala/math/Equiv$$ExtraImplicits.html#sortedSetEquiv-fffffee2","e":false,"i":"","n":"sortedSetEquiv","t":"sortedSetEquiv[CC <: (SortedSet), T](implicit eqv: Equiv[T]): Equiv[CC[T]]","d":"scala.math.Equiv.ExtraImplicits","k":"def","x":""},
{"l":"api/scala/math/Equiv$$Float$.html#","e":false,"i":"","n":"Float","t":"Float","d":"scala.math.Equiv","k":"object","x":"Equivs for Floats."},
{"l":"api/scala/math/Equiv$$Float$$IeeeEquiv$.html#","e":false,"i":"","n":"IeeeEquiv","t":"IeeeEquiv extends IeeeEquiv","d":"scala.math.Equiv.Float","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Float$$IeeeEquiv.html#","e":false,"i":"","n":"IeeeEquiv","t":"IeeeEquiv extends Equiv[Float]","d":"scala.math.Equiv.Float","k":"trait","x":"An equivalence for Floats which is consistent with IEEE specifications."},
{"l":"api/scala/math/Equiv$$Float$$StrictEquiv$.html#","e":false,"i":"","n":"StrictEquiv","t":"StrictEquiv extends StrictEquiv","d":"scala.math.Equiv.Float","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Float$$StrictEquiv.html#","e":false,"i":"","n":"StrictEquiv","t":"StrictEquiv extends Equiv[Float]","d":"scala.math.Equiv.Float","k":"trait","x":"An equivalence for Floats which is reflexive (treats all NaNs\nas equivalent), and treats -0.0 and 0.0 as not equivalent; it\nbehaves the same as java.lang.Float.compare."},
{"l":"api/scala/math/Equiv$$Float$$StrictEquiv.html#equiv-be0","e":false,"i":"","n":"equiv","t":"equiv(x: Float, y: Float): Boolean","d":"scala.math.Equiv.Float.StrictEquiv","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$Implicits$.html#","e":false,"i":"","n":"Implicits","t":"Implicits extends ExtraImplicits","d":"scala.math.Equiv","k":"object","x":"An object containing implicits which are not in the default scope."},
{"l":"api/scala/math/Equiv$$Int$.html#","e":false,"i":"","n":"Int","t":"Int extends Equiv[Int]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Int$.html#equiv-780","e":false,"i":"","n":"equiv","t":"equiv(x: Int, y: Int): Boolean","d":"scala.math.Equiv.Int","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$Long$.html#","e":false,"i":"","n":"Long","t":"Long extends Equiv[Long]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Long$.html#equiv-fffffcd8","e":false,"i":"","n":"equiv","t":"equiv(x: Long, y: Long): Boolean","d":"scala.math.Equiv.Long","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$Short$.html#","e":false,"i":"","n":"Short","t":"Short extends Equiv[Short]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Short$.html#equiv-fe0","e":false,"i":"","n":"equiv","t":"equiv(x: Short, y: Short): Boolean","d":"scala.math.Equiv.Short","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$String$.html#","e":false,"i":"","n":"String","t":"String extends Equiv[String]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$String$.html#equiv-cd6","e":false,"i":"","n":"equiv","t":"equiv(x: String, y: String): Boolean","d":"scala.math.Equiv.String","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$Symbol$.html#","e":false,"i":"","n":"Symbol","t":"Symbol extends Equiv[Symbol]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Symbol$.html#equiv-fffff8a0","e":false,"i":"","n":"equiv","t":"equiv(x: Symbol, y: Symbol): Boolean","d":"scala.math.Equiv.Symbol","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Equiv$$Unit$.html#","e":false,"i":"","n":"Unit","t":"Unit extends Equiv[Unit]","d":"scala.math.Equiv","k":"object","x":""},
{"l":"api/scala/math/Equiv$$Unit$.html#equiv-fffff560","e":false,"i":"","n":"equiv","t":"equiv(x: Unit, y: Unit): Boolean","d":"scala.math.Equiv.Unit","k":"def","x":"Returns true iff x is equivalent to y.\n"},
{"l":"api/scala/math/Fractional.html#","e":false,"i":"","n":"Fractional","t":"Fractional[T] extends Numeric[T]","d":"scala.math","k":"trait","x":""},
{"l":"api/scala/math/Fractional.html#div-fffffab9","e":false,"i":"","n":"div","t":"div(x: T, y: T): T","d":"scala.math.Fractional","k":"def","x":""},
{"l":"api/scala/math/Fractional$FractionalOps.html#","e":false,"i":"","n":"FractionalOps","t":"FractionalOps(lhs: Fractional.this.T) extends NumericOps","d":"scala.math.Fractional","k":"class","x":""},
{"l":"api/scala/math/Fractional$FractionalOps.html#/-d26","e":false,"i":"","n":"/","t":"/(rhs: Fractional.this.T): Fractional.this.T","d":"scala.math.Fractional.FractionalOps","k":"def","x":""},
{"l":"api/scala/math/Fractional$.html#","e":false,"i":"","n":"Fractional","t":"Fractional","d":"scala.math","k":"object","x":""},
{"l":"api/scala/math/Fractional$.html#apply-ffffffd1","e":false,"i":"","n":"apply","t":"apply[T](implicit frac: Fractional[T]): Fractional[T]","d":"scala.math.Fractional","k":"def","x":""},
{"l":"api/scala/math/Fractional$$ExtraImplicits.html#","e":false,"i":"","n":"ExtraImplicits","t":"ExtraImplicits","d":"scala.math.Fractional","k":"trait","x":""},
{"l":"api/scala/math/Fractional$$ExtraImplicits.html#infixFractionalOps-db","e":false,"i":"","n":"infixFractionalOps","t":"infixFractionalOps[T](x: T)(implicit num: Fractional[T]): Fractional[T]#FractionalOps","d":"scala.math.Fractional.ExtraImplicits","k":"def","x":""},
{"l":"api/scala/math/Fractional$$Implicits$.html#","e":false,"i":"","n":"Implicits","t":"Implicits extends ExtraImplicits","d":"scala.math.Fractional","k":"object","x":""},
{"l":"api/scala/math/Integral.html#","e":false,"i":"","n":"Integral","t":"Integral[T] extends Numeric[T]","d":"scala.math","k":"trait","x":""},
{"l":"api/scala/math/Integral.html#quot-fffffab9","e":false,"i":"","n":"quot","t":"quot(x: T, y: T): T","d":"scala.math.Integral","k":"def","x":""},
{"l":"api/scala/math/Integral.html#rem-fffffab9","e":false,"i":"","n":"rem","t":"rem(x: T, y: T): T","d":"scala.math.Integral","k":"def","x":""},
{"l":"api/scala/math/Integral$IntegralOps.html#","e":false,"i":"","n":"IntegralOps","t":"IntegralOps(lhs: Integral.this.T) extends NumericOps","d":"scala.math.Integral","k":"class","x":""},
{"l":"api/scala/math/Integral$IntegralOps.html#%-d26","e":false,"i":"","n":"%","t":"%(rhs: Integral.this.T): Integral.this.T","d":"scala.math.Integral.IntegralOps","k":"def","x":""},
{"l":"api/scala/math/Integral$IntegralOps.html#/-d26","e":false,"i":"","n":"/","t":"/(rhs: Integral.this.T): Integral.this.T","d":"scala.math.Integral.IntegralOps","k":"def","x":""},
{"l":"api/scala/math/Integral$IntegralOps.html#/%-fffff445","e":false,"i":"","n":"/%","t":"/%(rhs: Integral.this.T): (Integral.this.T, Integral.this.T)","d":"scala.math.Integral.IntegralOps","k":"def","x":""},
{"l":"api/scala/math/Integral$.html#","e":false,"i":"","n":"Integral","t":"Integral","d":"scala.math","k":"object","x":""},
{"l":"api/scala/math/Integral$.html#apply-fffffb31","e":false,"i":"","n":"apply","t":"apply[T](implicit int: Integral[T]): Integral[T]","d":"scala.math.Integral","k":"def","x":""},
{"l":"api/scala/math/Integral$$ExtraImplicits.html#","e":false,"i":"","n":"ExtraImplicits","t":"ExtraImplicits","d":"scala.math.Integral","k":"trait","x":""},
{"l":"api/scala/math/Integral$$ExtraImplicits.html#infixIntegralOps-6dc","e":false,"i":"","n":"infixIntegralOps","t":"infixIntegralOps[T](x: T)(implicit num: Integral[T]): Integral[T]#IntegralOps","d":"scala.math.Integral.ExtraImplicits","k":"def","x":"The regrettable design of Numeric/Integral/Fractional has them all\nbumping into one another when searching for this implicit, so they\nare exiled into their own companions.\n"},
{"l":"api/scala/math/Integral$$Implicits$.html#","e":false,"i":"","n":"Implicits","t":"Implicits extends ExtraImplicits","d":"scala.math.Integral","k":"object","x":""},
{"l":"api/scala/math/LowPriorityEquiv.html#","e":false,"i":"","n":"LowPriorityEquiv","t":"LowPriorityEquiv","d":"scala.math","k":"trait","x":""},
{"l":"api/scala/math/LowPriorityEquiv.html#universalEquiv-189","e":false,"i":"","n":"universalEquiv","t":"universalEquiv[T]: Equiv[T]","d":"scala.math.LowPriorityEquiv","k":"def","x":""},
{"l":"api/scala/math/LowPriorityOrderingImplicits.html#","e":false,"i":"","n":"LowPriorityOrderingImplicits","t":"LowPriorityOrderingImplicits","d":"scala.math","k":"trait","x":""},
{"l":"api/scala/math/LowPriorityOrderingImplicits.html#AsComparable-0","e":false,"i":"","n":"AsComparable","t":"AsComparable[A] = A => Comparable[_ >: A]","d":"scala.math.LowPriorityOrderingImplicits","k":"type","x":""},
{"l":"api/scala/math/LowPriorityOrderingImplicits.html#comparatorToOrdering-fcb","e":false,"i":"","n":"comparatorToOrdering","t":"comparatorToOrdering[A](implicit cmp: Comparator[A]): Ordering[A]","d":"scala.math.LowPriorityOrderingImplicits","k":"def","x":""},
{"l":"api/scala/math/LowPriorityOrderingImplicits.html#ordered-b32","e":false,"i":"","n":"ordered","t":"ordered[A](implicit asComparable: () => A): Ordering[A]","d":"scala.math.LowPriorityOrderingImplicits","k":"def","x":"This would conflict with all the nice implicit Orderings\navailable, but thanks to the magic of prioritized implicits\nvia subclassing we can make Ordered[A] => Ordering[A] only\nturn up if nothing else works.  Since Ordered[A] extends\nComparable[A] anyway, we can throw in some Java interop too.\n"},
{"l":"api/scala/math/Numeric$.html#","e":false,"i":"","n":"Numeric","t":"Numeric","d":"scala.math","k":"object","x":""},
{"l":"api/scala/math/Numeric$.html#apply-fffff94f","e":false,"i":"","n":"apply","t":"apply[T](implicit num: Numeric[T]): Numeric[T]","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalAsIfIntegral$.html#","e":false,"i":"","n":"BigDecimalAsIfIntegral","t":"BigDecimalAsIfIntegral extends BigDecimalAsIfIntegral, BigDecimalOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalAsIfIntegral.html#","e":false,"i":"","n":"BigDecimalAsIfIntegral","t":"BigDecimalAsIfIntegral extends BigDecimalIsConflicted, Integral[BigDecimal]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalAsIfIntegral.html#quot-cef","e":false,"i":"","n":"quot","t":"quot(x: BigDecimal, y: BigDecimal): BigDecimal","d":"scala.math.Numeric.BigDecimalAsIfIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalAsIfIntegral.html#rem-cef","e":false,"i":"","n":"rem","t":"rem(x: BigDecimal, y: BigDecimal): BigDecimal","d":"scala.math.Numeric.BigDecimalAsIfIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#","e":false,"i":"","n":"BigDecimalIsConflicted","t":"BigDecimalIsConflicted extends Numeric[BigDecimal]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#fromInt-788","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): BigDecimal","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#minus-cef","e":false,"i":"","n":"minus","t":"minus(x: BigDecimal, y: BigDecimal): BigDecimal","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#negate-fffff760","e":false,"i":"","n":"negate","t":"negate(x: BigDecimal): BigDecimal","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[BigDecimal]","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#plus-cef","e":false,"i":"","n":"plus","t":"plus(x: BigDecimal, y: BigDecimal): BigDecimal","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#times-cef","e":false,"i":"","n":"times","t":"times(x: BigDecimal, y: BigDecimal): BigDecimal","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#toDouble-fffff368","e":false,"i":"","n":"toDouble","t":"toDouble(x: BigDecimal): Double","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#toFloat-fffffbe5","e":false,"i":"","n":"toFloat","t":"toFloat(x: BigDecimal): Float","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#toInt-fb8","e":false,"i":"","n":"toInt","t":"toInt(x: BigDecimal): Int","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsConflicted.html#toLong-fffff7d3","e":false,"i":"","n":"toLong","t":"toLong(x: BigDecimal): Long","d":"scala.math.Numeric.BigDecimalIsConflicted","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsFractional$.html#","e":false,"i":"","n":"BigDecimalIsFractional","t":"BigDecimalIsFractional extends BigDecimalIsFractional, BigDecimalOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsFractional.html#","e":false,"i":"","n":"BigDecimalIsFractional","t":"BigDecimalIsFractional extends BigDecimalIsConflicted, Fractional[BigDecimal]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$BigDecimalIsFractional.html#div-cef","e":false,"i":"","n":"div","t":"div(x: BigDecimal, y: BigDecimal): BigDecimal","d":"scala.math.Numeric.BigDecimalIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral$.html#","e":false,"i":"","n":"BigIntIsIntegral","t":"BigIntIsIntegral extends BigIntIsIntegral, BigIntOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#","e":false,"i":"","n":"BigIntIsIntegral","t":"BigIntIsIntegral extends Integral[BigInt]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#fromInt-fa6","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): BigInt","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#minus-fffff84d","e":false,"i":"","n":"minus","t":"minus(x: BigInt, y: BigInt): BigInt","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#negate-7a0","e":false,"i":"","n":"negate","t":"negate(x: BigInt): BigInt","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[BigInt]","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#plus-fffff84d","e":false,"i":"","n":"plus","t":"plus(x: BigInt, y: BigInt): BigInt","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#quot-fffff84d","e":false,"i":"","n":"quot","t":"quot(x: BigInt, y: BigInt): BigInt","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#rem-fffff84d","e":false,"i":"","n":"rem","t":"rem(x: BigInt, y: BigInt): BigInt","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#times-fffff84d","e":false,"i":"","n":"times","t":"times(x: BigInt, y: BigInt): BigInt","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#toDouble-fffffa06","e":false,"i":"","n":"toDouble","t":"toDouble(x: BigInt): Double","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#toFloat-987","e":false,"i":"","n":"toFloat","t":"toFloat(x: BigInt): Float","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#toInt-dda","e":false,"i":"","n":"toInt","t":"toInt(x: BigInt): Int","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$BigIntIsIntegral.html#toLong-fffffdf1","e":false,"i":"","n":"toLong","t":"toLong(x: BigInt): Long","d":"scala.math.Numeric.BigIntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral$.html#","e":false,"i":"","n":"ByteIsIntegral","t":"ByteIsIntegral extends ByteIsIntegral, ByteOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#","e":false,"i":"","n":"ByteIsIntegral","t":"ByteIsIntegral extends Integral[Byte]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#fromInt-fffffb37","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): Byte","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#minus-670","e":false,"i":"","n":"minus","t":"minus(x: Byte, y: Byte): Byte","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#negate-da0","e":false,"i":"","n":"negate","t":"negate(x: Byte): Byte","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[Byte]","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#plus-670","e":false,"i":"","n":"plus","t":"plus(x: Byte, y: Byte): Byte","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#quot-670","e":false,"i":"","n":"quot","t":"quot(x: Byte, y: Byte): Byte","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#rem-670","e":false,"i":"","n":"rem","t":"rem(x: Byte, y: Byte): Byte","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#times-670","e":false,"i":"","n":"times","t":"times(x: Byte, y: Byte): Byte","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#toDouble-269","e":false,"i":"","n":"toDouble","t":"toDouble(x: Byte): Double","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#toFloat-fffff8c4","e":false,"i":"","n":"toFloat","t":"toFloat(x: Byte): Float","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#toInt-857","e":false,"i":"","n":"toInt","t":"toInt(x: Byte): Int","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ByteIsIntegral.html#toLong-314","e":false,"i":"","n":"toLong","t":"toLong(x: Byte): Long","d":"scala.math.Numeric.ByteIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral$.html#","e":false,"i":"","n":"CharIsIntegral","t":"CharIsIntegral extends CharIsIntegral, CharOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#","e":false,"i":"","n":"CharIsIntegral","t":"CharIsIntegral extends Integral[Char]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#fromInt-fffffd85","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): Char","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#minus-da","e":false,"i":"","n":"minus","t":"minus(x: Char, y: Char): Char","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#negate-8bc","e":false,"i":"","n":"negate","t":"negate(x: Char): Char","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[Char]","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#plus-da","e":false,"i":"","n":"plus","t":"plus(x: Char, y: Char): Char","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#quot-da","e":false,"i":"","n":"quot","t":"quot(x: Char, y: Char): Char","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#rem-da","e":false,"i":"","n":"rem","t":"rem(x: Char, y: Char): Char","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#times-da","e":false,"i":"","n":"times","t":"times(x: Char, y: Char): Char","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#toDouble-ffffffb7","e":false,"i":"","n":"toDouble","t":"toDouble(x: Char): Double","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#toFloat-fffff9b6","e":false,"i":"","n":"toFloat","t":"toFloat(x: Char): Float","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#toInt-dc9","e":false,"i":"","n":"toInt","t":"toInt(x: Char): Int","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$CharIsIntegral.html#toLong-be2","e":false,"i":"","n":"toLong","t":"toLong(x: Char): Long","d":"scala.math.Numeric.CharIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional$.html#","e":false,"i":"","n":"DoubleIsFractional","t":"DoubleIsFractional extends DoubleIsFractional, IeeeOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#","e":false,"i":"","n":"DoubleIsFractional","t":"DoubleIsFractional extends Fractional[Double]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#div-44b","e":false,"i":"","n":"div","t":"div(x: Double, y: Double): Double","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#fromInt-640","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): Double","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#minus-44b","e":false,"i":"","n":"minus","t":"minus(x: Double, y: Double): Double","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#negate-5b2","e":false,"i":"","n":"negate","t":"negate(x: Double): Double","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[Double]","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#plus-44b","e":false,"i":"","n":"plus","t":"plus(x: Double, y: Double): Double","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#times-44b","e":false,"i":"","n":"times","t":"times(x: Double, y: Double): Double","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#toDouble-5b2","e":false,"i":"","n":"toDouble","t":"toDouble(x: Double): Double","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#toFloat-85b","e":false,"i":"","n":"toFloat","t":"toFloat(x: Double): Float","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#toInt-fffff1ae","e":false,"i":"","n":"toInt","t":"toInt(x: Double): Int","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$DoubleIsFractional.html#toLong-fffff49d","e":false,"i":"","n":"toLong","t":"toLong(x: Double): Long","d":"scala.math.Numeric.DoubleIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ExtraImplicits.html#","e":false,"i":"","n":"ExtraImplicits","t":"ExtraImplicits","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$ExtraImplicits.html#infixNumericOps-fffffa91","e":false,"i":"","n":"infixNumericOps","t":"infixNumericOps[T](x: T)(implicit num: Numeric[T]): Numeric[T]#NumericOps","d":"scala.math.Numeric.ExtraImplicits","k":"def","x":"These implicits create conversions from a value for which an implicit Numeric\nexists to the inner class which creates infix operations.  Once imported, you\ncan write methods as follows:"},
{"l":"api/scala/math/Numeric$$FloatIsFractional$.html#","e":false,"i":"","n":"FloatIsFractional","t":"FloatIsFractional extends FloatIsFractional, IeeeOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#","e":false,"i":"","n":"FloatIsFractional","t":"FloatIsFractional extends Fractional[Float]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#div-14","e":false,"i":"","n":"div","t":"div(x: Float, y: Float): Float","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#fromInt-fffffe0d","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): Float","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#minus-14","e":false,"i":"","n":"minus","t":"minus(x: Float, y: Float): Float","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#negate-fffffb80","e":false,"i":"","n":"negate","t":"negate(x: Float): Float","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[Float]","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#plus-14","e":false,"i":"","n":"plus","t":"plus(x: Float, y: Float): Float","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#times-14","e":false,"i":"","n":"times","t":"times(x: Float, y: Float): Float","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#toDouble-72d","e":false,"i":"","n":"toDouble","t":"toDouble(x: Float): Double","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#toFloat-fffffb80","e":false,"i":"","n":"toFloat","t":"toFloat(x: Float): Float","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#toInt-a13","e":false,"i":"","n":"toInt","t":"toInt(x: Float): Int","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$FloatIsFractional.html#toLong-8d8","e":false,"i":"","n":"toLong","t":"toLong(x: Float): Long","d":"scala.math.Numeric.FloatIsFractional","k":"def","x":""},
{"l":"api/scala/math/Numeric$$Implicits$.html#","e":false,"i":"","n":"Implicits","t":"Implicits extends ExtraImplicits","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral$.html#","e":false,"i":"","n":"IntIsIntegral","t":"IntIsIntegral extends IntIsIntegral, IntOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#","e":false,"i":"","n":"IntIsIntegral","t":"IntIsIntegral extends Integral[Int]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#fromInt-fffffbe0","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): Int","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#minus-f47","e":false,"i":"","n":"minus","t":"minus(x: Int, y: Int): Int","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#negate-fffffbe0","e":false,"i":"","n":"negate","t":"negate(x: Int): Int","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[Int]","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#plus-f47","e":false,"i":"","n":"plus","t":"plus(x: Int, y: Int): Int","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#quot-f47","e":false,"i":"","n":"quot","t":"quot(x: Int, y: Int): Int","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#rem-f47","e":false,"i":"","n":"rem","t":"rem(x: Int, y: Int): Int","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#times-f47","e":false,"i":"","n":"times","t":"times(x: Int, y: Int): Int","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#toDouble-640","e":false,"i":"","n":"toDouble","t":"toDouble(x: Int): Double","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#toFloat-fffffe0d","e":false,"i":"","n":"toFloat","t":"toFloat(x: Int): Float","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#toInt-fffffbe0","e":false,"i":"","n":"toInt","t":"toInt(x: Int): Int","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$IntIsIntegral.html#toLong-fffff0ab","e":false,"i":"","n":"toLong","t":"toLong(x: Int): Long","d":"scala.math.Numeric.IntIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral$.html#","e":false,"i":"","n":"LongIsIntegral","t":"LongIsIntegral extends LongIsIntegral, LongOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#","e":false,"i":"","n":"LongIsIntegral","t":"LongIsIntegral extends Integral[Long]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#fromInt-fffff0ab","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): Long","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#minus-fffff3cc","e":false,"i":"","n":"minus","t":"minus(x: Long, y: Long): Long","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#negate-fffff788","e":false,"i":"","n":"negate","t":"negate(x: Long): Long","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[Long]","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#plus-fffff3cc","e":false,"i":"","n":"plus","t":"plus(x: Long, y: Long): Long","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#quot-fffff3cc","e":false,"i":"","n":"quot","t":"quot(x: Long, y: Long): Long","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#rem-fffff3cc","e":false,"i":"","n":"rem","t":"rem(x: Long, y: Long): Long","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#times-fffff3cc","e":false,"i":"","n":"times","t":"times(x: Long, y: Long): Long","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#toDouble-9dd","e":false,"i":"","n":"toDouble","t":"toDouble(x: Long): Double","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#toFloat-2d0","e":false,"i":"","n":"toFloat","t":"toFloat(x: Long): Float","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#toInt-fffff563","e":false,"i":"","n":"toInt","t":"toInt(x: Long): Int","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$LongIsIntegral.html#toLong-fffff788","e":false,"i":"","n":"toLong","t":"toLong(x: Long): Long","d":"scala.math.Numeric.LongIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral$.html#","e":false,"i":"","n":"ShortIsIntegral","t":"ShortIsIntegral extends ShortIsIntegral, ShortOrdering","d":"scala.math.Numeric","k":"object","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#","e":false,"i":"","n":"ShortIsIntegral","t":"ShortIsIntegral extends Integral[Short]","d":"scala.math.Numeric","k":"trait","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#fromInt-fffff02d","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): Short","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#minus-fffff634","e":false,"i":"","n":"minus","t":"minus(x: Short, y: Short): Short","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#negate-fffff780","e":false,"i":"","n":"negate","t":"negate(x: Short): Short","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[Short]","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#plus-fffff634","e":false,"i":"","n":"plus","t":"plus(x: Short, y: Short): Short","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#quot-fffff634","e":false,"i":"","n":"quot","t":"quot(x: Short, y: Short): Short","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#rem-fffff634","e":false,"i":"","n":"rem","t":"rem(x: Short, y: Short): Short","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#times-fffff634","e":false,"i":"","n":"times","t":"times(x: Short, y: Short): Short","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#toDouble-fffff94d","e":false,"i":"","n":"toDouble","t":"toDouble(x: Short): Double","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#toFloat-fffff560","e":false,"i":"","n":"toFloat","t":"toFloat(x: Short): Float","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#toInt-fffffbf3","e":false,"i":"","n":"toInt","t":"toInt(x: Short): Int","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric$$ShortIsIntegral.html#toLong-fffff2f8","e":false,"i":"","n":"toLong","t":"toLong(x: Short): Long","d":"scala.math.Numeric.ShortIsIntegral","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#","e":false,"i":"","n":"Numeric","t":"Numeric[T] extends Ordering[T]","d":"scala.math","k":"trait","x":""},
{"l":"api/scala/math/Numeric.html#abs-d26","e":false,"i":"","n":"abs","t":"abs(x: T): T","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#fromInt-aba","e":false,"i":"","n":"fromInt","t":"fromInt(x: Int): T","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#minus-fffffab9","e":false,"i":"","n":"minus","t":"minus(x: T, y: T): T","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#mkNumericOps-fffff971","e":false,"i":"","n":"mkNumericOps","t":"mkNumericOps(lhs: T): NumericOps","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#negate-d26","e":false,"i":"","n":"negate","t":"negate(x: T): T","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#one-0","e":false,"i":"","n":"one","t":"one: T","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#parseString-fffffd22","e":false,"i":"","n":"parseString","t":"parseString(str: String): Option[T]","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#plus-fffffab9","e":false,"i":"","n":"plus","t":"plus(x: T, y: T): T","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#sign-d26","e":false,"i":"","n":"sign","t":"sign(x: T): T","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#signum-fffffaf4","e":false,"i":"","n":"signum","t":"signum(x: T): Int","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#times-fffffab9","e":false,"i":"","n":"times","t":"times(x: T, y: T): T","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#toDouble-fffffeac","e":false,"i":"","n":"toDouble","t":"toDouble(x: T): Double","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#toFloat-821","e":false,"i":"","n":"toFloat","t":"toFloat(x: T): Float","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#toInt-fffffaf4","e":false,"i":"","n":"toInt","t":"toInt(x: T): Int","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#toLong-fffff417","e":false,"i":"","n":"toLong","t":"toLong(x: T): Long","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric.html#zero-0","e":false,"i":"","n":"zero","t":"zero: T","d":"scala.math.Numeric","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#","e":false,"i":"","n":"NumericOps","t":"NumericOps(lhs: Numeric.this.T)","d":"scala.math.Numeric","k":"class","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#*-d26","e":false,"i":"","n":"*","t":"*(rhs: Numeric.this.T): Numeric.this.T","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#+-d26","e":false,"i":"","n":"+","t":"+(rhs: Numeric.this.T): Numeric.this.T","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#--d26","e":false,"i":"","n":"-","t":"-(rhs: Numeric.this.T): Numeric.this.T","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#abs-0","e":false,"i":"","n":"abs","t":"abs: Numeric.this.T","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#sign-0","e":false,"i":"","n":"sign","t":"sign: Numeric.this.T","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#signum-0","e":false,"i":"","n":"signum","t":"signum: Int","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Numeric$NumericOps.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: Numeric.this.T","d":"scala.math.Numeric.NumericOps","k":"def","x":""},
{"l":"api/scala/math/Ordered.html#","e":false,"i":"","n":"Ordered","t":"Ordered[A] extends Comparable[A]","d":"scala.math","k":"trait","x":"A trait for data that have a single, natural ordering.  See\nscala.math.Ordering before using this trait for\nmore information about whether to use scala.math.Ordering instead."},
{"l":"api/scala/math/Ordered.html#<-4ad","e":false,"i":"","n":"<","t":"<(that: A): Boolean","d":"scala.math.Ordered","k":"def","x":"Returns true if this is less than that\n"},
{"l":"api/scala/math/Ordered.html#<=-4ad","e":false,"i":"","n":"<=","t":"<=(that: A): Boolean","d":"scala.math.Ordered","k":"def","x":"Returns true if this is less than or equal to that.\n"},
{"l":"api/scala/math/Ordered.html#>-4ad","e":false,"i":"","n":">","t":">(that: A): Boolean","d":"scala.math.Ordered","k":"def","x":"Returns true if this is greater than that.\n"},
{"l":"api/scala/math/Ordered.html#>=-4ad","e":false,"i":"","n":">=","t":">=(that: A): Boolean","d":"scala.math.Ordered","k":"def","x":"Returns true if this is greater than or equal to that.\n"},
{"l":"api/scala/math/Ordered.html#compare-fffffaf4","e":false,"i":"","n":"compare","t":"compare(that: A): Int","d":"scala.math.Ordered","k":"def","x":"Result of comparing this with operand that."},
{"l":"api/scala/math/Ordered.html#compareTo-fffffaf4","e":false,"i":"","n":"compareTo","t":"compareTo(that: A): Int","d":"scala.math.Ordered","k":"def","x":"Result of comparing this with operand that.\n"},
{"l":"api/scala/math/Ordered$.html#","e":false,"i":"","n":"Ordered","t":"Ordered","d":"scala.math","k":"object","x":""},
{"l":"api/scala/math/Ordered$.html#orderingToOrdered-cbd","e":false,"i":"","n":"orderingToOrdered","t":"orderingToOrdered[T](x: T)(implicit ord: Ordering[T]): Ordered[T]","d":"scala.math.Ordered","k":"def","x":"Lens from Ordering[T] to Ordered[T]"},
{"l":"api/scala/math/Ordering.html#","e":false,"i":"","n":"Ordering","t":"Ordering[T] extends Comparator[T], PartialOrdering[T], Serializable","d":"scala.math","k":"trait","x":"Ordering is a trait whose instances each represent a strategy for sorting\ninstances of a type."},
{"l":"api/scala/math/Ordering.html#compare-cc1","e":false,"i":"","n":"compare","t":"compare(x: T, y: T): Int","d":"scala.math.Ordering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering.html#isReverseOf-fffff12e","e":false,"i":"","n":"isReverseOf","t":"isReverseOf(other: Ordering[_]): Boolean","d":"scala.math.Ordering","k":"def","x":"Returns whether or not the other ordering is the opposite\nordering of this one."},
{"l":"api/scala/math/Ordering.html#max-fffff4ea","e":false,"i":"","n":"max","t":"max[U <: T](x: U, y: U): U","d":"scala.math.Ordering","k":"def","x":"Return x if x >= y, otherwise y."},
{"l":"api/scala/math/Ordering.html#min-fffff4ea","e":false,"i":"","n":"min","t":"min[U <: T](x: U, y: U): U","d":"scala.math.Ordering","k":"def","x":"Return x if x <= y, otherwise y."},
{"l":"api/scala/math/Ordering.html#mkOrderingOps-fffff7af","e":false,"i":"","n":"mkOrderingOps","t":"mkOrderingOps(lhs: T): OrderingOps","d":"scala.math.Ordering","k":"def","x":"This implicit method augments T with the comparison operators defined\nin scala.math.Ordering.Ops.\n"},
{"l":"api/scala/math/Ordering.html#on-b32","e":false,"i":"","n":"on","t":"on[U](f: U => T): Ordering[U]","d":"scala.math.Ordering","k":"def","x":"Given f, a function from U into T, creates an Ordering[U] whose compare\nfunction is equivalent to:"},
{"l":"api/scala/math/Ordering.html#orElse-6c0","e":false,"i":"","n":"orElse","t":"orElse(other: Ordering[T]): Ordering[T]","d":"scala.math.Ordering","k":"def","x":"Creates an Ordering[T] whose compare function returns the\nresult of this Ordering's compare function, if it is non-zero,\nor else the result of others compare function.\n"},
{"l":"api/scala/math/Ordering.html#orElseBy-fffff300","e":false,"i":"","n":"orElseBy","t":"orElseBy[S](f: T => S)(implicit ord: Ordering[S]): Ordering[T]","d":"scala.math.Ordering","k":"def","x":"Given f, a function from T into S, creates an Ordering[T] whose compare\nfunction returns the result of this Ordering's compare function,\nif it is non-zero, or else a result equivalent to:"},
{"l":"api/scala/math/Ordering.html#tryCompare-a62","e":false,"i":"","n":"tryCompare","t":"tryCompare(x: T, y: T): Some[Int]","d":"scala.math.Ordering","k":"def","x":"Returns whether a comparison between x and y is defined, and if so\nthe result of compare(x, y).\n"},
{"l":"api/scala/math/Ordering$OrderingOps.html#","e":false,"i":"","n":"OrderingOps","t":"OrderingOps(lhs: Ordering.this.T)","d":"scala.math.Ordering","k":"class","x":"This inner class defines comparison operators available for T."},
{"l":"api/scala/math/Ordering$OrderingOps.html#<-4ad","e":false,"i":"","n":"<","t":"<(rhs: Ordering.this.T): Boolean","d":"scala.math.Ordering.OrderingOps","k":"def","x":""},
{"l":"api/scala/math/Ordering$OrderingOps.html#<=-4ad","e":false,"i":"","n":"<=","t":"<=(rhs: Ordering.this.T): Boolean","d":"scala.math.Ordering.OrderingOps","k":"def","x":""},
{"l":"api/scala/math/Ordering$OrderingOps.html#>-4ad","e":false,"i":"","n":">","t":">(rhs: Ordering.this.T): Boolean","d":"scala.math.Ordering.OrderingOps","k":"def","x":""},
{"l":"api/scala/math/Ordering$OrderingOps.html#>=-4ad","e":false,"i":"","n":">=","t":">=(rhs: Ordering.this.T): Boolean","d":"scala.math.Ordering.OrderingOps","k":"def","x":""},
{"l":"api/scala/math/Ordering$OrderingOps.html#equiv-4ad","e":false,"i":"","n":"equiv","t":"equiv(rhs: Ordering.this.T): Boolean","d":"scala.math.Ordering.OrderingOps","k":"def","x":""},
{"l":"api/scala/math/Ordering$OrderingOps.html#max-d26","e":false,"i":"","n":"max","t":"max(rhs: Ordering.this.T): Ordering.this.T","d":"scala.math.Ordering.OrderingOps","k":"def","x":""},
{"l":"api/scala/math/Ordering$OrderingOps.html#min-d26","e":false,"i":"","n":"min","t":"min(rhs: Ordering.this.T): Ordering.this.T","d":"scala.math.Ordering.OrderingOps","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#","e":false,"i":"","n":"Ordering","t":"Ordering extends LowPriorityOrderingImplicits","d":"scala.math","k":"object","x":"This is the companion object for the scala.math.Ordering trait."},
{"l":"api/scala/math/Ordering$.html#Iterable-fffffa31","e":false,"i":"","n":"Iterable","t":"Iterable[T](implicit ord: Ordering[T]): Ordering[Iterable[T]]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#Option-fffffa31","e":false,"i":"","n":"Option","t":"Option[T](implicit ord: Ordering[T]): Ordering[Option[T]]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#Tuple2-4c0","e":false,"i":"","n":"Tuple2","t":"Tuple2[T1, T2](implicit ord1: Ordering[T1], ord2: Ordering[T2]): Ordering[(T1, T2)]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#Tuple3-fffff133","e":false,"i":"","n":"Tuple3","t":"Tuple3[T1, T2, T3](implicit ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3]): Ordering[(T1, T2, T3)]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#Tuple4-fffffb3e","e":false,"i":"","n":"Tuple4","t":"Tuple4[T1, T2, T3, T4](implicit ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4]): Ordering[(T1, T2, T3, T4)]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#Tuple5-535","e":false,"i":"","n":"Tuple5","t":"Tuple5[T1, T2, T3, T4, T5](implicit ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5]): Ordering[(T1, T2, T3, T4, T5)]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#Tuple6-fffff4bc","e":false,"i":"","n":"Tuple6","t":"Tuple6[T1, T2, T3, T4, T5, T6](implicit ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5], ord6: Ordering[T6]): Ordering[(T1, T2, T3, T4, T5, T6)]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#Tuple7-fffff637","e":false,"i":"","n":"Tuple7","t":"Tuple7[T1, T2, T3, T4, T5, T6, T7](implicit ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5], ord6: Ordering[T6], ord7: Ordering[T7]): Ordering[(T1, T2, T3, T4, T5, T6, T7)]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#Tuple8-fffff13a","e":false,"i":"","n":"Tuple8","t":"Tuple8[T1, T2, T3, T4, T5, T6, T7, T8](implicit ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5], ord6: Ordering[T6], ord7: Ordering[T7], ord8: Ordering[T8]): Ordering[(T1, T2, T3, T4, T5, T6, T7, T8)]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#Tuple9-fffff439","e":false,"i":"","n":"Tuple9","t":"Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9](implicit ord1: Ordering[T1], ord2: Ordering[T2], ord3: Ordering[T3], ord4: Ordering[T4], ord5: Ordering[T5], ord6: Ordering[T6], ord7: Ordering[T7], ord8: Ordering[T8], ord9: Ordering[T9]): Ordering[(T1, T2, T3, T4, T5, T6, T7, T8, T9)]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#apply-fffffa31","e":false,"i":"","n":"apply","t":"apply[T](implicit ord: Ordering[T]): Ordering[T]","d":"scala.math.Ordering","k":"def","x":""},
{"l":"api/scala/math/Ordering$.html#by-fffff19f","e":false,"i":"","n":"by","t":"by[T, S](f: T => S)(implicit ord: Ordering[S]): Ordering[T]","d":"scala.math.Ordering","k":"def","x":"Given f, a function from T into S, creates an Ordering[T] whose compare\nfunction is equivalent to:"},
{"l":"api/scala/math/Ordering$.html#fromLessThan-191","e":false,"i":"","n":"fromLessThan","t":"fromLessThan[T](cmp: (T, T) => Boolean): Ordering[T]","d":"scala.math.Ordering","k":"def","x":"Construct an Ordering[T] given a function lt."},
{"l":"api/scala/math/Ordering$$BigDecimal$.html#","e":false,"i":"","n":"BigDecimal","t":"BigDecimal extends BigDecimalOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$BigDecimalOrdering.html#","e":false,"i":"","n":"BigDecimalOrdering","t":"BigDecimalOrdering extends Ordering[BigDecimal]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$BigDecimalOrdering.html#compare-fffff3c7","e":false,"i":"","n":"compare","t":"compare(x: BigDecimal, y: BigDecimal): Int","d":"scala.math.Ordering.BigDecimalOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$BigInt$.html#","e":false,"i":"","n":"BigInt","t":"BigInt extends BigIntOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$BigIntOrdering.html#","e":false,"i":"","n":"BigIntOrdering","t":"BigIntOrdering extends Ordering[BigInt]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$BigIntOrdering.html#compare-b87","e":false,"i":"","n":"compare","t":"compare(x: BigInt, y: BigInt): Int","d":"scala.math.Ordering.BigIntOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$Boolean$.html#","e":false,"i":"","n":"Boolean","t":"Boolean extends BooleanOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$BooleanOrdering.html#","e":false,"i":"","n":"BooleanOrdering","t":"BooleanOrdering extends Ordering[Boolean]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$BooleanOrdering.html#compare-fffff327","e":false,"i":"","n":"compare","t":"compare(x: Boolean, y: Boolean): Int","d":"scala.math.Ordering.BooleanOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$Byte$.html#","e":false,"i":"","n":"Byte","t":"Byte extends ByteOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$ByteOrdering.html#","e":false,"i":"","n":"ByteOrdering","t":"ByteOrdering extends Ordering[Byte]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$ByteOrdering.html#compare-fffff587","e":false,"i":"","n":"compare","t":"compare(x: Byte, y: Byte): Int","d":"scala.math.Ordering.ByteOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$CachedReverse.html#","e":false,"i":"","n":"CachedReverse","t":"CachedReverse[T] extends Ordering[T]","d":"scala.math.Ordering","k":"trait","x":"An ordering which caches the value of its reverse."},
{"l":"api/scala/math/Ordering$$Char$.html#","e":false,"i":"","n":"Char","t":"Char extends CharOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$CharOrdering.html#","e":false,"i":"","n":"CharOrdering","t":"CharOrdering extends Ordering[Char]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$CharOrdering.html#compare-fffff9eb","e":false,"i":"","n":"compare","t":"compare(x: Char, y: Char): Int","d":"scala.math.Ordering.CharOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$DeprecatedDoubleOrdering$.html#","e":false,"i":"","n":"DeprecatedDoubleOrdering","t":"DeprecatedDoubleOrdering extends TotalOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$DeprecatedFloatOrdering$.html#","e":false,"i":"","n":"DeprecatedFloatOrdering","t":"DeprecatedFloatOrdering extends TotalOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$Double$.html#","e":false,"i":"","n":"Double","t":"Double","d":"scala.math.Ordering","k":"object","x":"Orderings for Doubles."},
{"l":"api/scala/math/Ordering$$Double$$IeeeOrdering$.html#","e":false,"i":"","n":"IeeeOrdering","t":"IeeeOrdering extends IeeeOrdering","d":"scala.math.Ordering.Double","k":"object","x":""},
{"l":"api/scala/math/Ordering$$Double$$IeeeOrdering.html#","e":false,"i":"","n":"IeeeOrdering","t":"IeeeOrdering extends Ordering[Double]","d":"scala.math.Ordering.Double","k":"trait","x":"An ordering for Doubles which is consistent with IEEE specifications\nwhenever possible."},
{"l":"api/scala/math/Ordering$$Double$$IeeeOrdering.html#compare-1b5","e":false,"i":"","n":"compare","t":"compare(x: Double, y: Double): Int","d":"scala.math.Ordering.Double.IeeeOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$Double$$TotalOrdering$.html#","e":false,"i":"","n":"TotalOrdering","t":"TotalOrdering extends TotalOrdering","d":"scala.math.Ordering.Double","k":"object","x":""},
{"l":"api/scala/math/Ordering$$Double$$TotalOrdering.html#","e":false,"i":"","n":"TotalOrdering","t":"TotalOrdering extends Ordering[Double]","d":"scala.math.Ordering.Double","k":"trait","x":"An ordering for Doubles which is a fully consistent total ordering,\nand treats NaN as larger than all other Double values; it behaves\nthe same as java.lang.Double.compare."},
{"l":"api/scala/math/Ordering$$Double$$TotalOrdering.html#compare-1b5","e":false,"i":"","n":"compare","t":"compare(x: Double, y: Double): Int","d":"scala.math.Ordering.Double.TotalOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$ExtraImplicits.html#","e":false,"i":"","n":"ExtraImplicits","t":"ExtraImplicits","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$ExtraImplicits.html#infixOrderingOps-4b4","e":false,"i":"","n":"infixOrderingOps","t":"infixOrderingOps[T](x: T)(implicit ord: Ordering[T]): Ordering[T]#OrderingOps","d":"scala.math.Ordering.ExtraImplicits","k":"def","x":"This implicit creates a conversion from any value for which an\nimplicit Ordering exists to the class which creates infix operations.\nWith it imported, you can write methods as follows:"},
{"l":"api/scala/math/Ordering$$ExtraImplicits.html#seqOrdering-172","e":false,"i":"","n":"seqOrdering","t":"seqOrdering[CC <: (Seq), T](implicit ord: Ordering[T]): Ordering[CC[T]]","d":"scala.math.Ordering.ExtraImplicits","k":"def","x":"Not in the standard scope due to the potential for divergence:\nFor instance implicitly[Ordering[Any]] diverges in its presence.\n"},
{"l":"api/scala/math/Ordering$$ExtraImplicits.html#sortedSetOrdering-172","e":false,"i":"","n":"sortedSetOrdering","t":"sortedSetOrdering[CC <: (SortedSet), T](implicit ord: Ordering[T]): Ordering[CC[T]]","d":"scala.math.Ordering.ExtraImplicits","k":"def","x":""},
{"l":"api/scala/math/Ordering$$Float$.html#","e":false,"i":"","n":"Float","t":"Float","d":"scala.math.Ordering","k":"object","x":"Orderings for Floats."},
{"l":"api/scala/math/Ordering$$Float$$IeeeOrdering$.html#","e":false,"i":"","n":"IeeeOrdering","t":"IeeeOrdering extends IeeeOrdering","d":"scala.math.Ordering.Float","k":"object","x":""},
{"l":"api/scala/math/Ordering$$Float$$IeeeOrdering.html#","e":false,"i":"","n":"IeeeOrdering","t":"IeeeOrdering extends Ordering[Float]","d":"scala.math.Ordering.Float","k":"trait","x":"An ordering for Floats which is consistent with IEEE specifications\nwhenever possible."},
{"l":"api/scala/math/Ordering$$Float$$IeeeOrdering.html#compare-3a7","e":false,"i":"","n":"compare","t":"compare(x: Float, y: Float): Int","d":"scala.math.Ordering.Float.IeeeOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$Float$$TotalOrdering$.html#","e":false,"i":"","n":"TotalOrdering","t":"TotalOrdering extends TotalOrdering","d":"scala.math.Ordering.Float","k":"object","x":""},
{"l":"api/scala/math/Ordering$$Float$$TotalOrdering.html#","e":false,"i":"","n":"TotalOrdering","t":"TotalOrdering extends Ordering[Float]","d":"scala.math.Ordering.Float","k":"trait","x":"An ordering for Floats which is a fully consistent total ordering,\nand treats NaN as larger than all other Float values; it behaves\nthe same as java.lang.Float.compare."},
{"l":"api/scala/math/Ordering$$Float$$TotalOrdering.html#compare-3a7","e":false,"i":"","n":"compare","t":"compare(x: Float, y: Float): Int","d":"scala.math.Ordering.Float.TotalOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$Implicits$.html#","e":false,"i":"","n":"Implicits","t":"Implicits extends ExtraImplicits","d":"scala.math.Ordering","k":"object","x":"An object containing implicits which are not in the default scope."},
{"l":"api/scala/math/Ordering$$Int$.html#","e":false,"i":"","n":"Int","t":"Int extends IntOrdering, CachedReverse[Int]","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$IntOrdering.html#","e":false,"i":"","n":"IntOrdering","t":"IntOrdering extends Ordering[Int]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$IntOrdering.html#compare-f47","e":false,"i":"","n":"compare","t":"compare(x: Int, y: Int): Int","d":"scala.math.Ordering.IntOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$Long$.html#","e":false,"i":"","n":"Long","t":"Long extends LongOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$LongOrdering.html#","e":false,"i":"","n":"LongOrdering","t":"LongOrdering extends Ordering[Long]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$LongOrdering.html#compare-9f","e":false,"i":"","n":"compare","t":"compare(x: Long, y: Long): Int","d":"scala.math.Ordering.LongOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$OptionOrdering.html#","e":false,"i":"","n":"OptionOrdering","t":"OptionOrdering[T] extends Ordering[Option[T]]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$OptionOrdering.html#compare-f6d","e":false,"i":"","n":"compare","t":"compare(x: Option[T], y: Option[T]): Int","d":"scala.math.Ordering.OptionOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$OptionOrdering.html#optionOrdering-0","e":false,"i":"","n":"optionOrdering","t":"optionOrdering: Ordering[T]","d":"scala.math.Ordering.OptionOrdering","k":"def","x":""},
{"l":"api/scala/math/Ordering$$Short$.html#","e":false,"i":"","n":"Short","t":"Short extends ShortOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$ShortOrdering.html#","e":false,"i":"","n":"ShortOrdering","t":"ShortOrdering extends Ordering[Short]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$ShortOrdering.html#compare-fffff7a7","e":false,"i":"","n":"compare","t":"compare(x: Short, y: Short): Int","d":"scala.math.Ordering.ShortOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$String$.html#","e":false,"i":"","n":"String","t":"String extends StringOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$StringOrdering.html#","e":false,"i":"","n":"StringOrdering","t":"StringOrdering extends Ordering[String]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$StringOrdering.html#compare-ffffff9d","e":false,"i":"","n":"compare","t":"compare(x: String, y: String): Int","d":"scala.math.Ordering.StringOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$Symbol$.html#","e":false,"i":"","n":"Symbol","t":"Symbol extends SymbolOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$SymbolOrdering.html#","e":false,"i":"","n":"SymbolOrdering","t":"SymbolOrdering extends Ordering[Symbol]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$SymbolOrdering.html#compare-67","e":false,"i":"","n":"compare","t":"compare(x: Symbol, y: Symbol): Int","d":"scala.math.Ordering.SymbolOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/Ordering$$Unit$.html#","e":false,"i":"","n":"Unit","t":"Unit extends UnitOrdering","d":"scala.math.Ordering","k":"object","x":""},
{"l":"api/scala/math/Ordering$$UnitOrdering.html#","e":false,"i":"","n":"UnitOrdering","t":"UnitOrdering extends Ordering[Unit]","d":"scala.math.Ordering","k":"trait","x":""},
{"l":"api/scala/math/Ordering$$UnitOrdering.html#compare-d27","e":false,"i":"","n":"compare","t":"compare(x: Unit, y: Unit): Int","d":"scala.math.Ordering.UnitOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/math/PartialOrdering.html#","e":false,"i":"","n":"PartialOrdering","t":"PartialOrdering[T] extends Equiv[T]","d":"scala.math","k":"trait","x":"A trait for representing partial orderings.  It is important to\ndistinguish between a type that has a partial order and a representation\nof partial ordering on some type.  This trait is for representing the\nlatter."},
{"l":"api/scala/math/PartialOrdering.html#equiv-fffff7fa","e":false,"i":"","n":"equiv","t":"equiv(x: T, y: T): Boolean","d":"scala.math.PartialOrdering","k":"def","x":"Returns true iff x is equivalent to y in the ordering.\n"},
{"l":"api/scala/math/PartialOrdering.html#gt-fffff7fa","e":false,"i":"","n":"gt","t":"gt(x: T, y: T): Boolean","d":"scala.math.PartialOrdering","k":"def","x":"Returns true iff y comes before x in the ordering\nand is not the same as x.\n"},
{"l":"api/scala/math/PartialOrdering.html#gteq-fffff7fa","e":false,"i":"","n":"gteq","t":"gteq(x: T, y: T): Boolean","d":"scala.math.PartialOrdering","k":"def","x":"Returns true iff y comes before x in the ordering.\n"},
{"l":"api/scala/math/PartialOrdering.html#lt-fffff7fa","e":false,"i":"","n":"lt","t":"lt(x: T, y: T): Boolean","d":"scala.math.PartialOrdering","k":"def","x":"Returns true iff x comes before y in the ordering\nand is not the same as y.\n"},
{"l":"api/scala/math/PartialOrdering.html#lteq-fffff7fa","e":false,"i":"","n":"lteq","t":"lteq(x: T, y: T): Boolean","d":"scala.math.PartialOrdering","k":"def","x":"Returns true iff x comes before y in the ordering.\n"},
{"l":"api/scala/math/PartialOrdering.html#reverse-0","e":false,"i":"","n":"reverse","t":"reverse: PartialOrdering[T]","d":"scala.math.PartialOrdering","k":"def","x":""},
{"l":"api/scala/math/PartialOrdering.html#tryCompare-fffffa63","e":false,"i":"","n":"tryCompare","t":"tryCompare(x: T, y: T): Option[Int]","d":"scala.math.PartialOrdering","k":"def","x":"Result of comparing x with operand y.\nReturns None if operands are not comparable.\nIf operands are comparable, returns Some(r) where\n- r < 0    iff    x < y\n- r == 0   iff    x == y\n- r > 0    iff    x > y\n"},
{"l":"api/scala/math/PartialOrdering$.html#","e":false,"i":"","n":"PartialOrdering","t":"PartialOrdering","d":"scala.math","k":"object","x":""},
{"l":"api/scala/math/PartialOrdering$.html#apply-11f","e":false,"i":"","n":"apply","t":"apply[T](implicit ev: PartialOrdering[T]): PartialOrdering[T]","d":"scala.math.PartialOrdering","k":"def","x":""},
{"l":"api/scala/math/PartiallyOrdered.html#","e":false,"i":"","n":"PartiallyOrdered","t":"PartiallyOrdered[+A]","d":"scala.math","k":"trait","x":"A class for partially ordered data.\n"},
{"l":"api/scala/math/PartiallyOrdered.html#<-33","e":false,"i":"","n":"<","t":"<[B >: A : AsPartiallyOrdered](that: B): Boolean","d":"scala.math.PartiallyOrdered","k":"def","x":""},
{"l":"api/scala/math/PartiallyOrdered.html#<=-33","e":false,"i":"","n":"<=","t":"<=[B >: A : AsPartiallyOrdered](that: B): Boolean","d":"scala.math.PartiallyOrdered","k":"def","x":""},
{"l":"api/scala/math/PartiallyOrdered.html#>-33","e":false,"i":"","n":">","t":">[B >: A : AsPartiallyOrdered](that: B): Boolean","d":"scala.math.PartiallyOrdered","k":"def","x":""},
{"l":"api/scala/math/PartiallyOrdered.html#>=-33","e":false,"i":"","n":">=","t":">=[B >: A : AsPartiallyOrdered](that: B): Boolean","d":"scala.math.PartiallyOrdered","k":"def","x":""},
{"l":"api/scala/math/PartiallyOrdered.html#AsPartiallyOrdered-0","e":false,"i":"","n":"AsPartiallyOrdered","t":"AsPartiallyOrdered[B] = B => PartiallyOrdered[B]","d":"scala.math.PartiallyOrdered","k":"type","x":""},
{"l":"api/scala/math/PartiallyOrdered.html#tryCompareTo-fffff70a","e":false,"i":"","n":"tryCompareTo","t":"tryCompareTo[B >: A : AsPartiallyOrdered](that: B): Option[Int]","d":"scala.math.PartiallyOrdered","k":"def","x":"Result of comparing this with operand that.\nReturns None if operands are not comparable.\nIf operands are comparable, returns Some(x) where\n- x < 0    iff   this  that\n- x == 0   iff   this == that\n- x > 0    iff   this  that\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#","e":false,"i":"","n":"ScalaNumericAnyConversions","t":"ScalaNumericAnyConversions","d":"scala.math","k":"trait","x":"Conversions which present a consistent conversion interface\nacross all the numeric types, suitable for use in value classes.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#byteValue-0","e":false,"i":"","n":"byteValue","t":"byteValue: Byte","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":""},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#doubleValue-0","e":false,"i":"","n":"doubleValue","t":"doubleValue: Double","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":""},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#floatValue-0","e":false,"i":"","n":"floatValue","t":"floatValue: Float","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":""},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#intValue-0","e":false,"i":"","n":"intValue","t":"intValue: Int","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":""},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#isValidByte-0","e":false,"i":"","n":"isValidByte","t":"isValidByte: Boolean","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns true iff this has a zero fractional part, and is within the\nrange of scala.Byte MinValue and MaxValue; otherwise returns false.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#isValidChar-0","e":false,"i":"","n":"isValidChar","t":"isValidChar: Boolean","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns true iff this has a zero fractional part, and is within the\nrange of scala.Char MinValue and MaxValue; otherwise returns false.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#isValidInt-0","e":false,"i":"","n":"isValidInt","t":"isValidInt: Boolean","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns true iff this has a zero fractional part, and is within the\nrange of scala.Int MinValue and MaxValue; otherwise returns false.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#isValidShort-0","e":false,"i":"","n":"isValidShort","t":"isValidShort: Boolean","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns true iff this has a zero fractional part, and is within the\nrange of scala.Short MinValue and MaxValue; otherwise returns false.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#isWhole-0","e":false,"i":"","n":"isWhole","t":"isWhole: Boolean","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":""},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#longValue-0","e":false,"i":"","n":"longValue","t":"longValue: Long","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":""},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#shortValue-0","e":false,"i":"","n":"shortValue","t":"shortValue: Short","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":""},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#toByte-0","e":false,"i":"","n":"toByte","t":"toByte: Byte","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns the value of this as a scala.Byte. This may involve\nrounding or truncation.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#toChar-0","e":false,"i":"","n":"toChar","t":"toChar: Char","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns the value of this as a scala.Char. This may involve\nrounding or truncation.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns the value of this as a scala.Double. This may involve\nrounding or truncation.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns the value of this as a scala.Float. This may involve\nrounding or truncation.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns the value of this as an scala.Int. This may involve\nrounding or truncation.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns the value of this as a scala.Long. This may involve\nrounding or truncation.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#toShort-0","e":false,"i":"","n":"toShort","t":"toShort: Short","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Returns the value of this as a scala.Short. This may involve\nrounding or truncation.\n"},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#unifiedPrimitiveEquals-4ad","e":false,"i":"","n":"unifiedPrimitiveEquals","t":"unifiedPrimitiveEquals(x: Any): Boolean","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":"Should only be called after all known non-primitive\ntypes have been excluded.  This method won't dispatch\nanywhere else after checking against the primitives\nto avoid infinite recursion between equals and this on\nunknown \"Number\" variants."},
{"l":"api/scala/math/ScalaNumericAnyConversions.html#unifiedPrimitiveHashcode-0","e":false,"i":"","n":"unifiedPrimitiveHashcode","t":"unifiedPrimitiveHashcode: Int","d":"scala.math.ScalaNumericAnyConversions","k":"def","x":""},
{"l":"api/scala/math/ScalaNumericConversions.html#","e":false,"i":"","n":"ScalaNumericConversions","t":"ScalaNumericConversions extends ScalaNumber, ScalaNumericAnyConversions","d":"scala.math","k":"trait","x":"A slightly more specific conversion trait for classes which\nextend ScalaNumber (which excludes value classes.)\n"},
{"l":"api/scala/math/ScalaNumericConversions.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: Object","d":"scala.math.ScalaNumericConversions","k":"def","x":""},
{"l":"api/scala/quoted.html#","e":false,"i":"","n":"scala.quoted","t":"scala.quoted","d":"","k":"package","x":""},
{"l":"api/scala/quoted.html#quotes-1e0","e":false,"i":"","n":"quotes","t":"quotes(using q: Quotes): q.type","d":"scala.quoted","k":"def","x":""},
{"l":"api/scala/quoted/runtime.html#","e":false,"i":"","n":"scala.quoted.runtime","t":"scala.quoted.runtime","d":"","k":"package","x":""},
{"l":"api/scala/quoted/runtime/Expr$.html#","e":false,"i":"","n":"Expr","t":"Expr","d":"scala.quoted.runtime","k":"object","x":""},
{"l":"api/scala/quoted/runtime/Expr$.html#nestedSplice-fffff940","e":false,"i":"","n":"nestedSplice","t":"nestedSplice[T](q: Quotes)(x: q.Nested ?=> Expr[T]): T","d":"scala.quoted.runtime.Expr","k":"def","x":""},
{"l":"api/scala/quoted/runtime/Expr$.html#quote-c4d","e":false,"i":"","n":"quote","t":"quote[T](x: T): Quotes ?=> Expr[T]","d":"scala.quoted.runtime.Expr","k":"def","x":""},
{"l":"api/scala/quoted/runtime/Expr$.html#splice-5d3","e":false,"i":"","n":"splice","t":"splice[T](x: Quotes ?=> Expr[T]): T","d":"scala.quoted.runtime.Expr","k":"def","x":""},
{"l":"api/scala/quoted/runtime/Patterns$.html#","e":false,"i":"","n":"Patterns","t":"Patterns","d":"scala.quoted.runtime","k":"object","x":""},
{"l":"api/scala/quoted/runtime/Patterns$.html#higherOrderHole-2f","e":false,"i":"","n":"higherOrderHole","t":"higherOrderHole[U](args: Any*): U","d":"scala.quoted.runtime.Patterns","k":"def","x":""},
{"l":"api/scala/quoted/runtime/Patterns$.html#higherOrderHoleWithTypes-fffff670","e":false,"i":"","n":"higherOrderHoleWithTypes","t":"higherOrderHoleWithTypes[U, T](args: Any*): U","d":"scala.quoted.runtime.Patterns","k":"def","x":""},
{"l":"api/scala/quoted/runtime/Patterns$.html#patternHigherOrderHole-e82","e":false,"i":"","n":"patternHigherOrderHole","t":"patternHigherOrderHole[U](pat: Any, args: Any*): U","d":"scala.quoted.runtime.Patterns","k":"def","x":""},
{"l":"api/scala/quoted/runtime/Patterns$.html#patternHole-fffff7c4","e":false,"i":"","n":"patternHole","t":"patternHole[T]: T","d":"scala.quoted.runtime.Patterns","k":"def","x":""},
{"l":"api/scala/quoted/runtime/Patterns$$fromAbove.html#","e":false,"i":"","n":"fromAbove","t":"fromAbove extends Annotation","d":"scala.quoted.runtime.Patterns","k":"class","x":""},
{"l":"api/scala/quoted/runtime/Patterns$$patternType.html#","e":false,"i":"","n":"patternType","t":"patternType extends Annotation","d":"scala.quoted.runtime.Patterns","k":"class","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching.html#","e":false,"i":"","n":"QuoteMatching","t":"QuoteMatching","d":"scala.quoted.runtime","k":"trait","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching.html#ExprMatch-0","e":false,"i":"","n":"ExprMatch","t":"ExprMatch: ExprMatchModule","d":"scala.quoted.runtime.QuoteMatching","k":"val","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching.html#TypeMatch-0","e":false,"i":"","n":"TypeMatch","t":"TypeMatch: TypeMatchModule","d":"scala.quoted.runtime.QuoteMatching","k":"val","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching$ExprMatchModule.html#","e":false,"i":"","n":"ExprMatchModule","t":"ExprMatchModule","d":"scala.quoted.runtime.QuoteMatching","k":"trait","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching$ExprMatchModule.html#unapply-b4f","e":false,"i":"","n":"unapply","t":"unapply[TypeBindings, Tup <: Tuple](scrutinee: Expr[Any])(using pattern: Expr[Any]): Option[Tup]","d":"scala.quoted.runtime.QuoteMatching.ExprMatchModule","k":"def","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching$TypeMatchModule.html#","e":false,"i":"","n":"TypeMatchModule","t":"TypeMatchModule","d":"scala.quoted.runtime.QuoteMatching","k":"trait","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching$TypeMatchModule.html#unapply-fffffdef","e":false,"i":"","n":"unapply","t":"unapply[TypeBindings, Tup <: Tuple](scrutinee: Type[_ <: AnyKind])(using pattern: Type[_ <: AnyKind]): Option[Tup]","d":"scala.quoted.runtime.QuoteMatching.TypeMatchModule","k":"def","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching$.html#","e":false,"i":"","n":"QuoteMatching","t":"QuoteMatching","d":"scala.quoted.runtime","k":"object","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching$.html#KCons-0","e":false,"i":"","n":"KCons","t":"KCons[+H <: AnyKind, +T <: KList] <: KList","d":"scala.quoted.runtime.QuoteMatching","k":"type","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching$.html#KList-0","e":false,"i":"","n":"KList","t":"KList","d":"scala.quoted.runtime.QuoteMatching","k":"type","x":""},
{"l":"api/scala/quoted/runtime/QuoteMatching$.html#KNil-0","e":false,"i":"","n":"KNil","t":"KNil <: KList","d":"scala.quoted.runtime.QuoteMatching","k":"type","x":""},
{"l":"api/scala/quoted/runtime/QuoteUnpickler.html#","e":false,"i":"","n":"QuoteUnpickler","t":"QuoteUnpickler","d":"scala.quoted.runtime","k":"trait","x":""},
{"l":"api/scala/quoted/runtime/QuoteUnpickler.html#unpickleExpr-fffff246","e":false,"i":"","n":"unpickleExpr","t":"unpickleExpr[T](pickled: String | List[String], typeHole: (Int, Seq[Any]) => Type[_ <: AnyKind], termHole: (Int, Seq[Any], Quotes) => Expr[_]): Expr[T]","d":"scala.quoted.runtime.QuoteUnpickler","k":"def","x":""},
{"l":"api/scala/quoted/runtime/QuoteUnpickler.html#unpickleExprV2-fffffdf7","e":false,"i":"","n":"unpickleExprV2","t":"unpickleExprV2[T](pickled: String | List[String], types: Null | Seq[Type[_ <: AnyKind]], termHole: Null | ((Int, Seq[Type[_ <: AnyKind] | Expr[Any]], Quotes) => Expr[_])): Expr[T]","d":"scala.quoted.runtime.QuoteUnpickler","k":"def","x":""},
{"l":"api/scala/quoted/runtime/QuoteUnpickler.html#unpickleType-fffff78b","e":false,"i":"","n":"unpickleType","t":"unpickleType[T <: AnyKind](pickled: String | List[String], typeHole: (Int, Seq[Any]) => Type[_ <: AnyKind], termHole: (Int, Seq[Any], Quotes) => Expr[_]): Type[T]","d":"scala.quoted.runtime.QuoteUnpickler","k":"def","x":""},
{"l":"api/scala/quoted/runtime/QuoteUnpickler.html#unpickleTypeV2-861","e":false,"i":"","n":"unpickleTypeV2","t":"unpickleTypeV2[T <: AnyKind](pickled: String | List[String], types: Null | Seq[Type[_ <: AnyKind]]): Type[T]","d":"scala.quoted.runtime.QuoteUnpickler","k":"def","x":""},
{"l":"api/scala/quoted/runtime/SplicedType.html#","e":false,"i":"","n":"SplicedType","t":"SplicedType extends Annotation","d":"scala.quoted.runtime","k":"class","x":""},
{"l":"api/scala/quoted/runtime/StopMacroExpansion.html#","e":false,"i":"","n":"StopMacroExpansion","t":"StopMacroExpansion extends Throwable","d":"scala.quoted.runtime","k":"class","x":""},
{"l":"api/scala/quoted/Expr.html#","e":false,"i":"","n":"Expr","t":"Expr[+T]","d":"scala.quoted","k":"class","x":""},
{"l":"api/scala/quoted/Expr$.html#","e":false,"i":"","n":"Expr","t":"Expr","d":"scala.quoted","k":"object","x":""},
{"l":"api/scala/quoted/Expr$.html#apply-128","e":false,"i":"","n":"apply","t":"apply[T](x: T)(using ToExpr[T])(using Quotes): Expr[T]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/Expr$.html#betaReduce-dc0","e":false,"i":"","n":"betaReduce","t":"betaReduce[T](expr: Expr[T])(using Quotes): Expr[T]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/Expr$.html#block-fffff9f0","e":false,"i":"","n":"block","t":"block[T](statements: List[Expr[Any]], expr: Expr[T])(using Quotes): Expr[T]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/Expr$.html#ofList-fffff2fa","e":false,"i":"","n":"ofList","t":"ofList[T](xs: Seq[Expr[T]])(using Type[T])(using Quotes): Expr[List[T]]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/Expr$.html#ofSeq-fffff2fa","e":false,"i":"","n":"ofSeq","t":"ofSeq[T](xs: Seq[Expr[T]])(using Type[T])(using Quotes): Expr[Seq[T]]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/Expr$.html#ofTuple-894","e":false,"i":"","n":"ofTuple","t":"ofTuple[T <: Tuple](tup: T)(using evidence$1: IsMappedBy[Expr][T], evidence$2: Type[T], Quotes): Expr[InverseMap[T, Expr]]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/Expr$.html#ofTupleFromSeq-149","e":false,"i":"","n":"ofTupleFromSeq","t":"ofTupleFromSeq(seq: Seq[Expr[Any]])(using Quotes): Expr[Tuple]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/Expr$.html#summon-4ab","e":false,"i":"","n":"summon","t":"summon[T](using Type[T])(using Quotes): Option[Expr[T]]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/Expr$.html#summonIgnoring-fffff1d6","e":false,"i":"","n":"summonIgnoring","t":"summonIgnoring[T](using Type[T])(using quotes: Quotes)(ignored: quotes.reflect.Symbol*): Option[Expr[T]]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/Expr$.html#unapply-fffff077","e":false,"i":"","n":"unapply","t":"unapply[T](x: Expr[T])(using FromExpr[T])(using Quotes): Option[T]","d":"scala.quoted.Expr","k":"def","x":""},
{"l":"api/scala/quoted/ExprMap.html#","e":false,"i":"","n":"ExprMap","t":"ExprMap","d":"scala.quoted","k":"trait","x":""},
{"l":"api/scala/quoted/ExprMap.html#transform-fffff334","e":false,"i":"","n":"transform","t":"transform[T](e: Expr[T])(using Type[T])(using Quotes): Expr[T]","d":"scala.quoted.ExprMap","k":"def","x":""},
{"l":"api/scala/quoted/ExprMap.html#transformChildren-fffff334","e":false,"i":"","n":"transformChildren","t":"transformChildren[T](e: Expr[T])(using Type[T])(using Quotes): Expr[T]","d":"scala.quoted.ExprMap","k":"def","x":""},
{"l":"api/scala/quoted/Exprs$.html#","e":false,"i":"","n":"Exprs","t":"Exprs","d":"scala.quoted","k":"object","x":""},
{"l":"api/scala/quoted/Exprs$.html#unapply-ff1","e":false,"i":"","n":"unapply","t":"unapply[T](exprs: Seq[Expr[T]])(using FromExpr[T])(using Quotes): Option[Seq[T]]","d":"scala.quoted.Exprs","k":"def","x":""},
{"l":"api/scala/quoted/FromExpr.html#","e":false,"i":"","n":"FromExpr","t":"FromExpr[T]","d":"scala.quoted","k":"trait","x":""},
{"l":"api/scala/quoted/FromExpr.html#unapply-fffff85f","e":false,"i":"","n":"unapply","t":"unapply(x: Expr[T])(using Quotes): Option[T]","d":"scala.quoted.FromExpr","k":"def","x":""},
{"l":"api/scala/quoted/FromExpr$.html#","e":false,"i":"","n":"FromExpr","t":"FromExpr","d":"scala.quoted","k":"object","x":""},
{"l":"api/scala/quoted/FromExpr$.html#BooleanFromExpr-e6c","e":false,"i":"","n":"BooleanFromExpr","t":"BooleanFromExpr[T <: Boolean]: FromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#ByteFromExpr-e6c","e":false,"i":"","n":"ByteFromExpr","t":"ByteFromExpr[T <: Byte]: FromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#CharFromExpr-e6c","e":false,"i":"","n":"CharFromExpr","t":"CharFromExpr[T <: Char]: FromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#DoubleFromExpr-e6c","e":false,"i":"","n":"DoubleFromExpr","t":"DoubleFromExpr[T <: Double]: FromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#EitherFromExpr-2b9","e":false,"i":"","n":"EitherFromExpr","t":"EitherFromExpr[L, R](using x$1: Type[L], x$2: Type[R], x$3: FromExpr[L], x$4: FromExpr[R]): EitherFromExpr[L, R]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#EmptyTupleFromExpr-0","e":false,"i":"","n":"EmptyTupleFromExpr","t":"EmptyTupleFromExpr: EmptyTupleFromExpr","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#FloatFromExpr-e6c","e":false,"i":"","n":"FloatFromExpr","t":"FloatFromExpr[T <: Float]: FromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#IntFromExpr-e6c","e":false,"i":"","n":"IntFromExpr","t":"IntFromExpr[T <: Int]: FromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#LeftFromExpr-fffff462","e":false,"i":"","n":"LeftFromExpr","t":"LeftFromExpr[L, R](using x$1: Type[L], x$2: Type[R], x$3: FromExpr[L]): LeftFromExpr[L, R]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#ListFromExpr-3ae","e":false,"i":"","n":"ListFromExpr","t":"ListFromExpr[T](using x$1: Type[T], x$2: FromExpr[T]): ListFromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#LongFromExpr-e6c","e":false,"i":"","n":"LongFromExpr","t":"LongFromExpr[T <: Long]: FromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#MapFromExpr-446","e":false,"i":"","n":"MapFromExpr","t":"MapFromExpr[T, U](using x$1: Type[T], x$2: Type[U], x$3: FromExpr[T], x$4: FromExpr[U]): MapFromExpr[T, U]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#NilFromExpr-0","e":false,"i":"","n":"NilFromExpr","t":"NilFromExpr: NilFromExpr","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#NoneFromExpr-0","e":false,"i":"","n":"NoneFromExpr","t":"NoneFromExpr: NoneFromExpr","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#OptionFromExpr-fffffc45","e":false,"i":"","n":"OptionFromExpr","t":"OptionFromExpr[T](using x$1: Type[T], x$2: FromExpr[T]): OptionFromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#RightFromExpr-fffff3ff","e":false,"i":"","n":"RightFromExpr","t":"RightFromExpr[L, R](using x$1: Type[L], x$2: Type[R], x$3: FromExpr[R]): RightFromExpr[L, R]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#SeqFromExpr-bed","e":false,"i":"","n":"SeqFromExpr","t":"SeqFromExpr[T](using x$1: Type[T], x$2: FromExpr[T]): SeqFromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#SetFromExpr-8f0","e":false,"i":"","n":"SetFromExpr","t":"SetFromExpr[T](using x$1: Type[T], x$2: FromExpr[T]): SetFromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#ShortFromExpr-e6c","e":false,"i":"","n":"ShortFromExpr","t":"ShortFromExpr[T <: Short]: FromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#SomeFromExpr-fffff204","e":false,"i":"","n":"SomeFromExpr","t":"SomeFromExpr[T](using x$1: Type[T], x$2: FromExpr[T]): SomeFromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#StringContextFromExpr-0","e":false,"i":"","n":"StringContextFromExpr","t":"StringContextFromExpr: StringContextFromExpr","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#StringFromExpr-e6c","e":false,"i":"","n":"StringFromExpr","t":"StringFromExpr[T <: String]: FromExpr[T]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple10FromExpr-d7e","e":false,"i":"","n":"Tuple10FromExpr","t":"Tuple10FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: FromExpr[T1], x$12: FromExpr[T2], x$13: FromExpr[T3], x$14: FromExpr[T4], x$15: FromExpr[T5], x$16: FromExpr[T6], x$17: FromExpr[T7], x$18: FromExpr[T8], x$19: FromExpr[T9], x$20: FromExpr[T10]): Tuple10FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple11FromExpr-fffff6c5","e":false,"i":"","n":"Tuple11FromExpr","t":"Tuple11FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: FromExpr[T1], x$13: FromExpr[T2], x$14: FromExpr[T3], x$15: FromExpr[T4], x$16: FromExpr[T5], x$17: FromExpr[T6], x$18: FromExpr[T7], x$19: FromExpr[T8], x$20: FromExpr[T9], x$21: FromExpr[T10], x$22: FromExpr[T11]): Tuple11FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple12FromExpr-fffff8a2","e":false,"i":"","n":"Tuple12FromExpr","t":"Tuple12FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: FromExpr[T1], x$14: FromExpr[T2], x$15: FromExpr[T3], x$16: FromExpr[T4], x$17: FromExpr[T5], x$18: FromExpr[T6], x$19: FromExpr[T7], x$20: FromExpr[T8], x$21: FromExpr[T9], x$22: FromExpr[T10], x$23: FromExpr[T11], x$24: FromExpr[T12]): Tuple12FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple13FromExpr-8a9","e":false,"i":"","n":"Tuple13FromExpr","t":"Tuple13FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: FromExpr[T1], x$15: FromExpr[T2], x$16: FromExpr[T3], x$17: FromExpr[T4], x$18: FromExpr[T5], x$19: FromExpr[T6], x$20: FromExpr[T7], x$21: FromExpr[T8], x$22: FromExpr[T9], x$23: FromExpr[T10], x$24: FromExpr[T11], x$25: FromExpr[T12], x$26: FromExpr[T13]): Tuple13FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple14FromExpr-fffff5c6","e":false,"i":"","n":"Tuple14FromExpr","t":"Tuple14FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: Type[T14], x$15: FromExpr[T1], x$16: FromExpr[T2], x$17: FromExpr[T3], x$18: FromExpr[T4], x$19: FromExpr[T5], x$20: FromExpr[T6], x$21: FromExpr[T7], x$22: FromExpr[T8], x$23: FromExpr[T9], x$24: FromExpr[T10], x$25: FromExpr[T11], x$26: FromExpr[T12], x$27: FromExpr[T13], x$28: FromExpr[T14]): Tuple14FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple15FromExpr-fffffc8d","e":false,"i":"","n":"Tuple15FromExpr","t":"Tuple15FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: Type[T14], x$15: Type[T15], x$16: FromExpr[T1], x$17: FromExpr[T2], x$18: FromExpr[T3], x$19: FromExpr[T4], x$20: FromExpr[T5], x$21: FromExpr[T6], x$22: FromExpr[T7], x$23: FromExpr[T8], x$24: FromExpr[T9], x$25: FromExpr[T10], x$26: FromExpr[T11], x$27: FromExpr[T12], x$28: FromExpr[T13], x$29: FromExpr[T14], x$30: FromExpr[T15]): Tuple15FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple16FromExpr-4ea","e":false,"i":"","n":"Tuple16FromExpr","t":"Tuple16FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: Type[T14], x$15: Type[T15], x$16: Type[T16], x$17: FromExpr[T1], x$18: FromExpr[T2], x$19: FromExpr[T3], x$20: FromExpr[T4], x$21: FromExpr[T5], x$22: FromExpr[T6], x$23: FromExpr[T7], x$24: FromExpr[T8], x$25: FromExpr[T9], x$26: FromExpr[T10], x$27: FromExpr[T11], x$28: FromExpr[T12], x$29: FromExpr[T13], x$30: FromExpr[T14], x$31: FromExpr[T15], x$32: FromExpr[T16]): Tuple16FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple17FromExpr-fffff271","e":false,"i":"","n":"Tuple17FromExpr","t":"Tuple17FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: Type[T14], x$15: Type[T15], x$16: Type[T16], x$17: Type[T17], x$18: FromExpr[T1], x$19: FromExpr[T2], x$20: FromExpr[T3], x$21: FromExpr[T4], x$22: FromExpr[T5], x$23: FromExpr[T6], x$24: FromExpr[T7], x$25: FromExpr[T8], x$26: FromExpr[T9], x$27: FromExpr[T10], x$28: FromExpr[T11], x$29: FromExpr[T12], x$30: FromExpr[T13], x$31: FromExpr[T14], x$32: FromExpr[T15], x$33: FromExpr[T16], x$34: FromExpr[T17]): Tuple17FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple18FromExpr-60e","e":false,"i":"","n":"Tuple18FromExpr","t":"Tuple18FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: Type[T14], x$15: Type[T15], x$16: Type[T16], x$17: Type[T17], x$18: Type[T18], x$19: FromExpr[T1], x$20: FromExpr[T2], x$21: FromExpr[T3], x$22: FromExpr[T4], x$23: FromExpr[T5], x$24: FromExpr[T6], x$25: FromExpr[T7], x$26: FromExpr[T8], x$27: FromExpr[T9], x$28: FromExpr[T10], x$29: FromExpr[T11], x$30: FromExpr[T12], x$31: FromExpr[T13], x$32: FromExpr[T14], x$33: FromExpr[T15], x$34: FromExpr[T16], x$35: FromExpr[T17], x$36: FromExpr[T18]): Tuple18FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple19FromExpr-a55","e":false,"i":"","n":"Tuple19FromExpr","t":"Tuple19FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: Type[T14], x$15: Type[T15], x$16: Type[T16], x$17: Type[T17], x$18: Type[T18], x$19: Type[T19], x$20: FromExpr[T1], x$21: FromExpr[T2], x$22: FromExpr[T3], x$23: FromExpr[T4], x$24: FromExpr[T5], x$25: FromExpr[T6], x$26: FromExpr[T7], x$27: FromExpr[T8], x$28: FromExpr[T9], x$29: FromExpr[T10], x$30: FromExpr[T11], x$31: FromExpr[T12], x$32: FromExpr[T13], x$33: FromExpr[T14], x$34: FromExpr[T15], x$35: FromExpr[T16], x$36: FromExpr[T17], x$37: FromExpr[T18], x$38: FromExpr[T19]): Tuple19FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple1FromExpr-fffff139","e":false,"i":"","n":"Tuple1FromExpr","t":"Tuple1FromExpr[T1](using x$1: Type[T1], x$2: FromExpr[T1]): Tuple1FromExpr[T1]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple20FromExpr-fffff19c","e":false,"i":"","n":"Tuple20FromExpr","t":"Tuple20FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: Type[T14], x$15: Type[T15], x$16: Type[T16], x$17: Type[T17], x$18: Type[T18], x$19: Type[T19], x$20: Type[T20], x$21: FromExpr[T1], x$22: FromExpr[T2], x$23: FromExpr[T3], x$24: FromExpr[T4], x$25: FromExpr[T5], x$26: FromExpr[T6], x$27: FromExpr[T7], x$28: FromExpr[T8], x$29: FromExpr[T9], x$30: FromExpr[T10], x$31: FromExpr[T11], x$32: FromExpr[T12], x$33: FromExpr[T13], x$34: FromExpr[T14], x$35: FromExpr[T15], x$36: FromExpr[T16], x$37: FromExpr[T17], x$38: FromExpr[T18], x$39: FromExpr[T19], x$40: FromExpr[T20]): Tuple20FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple21FromExpr-fffff4e3","e":false,"i":"","n":"Tuple21FromExpr","t":"Tuple21FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: Type[T14], x$15: Type[T15], x$16: Type[T16], x$17: Type[T17], x$18: Type[T18], x$19: Type[T19], x$20: Type[T20], x$21: Type[T21], x$22: FromExpr[T1], x$23: FromExpr[T2], x$24: FromExpr[T3], x$25: FromExpr[T4], x$26: FromExpr[T5], x$27: FromExpr[T6], x$28: FromExpr[T7], x$29: FromExpr[T8], x$30: FromExpr[T9], x$31: FromExpr[T10], x$32: FromExpr[T11], x$33: FromExpr[T12], x$34: FromExpr[T13], x$35: FromExpr[T14], x$36: FromExpr[T15], x$37: FromExpr[T16], x$38: FromExpr[T17], x$39: FromExpr[T18], x$40: FromExpr[T19], x$41: FromExpr[T20], x$42: FromExpr[T21]): Tuple21FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple22FromExpr-740","e":false,"i":"","n":"Tuple22FromExpr","t":"Tuple22FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: Type[T10], x$11: Type[T11], x$12: Type[T12], x$13: Type[T13], x$14: Type[T14], x$15: Type[T15], x$16: Type[T16], x$17: Type[T17], x$18: Type[T18], x$19: Type[T19], x$20: Type[T20], x$21: Type[T21], x$22: Type[T22], x$23: FromExpr[T1], x$24: FromExpr[T2], x$25: FromExpr[T3], x$26: FromExpr[T4], x$27: FromExpr[T5], x$28: FromExpr[T6], x$29: FromExpr[T7], x$30: FromExpr[T8], x$31: FromExpr[T9], x$32: FromExpr[T10], x$33: FromExpr[T11], x$34: FromExpr[T12], x$35: FromExpr[T13], x$36: FromExpr[T14], x$37: FromExpr[T15], x$38: FromExpr[T16], x$39: FromExpr[T17], x$40: FromExpr[T18], x$41: FromExpr[T19], x$42: FromExpr[T20], x$43: FromExpr[T21], x$44: FromExpr[T22]): Tuple22FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple2FromExpr-fffff65e","e":false,"i":"","n":"Tuple2FromExpr","t":"Tuple2FromExpr[T1, T2](using x$1: Type[T1], x$2: Type[T2], x$3: FromExpr[T1], x$4: FromExpr[T2]): Tuple2FromExpr[T1, T2]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple3FromExpr-999","e":false,"i":"","n":"Tuple3FromExpr","t":"Tuple3FromExpr[T1, T2, T3](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: FromExpr[T1], x$5: FromExpr[T2], x$6: FromExpr[T3]): Tuple3FromExpr[T1, T2, T3]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple4FromExpr-fffffb7e","e":false,"i":"","n":"Tuple4FromExpr","t":"Tuple4FromExpr[T1, T2, T3, T4](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: FromExpr[T1], x$6: FromExpr[T2], x$7: FromExpr[T3], x$8: FromExpr[T4]): Tuple4FromExpr[T1, T2, T3, T4]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple5FromExpr-ff9","e":false,"i":"","n":"Tuple5FromExpr","t":"Tuple5FromExpr[T1, T2, T3, T4, T5](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: FromExpr[T1], x$7: FromExpr[T2], x$8: FromExpr[T3], x$9: FromExpr[T4], x$10: FromExpr[T5]): Tuple5FromExpr[T1, T2, T3, T4, T5]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple6FromExpr-fffffe9e","e":false,"i":"","n":"Tuple6FromExpr","t":"Tuple6FromExpr[T1, T2, T3, T4, T5, T6](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: FromExpr[T1], x$8: FromExpr[T2], x$9: FromExpr[T3], x$10: FromExpr[T4], x$11: FromExpr[T5], x$12: FromExpr[T6]): Tuple6FromExpr[T1, T2, T3, T4, T5, T6]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple7FromExpr-fffff459","e":false,"i":"","n":"Tuple7FromExpr","t":"Tuple7FromExpr[T1, T2, T3, T4, T5, T6, T7](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: FromExpr[T1], x$9: FromExpr[T2], x$10: FromExpr[T3], x$11: FromExpr[T4], x$12: FromExpr[T5], x$13: FromExpr[T6], x$14: FromExpr[T7]): Tuple7FromExpr[T1, T2, T3, T4, T5, T6, T7]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple8FromExpr-ffffffbe","e":false,"i":"","n":"Tuple8FromExpr","t":"Tuple8FromExpr[T1, T2, T3, T4, T5, T6, T7, T8](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: FromExpr[T1], x$10: FromExpr[T2], x$11: FromExpr[T3], x$12: FromExpr[T4], x$13: FromExpr[T5], x$14: FromExpr[T6], x$15: FromExpr[T7], x$16: FromExpr[T8]): Tuple8FromExpr[T1, T2, T3, T4, T5, T6, T7, T8]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$.html#Tuple9FromExpr-6b9","e":false,"i":"","n":"Tuple9FromExpr","t":"Tuple9FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9](using x$1: Type[T1], x$2: Type[T2], x$3: Type[T3], x$4: Type[T4], x$5: Type[T5], x$6: Type[T6], x$7: Type[T7], x$8: Type[T8], x$9: Type[T9], x$10: FromExpr[T1], x$11: FromExpr[T2], x$12: FromExpr[T3], x$13: FromExpr[T4], x$14: FromExpr[T5], x$15: FromExpr[T6], x$16: FromExpr[T7], x$17: FromExpr[T8], x$18: FromExpr[T9]): Tuple9FromExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9]","d":"scala.quoted.FromExpr","k":"given","x":""},
{"l":"api/scala/quoted/FromExpr$$EmptyTupleFromExpr$.html#","e":false,"i":"","n":"EmptyTupleFromExpr","t":"EmptyTupleFromExpr extends FromExpr[EmptyTuple.type]","d":"scala.quoted.FromExpr","k":"object","x":""},
{"l":"api/scala/quoted/FromExpr$$EmptyTupleFromExpr$.html#unapply-fffff85f","e":false,"i":"","n":"unapply","t":"unapply(x: Expr[EmptyTuple.type])(using Quotes): Option[EmptyTuple.type]","d":"scala.quoted.FromExpr.EmptyTupleFromExpr","k":"def","x":""},
{"l":"api/scala/quoted/FromExpr$$NilFromExpr$.html#","e":false,"i":"","n":"NilFromExpr","t":"NilFromExpr extends FromExpr[Nil.type]","d":"scala.quoted.FromExpr","k":"object","x":""},
{"l":"api/scala/quoted/FromExpr$$NilFromExpr$.html#unapply-fffff85f","e":false,"i":"","n":"unapply","t":"unapply(x: Expr[Nil.type])(using Quotes): Option[Nil.type]","d":"scala.quoted.FromExpr.NilFromExpr","k":"def","x":""},
{"l":"api/scala/quoted/FromExpr$$NoneFromExpr$.html#","e":false,"i":"","n":"NoneFromExpr","t":"NoneFromExpr extends FromExpr[None.type]","d":"scala.quoted.FromExpr","k":"object","x":""},
{"l":"api/scala/quoted/FromExpr$$NoneFromExpr$.html#unapply-fffff85f","e":false,"i":"","n":"unapply","t":"unapply(x: Expr[None.type])(using Quotes): Option[None.type]","d":"scala.quoted.FromExpr.NoneFromExpr","k":"def","x":""},
{"l":"api/scala/quoted/FromExpr$$StringContextFromExpr$.html#","e":false,"i":"","n":"StringContextFromExpr","t":"StringContextFromExpr extends FromExpr[StringContext]","d":"scala.quoted.FromExpr","k":"object","x":""},
{"l":"api/scala/quoted/FromExpr$$StringContextFromExpr$.html#unapply-fffff85f","e":false,"i":"","n":"unapply","t":"unapply(x: Expr[StringContext])(using Quotes): Option[StringContext]","d":"scala.quoted.FromExpr.StringContextFromExpr","k":"def","x":""},
{"l":"api/scala/quoted/Quotes.html#","e":false,"i":"","n":"Quotes","t":"Quotes","d":"scala.quoted","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes.html#Nested-0","e":false,"i":"","n":"Nested","t":"Nested = Quotes","d":"scala.quoted.Quotes","k":"type","x":""},
{"l":"api/scala/quoted/Quotes.html#asExprOf-a99","e":false,"i":"extension (self: Expr[Any])","n":"asExprOf","t":"asExprOf[X](using Type[X]): Expr[X]","d":"scala.quoted.Quotes","k":"def","x":""},
{"l":"api/scala/quoted/Quotes.html#isExprOf-6c6","e":false,"i":"extension (self: Expr[Any])","n":"isExprOf","t":"isExprOf[X](using Type[X]): Boolean","d":"scala.quoted.Quotes","k":"def","x":""},
{"l":"api/scala/quoted/Quotes.html#matches-2af","e":false,"i":"extension [T](self: Expr[T])","n":"matches","t":"matches(that: Expr[Any]): Boolean","d":"scala.quoted.Quotes","k":"def","x":""},
{"l":"api/scala/quoted/Quotes.html#reflect-0","e":false,"i":"","n":"reflect","t":"reflect: reflectModule","d":"scala.quoted.Quotes","k":"val","x":""},
{"l":"api/scala/quoted/Quotes.html#show-fffff887","e":false,"i":"extension [T](self: Expr[T])","n":"show","t":"show: String","d":"scala.quoted.Quotes","k":"def","x":""},
{"l":"api/scala/quoted/Quotes.html#value-ed8","e":false,"i":"extension [T](self: Expr[T])","n":"value","t":"value(using FromExpr[T]): Option[T]","d":"scala.quoted.Quotes","k":"def","x":""},
{"l":"api/scala/quoted/Quotes.html#valueOrAbort-cae","e":false,"i":"extension [T](self: Expr[T])","n":"valueOrAbort","t":"valueOrAbort(using FromExpr[T]): T","d":"scala.quoted.Quotes","k":"def","x":""},
{"l":"api/scala/quoted/Quotes.html#valueOrError-cae","e":false,"i":"extension [T](self: Expr[T])","n":"valueOrError","t":"valueOrError(using FromExpr[T]): T","d":"scala.quoted.Quotes","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#","e":false,"i":"","n":"reflectModule","t":"reflectModule","d":"scala.quoted.Quotes","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Alternatives-0","e":false,"i":"","n":"Alternatives","t":"Alternatives <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Alternatives-0","e":false,"i":"","n":"Alternatives","t":"Alternatives: AlternativesModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AlternativesMethods-0","e":false,"i":"","n":"AlternativesMethods","t":"AlternativesMethods: AlternativesMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AlternativesTypeTest-0","e":false,"i":"","n":"AlternativesTypeTest","t":"AlternativesTypeTest: TypeTest[Tree, Alternatives]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AmbiguousImplicits-0","e":false,"i":"","n":"AmbiguousImplicits","t":"AmbiguousImplicits <: ImplicitSearchFailure","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AmbiguousImplicitsTypeTest-0","e":false,"i":"","n":"AmbiguousImplicitsTypeTest","t":"AmbiguousImplicitsTypeTest: TypeTest[ImplicitSearchResult, AmbiguousImplicits]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AndOrType-0","e":false,"i":"","n":"AndOrType","t":"AndOrType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AndOrTypeMethods-0","e":false,"i":"","n":"AndOrTypeMethods","t":"AndOrTypeMethods: AndOrTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AndOrTypeTypeTest-0","e":false,"i":"","n":"AndOrTypeTypeTest","t":"AndOrTypeTypeTest: TypeTest[TypeRepr, AndOrType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AndType-0","e":false,"i":"","n":"AndType","t":"AndType <: AndOrType","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AndType-0","e":false,"i":"","n":"AndType","t":"AndType: AndTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AndTypeTypeTest-0","e":false,"i":"","n":"AndTypeTypeTest","t":"AndTypeTypeTest: TypeTest[TypeRepr, AndType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Annotated-0","e":false,"i":"","n":"Annotated","t":"Annotated <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Annotated-0","e":false,"i":"","n":"Annotated","t":"Annotated: AnnotatedModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AnnotatedMethods-0","e":false,"i":"","n":"AnnotatedMethods","t":"AnnotatedMethods: AnnotatedMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AnnotatedType-0","e":false,"i":"","n":"AnnotatedType","t":"AnnotatedType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AnnotatedType-0","e":false,"i":"","n":"AnnotatedType","t":"AnnotatedType: AnnotatedTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AnnotatedTypeMethods-0","e":false,"i":"","n":"AnnotatedTypeMethods","t":"AnnotatedTypeMethods: AnnotatedTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AnnotatedTypeTest-0","e":false,"i":"","n":"AnnotatedTypeTest","t":"AnnotatedTypeTest: TypeTest[Tree, Annotated]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AnnotatedTypeTypeTest-0","e":false,"i":"","n":"AnnotatedTypeTypeTest","t":"AnnotatedTypeTypeTest: TypeTest[TypeRepr, AnnotatedType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Applied-0","e":false,"i":"","n":"Applied","t":"Applied <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Applied-0","e":false,"i":"","n":"Applied","t":"Applied: AppliedModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AppliedMethods-0","e":false,"i":"","n":"AppliedMethods","t":"AppliedMethods: AppliedMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AppliedType-0","e":false,"i":"","n":"AppliedType","t":"AppliedType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AppliedType-0","e":false,"i":"","n":"AppliedType","t":"AppliedType: AppliedTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AppliedTypeMethods-0","e":false,"i":"","n":"AppliedTypeMethods","t":"AppliedTypeMethods: AppliedTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AppliedTypeTest-0","e":false,"i":"","n":"AppliedTypeTest","t":"AppliedTypeTest: TypeTest[Tree, Applied]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AppliedTypeTypeTest-0","e":false,"i":"","n":"AppliedTypeTypeTest","t":"AppliedTypeTypeTest: TypeTest[TypeRepr, AppliedType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Apply-0","e":false,"i":"","n":"Apply","t":"Apply <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Apply-0","e":false,"i":"","n":"Apply","t":"Apply: ApplyModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ApplyMethods-0","e":false,"i":"","n":"ApplyMethods","t":"ApplyMethods: ApplyMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ApplyTypeTest-0","e":false,"i":"","n":"ApplyTypeTest","t":"ApplyTypeTest: TypeTest[Tree, Apply]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Assign-0","e":false,"i":"","n":"Assign","t":"Assign <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Assign-0","e":false,"i":"","n":"Assign","t":"Assign: AssignModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AssignMethods-0","e":false,"i":"","n":"AssignMethods","t":"AssignMethods: AssignMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#AssignTypeTest-0","e":false,"i":"","n":"AssignTypeTest","t":"AssignTypeTest: TypeTest[Tree, Assign]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Bind-0","e":false,"i":"","n":"Bind","t":"Bind <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Bind-0","e":false,"i":"","n":"Bind","t":"Bind: BindModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#BindMethods-0","e":false,"i":"","n":"BindMethods","t":"BindMethods: BindMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#BindTypeTest-0","e":false,"i":"","n":"BindTypeTest","t":"BindTypeTest: TypeTest[Tree, Bind]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Block-0","e":false,"i":"","n":"Block","t":"Block <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Block-0","e":false,"i":"","n":"Block","t":"Block: BlockModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#BlockMethods-0","e":false,"i":"","n":"BlockMethods","t":"BlockMethods: BlockMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#BlockTypeTest-0","e":false,"i":"","n":"BlockTypeTest","t":"BlockTypeTest: TypeTest[Tree, Block]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#BooleanConstant-0","e":false,"i":"","n":"BooleanConstant","t":"BooleanConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#BooleanConstant-0","e":false,"i":"","n":"BooleanConstant","t":"BooleanConstant: BooleanConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#BooleanConstantTypeTest-0","e":false,"i":"","n":"BooleanConstantTypeTest","t":"BooleanConstantTypeTest: TypeTest[Constant, BooleanConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByName-0","e":false,"i":"","n":"ByName","t":"ByName <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByName-0","e":false,"i":"","n":"ByName","t":"ByName: ByNameModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByNameMethods-0","e":false,"i":"","n":"ByNameMethods","t":"ByNameMethods: ByNameMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByNameType-0","e":false,"i":"","n":"ByNameType","t":"ByNameType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByNameType-0","e":false,"i":"","n":"ByNameType","t":"ByNameType: ByNameTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByNameTypeMethods-0","e":false,"i":"","n":"ByNameTypeMethods","t":"ByNameTypeMethods: ByNameTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByNameTypeTest-0","e":false,"i":"","n":"ByNameTypeTest","t":"ByNameTypeTest: TypeTest[Tree, ByName]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByNameTypeTypeTest-0","e":false,"i":"","n":"ByNameTypeTypeTest","t":"ByNameTypeTypeTest: TypeTest[TypeRepr, ByNameType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByteConstant-0","e":false,"i":"","n":"ByteConstant","t":"ByteConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByteConstant-0","e":false,"i":"","n":"ByteConstant","t":"ByteConstant: ByteConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ByteConstantTypeTest-0","e":false,"i":"","n":"ByteConstantTypeTest","t":"ByteConstantTypeTest: TypeTest[Constant, ByteConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#CaseDef-0","e":false,"i":"","n":"CaseDef","t":"CaseDef <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#CaseDef-0","e":false,"i":"","n":"CaseDef","t":"CaseDef: CaseDefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#CaseDefMethods-0","e":false,"i":"","n":"CaseDefMethods","t":"CaseDefMethods: CaseDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#CaseDefTypeTest-0","e":false,"i":"","n":"CaseDefTypeTest","t":"CaseDefTypeTest: TypeTest[Tree, CaseDef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#CharConstant-0","e":false,"i":"","n":"CharConstant","t":"CharConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#CharConstant-0","e":false,"i":"","n":"CharConstant","t":"CharConstant: CharConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#CharConstantTypeTest-0","e":false,"i":"","n":"CharConstantTypeTest","t":"CharConstantTypeTest: TypeTest[Constant, CharConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ClassDef-0","e":false,"i":"","n":"ClassDef","t":"ClassDef <: Definition","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ClassDef-0","e":false,"i":"","n":"ClassDef","t":"ClassDef: ClassDefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ClassDefMethods-0","e":false,"i":"","n":"ClassDefMethods","t":"ClassDefMethods: ClassDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ClassDefTypeTest-0","e":false,"i":"","n":"ClassDefTypeTest","t":"ClassDefTypeTest: TypeTest[Tree, ClassDef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ClassOfConstant-0","e":false,"i":"","n":"ClassOfConstant","t":"ClassOfConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ClassOfConstant-0","e":false,"i":"","n":"ClassOfConstant","t":"ClassOfConstant: ClassOfConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ClassOfConstantTypeTest-0","e":false,"i":"","n":"ClassOfConstantTypeTest","t":"ClassOfConstantTypeTest: TypeTest[Constant, ClassOfConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Closure-0","e":false,"i":"","n":"Closure","t":"Closure <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Closure-0","e":false,"i":"","n":"Closure","t":"Closure: ClosureModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ClosureMethods-0","e":false,"i":"","n":"ClosureMethods","t":"ClosureMethods: ClosureMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ClosureTypeTest-0","e":false,"i":"","n":"ClosureTypeTest","t":"ClosureTypeTest: TypeTest[Tree, Closure]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#CompilationInfo-0","e":false,"i":"","n":"CompilationInfo","t":"CompilationInfo: CompilationInfoModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Constant-0","e":false,"i":"","n":"Constant","t":"Constant <: AnyRef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Constant-0","e":false,"i":"","n":"Constant","t":"Constant: ConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ConstantMethods-0","e":false,"i":"","n":"ConstantMethods","t":"ConstantMethods: ConstantMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ConstantPrinter-0","e":false,"i":"","n":"ConstantPrinter","t":"ConstantPrinter: Printer[Constant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ConstantType-0","e":false,"i":"","n":"ConstantType","t":"ConstantType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ConstantType-0","e":false,"i":"","n":"ConstantType","t":"ConstantType: ConstantTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ConstantTypeMethods-0","e":false,"i":"","n":"ConstantTypeMethods","t":"ConstantTypeMethods: ConstantTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ConstantTypeTypeTest-0","e":false,"i":"","n":"ConstantTypeTypeTest","t":"ConstantTypeTypeTest: TypeTest[TypeRepr, ConstantType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DefDef-0","e":false,"i":"","n":"DefDef","t":"DefDef <: ValOrDefDef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DefDef-0","e":false,"i":"","n":"DefDef","t":"DefDef: DefDefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DefDefMethods-0","e":false,"i":"","n":"DefDefMethods","t":"DefDefMethods: DefDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DefDefTypeTest-0","e":false,"i":"","n":"DefDefTypeTest","t":"DefDefTypeTest: TypeTest[Tree, DefDef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Definition-0","e":false,"i":"","n":"Definition","t":"Definition <: Statement","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Definition-0","e":false,"i":"","n":"Definition","t":"Definition: DefinitionModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DefinitionMethods-0","e":false,"i":"","n":"DefinitionMethods","t":"DefinitionMethods: DefinitionMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DefinitionTypeTest-0","e":false,"i":"","n":"DefinitionTypeTest","t":"DefinitionTypeTest: TypeTest[Tree, Definition]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DivergingImplicit-0","e":false,"i":"","n":"DivergingImplicit","t":"DivergingImplicit <: ImplicitSearchFailure","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DivergingImplicitTypeTest-0","e":false,"i":"","n":"DivergingImplicitTypeTest","t":"DivergingImplicitTypeTest: TypeTest[ImplicitSearchResult, DivergingImplicit]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DoubleConstant-0","e":false,"i":"","n":"DoubleConstant","t":"DoubleConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DoubleConstant-0","e":false,"i":"","n":"DoubleConstant","t":"DoubleConstant: DoubleConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#DoubleConstantTypeTest-0","e":false,"i":"","n":"DoubleConstantTypeTest","t":"DoubleConstantTypeTest: TypeTest[Constant, DoubleConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Export-0","e":false,"i":"","n":"Export","t":"Export <: Statement","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Export-0","e":false,"i":"","n":"Export","t":"Export: ExportModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ExportMethods-0","e":false,"i":"","n":"ExportMethods","t":"ExportMethods: ExportMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ExportTypeTest-0","e":false,"i":"","n":"ExportTypeTest","t":"ExportTypeTest: TypeTest[Tree, Export]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Flags-0","e":false,"i":"","n":"Flags","t":"Flags","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Flags-0","e":false,"i":"","n":"Flags","t":"Flags: FlagsModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#FlagsMethods-0","e":false,"i":"","n":"FlagsMethods","t":"FlagsMethods: FlagsMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#FlexibleType-0","e":false,"i":"","n":"FlexibleType","t":"FlexibleType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#FlexibleType-0","e":false,"i":"","n":"FlexibleType","t":"FlexibleType: FlexibleTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#FlexibleTypeMethods-0","e":false,"i":"","n":"FlexibleTypeMethods","t":"FlexibleTypeMethods: FlexibleTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#FlexibleTypeTypeTest-0","e":false,"i":"","n":"FlexibleTypeTypeTest","t":"FlexibleTypeTypeTest: TypeTest[TypeRepr, FlexibleType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#FloatConstant-0","e":false,"i":"","n":"FloatConstant","t":"FloatConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#FloatConstant-0","e":false,"i":"","n":"FloatConstant","t":"FloatConstant: FloatConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#FloatConstantTypeTest-0","e":false,"i":"","n":"FloatConstantTypeTest","t":"FloatConstantTypeTest: TypeTest[Constant, FloatConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#GivenSelector-0","e":false,"i":"","n":"GivenSelector","t":"GivenSelector <: Selector","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#GivenSelector-0","e":false,"i":"","n":"GivenSelector","t":"GivenSelector: GivenSelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#GivenSelectorMethods-0","e":false,"i":"","n":"GivenSelectorMethods","t":"GivenSelectorMethods: GivenSelectorMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#GivenSelectorTypeTest-0","e":false,"i":"","n":"GivenSelectorTypeTest","t":"GivenSelectorTypeTest: TypeTest[Selector, GivenSelector]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Ident-0","e":false,"i":"","n":"Ident","t":"Ident <: Ref","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Ident-0","e":false,"i":"","n":"Ident","t":"Ident: IdentModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#IdentMethods-0","e":false,"i":"","n":"IdentMethods","t":"IdentMethods: IdentMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#IdentTypeTest-0","e":false,"i":"","n":"IdentTypeTest","t":"IdentTypeTest: TypeTest[Tree, Ident]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#If-0","e":false,"i":"","n":"If","t":"If <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#If-0","e":false,"i":"","n":"If","t":"If: IfModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#IfMethods-0","e":false,"i":"","n":"IfMethods","t":"IfMethods: IfMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#IfTypeTest-0","e":false,"i":"","n":"IfTypeTest","t":"IfTypeTest: TypeTest[Tree, If]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ImplicitSearchFailure-0","e":false,"i":"","n":"ImplicitSearchFailure","t":"ImplicitSearchFailure <: ImplicitSearchResult","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ImplicitSearchFailureMethods-0","e":false,"i":"","n":"ImplicitSearchFailureMethods","t":"ImplicitSearchFailureMethods: ImplicitSearchFailureMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ImplicitSearchFailureTypeTest-0","e":false,"i":"","n":"ImplicitSearchFailureTypeTest","t":"ImplicitSearchFailureTypeTest: TypeTest[ImplicitSearchResult, ImplicitSearchFailure]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ImplicitSearchResult-0","e":false,"i":"","n":"ImplicitSearchResult","t":"ImplicitSearchResult <: AnyRef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ImplicitSearchSuccess-0","e":false,"i":"","n":"ImplicitSearchSuccess","t":"ImplicitSearchSuccess <: ImplicitSearchResult","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ImplicitSearchSuccessMethods-0","e":false,"i":"","n":"ImplicitSearchSuccessMethods","t":"ImplicitSearchSuccessMethods: ImplicitSearchSuccessMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ImplicitSearchSuccessTypeTest-0","e":false,"i":"","n":"ImplicitSearchSuccessTypeTest","t":"ImplicitSearchSuccessTypeTest: TypeTest[ImplicitSearchResult, ImplicitSearchSuccess]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Implicits-0","e":false,"i":"","n":"Implicits","t":"Implicits: ImplicitsModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Import-0","e":false,"i":"","n":"Import","t":"Import <: Statement","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Import-0","e":false,"i":"","n":"Import","t":"Import: ImportModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ImportMethods-0","e":false,"i":"","n":"ImportMethods","t":"ImportMethods: ImportMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ImportTypeTest-0","e":false,"i":"","n":"ImportTypeTest","t":"ImportTypeTest: TypeTest[Tree, Import]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Inferred-0","e":false,"i":"","n":"Inferred","t":"Inferred <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Inferred-0","e":false,"i":"","n":"Inferred","t":"Inferred: InferredModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#InferredTypeTest-0","e":false,"i":"","n":"InferredTypeTest","t":"InferredTypeTest: TypeTest[Tree, Inferred]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Inlined-0","e":false,"i":"","n":"Inlined","t":"Inlined <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Inlined-0","e":false,"i":"","n":"Inlined","t":"Inlined: InlinedModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#InlinedMethods-0","e":false,"i":"","n":"InlinedMethods","t":"InlinedMethods: InlinedMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#InlinedTypeTest-0","e":false,"i":"","n":"InlinedTypeTest","t":"InlinedTypeTest: TypeTest[Tree, Inlined]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#IntConstant-0","e":false,"i":"","n":"IntConstant","t":"IntConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#IntConstant-0","e":false,"i":"","n":"IntConstant","t":"IntConstant: IntConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#IntConstantTypeTest-0","e":false,"i":"","n":"IntConstantTypeTest","t":"IntConstantTypeTest: TypeTest[Constant, IntConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Lambda-0","e":false,"i":"","n":"Lambda","t":"Lambda: LambdaModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LambdaType-0","e":false,"i":"","n":"LambdaType","t":"LambdaType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LambdaTypeMethods-0","e":false,"i":"","n":"LambdaTypeMethods","t":"LambdaTypeMethods: LambdaTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LambdaTypeTree-0","e":false,"i":"","n":"LambdaTypeTree","t":"LambdaTypeTree <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LambdaTypeTree-0","e":false,"i":"","n":"LambdaTypeTree","t":"LambdaTypeTree: LambdaTypeTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LambdaTypeTreeMethods-0","e":false,"i":"","n":"LambdaTypeTreeMethods","t":"LambdaTypeTreeMethods: LambdaTypeTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LambdaTypeTreeTypeTest-0","e":false,"i":"","n":"LambdaTypeTreeTypeTest","t":"LambdaTypeTreeTypeTest: TypeTest[Tree, LambdaTypeTree]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LambdaTypeTypeTest-0","e":false,"i":"","n":"LambdaTypeTypeTest","t":"LambdaTypeTypeTest: TypeTest[TypeRepr, LambdaType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Literal-0","e":false,"i":"","n":"Literal","t":"Literal <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Literal-0","e":false,"i":"","n":"Literal","t":"Literal: LiteralModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LiteralMethods-0","e":false,"i":"","n":"LiteralMethods","t":"LiteralMethods: LiteralMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LiteralTypeTest-0","e":false,"i":"","n":"LiteralTypeTest","t":"LiteralTypeTest: TypeTest[Tree, Literal]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LongConstant-0","e":false,"i":"","n":"LongConstant","t":"LongConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LongConstant-0","e":false,"i":"","n":"LongConstant","t":"LongConstant: LongConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#LongConstantTypeTest-0","e":false,"i":"","n":"LongConstantTypeTest","t":"LongConstantTypeTest: TypeTest[Constant, LongConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Match-0","e":false,"i":"","n":"Match","t":"Match <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Match-0","e":false,"i":"","n":"Match","t":"Match: MatchModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchCase-0","e":false,"i":"","n":"MatchCase","t":"MatchCase <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchCase-0","e":false,"i":"","n":"MatchCase","t":"MatchCase: MatchCaseModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchCaseMethods-0","e":false,"i":"","n":"MatchCaseMethods","t":"MatchCaseMethods: MatchCaseMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchCaseTypeTest-0","e":false,"i":"","n":"MatchCaseTypeTest","t":"MatchCaseTypeTest: TypeTest[TypeRepr, MatchCase]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchMethods-0","e":false,"i":"","n":"MatchMethods","t":"MatchMethods: MatchMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchType-0","e":false,"i":"","n":"MatchType","t":"MatchType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchType-0","e":false,"i":"","n":"MatchType","t":"MatchType: MatchTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchTypeMethods-0","e":false,"i":"","n":"MatchTypeMethods","t":"MatchTypeMethods: MatchTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchTypeTest-0","e":false,"i":"","n":"MatchTypeTest","t":"MatchTypeTest: TypeTest[Tree, Match]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchTypeTree-0","e":false,"i":"","n":"MatchTypeTree","t":"MatchTypeTree <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchTypeTree-0","e":false,"i":"","n":"MatchTypeTree","t":"MatchTypeTree: MatchTypeTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchTypeTreeMethods-0","e":false,"i":"","n":"MatchTypeTreeMethods","t":"MatchTypeTreeMethods: MatchTypeTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchTypeTreeTypeTest-0","e":false,"i":"","n":"MatchTypeTreeTypeTest","t":"MatchTypeTreeTypeTest: TypeTest[Tree, MatchTypeTree]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MatchTypeTypeTest-0","e":false,"i":"","n":"MatchTypeTypeTest","t":"MatchTypeTypeTest: TypeTest[TypeRepr, MatchType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MethodOrPoly-0","e":false,"i":"","n":"MethodOrPoly","t":"MethodOrPoly <: LambdaType","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MethodOrPolyTypeTest-0","e":false,"i":"","n":"MethodOrPolyTypeTest","t":"MethodOrPolyTypeTest: TypeTest[TypeRepr, MethodOrPoly]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MethodType-0","e":false,"i":"","n":"MethodType","t":"MethodType <: MethodOrPoly","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MethodType-0","e":false,"i":"","n":"MethodType","t":"MethodType: MethodTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MethodTypeMethods-0","e":false,"i":"","n":"MethodTypeMethods","t":"MethodTypeMethods: MethodTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#MethodTypeTypeTest-0","e":false,"i":"","n":"MethodTypeTypeTest","t":"MethodTypeTypeTest: TypeTest[TypeRepr, MethodType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NamedArg-0","e":false,"i":"","n":"NamedArg","t":"NamedArg <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NamedArg-0","e":false,"i":"","n":"NamedArg","t":"NamedArg: NamedArgModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NamedArgMethods-0","e":false,"i":"","n":"NamedArgMethods","t":"NamedArgMethods: NamedArgMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NamedArgTypeTest-0","e":false,"i":"","n":"NamedArgTypeTest","t":"NamedArgTypeTest: TypeTest[Tree, NamedArg]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NamedType-0","e":false,"i":"","n":"NamedType","t":"NamedType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NamedTypeMethods-0","e":false,"i":"","n":"NamedTypeMethods","t":"NamedTypeMethods: NamedTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NamedTypeTypeTest-0","e":false,"i":"","n":"NamedTypeTypeTest","t":"NamedTypeTypeTest: TypeTest[TypeRepr, NamedType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#New-0","e":false,"i":"","n":"New","t":"New <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#New-0","e":false,"i":"","n":"New","t":"New: NewModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NewMethods-0","e":false,"i":"","n":"NewMethods","t":"NewMethods: NewMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NewTypeTest-0","e":false,"i":"","n":"NewTypeTest","t":"NewTypeTest: TypeTest[Tree, New]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NoMatchingImplicits-0","e":false,"i":"","n":"NoMatchingImplicits","t":"NoMatchingImplicits <: ImplicitSearchFailure","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NoMatchingImplicitsTypeTest-0","e":false,"i":"","n":"NoMatchingImplicitsTypeTest","t":"NoMatchingImplicitsTypeTest: TypeTest[ImplicitSearchResult, NoMatchingImplicits]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NoPrefix-0","e":false,"i":"","n":"NoPrefix","t":"NoPrefix <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NoPrefix-0","e":false,"i":"","n":"NoPrefix","t":"NoPrefix: NoPrefixModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NoPrefixTypeTest-0","e":false,"i":"","n":"NoPrefixTypeTest","t":"NoPrefixTypeTest: TypeTest[TypeRepr, NoPrefix]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NullConstant-0","e":false,"i":"","n":"NullConstant","t":"NullConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NullConstant-0","e":false,"i":"","n":"NullConstant","t":"NullConstant: NullConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#NullConstantTypeTest-0","e":false,"i":"","n":"NullConstantTypeTest","t":"NullConstantTypeTest: TypeTest[Constant, NullConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#OmitSelector-0","e":false,"i":"","n":"OmitSelector","t":"OmitSelector <: Selector","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#OmitSelector-0","e":false,"i":"","n":"OmitSelector","t":"OmitSelector: OmitSelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#OmitSelectorMethods-0","e":false,"i":"","n":"OmitSelectorMethods","t":"OmitSelectorMethods: OmitSelectorMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#OmitSelectorTypeTest-0","e":false,"i":"","n":"OmitSelectorTypeTest","t":"OmitSelectorTypeTest: TypeTest[Selector, OmitSelector]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#OrType-0","e":false,"i":"","n":"OrType","t":"OrType <: AndOrType","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#OrType-0","e":false,"i":"","n":"OrType","t":"OrType: OrTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#OrTypeTypeTest-0","e":false,"i":"","n":"OrTypeTypeTest","t":"OrTypeTypeTest: TypeTest[TypeRepr, OrType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#PackageClause-0","e":false,"i":"","n":"PackageClause","t":"PackageClause <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#PackageClause-0","e":false,"i":"","n":"PackageClause","t":"PackageClause: PackageClauseModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#PackageClauseMethods-0","e":false,"i":"","n":"PackageClauseMethods","t":"PackageClauseMethods: PackageClauseMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#PackageClauseTypeTest-0","e":false,"i":"","n":"PackageClauseTypeTest","t":"PackageClauseTypeTest: TypeTest[Tree, PackageClause]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ParamClause-0","e":false,"i":"","n":"ParamClause","t":"ParamClause <: AnyRef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ParamClause-0","e":false,"i":"","n":"ParamClause","t":"ParamClause: ParamClauseModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ParamClauseMethods-0","e":false,"i":"","n":"ParamClauseMethods","t":"ParamClauseMethods: ParamClauseMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ParamRef-0","e":false,"i":"","n":"ParamRef","t":"ParamRef <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ParamRef-0","e":false,"i":"","n":"ParamRef","t":"ParamRef: ParamRefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ParamRefMethods-0","e":false,"i":"","n":"ParamRefMethods","t":"ParamRefMethods: ParamRefMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ParamRefTypeTest-0","e":false,"i":"","n":"ParamRefTypeTest","t":"ParamRefTypeTest: TypeTest[TypeRepr, ParamRef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#PolyType-0","e":false,"i":"","n":"PolyType","t":"PolyType <: MethodOrPoly","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#PolyType-0","e":false,"i":"","n":"PolyType","t":"PolyType: PolyTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#PolyTypeMethods-0","e":false,"i":"","n":"PolyTypeMethods","t":"PolyTypeMethods: PolyTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#PolyTypeTypeTest-0","e":false,"i":"","n":"PolyTypeTypeTest","t":"PolyTypeTypeTest: TypeTest[TypeRepr, PolyType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Position-0","e":false,"i":"","n":"Position","t":"Position <: AnyRef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Position-0","e":false,"i":"","n":"Position","t":"Position: PositionModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#PositionMethods-0","e":false,"i":"","n":"PositionMethods","t":"PositionMethods: PositionMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Printer-0","e":false,"i":"","n":"Printer","t":"Printer: PrinterModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RecursiveThis-0","e":false,"i":"","n":"RecursiveThis","t":"RecursiveThis <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RecursiveThis-0","e":false,"i":"","n":"RecursiveThis","t":"RecursiveThis: RecursiveThisModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RecursiveThisMethods-0","e":false,"i":"","n":"RecursiveThisMethods","t":"RecursiveThisMethods: RecursiveThisMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RecursiveThisTypeTest-0","e":false,"i":"","n":"RecursiveThisTypeTest","t":"RecursiveThisTypeTest: TypeTest[TypeRepr, RecursiveThis]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RecursiveType-0","e":false,"i":"","n":"RecursiveType","t":"RecursiveType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RecursiveType-0","e":false,"i":"","n":"RecursiveType","t":"RecursiveType: RecursiveTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RecursiveTypeMethods-0","e":false,"i":"","n":"RecursiveTypeMethods","t":"RecursiveTypeMethods: RecursiveTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RecursiveTypeTypeTest-0","e":false,"i":"","n":"RecursiveTypeTypeTest","t":"RecursiveTypeTypeTest: TypeTest[TypeRepr, RecursiveType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Ref-0","e":false,"i":"","n":"Ref","t":"Ref <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Ref-0","e":false,"i":"","n":"Ref","t":"Ref: RefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RefTypeTest-0","e":false,"i":"","n":"RefTypeTest","t":"RefTypeTest: TypeTest[Tree, Ref]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Refined-0","e":false,"i":"","n":"Refined","t":"Refined <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Refined-0","e":false,"i":"","n":"Refined","t":"Refined: RefinedModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RefinedMethods-0","e":false,"i":"","n":"RefinedMethods","t":"RefinedMethods: RefinedMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RefinedTypeTest-0","e":false,"i":"","n":"RefinedTypeTest","t":"RefinedTypeTest: TypeTest[Tree, Refined]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Refinement-0","e":false,"i":"","n":"Refinement","t":"Refinement <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Refinement-0","e":false,"i":"","n":"Refinement","t":"Refinement: RefinementModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RefinementMethods-0","e":false,"i":"","n":"RefinementMethods","t":"RefinementMethods: RefinementMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RefinementTypeTest-0","e":false,"i":"","n":"RefinementTypeTest","t":"RefinementTypeTest: TypeTest[TypeRepr, Refinement]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RenameSelector-0","e":false,"i":"","n":"RenameSelector","t":"RenameSelector <: Selector","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RenameSelector-0","e":false,"i":"","n":"RenameSelector","t":"RenameSelector: RenameSelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RenameSelectorMethods-0","e":false,"i":"","n":"RenameSelectorMethods","t":"RenameSelectorMethods: RenameSelectorMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RenameSelectorTypeTest-0","e":false,"i":"","n":"RenameSelectorTypeTest","t":"RenameSelectorTypeTest: TypeTest[Selector, RenameSelector]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Repeated-0","e":false,"i":"","n":"Repeated","t":"Repeated <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Repeated-0","e":false,"i":"","n":"Repeated","t":"Repeated: RepeatedModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RepeatedMethods-0","e":false,"i":"","n":"RepeatedMethods","t":"RepeatedMethods: RepeatedMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#RepeatedTypeTest-0","e":false,"i":"","n":"RepeatedTypeTest","t":"RepeatedTypeTest: TypeTest[Tree, Repeated]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Return-0","e":false,"i":"","n":"Return","t":"Return <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Return-0","e":false,"i":"","n":"Return","t":"Return: ReturnModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ReturnMethods-0","e":false,"i":"","n":"ReturnMethods","t":"ReturnMethods: ReturnMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ReturnTypeTest-0","e":false,"i":"","n":"ReturnTypeTest","t":"ReturnTypeTest: TypeTest[Tree, Return]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Select-0","e":false,"i":"","n":"Select","t":"Select <: Ref","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Select-0","e":false,"i":"","n":"Select","t":"Select: SelectModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SelectMethods-0","e":false,"i":"","n":"SelectMethods","t":"SelectMethods: SelectMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SelectOuter-0","e":false,"i":"","n":"SelectOuter","t":"SelectOuter <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SelectOuter-0","e":false,"i":"","n":"SelectOuter","t":"SelectOuter: SelectOuterModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SelectOuterMethods-0","e":false,"i":"","n":"SelectOuterMethods","t":"SelectOuterMethods: SelectOuterMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SelectOuterTypeTest-0","e":false,"i":"","n":"SelectOuterTypeTest","t":"SelectOuterTypeTest: TypeTest[Tree, SelectOuter]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SelectTypeTest-0","e":false,"i":"","n":"SelectTypeTest","t":"SelectTypeTest: TypeTest[Tree, Select]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Selector-0","e":false,"i":"","n":"Selector","t":"Selector <: AnyRef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Selector-0","e":false,"i":"","n":"Selector","t":"Selector: SelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ShortConstant-0","e":false,"i":"","n":"ShortConstant","t":"ShortConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ShortConstant-0","e":false,"i":"","n":"ShortConstant","t":"ShortConstant: ShortConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ShortConstantTypeTest-0","e":false,"i":"","n":"ShortConstantTypeTest","t":"ShortConstantTypeTest: TypeTest[Constant, ShortConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Signature-0","e":false,"i":"","n":"Signature","t":"Signature <: AnyRef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Signature-0","e":false,"i":"","n":"Signature","t":"Signature: SignatureModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SignatureMethods-0","e":false,"i":"","n":"SignatureMethods","t":"SignatureMethods: SignatureMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SimpleSelector-0","e":false,"i":"","n":"SimpleSelector","t":"SimpleSelector <: Selector","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SimpleSelector-0","e":false,"i":"","n":"SimpleSelector","t":"SimpleSelector: SimpleSelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SimpleSelectorMethods-0","e":false,"i":"","n":"SimpleSelectorMethods","t":"SimpleSelectorMethods: SimpleSelectorMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SimpleSelectorTypeTest-0","e":false,"i":"","n":"SimpleSelectorTypeTest","t":"SimpleSelectorTypeTest: TypeTest[Selector, SimpleSelector]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Singleton-0","e":false,"i":"","n":"Singleton","t":"Singleton <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Singleton-0","e":false,"i":"","n":"Singleton","t":"Singleton: SingletonModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SingletonMethods-0","e":false,"i":"","n":"SingletonMethods","t":"SingletonMethods: SingletonMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SingletonTypeTest-0","e":false,"i":"","n":"SingletonTypeTest","t":"SingletonTypeTest: TypeTest[Tree, Singleton]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SourceFile-0","e":false,"i":"","n":"SourceFile","t":"SourceFile <: AnyRef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SourceFile-0","e":false,"i":"","n":"SourceFile","t":"SourceFile: SourceFileModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SourceFileMethods-0","e":false,"i":"","n":"SourceFileMethods","t":"SourceFileMethods: SourceFileMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Statement-0","e":false,"i":"","n":"Statement","t":"Statement <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#StatementTypeTest-0","e":false,"i":"","n":"StatementTypeTest","t":"StatementTypeTest: TypeTest[Tree, Statement]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#StringConstant-0","e":false,"i":"","n":"StringConstant","t":"StringConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#StringConstant-0","e":false,"i":"","n":"StringConstant","t":"StringConstant: StringConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#StringConstantTypeTest-0","e":false,"i":"","n":"StringConstantTypeTest","t":"StringConstantTypeTest: TypeTest[Constant, StringConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SummonFrom-0","e":false,"i":"","n":"SummonFrom","t":"SummonFrom <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SummonFrom-0","e":false,"i":"","n":"SummonFrom","t":"SummonFrom: SummonFromModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SummonFromMethods-0","e":false,"i":"","n":"SummonFromMethods","t":"SummonFromMethods: SummonFromMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SummonFromTypeTest-0","e":false,"i":"","n":"SummonFromTypeTest","t":"SummonFromTypeTest: TypeTest[Tree, SummonFrom]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Super-0","e":false,"i":"","n":"Super","t":"Super <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Super-0","e":false,"i":"","n":"Super","t":"Super: SuperModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SuperMethods-0","e":false,"i":"","n":"SuperMethods","t":"SuperMethods: SuperMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SuperType-0","e":false,"i":"","n":"SuperType","t":"SuperType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SuperType-0","e":false,"i":"","n":"SuperType","t":"SuperType: SuperTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SuperTypeMethods-0","e":false,"i":"","n":"SuperTypeMethods","t":"SuperTypeMethods: SuperTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SuperTypeTest-0","e":false,"i":"","n":"SuperTypeTest","t":"SuperTypeTest: TypeTest[Tree, Super]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SuperTypeTypeTest-0","e":false,"i":"","n":"SuperTypeTypeTest","t":"SuperTypeTypeTest: TypeTest[TypeRepr, SuperType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Symbol-0","e":false,"i":"","n":"Symbol","t":"Symbol <: AnyRef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Symbol-0","e":false,"i":"","n":"Symbol","t":"Symbol: SymbolModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#SymbolMethods-0","e":false,"i":"","n":"SymbolMethods","t":"SymbolMethods: SymbolMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Term-0","e":false,"i":"","n":"Term","t":"Term <: Statement","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Term-0","e":false,"i":"","n":"Term","t":"Term: TermModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TermMethods-0","e":false,"i":"","n":"TermMethods","t":"TermMethods: TermMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TermParamClause-0","e":false,"i":"","n":"TermParamClause","t":"TermParamClause <: ParamClause","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TermParamClause-0","e":false,"i":"","n":"TermParamClause","t":"TermParamClause: TermParamClauseModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TermParamClauseMethods-0","e":false,"i":"","n":"TermParamClauseMethods","t":"TermParamClauseMethods: TermParamClauseMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TermParamClauseTypeTest-0","e":false,"i":"","n":"TermParamClauseTypeTest","t":"TermParamClauseTypeTest: TypeTest[ParamClause, TermParamClause]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TermRef-0","e":false,"i":"","n":"TermRef","t":"TermRef <: NamedType","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TermRef-0","e":false,"i":"","n":"TermRef","t":"TermRef: TermRefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TermRefTypeTest-0","e":false,"i":"","n":"TermRefTypeTest","t":"TermRefTypeTest: TypeTest[TypeRepr, TermRef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TermTypeTest-0","e":false,"i":"","n":"TermTypeTest","t":"TermTypeTest: TypeTest[Tree, Term]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#This-0","e":false,"i":"","n":"This","t":"This <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#This-0","e":false,"i":"","n":"This","t":"This: ThisModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ThisMethods-0","e":false,"i":"","n":"ThisMethods","t":"ThisMethods: ThisMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ThisType-0","e":false,"i":"","n":"ThisType","t":"ThisType <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ThisType-0","e":false,"i":"","n":"ThisType","t":"ThisType: ThisTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ThisTypeMethods-0","e":false,"i":"","n":"ThisTypeMethods","t":"ThisTypeMethods: ThisTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ThisTypeTest-0","e":false,"i":"","n":"ThisTypeTest","t":"ThisTypeTest: TypeTest[Tree, This]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ThisTypeTypeTest-0","e":false,"i":"","n":"ThisTypeTypeTest","t":"ThisTypeTypeTest: TypeTest[TypeRepr, ThisType]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Tree-0","e":false,"i":"","n":"Tree","t":"Tree <: AnyRef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Tree-0","e":false,"i":"","n":"Tree","t":"Tree: TreeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TreeMethods-0","e":false,"i":"","n":"TreeMethods","t":"TreeMethods: TreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TreePrinter-0","e":false,"i":"","n":"TreePrinter","t":"TreePrinter: Printer[Tree]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Try-0","e":false,"i":"","n":"Try","t":"Try <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Try-0","e":false,"i":"","n":"Try","t":"Try: TryModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TryMethods-0","e":false,"i":"","n":"TryMethods","t":"TryMethods: TryMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TryTypeTest-0","e":false,"i":"","n":"TryTypeTest","t":"TryTypeTest: TypeTest[Tree, Try]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeApply-0","e":false,"i":"","n":"TypeApply","t":"TypeApply <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeApply-0","e":false,"i":"","n":"TypeApply","t":"TypeApply: TypeApplyModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeApplyMethods-0","e":false,"i":"","n":"TypeApplyMethods","t":"TypeApplyMethods: TypeApplyMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeApplyTypeTest-0","e":false,"i":"","n":"TypeApplyTypeTest","t":"TypeApplyTypeTest: TypeTest[Tree, TypeApply]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBind-0","e":false,"i":"","n":"TypeBind","t":"TypeBind <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBind-0","e":false,"i":"","n":"TypeBind","t":"TypeBind: TypeBindModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBindMethods-0","e":false,"i":"","n":"TypeBindMethods","t":"TypeBindMethods: TypeBindMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBindTypeTest-0","e":false,"i":"","n":"TypeBindTypeTest","t":"TypeBindTypeTest: TypeTest[Tree, TypeBind]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBlock-0","e":false,"i":"","n":"TypeBlock","t":"TypeBlock <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBlock-0","e":false,"i":"","n":"TypeBlock","t":"TypeBlock: TypeBlockModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBlockMethods-0","e":false,"i":"","n":"TypeBlockMethods","t":"TypeBlockMethods: TypeBlockMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBlockTypeTest-0","e":false,"i":"","n":"TypeBlockTypeTest","t":"TypeBlockTypeTest: TypeTest[Tree, TypeBlock]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBounds-0","e":false,"i":"","n":"TypeBounds","t":"TypeBounds <: TypeRepr","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBounds-0","e":false,"i":"","n":"TypeBounds","t":"TypeBounds: TypeBoundsModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBoundsMethods-0","e":false,"i":"","n":"TypeBoundsMethods","t":"TypeBoundsMethods: TypeBoundsMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBoundsTree-0","e":false,"i":"","n":"TypeBoundsTree","t":"TypeBoundsTree <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBoundsTree-0","e":false,"i":"","n":"TypeBoundsTree","t":"TypeBoundsTree: TypeBoundsTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBoundsTreeMethods-0","e":false,"i":"","n":"TypeBoundsTreeMethods","t":"TypeBoundsTreeMethods: TypeBoundsTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBoundsTreeTypeTest-0","e":false,"i":"","n":"TypeBoundsTreeTypeTest","t":"TypeBoundsTreeTypeTest: TypeTest[Tree, TypeBoundsTree]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeBoundsTypeTest-0","e":false,"i":"","n":"TypeBoundsTypeTest","t":"TypeBoundsTypeTest: TypeTest[TypeRepr, TypeBounds]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeCaseDef-0","e":false,"i":"","n":"TypeCaseDef","t":"TypeCaseDef <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeCaseDef-0","e":false,"i":"","n":"TypeCaseDef","t":"TypeCaseDef: TypeCaseDefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeCaseDefMethods-0","e":false,"i":"","n":"TypeCaseDefMethods","t":"TypeCaseDefMethods: TypeCaseDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeCaseDefTypeTest-0","e":false,"i":"","n":"TypeCaseDefTypeTest","t":"TypeCaseDefTypeTest: TypeTest[Tree, TypeCaseDef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeDef-0","e":false,"i":"","n":"TypeDef","t":"TypeDef <: Definition","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeDef-0","e":false,"i":"","n":"TypeDef","t":"TypeDef: TypeDefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeDefMethods-0","e":false,"i":"","n":"TypeDefMethods","t":"TypeDefMethods: TypeDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeDefTypeTest-0","e":false,"i":"","n":"TypeDefTypeTest","t":"TypeDefTypeTest: TypeTest[Tree, TypeDef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeIdent-0","e":false,"i":"","n":"TypeIdent","t":"TypeIdent <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeIdent-0","e":false,"i":"","n":"TypeIdent","t":"TypeIdent: TypeIdentModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeIdentMethods-0","e":false,"i":"","n":"TypeIdentMethods","t":"TypeIdentMethods: TypeIdentMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeIdentTypeTest-0","e":false,"i":"","n":"TypeIdentTypeTest","t":"TypeIdentTypeTest: TypeTest[Tree, TypeIdent]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeLambda-0","e":false,"i":"","n":"TypeLambda","t":"TypeLambda <: LambdaType","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeLambda-0","e":false,"i":"","n":"TypeLambda","t":"TypeLambda: TypeLambdaModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeLambdaMethods-0","e":false,"i":"","n":"TypeLambdaMethods","t":"TypeLambdaMethods: TypeLambdaMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeLambdaTypeTest-0","e":false,"i":"","n":"TypeLambdaTypeTest","t":"TypeLambdaTypeTest: TypeTest[TypeRepr, TypeLambda]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeParamClause-0","e":false,"i":"","n":"TypeParamClause","t":"TypeParamClause <: ParamClause","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeParamClause-0","e":false,"i":"","n":"TypeParamClause","t":"TypeParamClause: TypeParamClauseModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeParamClauseMethods-0","e":false,"i":"","n":"TypeParamClauseMethods","t":"TypeParamClauseMethods: TypeParamClauseMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeParamClauseTypeTest-0","e":false,"i":"","n":"TypeParamClauseTypeTest","t":"TypeParamClauseTypeTest: TypeTest[ParamClause, TypeParamClause]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeProjection-0","e":false,"i":"","n":"TypeProjection","t":"TypeProjection <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeProjection-0","e":false,"i":"","n":"TypeProjection","t":"TypeProjection: TypeProjectionModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeProjectionMethods-0","e":false,"i":"","n":"TypeProjectionMethods","t":"TypeProjectionMethods: TypeProjectionMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeProjectionTypeTest-0","e":false,"i":"","n":"TypeProjectionTypeTest","t":"TypeProjectionTypeTest: TypeTest[Tree, TypeProjection]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeRef-0","e":false,"i":"","n":"TypeRef","t":"TypeRef <: NamedType","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeRef-0","e":false,"i":"","n":"TypeRef","t":"TypeRef: TypeRefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeRefMethods-0","e":false,"i":"","n":"TypeRefMethods","t":"TypeRefMethods: TypeRefMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeRefTypeTest-0","e":false,"i":"","n":"TypeRefTypeTest","t":"TypeRefTypeTest: TypeTest[TypeRepr, TypeRef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeRepr-0","e":false,"i":"","n":"TypeRepr","t":"TypeRepr <: Matchable","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeRepr-0","e":false,"i":"","n":"TypeRepr","t":"TypeRepr: TypeReprModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeReprMethods-0","e":false,"i":"","n":"TypeReprMethods","t":"TypeReprMethods: TypeReprMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeReprPrinter-0","e":false,"i":"","n":"TypeReprPrinter","t":"TypeReprPrinter: Printer[TypeRepr]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeSelect-0","e":false,"i":"","n":"TypeSelect","t":"TypeSelect <: TypeTree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeSelect-0","e":false,"i":"","n":"TypeSelect","t":"TypeSelect: TypeSelectModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeSelectMethods-0","e":false,"i":"","n":"TypeSelectMethods","t":"TypeSelectMethods: TypeSelectMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeSelectTypeTest-0","e":false,"i":"","n":"TypeSelectTypeTest","t":"TypeSelectTypeTest: TypeTest[Tree, TypeSelect]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeTree-0","e":false,"i":"","n":"TypeTree","t":"TypeTree <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeTree-0","e":false,"i":"","n":"TypeTree","t":"TypeTree: TypeTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeTreeMethods-0","e":false,"i":"","n":"TypeTreeMethods","t":"TypeTreeMethods: TypeTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypeTreeTypeTest-0","e":false,"i":"","n":"TypeTreeTypeTest","t":"TypeTreeTypeTest: TypeTest[Tree, TypeTree]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Typed-0","e":false,"i":"","n":"Typed","t":"Typed <: Term & TypedOrTest","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Typed-0","e":false,"i":"","n":"Typed","t":"Typed: TypedModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypedMethods-0","e":false,"i":"","n":"TypedMethods","t":"TypedMethods: TypedMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypedOrTest-0","e":false,"i":"","n":"TypedOrTest","t":"TypedOrTest <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypedOrTest-0","e":false,"i":"","n":"TypedOrTest","t":"TypedOrTest: TypedOrTestModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypedOrTestMethods-0","e":false,"i":"","n":"TypedOrTestMethods","t":"TypedOrTestMethods: TypedOrTestMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypedOrTestTypeTest-0","e":false,"i":"","n":"TypedOrTestTypeTest","t":"TypedOrTestTypeTest: TypeTest[Tree, TypedOrTest]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#TypedTypeTest-0","e":false,"i":"","n":"TypedTypeTest","t":"TypedTypeTest: TypeTest[Tree, Typed]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Unapply-0","e":false,"i":"","n":"Unapply","t":"Unapply <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Unapply-0","e":false,"i":"","n":"Unapply","t":"Unapply: UnapplyModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#UnapplyMethods-0","e":false,"i":"","n":"UnapplyMethods","t":"UnapplyMethods: UnapplyMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#UnapplyTypeTest-0","e":false,"i":"","n":"UnapplyTypeTest","t":"UnapplyTypeTest: TypeTest[Tree, Unapply]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#UnitConstant-0","e":false,"i":"","n":"UnitConstant","t":"UnitConstant <: Constant","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#UnitConstant-0","e":false,"i":"","n":"UnitConstant","t":"UnitConstant: UnitConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#UnitConstantTypeTest-0","e":false,"i":"","n":"UnitConstantTypeTest","t":"UnitConstantTypeTest: TypeTest[Constant, UnitConstant]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ValDef-0","e":false,"i":"","n":"ValDef","t":"ValDef <: ValOrDefDef","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ValDef-0","e":false,"i":"","n":"ValDef","t":"ValDef: ValDefModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ValDefMethods-0","e":false,"i":"","n":"ValDefMethods","t":"ValDefMethods: ValDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ValDefTypeTest-0","e":false,"i":"","n":"ValDefTypeTest","t":"ValDefTypeTest: TypeTest[Tree, ValDef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ValOrDefDef-0","e":false,"i":"","n":"ValOrDefDef","t":"ValOrDefDef <: Definition","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ValOrDefDefMethods-0","e":false,"i":"","n":"ValOrDefDefMethods","t":"ValOrDefDefMethods: ValOrDefDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#ValOrDefDefTypeTest-0","e":false,"i":"","n":"ValOrDefDefTypeTest","t":"ValOrDefDefTypeTest: TypeTest[Tree, ValOrDefDef]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#While-0","e":false,"i":"","n":"While","t":"While <: Term","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#While-0","e":false,"i":"","n":"While","t":"While: WhileModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#WhileMethods-0","e":false,"i":"","n":"WhileMethods","t":"WhileMethods: WhileMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#WhileTypeTest-0","e":false,"i":"","n":"WhileTypeTest","t":"WhileTypeTest: TypeTest[Tree, While]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Wildcard-0","e":false,"i":"","n":"Wildcard","t":"Wildcard <: Ident","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#Wildcard-0","e":false,"i":"","n":"Wildcard","t":"Wildcard: WildcardModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#WildcardTypeTest-0","e":false,"i":"","n":"WildcardTypeTest","t":"WildcardTypeTest: TypeTest[Tree, Wildcard]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#WildcardTypeTree-0","e":false,"i":"","n":"WildcardTypeTree","t":"WildcardTypeTree <: Tree","d":"scala.quoted.Quotes.reflectModule","k":"type","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#WildcardTypeTree-0","e":false,"i":"","n":"WildcardTypeTree","t":"WildcardTypeTree: WildcardTypeTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#WildcardTypeTreeMethods-0","e":false,"i":"","n":"WildcardTypeTreeMethods","t":"WildcardTypeTreeMethods: WildcardTypeTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#WildcardTypeTreeTypeTest-0","e":false,"i":"","n":"WildcardTypeTreeTypeTest","t":"WildcardTypeTreeTypeTest: TypeTest[Tree, WildcardTypeTree]","d":"scala.quoted.Quotes.reflectModule","k":"given","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#asTerm-1c6","e":false,"i":"extension (expr: Expr[Any])","n":"asTerm","t":"asTerm: Term","d":"scala.quoted.Quotes.reflectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#defn-0","e":false,"i":"","n":"defn","t":"defn: defnModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule.html#report-0","e":false,"i":"","n":"report","t":"report: reportModule","d":"scala.quoted.Quotes.reflectModule","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AlternativesMethods.html#","e":false,"i":"","n":"AlternativesMethods","t":"AlternativesMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AlternativesMethods.html#patterns-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Alternatives)","n":"patterns","t":"patterns: List[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.AlternativesMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AlternativesModule.html#","e":false,"i":"","n":"AlternativesModule","t":"AlternativesModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AlternativesModule.html#apply-fffff1e5","e":false,"i":"","n":"apply","t":"apply(patterns: List[Quotes.this.reflectModule.this.Tree]): Quotes.this.reflectModule.this.Alternatives","d":"scala.quoted.Quotes.reflectModule.AlternativesModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AlternativesModule.html#copy-fffffbf2","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(patterns: List[Quotes.this.reflectModule.this.Tree]): Quotes.this.reflectModule.this.Alternatives","d":"scala.quoted.Quotes.reflectModule.AlternativesModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AlternativesModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Alternatives): Some[List[Quotes.this.reflectModule.this.Tree]]","d":"scala.quoted.Quotes.reflectModule.AlternativesModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AndOrTypeMethods.html#","e":false,"i":"","n":"AndOrTypeMethods","t":"AndOrTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AndOrTypeMethods.html#left-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.AndOrType)","n":"left","t":"left: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.AndOrTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AndOrTypeMethods.html#right-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.AndOrType)","n":"right","t":"right: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.AndOrTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AndTypeModule.html#","e":false,"i":"","n":"AndTypeModule","t":"AndTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AndTypeModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(lhs: Quotes.this.reflectModule.this.TypeRepr, rhs: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.AndType","d":"scala.quoted.Quotes.reflectModule.AndTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AndTypeModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.AndType): (Quotes.this.reflectModule.this.TypeRepr, Quotes.this.reflectModule.this.TypeRepr)","d":"scala.quoted.Quotes.reflectModule.AndTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedMethods.html#","e":false,"i":"","n":"AnnotatedMethods","t":"AnnotatedMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedMethods.html#annotation-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Annotated)","n":"annotation","t":"annotation: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.AnnotatedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedMethods.html#arg-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Annotated)","n":"arg","t":"arg: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.AnnotatedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedModule.html#","e":false,"i":"","n":"AnnotatedModule","t":"AnnotatedModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(arg: Quotes.this.reflectModule.this.TypeTree, annotation: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Annotated","d":"scala.quoted.Quotes.reflectModule.AnnotatedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedModule.html#copy-fffff24c","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(arg: Quotes.this.reflectModule.this.TypeTree, annotation: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Annotated","d":"scala.quoted.Quotes.reflectModule.AnnotatedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Annotated): (Quotes.this.reflectModule.this.TypeTree, Quotes.this.reflectModule.this.Term)","d":"scala.quoted.Quotes.reflectModule.AnnotatedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeMethods.html#","e":false,"i":"","n":"AnnotatedTypeMethods","t":"AnnotatedTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeMethods.html#annotation-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.AnnotatedType)","n":"annotation","t":"annotation: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.AnnotatedTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeMethods.html#underlying-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.AnnotatedType)","n":"underlying","t":"underlying: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.AnnotatedTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeModule.html#","e":false,"i":"","n":"AnnotatedTypeModule","t":"AnnotatedTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(underlying: Quotes.this.reflectModule.this.TypeRepr, annot: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.AnnotatedType","d":"scala.quoted.Quotes.reflectModule.AnnotatedTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AnnotatedTypeModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.AnnotatedType): (Quotes.this.reflectModule.this.TypeRepr, Quotes.this.reflectModule.this.Term)","d":"scala.quoted.Quotes.reflectModule.AnnotatedTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedMethods.html#","e":false,"i":"","n":"AppliedMethods","t":"AppliedMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedMethods.html#args-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Applied)","n":"args","t":"args: List[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.AppliedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedMethods.html#tpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Applied)","n":"tpt","t":"tpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.AppliedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedModule.html#","e":false,"i":"","n":"AppliedModule","t":"AppliedModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedModule.html#apply-fffffbf2","e":false,"i":"","n":"apply","t":"apply(tpt: Quotes.this.reflectModule.this.TypeTree, args: List[Quotes.this.reflectModule.this.Tree]): Quotes.this.reflectModule.this.Applied","d":"scala.quoted.Quotes.reflectModule.AppliedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedModule.html#copy-fffffbff","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(tpt: Quotes.this.reflectModule.this.TypeTree, args: List[Quotes.this.reflectModule.this.Tree]): Quotes.this.reflectModule.this.Applied","d":"scala.quoted.Quotes.reflectModule.AppliedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Applied): (Quotes.this.reflectModule.this.TypeTree, List[Quotes.this.reflectModule.this.Tree])","d":"scala.quoted.Quotes.reflectModule.AppliedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedTypeMethods.html#","e":false,"i":"","n":"AppliedTypeMethods","t":"AppliedTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedTypeMethods.html#args-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.AppliedType)","n":"args","t":"args: List[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.AppliedTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedTypeMethods.html#tycon-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.AppliedType)","n":"tycon","t":"tycon: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.AppliedTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedTypeModule.html#","e":false,"i":"","n":"AppliedTypeModule","t":"AppliedTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedTypeModule.html#apply-fffffbf2","e":false,"i":"","n":"apply","t":"apply(tycon: Quotes.this.reflectModule.this.TypeRepr, args: List[Quotes.this.reflectModule.this.TypeRepr]): Quotes.this.reflectModule.this.AppliedType","d":"scala.quoted.Quotes.reflectModule.AppliedTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AppliedTypeModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.AppliedType): (Quotes.this.reflectModule.this.TypeRepr, List[Quotes.this.reflectModule.this.TypeRepr])","d":"scala.quoted.Quotes.reflectModule.AppliedTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ApplyMethods.html#","e":false,"i":"","n":"ApplyMethods","t":"ApplyMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ApplyMethods.html#args-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Apply)","n":"args","t":"args: List[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.ApplyMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ApplyMethods.html#fun-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Apply)","n":"fun","t":"fun: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ApplyMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ApplyModule.html#","e":false,"i":"","n":"ApplyModule","t":"ApplyModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ApplyModule.html#apply-fffffbf2","e":false,"i":"","n":"apply","t":"apply(fun: Quotes.this.reflectModule.this.Term, args: List[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.Apply","d":"scala.quoted.Quotes.reflectModule.ApplyModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ApplyModule.html#copy-fffffbff","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(fun: Quotes.this.reflectModule.this.Term, args: List[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.Apply","d":"scala.quoted.Quotes.reflectModule.ApplyModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ApplyModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Apply): (Quotes.this.reflectModule.this.Term, List[Quotes.this.reflectModule.this.Term])","d":"scala.quoted.Quotes.reflectModule.ApplyModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AssignMethods.html#","e":false,"i":"","n":"AssignMethods","t":"AssignMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AssignMethods.html#lhs-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Assign)","n":"lhs","t":"lhs: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.AssignMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AssignMethods.html#rhs-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Assign)","n":"rhs","t":"rhs: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.AssignMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AssignModule.html#","e":false,"i":"","n":"AssignModule","t":"AssignModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AssignModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(lhs: Quotes.this.reflectModule.this.Term, rhs: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Assign","d":"scala.quoted.Quotes.reflectModule.AssignModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AssignModule.html#copy-fffff24c","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(lhs: Quotes.this.reflectModule.this.Term, rhs: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Assign","d":"scala.quoted.Quotes.reflectModule.AssignModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$AssignModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Assign): (Quotes.this.reflectModule.this.Term, Quotes.this.reflectModule.this.Term)","d":"scala.quoted.Quotes.reflectModule.AssignModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BindMethods.html#","e":false,"i":"","n":"BindMethods","t":"BindMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BindMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Bind)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.BindMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BindMethods.html#pattern-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Bind)","n":"pattern","t":"pattern: Quotes.this.reflectModule.this.Tree","d":"scala.quoted.Quotes.reflectModule.BindMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BindModule.html#","e":false,"i":"","n":"BindModule","t":"BindModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BindModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(sym: Quotes.this.reflectModule.this.Symbol, pattern: Quotes.this.reflectModule.this.Tree): Quotes.this.reflectModule.this.Bind","d":"scala.quoted.Quotes.reflectModule.BindModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BindModule.html#copy-71e","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(name: String, pattern: Quotes.this.reflectModule.this.Tree): Quotes.this.reflectModule.this.Bind","d":"scala.quoted.Quotes.reflectModule.BindModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BindModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(pattern: Quotes.this.reflectModule.this.Bind): (String, Quotes.this.reflectModule.this.Tree)","d":"scala.quoted.Quotes.reflectModule.BindModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BlockMethods.html#","e":false,"i":"","n":"BlockMethods","t":"BlockMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BlockMethods.html#expr-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Block)","n":"expr","t":"expr: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.BlockMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BlockMethods.html#statements-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Block)","n":"statements","t":"statements: List[Quotes.this.reflectModule.this.Statement]","d":"scala.quoted.Quotes.reflectModule.BlockMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BlockModule.html#","e":false,"i":"","n":"BlockModule","t":"BlockModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BlockModule.html#apply-fffff178","e":false,"i":"","n":"apply","t":"apply(stats: List[Quotes.this.reflectModule.this.Statement], expr: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Block","d":"scala.quoted.Quotes.reflectModule.BlockModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BlockModule.html#copy-fffff185","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(stats: List[Quotes.this.reflectModule.this.Statement], expr: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Block","d":"scala.quoted.Quotes.reflectModule.BlockModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BlockModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Block): (List[Quotes.this.reflectModule.this.Statement], Quotes.this.reflectModule.this.Term)","d":"scala.quoted.Quotes.reflectModule.BlockModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BooleanConstantModule.html#","e":false,"i":"","n":"BooleanConstantModule","t":"BooleanConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BooleanConstantModule.html#apply-fffff0f3","e":false,"i":"","n":"apply","t":"apply(x: Boolean): Quotes.this.reflectModule.this.BooleanConstant","d":"scala.quoted.Quotes.reflectModule.BooleanConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$BooleanConstantModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.BooleanConstant): Some[Boolean]","d":"scala.quoted.Quotes.reflectModule.BooleanConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameMethods.html#","e":false,"i":"","n":"ByNameMethods","t":"ByNameMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameMethods.html#result-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ByName)","n":"result","t":"result: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.ByNameMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameModule.html#","e":false,"i":"","n":"ByNameModule","t":"ByNameModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(result: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.ByName","d":"scala.quoted.Quotes.reflectModule.ByNameModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameModule.html#copy-fffffab9","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(result: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.ByName","d":"scala.quoted.Quotes.reflectModule.ByNameModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.ByName): Some[Quotes.this.reflectModule.this.TypeTree]","d":"scala.quoted.Quotes.reflectModule.ByNameModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameTypeMethods.html#","e":false,"i":"","n":"ByNameTypeMethods","t":"ByNameTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameTypeMethods.html#underlying-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ByNameType)","n":"underlying","t":"underlying: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.ByNameTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameTypeModule.html#","e":false,"i":"","n":"ByNameTypeModule","t":"ByNameTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameTypeModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(underlying: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.ByNameTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByNameTypeModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.ByNameType): Some[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.ByNameTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByteConstantModule.html#","e":false,"i":"","n":"ByteConstantModule","t":"ByteConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByteConstantModule.html#apply-a63","e":false,"i":"","n":"apply","t":"apply(x: Byte): Quotes.this.reflectModule.this.ByteConstant","d":"scala.quoted.Quotes.reflectModule.ByteConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ByteConstantModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.ByteConstant): Some[Byte]","d":"scala.quoted.Quotes.reflectModule.ByteConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CaseDefMethods.html#","e":false,"i":"","n":"CaseDefMethods","t":"CaseDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CaseDefMethods.html#guard-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.CaseDef)","n":"guard","t":"guard: Option[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.CaseDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CaseDefMethods.html#pattern-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.CaseDef)","n":"pattern","t":"pattern: Quotes.this.reflectModule.this.Tree","d":"scala.quoted.Quotes.reflectModule.CaseDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CaseDefMethods.html#rhs-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.CaseDef)","n":"rhs","t":"rhs: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.CaseDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CaseDefModule.html#","e":false,"i":"","n":"CaseDefModule","t":"CaseDefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CaseDefModule.html#apply-fffff876","e":false,"i":"","n":"apply","t":"apply(pattern: Quotes.this.reflectModule.this.Tree, guard: Option[Quotes.this.reflectModule.this.Term], rhs: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.CaseDef","d":"scala.quoted.Quotes.reflectModule.CaseDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CaseDefModule.html#copy-b89","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(pattern: Quotes.this.reflectModule.this.Tree, guard: Option[Quotes.this.reflectModule.this.Term], rhs: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.CaseDef","d":"scala.quoted.Quotes.reflectModule.CaseDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CaseDefModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.CaseDef): (Quotes.this.reflectModule.this.Tree, Option[Quotes.this.reflectModule.this.Term], Quotes.this.reflectModule.this.Term)","d":"scala.quoted.Quotes.reflectModule.CaseDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CharConstantModule.html#","e":false,"i":"","n":"CharConstantModule","t":"CharConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CharConstantModule.html#apply-fffff0b1","e":false,"i":"","n":"apply","t":"apply(x: Char): Quotes.this.reflectModule.this.CharConstant","d":"scala.quoted.Quotes.reflectModule.CharConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CharConstantModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.CharConstant): Some[Char]","d":"scala.quoted.Quotes.reflectModule.CharConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html#","e":false,"i":"","n":"ClassDefMethods","t":"ClassDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html#body-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ClassDef)","n":"body","t":"body: List[Quotes.this.reflectModule.this.Statement]","d":"scala.quoted.Quotes.reflectModule.ClassDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html#constructor-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ClassDef)","n":"constructor","t":"constructor: Quotes.this.reflectModule.this.DefDef","d":"scala.quoted.Quotes.reflectModule.ClassDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html#parents-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ClassDef)","n":"parents","t":"parents: List[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.ClassDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefMethods.html#self-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ClassDef)","n":"self","t":"self: Option[Quotes.this.reflectModule.this.ValDef]","d":"scala.quoted.Quotes.reflectModule.ClassDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefModule.html#","e":false,"i":"","n":"ClassDefModule","t":"ClassDefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefModule.html#apply-3a6","e":false,"i":"","n":"apply","t":"apply(cls: Quotes.this.reflectModule.this.Symbol, parents: List[Quotes.this.reflectModule.this.Tree], body: List[Quotes.this.reflectModule.this.Statement]): Quotes.this.reflectModule.this.ClassDef","d":"scala.quoted.Quotes.reflectModule.ClassDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefModule.html#copy-fffffa41","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(name: String, constr: Quotes.this.reflectModule.this.DefDef, parents: List[Quotes.this.reflectModule.this.Tree], selfOpt: Option[Quotes.this.reflectModule.this.ValDef], body: List[Quotes.this.reflectModule.this.Statement]): Quotes.this.reflectModule.this.ClassDef","d":"scala.quoted.Quotes.reflectModule.ClassDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefModule.html#module-fffffac5","e":false,"i":"","n":"module","t":"module(module: Quotes.this.reflectModule.this.Symbol, parents: List[Quotes.this.reflectModule.this.Tree], body: List[Quotes.this.reflectModule.this.Statement]): (Quotes.this.reflectModule.this.ValDef, Quotes.this.reflectModule.this.ClassDef)","d":"scala.quoted.Quotes.reflectModule.ClassDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassDefModule.html#unapply-fffff448","e":false,"i":"","n":"unapply","t":"unapply(cdef: Quotes.this.reflectModule.this.ClassDef): (String, Quotes.this.reflectModule.this.DefDef, List[Quotes.this.reflectModule.this.Tree], Option[Quotes.this.reflectModule.this.ValDef], List[Quotes.this.reflectModule.this.Statement])","d":"scala.quoted.Quotes.reflectModule.ClassDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassOfConstantModule.html#","e":false,"i":"","n":"ClassOfConstantModule","t":"ClassOfConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassOfConstantModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(tpe: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.ClassOfConstant","d":"scala.quoted.Quotes.reflectModule.ClassOfConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClassOfConstantModule.html#unapply-fffffb50","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.ClassOfConstant): Option[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.ClassOfConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClosureMethods.html#","e":false,"i":"","n":"ClosureMethods","t":"ClosureMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClosureMethods.html#meth-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Closure)","n":"meth","t":"meth: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ClosureMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClosureMethods.html#tpeOpt-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Closure)","n":"tpeOpt","t":"tpeOpt: Option[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.ClosureMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClosureModule.html#","e":false,"i":"","n":"ClosureModule","t":"ClosureModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClosureModule.html#apply-4e3","e":false,"i":"","n":"apply","t":"apply(meth: Quotes.this.reflectModule.this.Term, tpe: Option[Quotes.this.reflectModule.this.TypeRepr]): Quotes.this.reflectModule.this.Closure","d":"scala.quoted.Quotes.reflectModule.ClosureModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClosureModule.html#copy-df6","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(meth: Quotes.this.reflectModule.this.Tree, tpe: Option[Quotes.this.reflectModule.this.TypeRepr]): Quotes.this.reflectModule.this.Closure","d":"scala.quoted.Quotes.reflectModule.ClosureModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ClosureModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Closure): (Quotes.this.reflectModule.this.Term, Option[Quotes.this.reflectModule.this.TypeRepr])","d":"scala.quoted.Quotes.reflectModule.ClosureModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CompilationInfoModule.html#","e":false,"i":"","n":"CompilationInfoModule","t":"CompilationInfoModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CompilationInfoModule.html#XmacroSettings-0","e":false,"i":"","n":"XmacroSettings","t":"XmacroSettings: List[String]","d":"scala.quoted.Quotes.reflectModule.CompilationInfoModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$CompilationInfoModule.html#isWhileTyping-0","e":false,"i":"","n":"isWhileTyping","t":"isWhileTyping: Boolean","d":"scala.quoted.Quotes.reflectModule.CompilationInfoModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ConstantMethods.html#","e":false,"i":"","n":"ConstantMethods","t":"ConstantMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ConstantMethods.html#show-fffffbce","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Constant)","n":"show","t":"show(using Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.Constant]): String","d":"scala.quoted.Quotes.reflectModule.ConstantMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ConstantMethods.html#value-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Constant)","n":"value","t":"value: Any","d":"scala.quoted.Quotes.reflectModule.ConstantMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ConstantModule.html#","e":false,"i":"","n":"ConstantModule","t":"ConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ConstantTypeMethods.html#","e":false,"i":"","n":"ConstantTypeMethods","t":"ConstantTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ConstantTypeMethods.html#constant-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ConstantType)","n":"constant","t":"constant: Quotes.this.reflectModule.this.Constant","d":"scala.quoted.Quotes.reflectModule.ConstantTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ConstantTypeModule.html#","e":false,"i":"","n":"ConstantTypeModule","t":"ConstantTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ConstantTypeModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(x: Quotes.this.reflectModule.this.Constant): Quotes.this.reflectModule.this.ConstantType","d":"scala.quoted.Quotes.reflectModule.ConstantTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ConstantTypeModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.ConstantType): Some[Quotes.this.reflectModule.this.Constant]","d":"scala.quoted.Quotes.reflectModule.ConstantTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html#","e":false,"i":"","n":"DefDefMethods","t":"DefDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html#leadingTypeParams-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.DefDef)","n":"leadingTypeParams","t":"leadingTypeParams: List[Quotes.this.reflectModule.this.TypeDef]","d":"scala.quoted.Quotes.reflectModule.DefDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html#paramss-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.DefDef)","n":"paramss","t":"paramss: List[Quotes.this.reflectModule.this.ParamClause]","d":"scala.quoted.Quotes.reflectModule.DefDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html#returnTpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.DefDef)","n":"returnTpt","t":"returnTpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.DefDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html#rhs-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.DefDef)","n":"rhs","t":"rhs: Option[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.DefDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html#termParamss-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.DefDef)","n":"termParamss","t":"termParamss: List[Quotes.this.reflectModule.this.TermParamClause]","d":"scala.quoted.Quotes.reflectModule.DefDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefMethods.html#trailingParamss-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.DefDef)","n":"trailingParamss","t":"trailingParamss: List[Quotes.this.reflectModule.this.ParamClause]","d":"scala.quoted.Quotes.reflectModule.DefDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefModule.html#","e":false,"i":"","n":"DefDefModule","t":"DefDefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefModule.html#apply-31","e":false,"i":"","n":"apply","t":"apply(symbol: Quotes.this.reflectModule.this.Symbol, rhsFn: List[List[Quotes.this.reflectModule.this.Tree]] => Option[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.DefDef","d":"scala.quoted.Quotes.reflectModule.DefDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefModule.html#copy-fffff93d","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(name: String, paramss: List[Quotes.this.reflectModule.this.ParamClause], tpt: Quotes.this.reflectModule.this.TypeTree, rhs: Option[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.DefDef","d":"scala.quoted.Quotes.reflectModule.DefDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefDefModule.html#unapply-fffff447","e":false,"i":"","n":"unapply","t":"unapply(ddef: Quotes.this.reflectModule.this.DefDef): (String, List[Quotes.this.reflectModule.this.ParamClause], Quotes.this.reflectModule.this.TypeTree, Option[Quotes.this.reflectModule.this.Term])","d":"scala.quoted.Quotes.reflectModule.DefDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefinitionMethods.html#","e":false,"i":"","n":"DefinitionMethods","t":"DefinitionMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefinitionMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Definition)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.DefinitionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DefinitionModule.html#","e":false,"i":"","n":"DefinitionModule","t":"DefinitionModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DoubleConstantModule.html#","e":false,"i":"","n":"DoubleConstantModule","t":"DoubleConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DoubleConstantModule.html#apply-12c","e":false,"i":"","n":"apply","t":"apply(x: Double): Quotes.this.reflectModule.this.DoubleConstant","d":"scala.quoted.Quotes.reflectModule.DoubleConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$DoubleConstantModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.DoubleConstant): Some[Double]","d":"scala.quoted.Quotes.reflectModule.DoubleConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ExportMethods.html#","e":false,"i":"","n":"ExportMethods","t":"ExportMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ExportMethods.html#expr-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Export)","n":"expr","t":"expr: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ExportMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ExportMethods.html#selectors-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Export)","n":"selectors","t":"selectors: List[Quotes.this.reflectModule.this.Selector]","d":"scala.quoted.Quotes.reflectModule.ExportMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ExportModule.html#","e":false,"i":"","n":"ExportModule","t":"ExportModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ExportModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(tree: Quotes.this.reflectModule.this.Export): (Quotes.this.reflectModule.this.Term, List[Quotes.this.reflectModule.this.Selector])","d":"scala.quoted.Quotes.reflectModule.ExportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html#","e":false,"i":"","n":"FlagsMethods","t":"FlagsMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html#&-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Flags)","n":"&","t":"&(that: Quotes.this.reflectModule.this.Flags): Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html#is-fffff7fa","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Flags)","n":"is","t":"is(that: Quotes.this.reflectModule.this.Flags): Boolean","d":"scala.quoted.Quotes.reflectModule.FlagsMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html#show-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Flags)","n":"show","t":"show: String","d":"scala.quoted.Quotes.reflectModule.FlagsMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsMethods.html#|-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Flags)","n":"|","t":"|(that: Quotes.this.reflectModule.this.Flags): Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#","e":false,"i":"","n":"FlagsModule","t":"FlagsModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#AbsOverride-0","e":false,"i":"","n":"AbsOverride","t":"AbsOverride: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Abstract-0","e":false,"i":"","n":"Abstract","t":"Abstract: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Artifact-0","e":false,"i":"","n":"Artifact","t":"Artifact: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Case-0","e":false,"i":"","n":"Case","t":"Case: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#CaseAccessor-0","e":false,"i":"","n":"CaseAccessor","t":"CaseAccessor: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Contravariant-0","e":false,"i":"","n":"Contravariant","t":"Contravariant: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Covariant-0","e":false,"i":"","n":"Covariant","t":"Covariant: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Deferred-0","e":false,"i":"","n":"Deferred","t":"Deferred: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#EmptyFlags-0","e":false,"i":"","n":"EmptyFlags","t":"EmptyFlags: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Enum-0","e":false,"i":"","n":"Enum","t":"Enum: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Erased-0","e":false,"i":"","n":"Erased","t":"Erased: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Exported-0","e":false,"i":"","n":"Exported","t":"Exported: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#ExtensionMethod-0","e":false,"i":"","n":"ExtensionMethod","t":"ExtensionMethod: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#FieldAccessor-0","e":false,"i":"","n":"FieldAccessor","t":"FieldAccessor: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Final-0","e":false,"i":"","n":"Final","t":"Final: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Given-0","e":false,"i":"","n":"Given","t":"Given: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#HasDefault-0","e":false,"i":"","n":"HasDefault","t":"HasDefault: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Implicit-0","e":false,"i":"","n":"Implicit","t":"Implicit: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Infix-0","e":false,"i":"","n":"Infix","t":"Infix: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Inline-0","e":false,"i":"","n":"Inline","t":"Inline: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Invisible-0","e":false,"i":"","n":"Invisible","t":"Invisible: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#JavaAnnotation-0","e":false,"i":"","n":"JavaAnnotation","t":"JavaAnnotation: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#JavaDefined-0","e":false,"i":"","n":"JavaDefined","t":"JavaDefined: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#JavaStatic-0","e":false,"i":"","n":"JavaStatic","t":"JavaStatic: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Lazy-0","e":false,"i":"","n":"Lazy","t":"Lazy: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Local-0","e":false,"i":"","n":"Local","t":"Local: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Macro-0","e":false,"i":"","n":"Macro","t":"Macro: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Method-0","e":false,"i":"","n":"Method","t":"Method: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Module-0","e":false,"i":"","n":"Module","t":"Module: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Mutable-0","e":false,"i":"","n":"Mutable","t":"Mutable: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#NoInits-0","e":false,"i":"","n":"NoInits","t":"NoInits: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Opaque-0","e":false,"i":"","n":"Opaque","t":"Opaque: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Open-0","e":false,"i":"","n":"Open","t":"Open: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Override-0","e":false,"i":"","n":"Override","t":"Override: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Package-0","e":false,"i":"","n":"Package","t":"Package: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Param-0","e":false,"i":"","n":"Param","t":"Param: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#ParamAccessor-0","e":false,"i":"","n":"ParamAccessor","t":"ParamAccessor: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Private-0","e":false,"i":"","n":"Private","t":"Private: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#PrivateLocal-0","e":false,"i":"","n":"PrivateLocal","t":"PrivateLocal: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Protected-0","e":false,"i":"","n":"Protected","t":"Protected: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Scala2x-0","e":false,"i":"","n":"Scala2x","t":"Scala2x: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Sealed-0","e":false,"i":"","n":"Sealed","t":"Sealed: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#StableRealizable-0","e":false,"i":"","n":"StableRealizable","t":"StableRealizable: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Static-0","e":false,"i":"","n":"Static","t":"Static: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Synthetic-0","e":false,"i":"","n":"Synthetic","t":"Synthetic: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Trait-0","e":false,"i":"","n":"Trait","t":"Trait: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlagsModule.html#Transparent-0","e":false,"i":"","n":"Transparent","t":"Transparent: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.FlagsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlexibleTypeMethods.html#","e":false,"i":"","n":"FlexibleTypeMethods","t":"FlexibleTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlexibleTypeMethods.html#hi-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.FlexibleType)","n":"hi","t":"hi: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.FlexibleTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlexibleTypeMethods.html#lo-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.FlexibleType)","n":"lo","t":"lo: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.FlexibleTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlexibleTypeMethods.html#underlying-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.FlexibleType)","n":"underlying","t":"underlying: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.FlexibleTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlexibleTypeModule.html#","e":false,"i":"","n":"FlexibleTypeModule","t":"FlexibleTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlexibleTypeModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(tp: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.FlexibleType","d":"scala.quoted.Quotes.reflectModule.FlexibleTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FlexibleTypeModule.html#unapply-fffffb50","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.FlexibleType): Option[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.FlexibleTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FloatConstantModule.html#","e":false,"i":"","n":"FloatConstantModule","t":"FloatConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FloatConstantModule.html#apply-fffffd27","e":false,"i":"","n":"apply","t":"apply(x: Float): Quotes.this.reflectModule.this.FloatConstant","d":"scala.quoted.Quotes.reflectModule.FloatConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$FloatConstantModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.FloatConstant): Some[Float]","d":"scala.quoted.Quotes.reflectModule.FloatConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$GivenSelectorMethods.html#","e":false,"i":"","n":"GivenSelectorMethods","t":"GivenSelectorMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$GivenSelectorMethods.html#bound-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.GivenSelector)","n":"bound","t":"bound: Option[Quotes.this.reflectModule.this.TypeTree]","d":"scala.quoted.Quotes.reflectModule.GivenSelectorMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$GivenSelectorModule.html#","e":false,"i":"","n":"GivenSelectorModule","t":"GivenSelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$GivenSelectorModule.html#apply-5d0","e":false,"i":"","n":"apply","t":"apply(bound: Option[Quotes.this.reflectModule.this.TypeTree]): Quotes.this.reflectModule.this.GivenSelector","d":"scala.quoted.Quotes.reflectModule.GivenSelectorModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$GivenSelectorModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.GivenSelector): Some[Option[Quotes.this.reflectModule.this.TypeTree]]","d":"scala.quoted.Quotes.reflectModule.GivenSelectorModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IdentMethods.html#","e":false,"i":"","n":"IdentMethods","t":"IdentMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IdentMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Ident)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.IdentMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IdentModule.html#","e":false,"i":"","n":"IdentModule","t":"IdentModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IdentModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(tmref: Quotes.this.reflectModule.this.TermRef): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.IdentModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IdentModule.html#copy-fffff38b","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(name: String): Quotes.this.reflectModule.this.Ident","d":"scala.quoted.Quotes.reflectModule.IdentModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IdentModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(tree: Quotes.this.reflectModule.this.Ident): Some[String]","d":"scala.quoted.Quotes.reflectModule.IdentModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IfMethods.html#","e":false,"i":"","n":"IfMethods","t":"IfMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IfMethods.html#cond-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.If)","n":"cond","t":"cond: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.IfMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IfMethods.html#elsep-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.If)","n":"elsep","t":"elsep: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.IfMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IfMethods.html#isInline-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.If)","n":"isInline","t":"isInline: Boolean","d":"scala.quoted.Quotes.reflectModule.IfMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IfMethods.html#thenp-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.If)","n":"thenp","t":"thenp: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.IfMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IfModule.html#","e":false,"i":"","n":"IfModule","t":"IfModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IfModule.html#apply-fffff24c","e":false,"i":"","n":"apply","t":"apply(cond: Quotes.this.reflectModule.this.Term, thenp: Quotes.this.reflectModule.this.Term, elsep: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.If","d":"scala.quoted.Quotes.reflectModule.IfModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IfModule.html#copy-fffff3df","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(cond: Quotes.this.reflectModule.this.Term, thenp: Quotes.this.reflectModule.this.Term, elsep: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.If","d":"scala.quoted.Quotes.reflectModule.IfModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IfModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(tree: Quotes.this.reflectModule.this.If): (Quotes.this.reflectModule.this.Term, Quotes.this.reflectModule.this.Term, Quotes.this.reflectModule.this.Term)","d":"scala.quoted.Quotes.reflectModule.IfModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImplicitSearchFailureMethods.html#","e":false,"i":"","n":"ImplicitSearchFailureMethods","t":"ImplicitSearchFailureMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImplicitSearchFailureMethods.html#explanation-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ImplicitSearchFailure)","n":"explanation","t":"explanation: String","d":"scala.quoted.Quotes.reflectModule.ImplicitSearchFailureMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImplicitSearchSuccessMethods.html#","e":false,"i":"","n":"ImplicitSearchSuccessMethods","t":"ImplicitSearchSuccessMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImplicitSearchSuccessMethods.html#tree-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ImplicitSearchSuccess)","n":"tree","t":"tree: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ImplicitSearchSuccessMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImplicitsModule.html#","e":false,"i":"","n":"ImplicitsModule","t":"ImplicitsModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImplicitsModule.html#search-d26","e":false,"i":"","n":"search","t":"search(tpe: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.ImplicitSearchResult","d":"scala.quoted.Quotes.reflectModule.ImplicitsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImplicitsModule.html#searchIgnoring-fffffe11","e":false,"i":"","n":"searchIgnoring","t":"searchIgnoring(tpe: Quotes.this.reflectModule.this.TypeRepr)(ignored: Quotes.this.reflectModule.this.Symbol*): Quotes.this.reflectModule.this.ImplicitSearchResult","d":"scala.quoted.Quotes.reflectModule.ImplicitsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImportMethods.html#","e":false,"i":"","n":"ImportMethods","t":"ImportMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImportMethods.html#expr-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Import)","n":"expr","t":"expr: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ImportMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImportMethods.html#selectors-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Import)","n":"selectors","t":"selectors: List[Quotes.this.reflectModule.this.Selector]","d":"scala.quoted.Quotes.reflectModule.ImportMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImportModule.html#","e":false,"i":"","n":"ImportModule","t":"ImportModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImportModule.html#apply-fffffbf2","e":false,"i":"","n":"apply","t":"apply(expr: Quotes.this.reflectModule.this.Term, selectors: List[Quotes.this.reflectModule.this.Selector]): Quotes.this.reflectModule.this.Import","d":"scala.quoted.Quotes.reflectModule.ImportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImportModule.html#copy-fffffbff","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(expr: Quotes.this.reflectModule.this.Term, selectors: List[Quotes.this.reflectModule.this.Selector]): Quotes.this.reflectModule.this.Import","d":"scala.quoted.Quotes.reflectModule.ImportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ImportModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(tree: Quotes.this.reflectModule.this.Import): (Quotes.this.reflectModule.this.Term, List[Quotes.this.reflectModule.this.Selector])","d":"scala.quoted.Quotes.reflectModule.ImportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InferredModule.html#","e":false,"i":"","n":"InferredModule","t":"InferredModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InferredModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(tpe: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.Inferred","d":"scala.quoted.Quotes.reflectModule.InferredModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InferredModule.html#unapply-4ad","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Inferred): true","d":"scala.quoted.Quotes.reflectModule.InferredModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InlinedMethods.html#","e":false,"i":"","n":"InlinedMethods","t":"InlinedMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InlinedMethods.html#bindings-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Inlined)","n":"bindings","t":"bindings: List[Quotes.this.reflectModule.this.Definition]","d":"scala.quoted.Quotes.reflectModule.InlinedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InlinedMethods.html#body-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Inlined)","n":"body","t":"body: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.InlinedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InlinedMethods.html#call-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Inlined)","n":"call","t":"call: Option[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.InlinedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InlinedModule.html#","e":false,"i":"","n":"InlinedModule","t":"InlinedModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InlinedModule.html#apply-fffff79b","e":false,"i":"","n":"apply","t":"apply(call: Option[Quotes.this.reflectModule.this.Tree], bindings: List[Quotes.this.reflectModule.this.Definition], expansion: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Inlined","d":"scala.quoted.Quotes.reflectModule.InlinedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InlinedModule.html#copy-fffffc28","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(call: Option[Quotes.this.reflectModule.this.Tree], bindings: List[Quotes.this.reflectModule.this.Definition], expansion: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Inlined","d":"scala.quoted.Quotes.reflectModule.InlinedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$InlinedModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Inlined): (Option[Quotes.this.reflectModule.this.Tree], List[Quotes.this.reflectModule.this.Definition], Quotes.this.reflectModule.this.Term)","d":"scala.quoted.Quotes.reflectModule.InlinedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IntConstantModule.html#","e":false,"i":"","n":"IntConstantModule","t":"IntConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IntConstantModule.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(x: Int): Quotes.this.reflectModule.this.IntConstant","d":"scala.quoted.Quotes.reflectModule.IntConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$IntConstantModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.IntConstant): Some[Int]","d":"scala.quoted.Quotes.reflectModule.IntConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaModule.html#","e":false,"i":"","n":"LambdaModule","t":"LambdaModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaModule.html#apply-fffff83f","e":false,"i":"","n":"apply","t":"apply(owner: Quotes.this.reflectModule.this.Symbol, tpe: Quotes.this.reflectModule.this.MethodType, rhsFn: (Quotes.this.reflectModule.this.Symbol, List[Quotes.this.reflectModule.this.Tree]) => Quotes.this.reflectModule.this.Tree): Quotes.this.reflectModule.this.Block","d":"scala.quoted.Quotes.reflectModule.LambdaModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaModule.html#unapply-fffffb50","e":false,"i":"","n":"unapply","t":"unapply(tree: Quotes.this.reflectModule.this.Block): Option[(List[Quotes.this.reflectModule.this.ValDef], Quotes.this.reflectModule.this.Term)]","d":"scala.quoted.Quotes.reflectModule.LambdaModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeMethods.html#","e":false,"i":"","n":"LambdaTypeMethods","t":"LambdaTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeMethods.html#paramNames-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.LambdaType)","n":"paramNames","t":"paramNames: List[String]","d":"scala.quoted.Quotes.reflectModule.LambdaTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeMethods.html#paramTypes-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.LambdaType)","n":"paramTypes","t":"paramTypes: List[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.LambdaTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeMethods.html#resType-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.LambdaType)","n":"resType","t":"resType: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.LambdaTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeMethods.html#","e":false,"i":"","n":"LambdaTypeTreeMethods","t":"LambdaTypeTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeMethods.html#body-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.LambdaTypeTree)","n":"body","t":"body: Quotes.this.reflectModule.this.Tree","d":"scala.quoted.Quotes.reflectModule.LambdaTypeTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeMethods.html#tparams-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.LambdaTypeTree)","n":"tparams","t":"tparams: List[Quotes.this.reflectModule.this.TypeDef]","d":"scala.quoted.Quotes.reflectModule.LambdaTypeTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeModule.html#","e":false,"i":"","n":"LambdaTypeTreeModule","t":"LambdaTypeTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeModule.html#apply-fffff178","e":false,"i":"","n":"apply","t":"apply(tparams: List[Quotes.this.reflectModule.this.TypeDef], body: Quotes.this.reflectModule.this.Tree): Quotes.this.reflectModule.this.LambdaTypeTree","d":"scala.quoted.Quotes.reflectModule.LambdaTypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeModule.html#copy-fffff185","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(tparams: List[Quotes.this.reflectModule.this.TypeDef], body: Quotes.this.reflectModule.this.Tree): Quotes.this.reflectModule.this.LambdaTypeTree","d":"scala.quoted.Quotes.reflectModule.LambdaTypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LambdaTypeTreeModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(tree: Quotes.this.reflectModule.this.LambdaTypeTree): (List[Quotes.this.reflectModule.this.TypeDef], Quotes.this.reflectModule.this.Tree)","d":"scala.quoted.Quotes.reflectModule.LambdaTypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LiteralMethods.html#","e":false,"i":"","n":"LiteralMethods","t":"LiteralMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LiteralMethods.html#constant-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Literal)","n":"constant","t":"constant: Quotes.this.reflectModule.this.Constant","d":"scala.quoted.Quotes.reflectModule.LiteralMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LiteralModule.html#","e":false,"i":"","n":"LiteralModule","t":"LiteralModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LiteralModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(constant: Quotes.this.reflectModule.this.Constant): Quotes.this.reflectModule.this.Literal","d":"scala.quoted.Quotes.reflectModule.LiteralModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LiteralModule.html#copy-fffffab9","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(constant: Quotes.this.reflectModule.this.Constant): Quotes.this.reflectModule.this.Literal","d":"scala.quoted.Quotes.reflectModule.LiteralModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LiteralModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Literal): Some[Quotes.this.reflectModule.this.Constant]","d":"scala.quoted.Quotes.reflectModule.LiteralModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LongConstantModule.html#","e":false,"i":"","n":"LongConstantModule","t":"LongConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LongConstantModule.html#apply-7d7","e":false,"i":"","n":"apply","t":"apply(x: Long): Quotes.this.reflectModule.this.LongConstant","d":"scala.quoted.Quotes.reflectModule.LongConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$LongConstantModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.LongConstant): Some[Long]","d":"scala.quoted.Quotes.reflectModule.LongConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchCaseMethods.html#","e":false,"i":"","n":"MatchCaseMethods","t":"MatchCaseMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchCaseMethods.html#pattern-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MatchCase)","n":"pattern","t":"pattern: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.MatchCaseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchCaseMethods.html#rhs-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MatchCase)","n":"rhs","t":"rhs: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.MatchCaseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchCaseModule.html#","e":false,"i":"","n":"MatchCaseModule","t":"MatchCaseModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchCaseModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(pattern: Quotes.this.reflectModule.this.TypeRepr, rhs: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.MatchCase","d":"scala.quoted.Quotes.reflectModule.MatchCaseModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchCaseModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.MatchCase): (Quotes.this.reflectModule.this.TypeRepr, Quotes.this.reflectModule.this.TypeRepr)","d":"scala.quoted.Quotes.reflectModule.MatchCaseModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchMethods.html#","e":false,"i":"","n":"MatchMethods","t":"MatchMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchMethods.html#cases-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Match)","n":"cases","t":"cases: List[Quotes.this.reflectModule.this.CaseDef]","d":"scala.quoted.Quotes.reflectModule.MatchMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchMethods.html#isInline-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Match)","n":"isInline","t":"isInline: Boolean","d":"scala.quoted.Quotes.reflectModule.MatchMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchMethods.html#scrutinee-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Match)","n":"scrutinee","t":"scrutinee: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.MatchMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchModule.html#","e":false,"i":"","n":"MatchModule","t":"MatchModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchModule.html#apply-fffffbf2","e":false,"i":"","n":"apply","t":"apply(selector: Quotes.this.reflectModule.this.Term, cases: List[Quotes.this.reflectModule.this.CaseDef]): Quotes.this.reflectModule.this.Match","d":"scala.quoted.Quotes.reflectModule.MatchModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchModule.html#copy-fffffbff","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(selector: Quotes.this.reflectModule.this.Term, cases: List[Quotes.this.reflectModule.this.CaseDef]): Quotes.this.reflectModule.this.Match","d":"scala.quoted.Quotes.reflectModule.MatchModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Match): (Quotes.this.reflectModule.this.Term, List[Quotes.this.reflectModule.this.CaseDef])","d":"scala.quoted.Quotes.reflectModule.MatchModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeMethods.html#","e":false,"i":"","n":"MatchTypeMethods","t":"MatchTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeMethods.html#bound-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MatchType)","n":"bound","t":"bound: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.MatchTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeMethods.html#cases-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MatchType)","n":"cases","t":"cases: List[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.MatchTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeMethods.html#scrutinee-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MatchType)","n":"scrutinee","t":"scrutinee: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.MatchTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeModule.html#","e":false,"i":"","n":"MatchTypeModule","t":"MatchTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeModule.html#apply-fffffbff","e":false,"i":"","n":"apply","t":"apply(bound: Quotes.this.reflectModule.this.TypeRepr, scrutinee: Quotes.this.reflectModule.this.TypeRepr, cases: List[Quotes.this.reflectModule.this.TypeRepr]): Quotes.this.reflectModule.this.MatchType","d":"scala.quoted.Quotes.reflectModule.MatchTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.MatchType): (Quotes.this.reflectModule.this.TypeRepr, Quotes.this.reflectModule.this.TypeRepr, List[Quotes.this.reflectModule.this.TypeRepr])","d":"scala.quoted.Quotes.reflectModule.MatchTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeMethods.html#","e":false,"i":"","n":"MatchTypeTreeMethods","t":"MatchTypeTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeMethods.html#bound-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MatchTypeTree)","n":"bound","t":"bound: Option[Quotes.this.reflectModule.this.TypeTree]","d":"scala.quoted.Quotes.reflectModule.MatchTypeTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeMethods.html#cases-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MatchTypeTree)","n":"cases","t":"cases: List[Quotes.this.reflectModule.this.TypeCaseDef]","d":"scala.quoted.Quotes.reflectModule.MatchTypeTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeMethods.html#selector-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MatchTypeTree)","n":"selector","t":"selector: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.MatchTypeTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeModule.html#","e":false,"i":"","n":"MatchTypeTreeModule","t":"MatchTypeTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeModule.html#apply-215","e":false,"i":"","n":"apply","t":"apply(bound: Option[Quotes.this.reflectModule.this.TypeTree], selector: Quotes.this.reflectModule.this.TypeTree, cases: List[Quotes.this.reflectModule.this.TypeCaseDef]): Quotes.this.reflectModule.this.MatchTypeTree","d":"scala.quoted.Quotes.reflectModule.MatchTypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeModule.html#copy-fffff6a2","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(bound: Option[Quotes.this.reflectModule.this.TypeTree], selector: Quotes.this.reflectModule.this.TypeTree, cases: List[Quotes.this.reflectModule.this.TypeCaseDef]): Quotes.this.reflectModule.this.MatchTypeTree","d":"scala.quoted.Quotes.reflectModule.MatchTypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MatchTypeTreeModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.MatchTypeTree): (Option[Quotes.this.reflectModule.this.TypeTree], Quotes.this.reflectModule.this.TypeTree, List[Quotes.this.reflectModule.this.TypeCaseDef])","d":"scala.quoted.Quotes.reflectModule.MatchTypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeKind.html#","e":false,"i":"","n":"MethodTypeKind","t":"MethodTypeKind","d":"scala.quoted.Quotes.reflectModule","k":"enum","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeKind.html#Plain-0","e":false,"i":"","n":"Plain","t":"Plain extends Quotes.this.reflectModule.this.MethodTypeKind","d":"scala.quoted.Quotes.reflectModule.MethodTypeKind","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeKind.html#Implicit-0","e":false,"i":"","n":"Implicit","t":"Implicit extends Quotes.this.reflectModule.this.MethodTypeKind","d":"scala.quoted.Quotes.reflectModule.MethodTypeKind","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeKind.html#Contextual-0","e":false,"i":"","n":"Contextual","t":"Contextual extends Quotes.this.reflectModule.this.MethodTypeKind","d":"scala.quoted.Quotes.reflectModule.MethodTypeKind","k":"val","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html#","e":false,"i":"","n":"MethodTypeMethods","t":"MethodTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html#erasedParams-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MethodType)","n":"erasedParams","t":"erasedParams: List[Boolean]","d":"scala.quoted.Quotes.reflectModule.MethodTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html#hasErasedParams-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MethodType)","n":"hasErasedParams","t":"hasErasedParams: Boolean","d":"scala.quoted.Quotes.reflectModule.MethodTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html#isContextual-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MethodType)","n":"isContextual","t":"isContextual: Boolean","d":"scala.quoted.Quotes.reflectModule.MethodTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html#isErased-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MethodType)","n":"isErased","t":"isErased: Boolean","d":"scala.quoted.Quotes.reflectModule.MethodTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html#isImplicit-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MethodType)","n":"isImplicit","t":"isImplicit: Boolean","d":"scala.quoted.Quotes.reflectModule.MethodTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html#methodTypeKind-ffffffc0","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MethodType)","n":"methodTypeKind","t":"methodTypeKind: Quotes.this.reflectModule.this.MethodTypeKind","d":"scala.quoted.Quotes.reflectModule.MethodTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeMethods.html#param-fffffc87","e":false,"i":"extension (self: Quotes.this.reflectModule.this.MethodType)","n":"param","t":"param(idx: Int): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.MethodTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeModule.html#","e":false,"i":"","n":"MethodTypeModule","t":"MethodTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeModule.html#apply-fffff245","e":false,"i":"","n":"apply","t":"apply(paramNames: List[String])(paramInfosExp: Quotes.this.reflectModule.this.MethodType => List[Quotes.this.reflectModule.this.TypeRepr], resultTypeExp: Quotes.this.reflectModule.this.MethodType => Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.MethodType","d":"scala.quoted.Quotes.reflectModule.MethodTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeModule.html#apply-338","e":false,"i":"","n":"apply","t":"apply(kind: Quotes.this.reflectModule.this.MethodTypeKind)(paramNames: List[String])(paramInfosExp: Quotes.this.reflectModule.this.MethodType => List[Quotes.this.reflectModule.this.TypeRepr], resultTypeExp: Quotes.this.reflectModule.this.MethodType => Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.MethodType","d":"scala.quoted.Quotes.reflectModule.MethodTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$MethodTypeModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.MethodType): (List[String], List[Quotes.this.reflectModule.this.TypeRepr], Quotes.this.reflectModule.this.TypeRepr)","d":"scala.quoted.Quotes.reflectModule.MethodTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedArgMethods.html#","e":false,"i":"","n":"NamedArgMethods","t":"NamedArgMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedArgMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.NamedArg)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.NamedArgMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedArgMethods.html#value-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.NamedArg)","n":"value","t":"value: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.NamedArgMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedArgModule.html#","e":false,"i":"","n":"NamedArgModule","t":"NamedArgModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedArgModule.html#apply-f8b","e":false,"i":"","n":"apply","t":"apply(name: String, arg: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.NamedArg","d":"scala.quoted.Quotes.reflectModule.NamedArgModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedArgModule.html#copy-71e","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(name: String, arg: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.NamedArg","d":"scala.quoted.Quotes.reflectModule.NamedArgModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedArgModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.NamedArg): (String, Quotes.this.reflectModule.this.Term)","d":"scala.quoted.Quotes.reflectModule.NamedArgModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedTypeMethods.html#","e":false,"i":"","n":"NamedTypeMethods","t":"NamedTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedTypeMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.NamedType)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.NamedTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NamedTypeMethods.html#qualifier-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.NamedType)","n":"qualifier","t":"qualifier: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.NamedTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NewMethods.html#","e":false,"i":"","n":"NewMethods","t":"NewMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NewMethods.html#tpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.New)","n":"tpt","t":"tpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.NewMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NewModule.html#","e":false,"i":"","n":"NewModule","t":"NewModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NewModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.New","d":"scala.quoted.Quotes.reflectModule.NewModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NewModule.html#copy-fffffab9","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.New","d":"scala.quoted.Quotes.reflectModule.NewModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NewModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.New): Some[Quotes.this.reflectModule.this.TypeTree]","d":"scala.quoted.Quotes.reflectModule.NewModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NoPrefixModule.html#","e":false,"i":"","n":"NoPrefixModule","t":"NoPrefixModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NoPrefixModule.html#unapply-4ad","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.NoPrefix): true","d":"scala.quoted.Quotes.reflectModule.NoPrefixModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NullConstantModule.html#","e":false,"i":"","n":"NullConstantModule","t":"NullConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NullConstantModule.html#apply-993","e":false,"i":"","n":"apply","t":"apply(): Quotes.this.reflectModule.this.NullConstant","d":"scala.quoted.Quotes.reflectModule.NullConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$NullConstantModule.html#unapply-4ad","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.NullConstant): Boolean","d":"scala.quoted.Quotes.reflectModule.NullConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$OmitSelectorMethods.html#","e":false,"i":"","n":"OmitSelectorMethods","t":"OmitSelectorMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$OmitSelectorMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.OmitSelector)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.OmitSelectorMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$OmitSelectorMethods.html#namePos-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.OmitSelector)","n":"namePos","t":"namePos: Quotes.this.reflectModule.this.Position","d":"scala.quoted.Quotes.reflectModule.OmitSelectorMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$OmitSelectorModule.html#","e":false,"i":"","n":"OmitSelectorModule","t":"OmitSelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$OmitSelectorModule.html#apply-fffff5f8","e":false,"i":"","n":"apply","t":"apply(name: String): Quotes.this.reflectModule.this.OmitSelector","d":"scala.quoted.Quotes.reflectModule.OmitSelectorModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$OmitSelectorModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.OmitSelector): Some[String]","d":"scala.quoted.Quotes.reflectModule.OmitSelectorModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$OrTypeModule.html#","e":false,"i":"","n":"OrTypeModule","t":"OrTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$OrTypeModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(lhs: Quotes.this.reflectModule.this.TypeRepr, rhs: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.OrType","d":"scala.quoted.Quotes.reflectModule.OrTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$OrTypeModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.OrType): (Quotes.this.reflectModule.this.TypeRepr, Quotes.this.reflectModule.this.TypeRepr)","d":"scala.quoted.Quotes.reflectModule.OrTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PackageClauseMethods.html#","e":false,"i":"","n":"PackageClauseMethods","t":"PackageClauseMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PackageClauseMethods.html#pid-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.PackageClause)","n":"pid","t":"pid: Quotes.this.reflectModule.this.Ref","d":"scala.quoted.Quotes.reflectModule.PackageClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PackageClauseMethods.html#stats-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.PackageClause)","n":"stats","t":"stats: List[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.PackageClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PackageClauseModule.html#","e":false,"i":"","n":"PackageClauseModule","t":"PackageClauseModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PackageClauseModule.html#apply-fffffbf2","e":false,"i":"","n":"apply","t":"apply(pid: Quotes.this.reflectModule.this.Ref, stats: List[Quotes.this.reflectModule.this.Tree]): Quotes.this.reflectModule.this.PackageClause","d":"scala.quoted.Quotes.reflectModule.PackageClauseModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PackageClauseModule.html#copy-fffffbff","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(pid: Quotes.this.reflectModule.this.Ref, stats: List[Quotes.this.reflectModule.this.Tree]): Quotes.this.reflectModule.this.PackageClause","d":"scala.quoted.Quotes.reflectModule.PackageClauseModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PackageClauseModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(tree: Quotes.this.reflectModule.this.PackageClause): (Quotes.this.reflectModule.this.Ref, List[Quotes.this.reflectModule.this.Tree])","d":"scala.quoted.Quotes.reflectModule.PackageClauseModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ParamClauseMethods.html#","e":false,"i":"","n":"ParamClauseMethods","t":"ParamClauseMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ParamClauseMethods.html#params-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ParamClause)","n":"params","t":"params: List[Quotes.this.reflectModule.this.ValDef] | List[Quotes.this.reflectModule.this.TypeDef]","d":"scala.quoted.Quotes.reflectModule.ParamClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ParamClauseModule.html#","e":false,"i":"","n":"ParamClauseModule","t":"ParamClauseModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ParamRefMethods.html#","e":false,"i":"","n":"ParamRefMethods","t":"ParamRefMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ParamRefMethods.html#binder-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ParamRef)","n":"binder","t":"binder: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.ParamRefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ParamRefMethods.html#paramNum-fffffaf4","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ParamRef)","n":"paramNum","t":"paramNum: Int","d":"scala.quoted.Quotes.reflectModule.ParamRefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ParamRefModule.html#","e":false,"i":"","n":"ParamRefModule","t":"ParamRefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ParamRefModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.ParamRef): (Quotes.this.reflectModule.this.TypeRepr, Int)","d":"scala.quoted.Quotes.reflectModule.ParamRefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PolyTypeMethods.html#","e":false,"i":"","n":"PolyTypeMethods","t":"PolyTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PolyTypeMethods.html#param-fffffc87","e":false,"i":"extension (self: Quotes.this.reflectModule.this.PolyType)","n":"param","t":"param(idx: Int): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.PolyTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PolyTypeMethods.html#paramBounds-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.PolyType)","n":"paramBounds","t":"paramBounds: List[Quotes.this.reflectModule.this.TypeBounds]","d":"scala.quoted.Quotes.reflectModule.PolyTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PolyTypeModule.html#","e":false,"i":"","n":"PolyTypeModule","t":"PolyTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PolyTypeModule.html#apply-fffff245","e":false,"i":"","n":"apply","t":"apply(paramNames: List[String])(paramBoundsExp: Quotes.this.reflectModule.this.PolyType => List[Quotes.this.reflectModule.this.TypeBounds], resultTypeExp: Quotes.this.reflectModule.this.PolyType => Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.PolyType","d":"scala.quoted.Quotes.reflectModule.PolyTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PolyTypeModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.PolyType): (List[String], List[Quotes.this.reflectModule.this.TypeBounds], Quotes.this.reflectModule.this.TypeRepr)","d":"scala.quoted.Quotes.reflectModule.PolyTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html#","e":false,"i":"","n":"PositionMethods","t":"PositionMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html#end-fffffaf4","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Position)","n":"end","t":"end: Int","d":"scala.quoted.Quotes.reflectModule.PositionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html#endColumn-fffffaf4","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Position)","n":"endColumn","t":"endColumn: Int","d":"scala.quoted.Quotes.reflectModule.PositionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html#endLine-fffffaf4","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Position)","n":"endLine","t":"endLine: Int","d":"scala.quoted.Quotes.reflectModule.PositionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html#sourceCode-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Position)","n":"sourceCode","t":"sourceCode: Option[String]","d":"scala.quoted.Quotes.reflectModule.PositionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html#sourceFile-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Position)","n":"sourceFile","t":"sourceFile: Quotes.this.reflectModule.this.SourceFile","d":"scala.quoted.Quotes.reflectModule.PositionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html#start-fffffaf4","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Position)","n":"start","t":"start: Int","d":"scala.quoted.Quotes.reflectModule.PositionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html#startColumn-fffffaf4","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Position)","n":"startColumn","t":"startColumn: Int","d":"scala.quoted.Quotes.reflectModule.PositionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionMethods.html#startLine-fffffaf4","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Position)","n":"startLine","t":"startLine: Int","d":"scala.quoted.Quotes.reflectModule.PositionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionModule.html#","e":false,"i":"","n":"PositionModule","t":"PositionModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionModule.html#apply-a46","e":false,"i":"","n":"apply","t":"apply(sourceFile: Quotes.this.reflectModule.this.SourceFile, start: Int, end: Int): Quotes.this.reflectModule.this.Position","d":"scala.quoted.Quotes.reflectModule.PositionModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PositionModule.html#ofMacroExpansion-0","e":false,"i":"","n":"ofMacroExpansion","t":"ofMacroExpansion: Quotes.this.reflectModule.this.Position","d":"scala.quoted.Quotes.reflectModule.PositionModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$Printer.html#","e":false,"i":"","n":"Printer","t":"Printer[T]","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$Printer.html#show-9f8","e":false,"i":"","n":"show","t":"show(x: T): String","d":"scala.quoted.Quotes.reflectModule.Printer","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#","e":false,"i":"","n":"PrinterModule","t":"PrinterModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#ConstantCode-0","e":false,"i":"","n":"ConstantCode","t":"ConstantCode: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.Constant]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#ConstantStructure-0","e":false,"i":"","n":"ConstantStructure","t":"ConstantStructure: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.Constant]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#TreeAnsiCode-0","e":false,"i":"","n":"TreeAnsiCode","t":"TreeAnsiCode: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#TreeCode-0","e":false,"i":"","n":"TreeCode","t":"TreeCode: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#TreeShortCode-0","e":false,"i":"","n":"TreeShortCode","t":"TreeShortCode: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#TreeStructure-0","e":false,"i":"","n":"TreeStructure","t":"TreeStructure: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#TypeReprAnsiCode-0","e":false,"i":"","n":"TypeReprAnsiCode","t":"TypeReprAnsiCode: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#TypeReprCode-0","e":false,"i":"","n":"TypeReprCode","t":"TypeReprCode: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#TypeReprShortCode-0","e":false,"i":"","n":"TypeReprShortCode","t":"TypeReprShortCode: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$PrinterModule.html#TypeReprStructure-0","e":false,"i":"","n":"TypeReprStructure","t":"TypeReprStructure: Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.PrinterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveThisMethods.html#","e":false,"i":"","n":"RecursiveThisMethods","t":"RecursiveThisMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveThisMethods.html#binder-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.RecursiveThis)","n":"binder","t":"binder: Quotes.this.reflectModule.this.RecursiveType","d":"scala.quoted.Quotes.reflectModule.RecursiveThisMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveThisModule.html#","e":false,"i":"","n":"RecursiveThisModule","t":"RecursiveThisModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveThisModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.RecursiveThis): Some[Quotes.this.reflectModule.this.RecursiveType]","d":"scala.quoted.Quotes.reflectModule.RecursiveThisModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeMethods.html#","e":false,"i":"","n":"RecursiveTypeMethods","t":"RecursiveTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeMethods.html#recThis-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.RecursiveType)","n":"recThis","t":"recThis: Quotes.this.reflectModule.this.RecursiveThis","d":"scala.quoted.Quotes.reflectModule.RecursiveTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeMethods.html#underlying-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.RecursiveType)","n":"underlying","t":"underlying: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.RecursiveTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeModule.html#","e":false,"i":"","n":"RecursiveTypeModule","t":"RecursiveTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeModule.html#apply-c24","e":false,"i":"","n":"apply","t":"apply(parentExp: Quotes.this.reflectModule.this.RecursiveType => Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.RecursiveType","d":"scala.quoted.Quotes.reflectModule.RecursiveTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RecursiveTypeModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.RecursiveType): Some[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.RecursiveTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefModule.html#","e":false,"i":"","n":"RefModule","t":"RefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(sym: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Ref","d":"scala.quoted.Quotes.reflectModule.RefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefModule.html#term-d26","e":false,"i":"","n":"term","t":"term(tp: Quotes.this.reflectModule.this.TermRef): Quotes.this.reflectModule.this.Ref","d":"scala.quoted.Quotes.reflectModule.RefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinedMethods.html#","e":false,"i":"","n":"RefinedMethods","t":"RefinedMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinedMethods.html#refinements-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Refined)","n":"refinements","t":"refinements: List[Quotes.this.reflectModule.this.Definition]","d":"scala.quoted.Quotes.reflectModule.RefinedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinedMethods.html#tpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Refined)","n":"tpt","t":"tpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.RefinedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinedModule.html#","e":false,"i":"","n":"RefinedModule","t":"RefinedModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinedModule.html#copy-fffffbff","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(tpt: Quotes.this.reflectModule.this.TypeTree, refinements: List[Quotes.this.reflectModule.this.Definition]): Quotes.this.reflectModule.this.Refined","d":"scala.quoted.Quotes.reflectModule.RefinedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinedModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Refined): (Quotes.this.reflectModule.this.TypeTree, List[Quotes.this.reflectModule.this.Definition])","d":"scala.quoted.Quotes.reflectModule.RefinedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinementMethods.html#","e":false,"i":"","n":"RefinementMethods","t":"RefinementMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinementMethods.html#info-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Refinement)","n":"info","t":"info: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.RefinementMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinementMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Refinement)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.RefinementMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinementMethods.html#parent-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Refinement)","n":"parent","t":"parent: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.RefinementMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinementModule.html#","e":false,"i":"","n":"RefinementModule","t":"RefinementModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinementModule.html#apply-71e","e":false,"i":"","n":"apply","t":"apply(parent: Quotes.this.reflectModule.this.TypeRepr, name: String, info: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.Refinement","d":"scala.quoted.Quotes.reflectModule.RefinementModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RefinementModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Refinement): (Quotes.this.reflectModule.this.TypeRepr, String, Quotes.this.reflectModule.this.TypeRepr)","d":"scala.quoted.Quotes.reflectModule.RefinementModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html#","e":false,"i":"","n":"RenameSelectorMethods","t":"RenameSelectorMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html#fromName-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.RenameSelector)","n":"fromName","t":"fromName: String","d":"scala.quoted.Quotes.reflectModule.RenameSelectorMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html#fromPos-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.RenameSelector)","n":"fromPos","t":"fromPos: Quotes.this.reflectModule.this.Position","d":"scala.quoted.Quotes.reflectModule.RenameSelectorMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html#toName-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.RenameSelector)","n":"toName","t":"toName: String","d":"scala.quoted.Quotes.reflectModule.RenameSelectorMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RenameSelectorMethods.html#toPos-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.RenameSelector)","n":"toPos","t":"toPos: Quotes.this.reflectModule.this.Position","d":"scala.quoted.Quotes.reflectModule.RenameSelectorMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RenameSelectorModule.html#","e":false,"i":"","n":"RenameSelectorModule","t":"RenameSelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RenameSelectorModule.html#apply-fffff85d","e":false,"i":"","n":"apply","t":"apply(fromName: String, toName: String): Quotes.this.reflectModule.this.RenameSelector","d":"scala.quoted.Quotes.reflectModule.RenameSelectorModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RenameSelectorModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.RenameSelector): (String, String)","d":"scala.quoted.Quotes.reflectModule.RenameSelectorModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RepeatedMethods.html#","e":false,"i":"","n":"RepeatedMethods","t":"RepeatedMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RepeatedMethods.html#elems-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Repeated)","n":"elems","t":"elems: List[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.RepeatedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RepeatedMethods.html#elemtpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Repeated)","n":"elemtpt","t":"elemtpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.RepeatedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RepeatedModule.html#","e":false,"i":"","n":"RepeatedModule","t":"RepeatedModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RepeatedModule.html#apply-fffff178","e":false,"i":"","n":"apply","t":"apply(elems: List[Quotes.this.reflectModule.this.Term], tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.Repeated","d":"scala.quoted.Quotes.reflectModule.RepeatedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RepeatedModule.html#copy-fffff185","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(elems: List[Quotes.this.reflectModule.this.Term], tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.Repeated","d":"scala.quoted.Quotes.reflectModule.RepeatedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$RepeatedModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Repeated): (List[Quotes.this.reflectModule.this.Term], Quotes.this.reflectModule.this.TypeTree)","d":"scala.quoted.Quotes.reflectModule.RepeatedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ReturnMethods.html#","e":false,"i":"","n":"ReturnMethods","t":"ReturnMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ReturnMethods.html#expr-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Return)","n":"expr","t":"expr: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ReturnMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ReturnMethods.html#from-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Return)","n":"from","t":"from: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.ReturnMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ReturnModule.html#","e":false,"i":"","n":"ReturnModule","t":"ReturnModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ReturnModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(expr: Quotes.this.reflectModule.this.Term, from: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Return","d":"scala.quoted.Quotes.reflectModule.ReturnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ReturnModule.html#copy-fffff24c","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(expr: Quotes.this.reflectModule.this.Term, from: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Return","d":"scala.quoted.Quotes.reflectModule.ReturnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ReturnModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Return): (Quotes.this.reflectModule.this.Term, Quotes.this.reflectModule.this.Symbol)","d":"scala.quoted.Quotes.reflectModule.ReturnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectMethods.html#","e":false,"i":"","n":"SelectMethods","t":"SelectMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Select)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.SelectMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectMethods.html#qualifier-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Select)","n":"qualifier","t":"qualifier: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.SelectMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectMethods.html#signature-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Select)","n":"signature","t":"signature: Option[Quotes.this.reflectModule.this.Signature]","d":"scala.quoted.Quotes.reflectModule.SelectMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectModule.html#","e":false,"i":"","n":"SelectModule","t":"SelectModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(qualifier: Quotes.this.reflectModule.this.Term, symbol: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Select","d":"scala.quoted.Quotes.reflectModule.SelectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectModule.html#copy-fffffb1e","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(qualifier: Quotes.this.reflectModule.this.Term, name: String): Quotes.this.reflectModule.this.Select","d":"scala.quoted.Quotes.reflectModule.SelectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectModule.html#overloaded-74b","e":false,"i":"","n":"overloaded","t":"overloaded(qualifier: Quotes.this.reflectModule.this.Term, name: String, targs: List[Quotes.this.reflectModule.this.TypeRepr], args: List[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.SelectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectModule.html#overloaded-ade","e":false,"i":"","n":"overloaded","t":"overloaded(qualifier: Quotes.this.reflectModule.this.Term, name: String, targs: List[Quotes.this.reflectModule.this.TypeRepr], args: List[Quotes.this.reflectModule.this.Term], returnType: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.SelectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Select): (Quotes.this.reflectModule.this.Term, String)","d":"scala.quoted.Quotes.reflectModule.SelectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectModule.html#unique-fffff38b","e":false,"i":"","n":"unique","t":"unique(qualifier: Quotes.this.reflectModule.this.Term, name: String): Quotes.this.reflectModule.this.Select","d":"scala.quoted.Quotes.reflectModule.SelectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectOuterMethods.html#","e":false,"i":"","n":"SelectOuterMethods","t":"SelectOuterMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectOuterMethods.html#level-fffffaf4","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SelectOuter)","n":"level","t":"level: Int","d":"scala.quoted.Quotes.reflectModule.SelectOuterMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectOuterMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SelectOuter)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.SelectOuterMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectOuterMethods.html#qualifier-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SelectOuter)","n":"qualifier","t":"qualifier: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.SelectOuterMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectOuterModule.html#","e":false,"i":"","n":"SelectOuterModule","t":"SelectOuterModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectOuterModule.html#apply-fffff7c2","e":false,"i":"","n":"apply","t":"apply(qualifier: Quotes.this.reflectModule.this.Term, name: String, levels: Int): Quotes.this.reflectModule.this.SelectOuter","d":"scala.quoted.Quotes.reflectModule.SelectOuterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectOuterModule.html#copy-fffff58f","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(qualifier: Quotes.this.reflectModule.this.Term, name: String, levels: Int): Quotes.this.reflectModule.this.SelectOuter","d":"scala.quoted.Quotes.reflectModule.SelectOuterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectOuterModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.SelectOuter): (Quotes.this.reflectModule.this.Term, String, Int)","d":"scala.quoted.Quotes.reflectModule.SelectOuterModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SelectorModule.html#","e":false,"i":"","n":"SelectorModule","t":"SelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ShortConstantModule.html#","e":false,"i":"","n":"ShortConstantModule","t":"ShortConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ShortConstantModule.html#apply-ffffff47","e":false,"i":"","n":"apply","t":"apply(x: Short): Quotes.this.reflectModule.this.ShortConstant","d":"scala.quoted.Quotes.reflectModule.ShortConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ShortConstantModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.ShortConstant): Some[Short]","d":"scala.quoted.Quotes.reflectModule.ShortConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SignatureMethods.html#","e":false,"i":"","n":"SignatureMethods","t":"SignatureMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SignatureMethods.html#paramSigs-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Signature)","n":"paramSigs","t":"paramSigs: List[String | Int]","d":"scala.quoted.Quotes.reflectModule.SignatureMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SignatureMethods.html#resultSig-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Signature)","n":"resultSig","t":"resultSig: String","d":"scala.quoted.Quotes.reflectModule.SignatureMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SignatureModule.html#","e":false,"i":"","n":"SignatureModule","t":"SignatureModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SignatureModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(sig: Quotes.this.reflectModule.this.Signature): (List[String | Int], String)","d":"scala.quoted.Quotes.reflectModule.SignatureModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorMethods.html#","e":false,"i":"","n":"SimpleSelectorMethods","t":"SimpleSelectorMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SimpleSelector)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.SimpleSelectorMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorMethods.html#namePos-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SimpleSelector)","n":"namePos","t":"namePos: Quotes.this.reflectModule.this.Position","d":"scala.quoted.Quotes.reflectModule.SimpleSelectorMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorModule.html#","e":false,"i":"","n":"SimpleSelectorModule","t":"SimpleSelectorModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorModule.html#apply-fffff5f8","e":false,"i":"","n":"apply","t":"apply(name: String): Quotes.this.reflectModule.this.SimpleSelector","d":"scala.quoted.Quotes.reflectModule.SimpleSelectorModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SimpleSelectorModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.SimpleSelector): Some[String]","d":"scala.quoted.Quotes.reflectModule.SimpleSelectorModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SingletonMethods.html#","e":false,"i":"","n":"SingletonMethods","t":"SingletonMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SingletonMethods.html#ref-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Singleton)","n":"ref","t":"ref: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.SingletonMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SingletonModule.html#","e":false,"i":"","n":"SingletonModule","t":"SingletonModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SingletonModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(ref: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Singleton","d":"scala.quoted.Quotes.reflectModule.SingletonModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SingletonModule.html#copy-fffffab9","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(ref: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Singleton","d":"scala.quoted.Quotes.reflectModule.SingletonModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SingletonModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Singleton): Some[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.SingletonModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SourceFileMethods.html#","e":false,"i":"","n":"SourceFileMethods","t":"SourceFileMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SourceFileMethods.html#content-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SourceFile)","n":"content","t":"content: Option[String]","d":"scala.quoted.Quotes.reflectModule.SourceFileMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SourceFileMethods.html#getJPath-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SourceFile)","n":"getJPath","t":"getJPath: Option[Path]","d":"scala.quoted.Quotes.reflectModule.SourceFileMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SourceFileMethods.html#jpath-fffffa24","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SourceFile)","n":"jpath","t":"jpath: Path","d":"scala.quoted.Quotes.reflectModule.SourceFileMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SourceFileMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SourceFile)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.SourceFileMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SourceFileMethods.html#path-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SourceFile)","n":"path","t":"path: String","d":"scala.quoted.Quotes.reflectModule.SourceFileMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SourceFileModule.html#","e":false,"i":"","n":"SourceFileModule","t":"SourceFileModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SourceFileModule.html#current-0","e":false,"i":"","n":"current","t":"current: Quotes.this.reflectModule.this.SourceFile","d":"scala.quoted.Quotes.reflectModule.SourceFileModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$StringConstantModule.html#","e":false,"i":"","n":"StringConstantModule","t":"StringConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$StringConstantModule.html#apply-fffff5f8","e":false,"i":"","n":"apply","t":"apply(x: String): Quotes.this.reflectModule.this.StringConstant","d":"scala.quoted.Quotes.reflectModule.StringConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$StringConstantModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.StringConstant): Some[String]","d":"scala.quoted.Quotes.reflectModule.StringConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SummonFromMethods.html#","e":false,"i":"","n":"SummonFromMethods","t":"SummonFromMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SummonFromMethods.html#cases-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SummonFrom)","n":"cases","t":"cases: List[Quotes.this.reflectModule.this.CaseDef]","d":"scala.quoted.Quotes.reflectModule.SummonFromMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SummonFromModule.html#","e":false,"i":"","n":"SummonFromModule","t":"SummonFromModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SummonFromModule.html#apply-fffff1e5","e":false,"i":"","n":"apply","t":"apply(cases: List[Quotes.this.reflectModule.this.CaseDef]): Quotes.this.reflectModule.this.SummonFrom","d":"scala.quoted.Quotes.reflectModule.SummonFromModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SummonFromModule.html#copy-fffffbf2","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(cases: List[Quotes.this.reflectModule.this.CaseDef]): Quotes.this.reflectModule.this.SummonFrom","d":"scala.quoted.Quotes.reflectModule.SummonFromModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SummonFromModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.SummonFrom): Some[List[Quotes.this.reflectModule.this.CaseDef]]","d":"scala.quoted.Quotes.reflectModule.SummonFromModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperMethods.html#","e":false,"i":"","n":"SuperMethods","t":"SuperMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperMethods.html#id-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Super)","n":"id","t":"id: Option[String]","d":"scala.quoted.Quotes.reflectModule.SuperMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperMethods.html#idPos-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Super)","n":"idPos","t":"idPos: Quotes.this.reflectModule.this.Position","d":"scala.quoted.Quotes.reflectModule.SuperMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperMethods.html#qualifier-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Super)","n":"qualifier","t":"qualifier: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.SuperMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperModule.html#","e":false,"i":"","n":"SuperModule","t":"SuperModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperModule.html#apply-4e3","e":false,"i":"","n":"apply","t":"apply(qual: Quotes.this.reflectModule.this.Term, mix: Option[String]): Quotes.this.reflectModule.this.Super","d":"scala.quoted.Quotes.reflectModule.SuperModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperModule.html#copy-df6","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(qual: Quotes.this.reflectModule.this.Term, mix: Option[String]): Quotes.this.reflectModule.this.Super","d":"scala.quoted.Quotes.reflectModule.SuperModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Super): (Quotes.this.reflectModule.this.Term, Option[String])","d":"scala.quoted.Quotes.reflectModule.SuperModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperTypeMethods.html#","e":false,"i":"","n":"SuperTypeMethods","t":"SuperTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperTypeMethods.html#supertpe-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SuperType)","n":"supertpe","t":"supertpe: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.SuperTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperTypeMethods.html#thistpe-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.SuperType)","n":"thistpe","t":"thistpe: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.SuperTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperTypeModule.html#","e":false,"i":"","n":"SuperTypeModule","t":"SuperTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperTypeModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(thistpe: Quotes.this.reflectModule.this.TypeRepr, supertpe: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.SuperType","d":"scala.quoted.Quotes.reflectModule.SuperTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SuperTypeModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.SuperType): (Quotes.this.reflectModule.this.TypeRepr, Quotes.this.reflectModule.this.TypeRepr)","d":"scala.quoted.Quotes.reflectModule.SuperTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#","e":false,"i":"","n":"SymbolMethods","t":"SymbolMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#allOverriddenSymbols-303","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"allOverriddenSymbols","t":"allOverriddenSymbols: Iterator[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#annotations-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"annotations","t":"annotations: List[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#asQuotes-fffffdc2","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"asQuotes","t":"asQuotes: Quotes.this.Nested","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#caseFields-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"caseFields","t":"caseFields: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#children-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"children","t":"children: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#companionClass-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"companionClass","t":"companionClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#companionModule-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"companionModule","t":"companionModule: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#declarations-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"declarations","t":"declarations: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#declaredField-fffff38b","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"declaredField","t":"declaredField(name: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#declaredFields-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"declaredFields","t":"declaredFields: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#declaredMethod-35a","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"declaredMethod","t":"declaredMethod(name: String): List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#declaredMethods-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"declaredMethods","t":"declaredMethods: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#declaredType-35a","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"declaredType","t":"declaredType(name: String): List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#declaredTypes-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"declaredTypes","t":"declaredTypes: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#docstring-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"docstring","t":"docstring: Option[String]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#exists-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"exists","t":"exists: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#fieldMember-fffff38b","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"fieldMember","t":"fieldMember(name: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#fieldMembers-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"fieldMembers","t":"fieldMembers: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#flags-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"flags","t":"flags: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#fullName-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"fullName","t":"fullName: String","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#getAnnotation-fffffa63","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"getAnnotation","t":"getAnnotation(annotSym: Quotes.this.reflectModule.this.Symbol): Option[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#hasAnnotation-fffff7fa","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"hasAnnotation","t":"hasAnnotation(annotSym: Quotes.this.reflectModule.this.Symbol): Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#info-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"info","t":"info: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isAbstractType-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isAbstractType","t":"isAbstractType: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isAliasType-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isAliasType","t":"isAliasType: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isAnonymousClass-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isAnonymousClass","t":"isAnonymousClass: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isAnonymousFunction-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isAnonymousFunction","t":"isAnonymousFunction: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isBind-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isBind","t":"isBind: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isClassConstructor-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isClassConstructor","t":"isClassConstructor: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isClassDef-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isClassDef","t":"isClassDef: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isDefDef-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isDefDef","t":"isDefDef: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isDefinedInCurrentRun-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isDefinedInCurrentRun","t":"isDefinedInCurrentRun: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isLocalDummy-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isLocalDummy","t":"isLocalDummy: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isNoSymbol-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isNoSymbol","t":"isNoSymbol: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isPackageDef-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isPackageDef","t":"isPackageDef: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isRefinementClass-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isRefinementClass","t":"isRefinementClass: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isSuperAccessor-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isSuperAccessor","t":"isSuperAccessor: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isTerm-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isTerm","t":"isTerm: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isType-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isType","t":"isType: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isTypeDef-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isTypeDef","t":"isTypeDef: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isTypeParam-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isTypeParam","t":"isTypeParam: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#isValDef-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"isValDef","t":"isValDef: Boolean","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#maybeOwner-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"maybeOwner","t":"maybeOwner: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#memberField-fffff38b","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"memberField","t":"memberField(name: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#memberFields-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"memberFields","t":"memberFields: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#memberMethod-35a","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"memberMethod","t":"memberMethod(name: String): List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#memberMethods-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"memberMethods","t":"memberMethods: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#memberType-fffff38b","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"memberType","t":"memberType(name: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#memberTypes-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"memberTypes","t":"memberTypes: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#methodMember-35a","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"methodMember","t":"methodMember(name: String): List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#methodMembers-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"methodMembers","t":"methodMembers: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#moduleClass-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"moduleClass","t":"moduleClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#overridingSymbol-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"overridingSymbol","t":"overridingSymbol(ofclazz: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#owner-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"owner","t":"owner: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#paramSymss-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"paramSymss","t":"paramSymss: List[List[Quotes.this.reflectModule.this.Symbol]]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#paramVariance-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"paramVariance","t":"paramVariance: Quotes.this.reflectModule.this.Flags","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#pos-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"pos","t":"pos: Option[Quotes.this.reflectModule.this.Position]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#primaryConstructor-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"primaryConstructor","t":"primaryConstructor: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#privateWithin-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"privateWithin","t":"privateWithin: Option[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#protectedWithin-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"protectedWithin","t":"protectedWithin: Option[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#signature-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"signature","t":"signature: Quotes.this.reflectModule.this.Signature","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#termRef-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"termRef","t":"termRef: Quotes.this.reflectModule.this.TermRef","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#tree-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"tree","t":"tree: Quotes.this.reflectModule.this.Tree","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#typeMember-fffff38b","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"typeMember","t":"typeMember(name: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#typeMembers-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"typeMembers","t":"typeMembers: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolMethods.html#typeRef-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Symbol)","n":"typeRef","t":"typeRef: Quotes.this.reflectModule.this.TypeRef","d":"scala.quoted.Quotes.reflectModule.SymbolMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#","e":false,"i":"","n":"SymbolModule","t":"SymbolModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#classSymbol-fffff5f8","e":false,"i":"","n":"classSymbol","t":"classSymbol(fullName: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#freshName-fffff2ca","e":false,"i":"","n":"freshName","t":"freshName(prefix: String): String","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newBind-fffff4b1","e":false,"i":"","n":"newBind","t":"newBind(parent: Quotes.this.reflectModule.this.Symbol, name: String, flags: Quotes.this.reflectModule.this.Flags, tpe: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newBoundedType-c44","e":false,"i":"","n":"newBoundedType","t":"newBoundedType(parent: Quotes.this.reflectModule.this.Symbol, name: String, flags: Quotes.this.reflectModule.this.Flags, tpe: Quotes.this.reflectModule.this.TypeBounds, privateWithin: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newClass-f47","e":false,"i":"","n":"newClass","t":"newClass(owner: Quotes.this.reflectModule.this.Symbol, name: String, parents: List[Quotes.this.reflectModule.this.TypeRepr], decls: Quotes.this.reflectModule.this.Symbol => List[Quotes.this.reflectModule.this.Symbol], selfType: Option[Quotes.this.reflectModule.this.TypeRepr]): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newClass-14a","e":false,"i":"","n":"newClass","t":"newClass(owner: Quotes.this.reflectModule.this.Symbol, name: String, parents: Quotes.this.reflectModule.this.Symbol => List[Quotes.this.reflectModule.this.TypeRepr], decls: Quotes.this.reflectModule.this.Symbol => List[Quotes.this.reflectModule.this.Symbol], selfType: Option[Quotes.this.reflectModule.this.TypeRepr], clsFlags: Quotes.this.reflectModule.this.Flags, clsPrivateWithin: Quotes.this.reflectModule.this.Symbol, conParams: List[(String, Quotes.this.reflectModule.this.TypeRepr)]): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newClass-fffff673","e":false,"i":"","n":"newClass","t":"newClass(owner: Quotes.this.reflectModule.this.Symbol, name: String, parents: Quotes.this.reflectModule.this.Symbol => List[Quotes.this.reflectModule.this.TypeRepr], decls: Quotes.this.reflectModule.this.Symbol => List[Quotes.this.reflectModule.this.Symbol], selfType: Option[Quotes.this.reflectModule.this.TypeRepr], clsFlags: Quotes.this.reflectModule.this.Flags, clsPrivateWithin: Quotes.this.reflectModule.this.Symbol, clsAnnotations: List[Quotes.this.reflectModule.this.Term], conMethodType: Quotes.this.reflectModule.this.TypeRepr => Quotes.this.reflectModule.this.MethodOrPoly, conFlags: Quotes.this.reflectModule.this.Flags, conPrivateWithin: Quotes.this.reflectModule.this.Symbol, conParamFlags: List[List[Quotes.this.reflectModule.this.Flags]], conParamPrivateWithins: List[List[Quotes.this.reflectModule.this.Symbol]]): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newMethod-71e","e":false,"i":"","n":"newMethod","t":"newMethod(parent: Quotes.this.reflectModule.this.Symbol, name: String, tpe: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newMethod-c44","e":false,"i":"","n":"newMethod","t":"newMethod(parent: Quotes.this.reflectModule.this.Symbol, name: String, tpe: Quotes.this.reflectModule.this.TypeRepr, flags: Quotes.this.reflectModule.this.Flags, privateWithin: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newModule-fa4","e":false,"i":"","n":"newModule","t":"newModule(owner: Quotes.this.reflectModule.this.Symbol, name: String, modFlags: Quotes.this.reflectModule.this.Flags, clsFlags: Quotes.this.reflectModule.this.Flags, parents: Quotes.this.reflectModule.this.Symbol => List[Quotes.this.reflectModule.this.TypeRepr], decls: Quotes.this.reflectModule.this.Symbol => List[Quotes.this.reflectModule.this.Symbol], privateWithin: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newTypeAlias-c44","e":false,"i":"","n":"newTypeAlias","t":"newTypeAlias(parent: Quotes.this.reflectModule.this.Symbol, name: String, flags: Quotes.this.reflectModule.this.Flags, tpe: Quotes.this.reflectModule.this.TypeRepr, privateWithin: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#newVal-c44","e":false,"i":"","n":"newVal","t":"newVal(parent: Quotes.this.reflectModule.this.Symbol, name: String, tpe: Quotes.this.reflectModule.this.TypeRepr, flags: Quotes.this.reflectModule.this.Flags, privateWithin: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#noSymbol-0","e":false,"i":"","n":"noSymbol","t":"noSymbol: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#requiredClass-fffff5f8","e":false,"i":"","n":"requiredClass","t":"requiredClass(path: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#requiredMethod-fffff5f8","e":false,"i":"","n":"requiredMethod","t":"requiredMethod(path: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#requiredModule-fffff5f8","e":false,"i":"","n":"requiredModule","t":"requiredModule(path: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#requiredPackage-fffff5f8","e":false,"i":"","n":"requiredPackage","t":"requiredPackage(path: String): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$SymbolModule.html#spliceOwner-0","e":false,"i":"","n":"spliceOwner","t":"spliceOwner: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.SymbolModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#","e":false,"i":"","n":"TermMethods","t":"TermMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#appliedTo-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"appliedTo","t":"appliedTo(arg: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#appliedTo-fffff864","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"appliedTo","t":"appliedTo(arg: Quotes.this.reflectModule.this.Term, args: Quotes.this.reflectModule.this.Term*): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#appliedToArgs-fffffbf2","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"appliedToArgs","t":"appliedToArgs(args: List[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.Apply","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#appliedToArgss-fffffbf2","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"appliedToArgss","t":"appliedToArgss(argss: List[List[Quotes.this.reflectModule.this.Term]]): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#appliedToNone-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"appliedToNone","t":"appliedToNone: Quotes.this.reflectModule.this.Apply","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#appliedToType-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"appliedToType","t":"appliedToType(targ: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#appliedToTypeTrees-fffffbf2","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"appliedToTypeTrees","t":"appliedToTypeTrees(targs: List[Quotes.this.reflectModule.this.TypeTree]): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#appliedToTypes-fffffbf2","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"appliedToTypes","t":"appliedToTypes(targs: List[Quotes.this.reflectModule.this.TypeRepr]): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#etaExpand-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"etaExpand","t":"etaExpand(owner: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#select-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"select","t":"select(sym: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Select","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#tpe-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"tpe","t":"tpe: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#underlying-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"underlying","t":"underlying: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermMethods.html#underlyingArgument-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Term)","n":"underlyingArgument","t":"underlyingArgument: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TermMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermModule.html#","e":false,"i":"","n":"TermModule","t":"TermModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermModule.html#betaReduce-fffffb50","e":false,"i":"","n":"betaReduce","t":"betaReduce(term: Quotes.this.reflectModule.this.Term): Option[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.TermModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html#","e":false,"i":"","n":"TermParamClauseMethods","t":"TermParamClauseMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html#erasedArgs-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TermParamClause)","n":"erasedArgs","t":"erasedArgs: List[Boolean]","d":"scala.quoted.Quotes.reflectModule.TermParamClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html#hasErasedArgs-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TermParamClause)","n":"hasErasedArgs","t":"hasErasedArgs: Boolean","d":"scala.quoted.Quotes.reflectModule.TermParamClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html#isErased-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TermParamClause)","n":"isErased","t":"isErased: Boolean","d":"scala.quoted.Quotes.reflectModule.TermParamClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html#isGiven-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TermParamClause)","n":"isGiven","t":"isGiven: Boolean","d":"scala.quoted.Quotes.reflectModule.TermParamClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html#isImplicit-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TermParamClause)","n":"isImplicit","t":"isImplicit: Boolean","d":"scala.quoted.Quotes.reflectModule.TermParamClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseMethods.html#params-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TermParamClause)","n":"params","t":"params: List[Quotes.this.reflectModule.this.ValDef]","d":"scala.quoted.Quotes.reflectModule.TermParamClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseModule.html#","e":false,"i":"","n":"TermParamClauseModule","t":"TermParamClauseModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseModule.html#apply-fffff1e5","e":false,"i":"","n":"apply","t":"apply(params: List[Quotes.this.reflectModule.this.ValDef]): Quotes.this.reflectModule.this.TermParamClause","d":"scala.quoted.Quotes.reflectModule.TermParamClauseModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermParamClauseModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TermParamClause): Some[List[Quotes.this.reflectModule.this.ValDef]]","d":"scala.quoted.Quotes.reflectModule.TermParamClauseModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermRefModule.html#","e":false,"i":"","n":"TermRefModule","t":"TermRefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermRefModule.html#apply-fffff38b","e":false,"i":"","n":"apply","t":"apply(qual: Quotes.this.reflectModule.this.TypeRepr, name: String): Quotes.this.reflectModule.this.TermRef","d":"scala.quoted.Quotes.reflectModule.TermRefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TermRefModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TermRef): (Quotes.this.reflectModule.this.TypeRepr, String)","d":"scala.quoted.Quotes.reflectModule.TermRefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisMethods.html#","e":false,"i":"","n":"ThisMethods","t":"ThisMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisMethods.html#id-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.This)","n":"id","t":"id: Option[String]","d":"scala.quoted.Quotes.reflectModule.ThisMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisModule.html#","e":false,"i":"","n":"ThisModule","t":"ThisModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(cls: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.This","d":"scala.quoted.Quotes.reflectModule.ThisModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisModule.html#copy-4e3","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(qual: Option[String]): Quotes.this.reflectModule.this.This","d":"scala.quoted.Quotes.reflectModule.ThisModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.This): Some[Option[String]]","d":"scala.quoted.Quotes.reflectModule.ThisModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisTypeMethods.html#","e":false,"i":"","n":"ThisTypeMethods","t":"ThisTypeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisTypeMethods.html#tref-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ThisType)","n":"tref","t":"tref: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.ThisTypeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisTypeModule.html#","e":false,"i":"","n":"ThisTypeModule","t":"ThisTypeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ThisTypeModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.ThisType): Some[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.ThisTypeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeAccumulator.html#","e":false,"i":"","n":"TreeAccumulator","t":"TreeAccumulator[X]","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeAccumulator.html#foldOverTree-fffff24c","e":false,"i":"","n":"foldOverTree","t":"foldOverTree(x: X, tree: Quotes.this.reflectModule.this.Tree)(owner: Quotes.this.reflectModule.this.Symbol): X","d":"scala.quoted.Quotes.reflectModule.TreeAccumulator","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeAccumulator.html#foldTree-fffff24c","e":false,"i":"","n":"foldTree","t":"foldTree(x: X, tree: Quotes.this.reflectModule.this.Tree)(owner: Quotes.this.reflectModule.this.Symbol): X","d":"scala.quoted.Quotes.reflectModule.TreeAccumulator","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeAccumulator.html#foldTrees-fffff02d","e":false,"i":"","n":"foldTrees","t":"foldTrees(x: X, trees: Iterable[Quotes.this.reflectModule.this.Tree])(owner: Quotes.this.reflectModule.this.Symbol): X","d":"scala.quoted.Quotes.reflectModule.TreeAccumulator","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#","e":false,"i":"","n":"TreeMap","t":"TreeMap","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformCaseDef-fffffab9","e":false,"i":"","n":"transformCaseDef","t":"transformCaseDef(tree: Quotes.this.reflectModule.this.CaseDef)(owner: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.CaseDef","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformCaseDefs-fffffdcd","e":false,"i":"","n":"transformCaseDefs","t":"transformCaseDefs(trees: List[Quotes.this.reflectModule.this.CaseDef])(owner: Quotes.this.reflectModule.this.Symbol): List[Quotes.this.reflectModule.this.CaseDef]","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformStatement-fffffab9","e":false,"i":"","n":"transformStatement","t":"transformStatement(tree: Quotes.this.reflectModule.this.Statement)(owner: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Statement","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformStats-fffffdcd","e":false,"i":"","n":"transformStats","t":"transformStats(trees: List[Quotes.this.reflectModule.this.Statement])(owner: Quotes.this.reflectModule.this.Symbol): List[Quotes.this.reflectModule.this.Statement]","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformSubTrees-c3e","e":false,"i":"","n":"transformSubTrees","t":"transformSubTrees[Tr <: Quotes.this.reflectModule.this.Tree](trees: List[Tr])(owner: Quotes.this.reflectModule.this.Symbol): List[Tr]","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformTerm-fffffab9","e":false,"i":"","n":"transformTerm","t":"transformTerm(tree: Quotes.this.reflectModule.this.Term)(owner: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformTerms-fffffdcd","e":false,"i":"","n":"transformTerms","t":"transformTerms(trees: List[Quotes.this.reflectModule.this.Term])(owner: Quotes.this.reflectModule.this.Symbol): List[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformTree-fffffab9","e":false,"i":"","n":"transformTree","t":"transformTree(tree: Quotes.this.reflectModule.this.Tree)(owner: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.Tree","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformTrees-fffffdcd","e":false,"i":"","n":"transformTrees","t":"transformTrees(trees: List[Quotes.this.reflectModule.this.Tree])(owner: Quotes.this.reflectModule.this.Symbol): List[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformTypeCaseDef-fffffab9","e":false,"i":"","n":"transformTypeCaseDef","t":"transformTypeCaseDef(tree: Quotes.this.reflectModule.this.TypeCaseDef)(owner: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.TypeCaseDef","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformTypeCaseDefs-fffffdcd","e":false,"i":"","n":"transformTypeCaseDefs","t":"transformTypeCaseDefs(trees: List[Quotes.this.reflectModule.this.TypeCaseDef])(owner: Quotes.this.reflectModule.this.Symbol): List[Quotes.this.reflectModule.this.TypeCaseDef]","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformTypeTree-fffffab9","e":false,"i":"","n":"transformTypeTree","t":"transformTypeTree(tree: Quotes.this.reflectModule.this.TypeTree)(owner: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMap.html#transformTypeTrees-fffffdcd","e":false,"i":"","n":"transformTypeTrees","t":"transformTypeTrees(trees: List[Quotes.this.reflectModule.this.TypeTree])(owner: Quotes.this.reflectModule.this.Symbol): List[Quotes.this.reflectModule.this.TypeTree]","d":"scala.quoted.Quotes.reflectModule.TreeMap","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html#","e":false,"i":"","n":"TreeMethods","t":"TreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html#asExpr-d00","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Tree)","n":"asExpr","t":"asExpr: Expr[Any]","d":"scala.quoted.Quotes.reflectModule.TreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html#asExprOf-fffff339","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Tree)","n":"asExprOf","t":"asExprOf[T](using Type[T]): Expr[T]","d":"scala.quoted.Quotes.reflectModule.TreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html#changeOwner-fffff4ea","e":false,"i":"extension [ThisTree <: Quotes.this.reflectModule.this.Tree](self: ThisTree)","n":"changeOwner","t":"changeOwner(newOwner: Quotes.this.reflectModule.this.Symbol): ThisTree","d":"scala.quoted.Quotes.reflectModule.TreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html#isExpr-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Tree)","n":"isExpr","t":"isExpr: Boolean","d":"scala.quoted.Quotes.reflectModule.TreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html#pos-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Tree)","n":"pos","t":"pos: Quotes.this.reflectModule.this.Position","d":"scala.quoted.Quotes.reflectModule.TreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html#show-fffffbce","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Tree)","n":"show","t":"show(using Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.Tree]): String","d":"scala.quoted.Quotes.reflectModule.TreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeMethods.html#symbol-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Tree)","n":"symbol","t":"symbol: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.TreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeModule.html#","e":false,"i":"","n":"TreeModule","t":"TreeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeTraverser.html#","e":false,"i":"","n":"TreeTraverser","t":"TreeTraverser extends TreeAccumulator[Unit]","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeTraverser.html#foldTree-fffff9e2","e":false,"i":"","n":"foldTree","t":"foldTree(x: Unit, tree: Quotes.this.reflectModule.this.Tree)(owner: Quotes.this.reflectModule.this.Symbol): Unit","d":"scala.quoted.Quotes.reflectModule.TreeTraverser","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeTraverser.html#traverseTree-ef2","e":false,"i":"","n":"traverseTree","t":"traverseTree(tree: Quotes.this.reflectModule.this.Tree)(owner: Quotes.this.reflectModule.this.Symbol): Unit","d":"scala.quoted.Quotes.reflectModule.TreeTraverser","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TreeTraverser.html#traverseTreeChildren-ef2","e":false,"i":"","n":"traverseTreeChildren","t":"traverseTreeChildren(tree: Quotes.this.reflectModule.this.Tree)(owner: Quotes.this.reflectModule.this.Symbol): Unit","d":"scala.quoted.Quotes.reflectModule.TreeTraverser","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TryMethods.html#","e":false,"i":"","n":"TryMethods","t":"TryMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TryMethods.html#body-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Try)","n":"body","t":"body: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TryMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TryMethods.html#cases-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Try)","n":"cases","t":"cases: List[Quotes.this.reflectModule.this.CaseDef]","d":"scala.quoted.Quotes.reflectModule.TryMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TryMethods.html#finalizer-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Try)","n":"finalizer","t":"finalizer: Option[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.TryMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TryModule.html#","e":false,"i":"","n":"TryModule","t":"TryModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TryModule.html#apply-fffff1af","e":false,"i":"","n":"apply","t":"apply(expr: Quotes.this.reflectModule.this.Term, cases: List[Quotes.this.reflectModule.this.CaseDef], finalizer: Option[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.Try","d":"scala.quoted.Quotes.reflectModule.TryModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TryModule.html#copy-fffff63c","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(expr: Quotes.this.reflectModule.this.Term, cases: List[Quotes.this.reflectModule.this.CaseDef], finalizer: Option[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.Try","d":"scala.quoted.Quotes.reflectModule.TryModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TryModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Try): (Quotes.this.reflectModule.this.Term, List[Quotes.this.reflectModule.this.CaseDef], Option[Quotes.this.reflectModule.this.Term])","d":"scala.quoted.Quotes.reflectModule.TryModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeApplyMethods.html#","e":false,"i":"","n":"TypeApplyMethods","t":"TypeApplyMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeApplyMethods.html#args-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeApply)","n":"args","t":"args: List[Quotes.this.reflectModule.this.TypeTree]","d":"scala.quoted.Quotes.reflectModule.TypeApplyMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeApplyMethods.html#fun-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeApply)","n":"fun","t":"fun: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TypeApplyMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeApplyModule.html#","e":false,"i":"","n":"TypeApplyModule","t":"TypeApplyModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeApplyModule.html#apply-fffffbf2","e":false,"i":"","n":"apply","t":"apply(fun: Quotes.this.reflectModule.this.Term, args: List[Quotes.this.reflectModule.this.TypeTree]): Quotes.this.reflectModule.this.TypeApply","d":"scala.quoted.Quotes.reflectModule.TypeApplyModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeApplyModule.html#copy-fffffbff","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(fun: Quotes.this.reflectModule.this.Term, args: List[Quotes.this.reflectModule.this.TypeTree]): Quotes.this.reflectModule.this.TypeApply","d":"scala.quoted.Quotes.reflectModule.TypeApplyModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeApplyModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeApply): (Quotes.this.reflectModule.this.Term, List[Quotes.this.reflectModule.this.TypeTree])","d":"scala.quoted.Quotes.reflectModule.TypeApplyModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBindMethods.html#","e":false,"i":"","n":"TypeBindMethods","t":"TypeBindMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBindMethods.html#body-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeBind)","n":"body","t":"body: Quotes.this.reflectModule.this.Tree","d":"scala.quoted.Quotes.reflectModule.TypeBindMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBindMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeBind)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.TypeBindMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBindModule.html#","e":false,"i":"","n":"TypeBindModule","t":"TypeBindModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBindModule.html#copy-71e","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(name: String, tpt: Quotes.this.reflectModule.this.Tree): Quotes.this.reflectModule.this.TypeBind","d":"scala.quoted.Quotes.reflectModule.TypeBindModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBindModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeBind): (String, Quotes.this.reflectModule.this.Tree)","d":"scala.quoted.Quotes.reflectModule.TypeBindModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBlockMethods.html#","e":false,"i":"","n":"TypeBlockMethods","t":"TypeBlockMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBlockMethods.html#aliases-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeBlock)","n":"aliases","t":"aliases: List[Quotes.this.reflectModule.this.TypeDef]","d":"scala.quoted.Quotes.reflectModule.TypeBlockMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBlockMethods.html#tpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeBlock)","n":"tpt","t":"tpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypeBlockMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBlockModule.html#","e":false,"i":"","n":"TypeBlockModule","t":"TypeBlockModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBlockModule.html#apply-fffff178","e":false,"i":"","n":"apply","t":"apply(aliases: List[Quotes.this.reflectModule.this.TypeDef], tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.TypeBlock","d":"scala.quoted.Quotes.reflectModule.TypeBlockModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBlockModule.html#copy-fffff185","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(aliases: List[Quotes.this.reflectModule.this.TypeDef], tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.TypeBlock","d":"scala.quoted.Quotes.reflectModule.TypeBlockModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBlockModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeBlock): (List[Quotes.this.reflectModule.this.TypeDef], Quotes.this.reflectModule.this.TypeTree)","d":"scala.quoted.Quotes.reflectModule.TypeBlockModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsMethods.html#","e":false,"i":"","n":"TypeBoundsMethods","t":"TypeBoundsMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsMethods.html#hi-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeBounds)","n":"hi","t":"hi: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeBoundsMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsMethods.html#low-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeBounds)","n":"low","t":"low: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeBoundsMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html#","e":false,"i":"","n":"TypeBoundsModule","t":"TypeBoundsModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(low: Quotes.this.reflectModule.this.TypeRepr, hi: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.TypeBounds","d":"scala.quoted.Quotes.reflectModule.TypeBoundsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html#empty-0","e":false,"i":"","n":"empty","t":"empty: Quotes.this.reflectModule.this.TypeBounds","d":"scala.quoted.Quotes.reflectModule.TypeBoundsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html#lower-d26","e":false,"i":"","n":"lower","t":"lower(lo: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.TypeBounds","d":"scala.quoted.Quotes.reflectModule.TypeBoundsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeBounds): (Quotes.this.reflectModule.this.TypeRepr, Quotes.this.reflectModule.this.TypeRepr)","d":"scala.quoted.Quotes.reflectModule.TypeBoundsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsModule.html#upper-d26","e":false,"i":"","n":"upper","t":"upper(hi: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.TypeBounds","d":"scala.quoted.Quotes.reflectModule.TypeBoundsModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeMethods.html#","e":false,"i":"","n":"TypeBoundsTreeMethods","t":"TypeBoundsTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeMethods.html#hi-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeBoundsTree)","n":"hi","t":"hi: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypeBoundsTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeMethods.html#low-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeBoundsTree)","n":"low","t":"low: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypeBoundsTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeMethods.html#tpe-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeBoundsTree)","n":"tpe","t":"tpe: Quotes.this.reflectModule.this.TypeBounds","d":"scala.quoted.Quotes.reflectModule.TypeBoundsTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeModule.html#","e":false,"i":"","n":"TypeBoundsTreeModule","t":"TypeBoundsTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(low: Quotes.this.reflectModule.this.TypeTree, hi: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.TypeBoundsTree","d":"scala.quoted.Quotes.reflectModule.TypeBoundsTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeModule.html#copy-fffff24c","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(low: Quotes.this.reflectModule.this.TypeTree, hi: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.TypeBoundsTree","d":"scala.quoted.Quotes.reflectModule.TypeBoundsTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeBoundsTreeModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeBoundsTree): (Quotes.this.reflectModule.this.TypeTree, Quotes.this.reflectModule.this.TypeTree)","d":"scala.quoted.Quotes.reflectModule.TypeBoundsTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefMethods.html#","e":false,"i":"","n":"TypeCaseDefMethods","t":"TypeCaseDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefMethods.html#pattern-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeCaseDef)","n":"pattern","t":"pattern: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypeCaseDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefMethods.html#rhs-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeCaseDef)","n":"rhs","t":"rhs: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypeCaseDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefModule.html#","e":false,"i":"","n":"TypeCaseDefModule","t":"TypeCaseDefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(pattern: Quotes.this.reflectModule.this.TypeTree, rhs: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.TypeCaseDef","d":"scala.quoted.Quotes.reflectModule.TypeCaseDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefModule.html#copy-fffff24c","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(pattern: Quotes.this.reflectModule.this.TypeTree, rhs: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.TypeCaseDef","d":"scala.quoted.Quotes.reflectModule.TypeCaseDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeCaseDefModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(tree: Quotes.this.reflectModule.this.TypeCaseDef): (Quotes.this.reflectModule.this.TypeTree, Quotes.this.reflectModule.this.TypeTree)","d":"scala.quoted.Quotes.reflectModule.TypeCaseDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeDefMethods.html#","e":false,"i":"","n":"TypeDefMethods","t":"TypeDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeDefMethods.html#rhs-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeDef)","n":"rhs","t":"rhs: Quotes.this.reflectModule.this.Tree","d":"scala.quoted.Quotes.reflectModule.TypeDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeDefModule.html#","e":false,"i":"","n":"TypeDefModule","t":"TypeDefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeDefModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(symbol: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.TypeDef","d":"scala.quoted.Quotes.reflectModule.TypeDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeDefModule.html#copy-71e","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(name: String, rhs: Quotes.this.reflectModule.this.Tree): Quotes.this.reflectModule.this.TypeDef","d":"scala.quoted.Quotes.reflectModule.TypeDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeDefModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(tdef: Quotes.this.reflectModule.this.TypeDef): (String, Quotes.this.reflectModule.this.Tree)","d":"scala.quoted.Quotes.reflectModule.TypeDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeIdentMethods.html#","e":false,"i":"","n":"TypeIdentMethods","t":"TypeIdentMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeIdentMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeIdent)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.TypeIdentMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeIdentModule.html#","e":false,"i":"","n":"TypeIdentModule","t":"TypeIdentModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeIdentModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(sym: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypeIdentModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeIdentModule.html#copy-fffff38b","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(name: String): Quotes.this.reflectModule.this.TypeIdent","d":"scala.quoted.Quotes.reflectModule.TypeIdentModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeIdentModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeIdent): Some[String]","d":"scala.quoted.Quotes.reflectModule.TypeIdentModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeLambdaMethods.html#","e":false,"i":"","n":"TypeLambdaMethods","t":"TypeLambdaMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeLambdaMethods.html#param-fffffc87","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeLambda)","n":"param","t":"param(idx: Int): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeLambdaMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeLambdaMethods.html#paramBounds-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeLambda)","n":"paramBounds","t":"paramBounds: List[Quotes.this.reflectModule.this.TypeBounds]","d":"scala.quoted.Quotes.reflectModule.TypeLambdaMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeLambdaMethods.html#paramVariances-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeLambda)","n":"paramVariances","t":"paramVariances: List[Quotes.this.reflectModule.this.Flags]","d":"scala.quoted.Quotes.reflectModule.TypeLambdaMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeLambdaModule.html#","e":false,"i":"","n":"TypeLambdaModule","t":"TypeLambdaModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeLambdaModule.html#apply-fffff245","e":false,"i":"","n":"apply","t":"apply(paramNames: List[String], boundsFn: Quotes.this.reflectModule.this.TypeLambda => List[Quotes.this.reflectModule.this.TypeBounds], bodyFn: Quotes.this.reflectModule.this.TypeLambda => Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.TypeLambda","d":"scala.quoted.Quotes.reflectModule.TypeLambdaModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeLambdaModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeLambda): (List[String], List[Quotes.this.reflectModule.this.TypeBounds], Quotes.this.reflectModule.this.TypeRepr)","d":"scala.quoted.Quotes.reflectModule.TypeLambdaModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseMethods.html#","e":false,"i":"","n":"TypeParamClauseMethods","t":"TypeParamClauseMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseMethods.html#params-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeParamClause)","n":"params","t":"params: List[Quotes.this.reflectModule.this.TypeDef]","d":"scala.quoted.Quotes.reflectModule.TypeParamClauseMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseModule.html#","e":false,"i":"","n":"TypeParamClauseModule","t":"TypeParamClauseModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseModule.html#apply-fffff1e5","e":false,"i":"","n":"apply","t":"apply(params: List[Quotes.this.reflectModule.this.TypeDef]): Quotes.this.reflectModule.this.TypeParamClause","d":"scala.quoted.Quotes.reflectModule.TypeParamClauseModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeParamClauseModule.html#unapply-fffff28f","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeParamClause): Some[List[Quotes.this.reflectModule.this.TypeDef]]","d":"scala.quoted.Quotes.reflectModule.TypeParamClauseModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeProjectionMethods.html#","e":false,"i":"","n":"TypeProjectionMethods","t":"TypeProjectionMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeProjectionMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeProjection)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.TypeProjectionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeProjectionMethods.html#qualifier-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeProjection)","n":"qualifier","t":"qualifier: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypeProjectionMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeProjectionModule.html#","e":false,"i":"","n":"TypeProjectionModule","t":"TypeProjectionModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeProjectionModule.html#copy-fffffb1e","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(qualifier: Quotes.this.reflectModule.this.TypeTree, name: String): Quotes.this.reflectModule.this.TypeProjection","d":"scala.quoted.Quotes.reflectModule.TypeProjectionModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeProjectionModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeProjection): (Quotes.this.reflectModule.this.TypeTree, String)","d":"scala.quoted.Quotes.reflectModule.TypeProjectionModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeRefMethods.html#","e":false,"i":"","n":"TypeRefMethods","t":"TypeRefMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeRefMethods.html#isOpaqueAlias-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRef)","n":"isOpaqueAlias","t":"isOpaqueAlias: Boolean","d":"scala.quoted.Quotes.reflectModule.TypeRefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeRefMethods.html#translucentSuperType-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRef)","n":"translucentSuperType","t":"translucentSuperType: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeRefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeRefModule.html#","e":false,"i":"","n":"TypeRefModule","t":"TypeRefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeRefModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeRef): (Quotes.this.reflectModule.this.TypeRepr, String)","d":"scala.quoted.Quotes.reflectModule.TypeRefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#","e":false,"i":"","n":"TypeReprMethods","t":"TypeReprMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#<:<-fffff7fa","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"<:<","t":"<:<(that: Quotes.this.reflectModule.this.TypeRepr): Boolean","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#=:=-fffff7fa","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"=:=","t":"=:=(that: Quotes.this.reflectModule.this.TypeRepr): Boolean","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#appliedTo-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"appliedTo","t":"appliedTo(targ: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#appliedTo-fffffbf2","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"appliedTo","t":"appliedTo(targs: List[Quotes.this.reflectModule.this.TypeRepr]): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#asType-245","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"asType","t":"asType: Type[_ <: AnyKind]","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#baseClasses-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"baseClasses","t":"baseClasses: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#baseType-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"baseType","t":"baseType(cls: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#classSymbol-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"classSymbol","t":"classSymbol: Option[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#dealias-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"dealias","t":"dealias: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#dealiasKeepOpaques-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"dealiasKeepOpaques","t":"dealiasKeepOpaques: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#derivesFrom-fffff7fa","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"derivesFrom","t":"derivesFrom(cls: Quotes.this.reflectModule.this.Symbol): Boolean","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#isContextFunctionType-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"isContextFunctionType","t":"isContextFunctionType: Boolean","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#isDependentFunctionType-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"isDependentFunctionType","t":"isDependentFunctionType: Boolean","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#isErasedFunctionType-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"isErasedFunctionType","t":"isErasedFunctionType: Boolean","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#isFunctionType-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"isFunctionType","t":"isFunctionType: Boolean","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#isSingleton-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"isSingleton","t":"isSingleton: Boolean","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#isTupleN-4ad","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"isTupleN","t":"isTupleN: Boolean","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#memberType-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"memberType","t":"memberType(member: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#select-fffffab9","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"select","t":"select(sym: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#show-fffffbce","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"show","t":"show(using Quotes.this.reflectModule.this.Printer[Quotes.this.reflectModule.this.TypeRepr]): String","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#simplified-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"simplified","t":"simplified: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#substituteTypes-3a6","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"substituteTypes","t":"substituteTypes(from: List[Quotes.this.reflectModule.this.Symbol], to: List[Quotes.this.reflectModule.this.TypeRepr]): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#termSymbol-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"termSymbol","t":"termSymbol: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#typeArgs-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"typeArgs","t":"typeArgs: List[Quotes.this.reflectModule.this.TypeRepr]","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#typeSymbol-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"typeSymbol","t":"typeSymbol: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#widen-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"widen","t":"widen: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#widenByName-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"widenByName","t":"widenByName: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprMethods.html#widenTermRefByName-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeRepr)","n":"widenTermRefByName","t":"widenTermRefByName: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprModule.html#","e":false,"i":"","n":"TypeReprModule","t":"TypeReprModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprModule.html#of-6fa","e":false,"i":"","n":"of","t":"of[T <: AnyKind](using Type[T]): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeReprModule.html#typeConstructorOf-a37","e":false,"i":"","n":"typeConstructorOf","t":"typeConstructorOf(clazz: Class[_]): Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeReprModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeSelectMethods.html#","e":false,"i":"","n":"TypeSelectMethods","t":"TypeSelectMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeSelectMethods.html#name-9f8","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeSelect)","n":"name","t":"name: String","d":"scala.quoted.Quotes.reflectModule.TypeSelectMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeSelectMethods.html#qualifier-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeSelect)","n":"qualifier","t":"qualifier: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TypeSelectMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeSelectModule.html#","e":false,"i":"","n":"TypeSelectModule","t":"TypeSelectModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeSelectModule.html#apply-fffff38b","e":false,"i":"","n":"apply","t":"apply(qualifier: Quotes.this.reflectModule.this.Term, name: String): Quotes.this.reflectModule.this.TypeSelect","d":"scala.quoted.Quotes.reflectModule.TypeSelectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeSelectModule.html#copy-fffffb1e","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(qualifier: Quotes.this.reflectModule.this.Term, name: String): Quotes.this.reflectModule.this.TypeSelect","d":"scala.quoted.Quotes.reflectModule.TypeSelectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeSelectModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypeSelect): (Quotes.this.reflectModule.this.Term, String)","d":"scala.quoted.Quotes.reflectModule.TypeSelectModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeTreeMethods.html#","e":false,"i":"","n":"TypeTreeMethods","t":"TypeTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeTreeMethods.html#tpe-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypeTree)","n":"tpe","t":"tpe: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.TypeTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeTreeModule.html#","e":false,"i":"","n":"TypeTreeModule","t":"TypeTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeTreeModule.html#of-6fa","e":false,"i":"","n":"of","t":"of[T <: AnyKind](using Type[T]): Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypeTreeModule.html#ref-d26","e":false,"i":"","n":"ref","t":"ref(typeSymbol: Quotes.this.reflectModule.this.Symbol): Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedMethods.html#","e":false,"i":"","n":"TypedMethods","t":"TypedMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedMethods.html#expr-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Typed)","n":"expr","t":"expr: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.TypedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedMethods.html#tpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Typed)","n":"tpt","t":"tpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypedMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedModule.html#","e":false,"i":"","n":"TypedModule","t":"TypedModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(expr: Quotes.this.reflectModule.this.Term, tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.Typed","d":"scala.quoted.Quotes.reflectModule.TypedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedModule.html#copy-fffff24c","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(expr: Quotes.this.reflectModule.this.Term, tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.Typed","d":"scala.quoted.Quotes.reflectModule.TypedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Typed): (Quotes.this.reflectModule.this.Term, Quotes.this.reflectModule.this.TypeTree)","d":"scala.quoted.Quotes.reflectModule.TypedModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedOrTestMethods.html#","e":false,"i":"","n":"TypedOrTestMethods","t":"TypedOrTestMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedOrTestMethods.html#tpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypedOrTest)","n":"tpt","t":"tpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.TypedOrTestMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedOrTestMethods.html#tree-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.TypedOrTest)","n":"tree","t":"tree: Quotes.this.reflectModule.this.Tree","d":"scala.quoted.Quotes.reflectModule.TypedOrTestMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedOrTestModule.html#","e":false,"i":"","n":"TypedOrTestModule","t":"TypedOrTestModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedOrTestModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(expr: Quotes.this.reflectModule.this.Tree, tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.TypedOrTest","d":"scala.quoted.Quotes.reflectModule.TypedOrTestModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedOrTestModule.html#copy-fffff24c","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(expr: Quotes.this.reflectModule.this.Tree, tpt: Quotes.this.reflectModule.this.TypeTree): Quotes.this.reflectModule.this.TypedOrTest","d":"scala.quoted.Quotes.reflectModule.TypedOrTestModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$TypedOrTestModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.TypedOrTest): (Quotes.this.reflectModule.this.Tree, Quotes.this.reflectModule.this.TypeTree)","d":"scala.quoted.Quotes.reflectModule.TypedOrTestModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnapplyMethods.html#","e":false,"i":"","n":"UnapplyMethods","t":"UnapplyMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnapplyMethods.html#fun-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Unapply)","n":"fun","t":"fun: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.UnapplyMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnapplyMethods.html#implicits-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Unapply)","n":"implicits","t":"implicits: List[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.UnapplyMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnapplyMethods.html#patterns-5f","e":false,"i":"extension (self: Quotes.this.reflectModule.this.Unapply)","n":"patterns","t":"patterns: List[Quotes.this.reflectModule.this.Tree]","d":"scala.quoted.Quotes.reflectModule.UnapplyMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnapplyModule.html#","e":false,"i":"","n":"UnapplyModule","t":"UnapplyModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnapplyModule.html#apply-3a6","e":false,"i":"","n":"apply","t":"apply(fun: Quotes.this.reflectModule.this.Term, implicits: List[Quotes.this.reflectModule.this.Term], patterns: List[Quotes.this.reflectModule.this.Tree]): Quotes.this.reflectModule.this.Unapply","d":"scala.quoted.Quotes.reflectModule.UnapplyModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnapplyModule.html#copy-1f9","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(fun: Quotes.this.reflectModule.this.Term, implicits: List[Quotes.this.reflectModule.this.Term], patterns: List[Quotes.this.reflectModule.this.Tree]): Quotes.this.reflectModule.this.Unapply","d":"scala.quoted.Quotes.reflectModule.UnapplyModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnapplyModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.Unapply): (Quotes.this.reflectModule.this.Term, List[Quotes.this.reflectModule.this.Term], List[Quotes.this.reflectModule.this.Tree])","d":"scala.quoted.Quotes.reflectModule.UnapplyModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnitConstantModule.html#","e":false,"i":"","n":"UnitConstantModule","t":"UnitConstantModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnitConstantModule.html#apply-993","e":false,"i":"","n":"apply","t":"apply(): Quotes.this.reflectModule.this.UnitConstant","d":"scala.quoted.Quotes.reflectModule.UnitConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$UnitConstantModule.html#unapply-4ad","e":false,"i":"","n":"unapply","t":"unapply(constant: Quotes.this.reflectModule.this.UnitConstant): true","d":"scala.quoted.Quotes.reflectModule.UnitConstantModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefMethods.html#","e":false,"i":"","n":"ValDefMethods","t":"ValDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefMethods.html#rhs-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ValDef)","n":"rhs","t":"rhs: Option[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.ValDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefMethods.html#tpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ValDef)","n":"tpt","t":"tpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.ValDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html#","e":false,"i":"","n":"ValDefModule","t":"ValDefModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html#apply-4e3","e":false,"i":"","n":"apply","t":"apply(symbol: Quotes.this.reflectModule.this.Symbol, rhs: Option[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.ValDef","d":"scala.quoted.Quotes.reflectModule.ValDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html#copy-adb","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(name: String, tpt: Quotes.this.reflectModule.this.TypeTree, rhs: Option[Quotes.this.reflectModule.this.Term]): Quotes.this.reflectModule.this.ValDef","d":"scala.quoted.Quotes.reflectModule.ValDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html#let-fffff146","e":false,"i":"","n":"let","t":"let(owner: Quotes.this.reflectModule.this.Symbol, name: String, rhs: Quotes.this.reflectModule.this.Term, flags: Quotes.this.reflectModule.this.Flags)(body: Quotes.this.reflectModule.this.Ref => Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ValDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html#let-fffff739","e":false,"i":"","n":"let","t":"let(owner: Quotes.this.reflectModule.this.Symbol, name: String, rhs: Quotes.this.reflectModule.this.Term)(body: Quotes.this.reflectModule.this.Ref => Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ValDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html#let-fffffa3e","e":false,"i":"","n":"let","t":"let(owner: Quotes.this.reflectModule.this.Symbol, rhs: Quotes.this.reflectModule.this.Term)(body: Quotes.this.reflectModule.this.Ref => Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ValDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html#let-fe5","e":false,"i":"","n":"let","t":"let(owner: Quotes.this.reflectModule.this.Symbol, terms: List[Quotes.this.reflectModule.this.Term])(body: List[Quotes.this.reflectModule.this.Ref] => Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.ValDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValDefModule.html#unapply-fffff446","e":false,"i":"","n":"unapply","t":"unapply(vdef: Quotes.this.reflectModule.this.ValDef): (String, Quotes.this.reflectModule.this.TypeTree, Option[Quotes.this.reflectModule.this.Term])","d":"scala.quoted.Quotes.reflectModule.ValDefModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValOrDefDefMethods.html#","e":false,"i":"","n":"ValOrDefDefMethods","t":"ValOrDefDefMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValOrDefDefMethods.html#rhs-fffffb50","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ValOrDefDef)","n":"rhs","t":"rhs: Option[Quotes.this.reflectModule.this.Term]","d":"scala.quoted.Quotes.reflectModule.ValOrDefDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$ValOrDefDefMethods.html#tpt-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.ValOrDefDef)","n":"tpt","t":"tpt: Quotes.this.reflectModule.this.TypeTree","d":"scala.quoted.Quotes.reflectModule.ValOrDefDefMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WhileMethods.html#","e":false,"i":"","n":"WhileMethods","t":"WhileMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WhileMethods.html#body-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.While)","n":"body","t":"body: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.WhileMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WhileMethods.html#cond-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.While)","n":"cond","t":"cond: Quotes.this.reflectModule.this.Term","d":"scala.quoted.Quotes.reflectModule.WhileMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WhileModule.html#","e":false,"i":"","n":"WhileModule","t":"WhileModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WhileModule.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(cond: Quotes.this.reflectModule.this.Term, body: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.While","d":"scala.quoted.Quotes.reflectModule.WhileModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WhileModule.html#copy-fffff24c","e":false,"i":"","n":"copy","t":"copy(original: Quotes.this.reflectModule.this.Tree)(cond: Quotes.this.reflectModule.this.Term, body: Quotes.this.reflectModule.this.Term): Quotes.this.reflectModule.this.While","d":"scala.quoted.Quotes.reflectModule.WhileModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WhileModule.html#unapply-fffff445","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.While): (Quotes.this.reflectModule.this.Term, Quotes.this.reflectModule.this.Term)","d":"scala.quoted.Quotes.reflectModule.WhileModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WildcardModule.html#","e":false,"i":"","n":"WildcardModule","t":"WildcardModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WildcardModule.html#apply-993","e":false,"i":"","n":"apply","t":"apply(): Quotes.this.reflectModule.this.Wildcard","d":"scala.quoted.Quotes.reflectModule.WildcardModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WildcardModule.html#unapply-4ad","e":false,"i":"","n":"unapply","t":"unapply(wildcard: Quotes.this.reflectModule.this.Wildcard): true","d":"scala.quoted.Quotes.reflectModule.WildcardModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeMethods.html#","e":false,"i":"","n":"WildcardTypeTreeMethods","t":"WildcardTypeTreeMethods","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeMethods.html#tpe-d26","e":false,"i":"extension (self: Quotes.this.reflectModule.this.WildcardTypeTree)","n":"tpe","t":"tpe: Quotes.this.reflectModule.this.TypeRepr","d":"scala.quoted.Quotes.reflectModule.WildcardTypeTreeMethods","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeModule.html#","e":false,"i":"","n":"WildcardTypeTreeModule","t":"WildcardTypeTreeModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeModule.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(tpe: Quotes.this.reflectModule.this.TypeRepr): Quotes.this.reflectModule.this.WildcardTypeTree","d":"scala.quoted.Quotes.reflectModule.WildcardTypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$WildcardTypeTreeModule.html#unapply-4ad","e":false,"i":"","n":"unapply","t":"unapply(x: Quotes.this.reflectModule.this.WildcardTypeTree): true","d":"scala.quoted.Quotes.reflectModule.WildcardTypeTreeModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#","e":false,"i":"","n":"defnModule","t":"defnModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#AnyClass-0","e":false,"i":"","n":"AnyClass","t":"AnyClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#AnyRefClass-0","e":false,"i":"","n":"AnyRefClass","t":"AnyRefClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#AnyValClass-0","e":false,"i":"","n":"AnyValClass","t":"AnyValClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ArrayClass-0","e":false,"i":"","n":"ArrayClass","t":"ArrayClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ArrayModule-0","e":false,"i":"","n":"ArrayModule","t":"ArrayModule: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#Array_apply-0","e":false,"i":"","n":"Array_apply","t":"Array_apply: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#Array_clone-0","e":false,"i":"","n":"Array_clone","t":"Array_clone: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#Array_length-0","e":false,"i":"","n":"Array_length","t":"Array_length: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#Array_update-0","e":false,"i":"","n":"Array_update","t":"Array_update: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#BooleanClass-0","e":false,"i":"","n":"BooleanClass","t":"BooleanClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ByteClass-0","e":false,"i":"","n":"ByteClass","t":"ByteClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#CharClass-0","e":false,"i":"","n":"CharClass","t":"CharClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ClassClass-0","e":false,"i":"","n":"ClassClass","t":"ClassClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#DoubleClass-0","e":false,"i":"","n":"DoubleClass","t":"DoubleClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#EmptyPackageClass-0","e":false,"i":"","n":"EmptyPackageClass","t":"EmptyPackageClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#FloatClass-0","e":false,"i":"","n":"FloatClass","t":"FloatClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#FunctionClass-3fa","e":false,"i":"","n":"FunctionClass","t":"FunctionClass(arity: Int, isImplicit: Boolean, isErased: Boolean): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#FunctionClass-aba","e":false,"i":"","n":"FunctionClass","t":"FunctionClass(arity: Int): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#FunctionClass-72c","e":false,"i":"","n":"FunctionClass","t":"FunctionClass(arity: Int, isContextual: Boolean): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#IntClass-0","e":false,"i":"","n":"IntClass","t":"IntClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#JavaLangPackage-0","e":false,"i":"","n":"JavaLangPackage","t":"JavaLangPackage: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#LongClass-0","e":false,"i":"","n":"LongClass","t":"LongClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#MatchableClass-0","e":false,"i":"","n":"MatchableClass","t":"MatchableClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#NoneModule-0","e":false,"i":"","n":"NoneModule","t":"NoneModule: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#NothingClass-0","e":false,"i":"","n":"NothingClass","t":"NothingClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#NullClass-0","e":false,"i":"","n":"NullClass","t":"NullClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ObjectClass-0","e":false,"i":"","n":"ObjectClass","t":"ObjectClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#OptionClass-0","e":false,"i":"","n":"OptionClass","t":"OptionClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#PolyFunctionClass-0","e":false,"i":"","n":"PolyFunctionClass","t":"PolyFunctionClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#PredefModule-0","e":false,"i":"","n":"PredefModule","t":"PredefModule: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#Predef_classOf-0","e":false,"i":"","n":"Predef_classOf","t":"Predef_classOf: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ProductClass-0","e":false,"i":"","n":"ProductClass","t":"ProductClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#RepeatedAnnot-0","e":false,"i":"","n":"RepeatedAnnot","t":"RepeatedAnnot: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#RepeatedParamClass-0","e":false,"i":"","n":"RepeatedParamClass","t":"RepeatedParamClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#RootClass-0","e":false,"i":"","n":"RootClass","t":"RootClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#RootPackage-0","e":false,"i":"","n":"RootPackage","t":"RootPackage: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ScalaNumericValueClasses-0","e":false,"i":"","n":"ScalaNumericValueClasses","t":"ScalaNumericValueClasses: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ScalaPackage-0","e":false,"i":"","n":"ScalaPackage","t":"ScalaPackage: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ScalaPackageClass-0","e":false,"i":"","n":"ScalaPackageClass","t":"ScalaPackageClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ScalaPrimitiveValueClasses-0","e":false,"i":"","n":"ScalaPrimitiveValueClasses","t":"ScalaPrimitiveValueClasses: List[Quotes.this.reflectModule.this.Symbol]","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#ShortClass-0","e":false,"i":"","n":"ShortClass","t":"ShortClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#SomeModule-0","e":false,"i":"","n":"SomeModule","t":"SomeModule: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#StringClass-0","e":false,"i":"","n":"StringClass","t":"StringClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#TupleClass-aba","e":false,"i":"","n":"TupleClass","t":"TupleClass(arity: Int): Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#UnitClass-0","e":false,"i":"","n":"UnitClass","t":"UnitClass: Quotes.this.reflectModule.this.Symbol","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$defnModule.html#isTupleClass-4ad","e":false,"i":"","n":"isTupleClass","t":"isTupleClass(sym: Quotes.this.reflectModule.this.Symbol): Boolean","d":"scala.quoted.Quotes.reflectModule.defnModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#","e":false,"i":"","n":"reportModule","t":"reportModule","d":"scala.quoted.Quotes.reflectModule","k":"trait","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#error-571","e":false,"i":"","n":"error","t":"error(msg: String): Unit","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#error-fffff63a","e":false,"i":"","n":"error","t":"error(msg: String, expr: Expr[Any]): Unit","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#error-944","e":false,"i":"","n":"error","t":"error(msg: String, pos: Quotes.this.reflectModule.this.Position): Unit","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#errorAndAbort-8c0","e":false,"i":"","n":"errorAndAbort","t":"errorAndAbort(msg: String): Nothing","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#errorAndAbort-fffff757","e":false,"i":"","n":"errorAndAbort","t":"errorAndAbort(msg: String, expr: Expr[Any]): Nothing","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#errorAndAbort-d","e":false,"i":"","n":"errorAndAbort","t":"errorAndAbort(msg: String, pos: Quotes.this.reflectModule.this.Position): Nothing","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#info-571","e":false,"i":"","n":"info","t":"info(msg: String): Unit","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#info-fffff63a","e":false,"i":"","n":"info","t":"info(msg: String, expr: Expr[Any]): Unit","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#info-944","e":false,"i":"","n":"info","t":"info(msg: String, pos: Quotes.this.reflectModule.this.Position): Unit","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#throwError-8c0","e":false,"i":"","n":"throwError","t":"throwError(msg: String): Nothing","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#throwError-fffff757","e":false,"i":"","n":"throwError","t":"throwError(msg: String, expr: Expr[Any]): Nothing","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#throwError-d","e":false,"i":"","n":"throwError","t":"throwError(msg: String, pos: Quotes.this.reflectModule.this.Position): Nothing","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#warning-571","e":false,"i":"","n":"warning","t":"warning(msg: String): Unit","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#warning-fffff63a","e":false,"i":"","n":"warning","t":"warning(msg: String, expr: Expr[Any]): Unit","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/Quotes$reflectModule$reportModule.html#warning-944","e":false,"i":"","n":"warning","t":"warning(msg: String, pos: Quotes.this.reflectModule.this.Position): Unit","d":"scala.quoted.Quotes.reflectModule.reportModule","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr.html#","e":false,"i":"","n":"ToExpr","t":"ToExpr[T]","d":"scala.quoted","k":"trait","x":""},
{"l":"api/scala/quoted/ToExpr.html#apply-fffffcb1","e":false,"i":"","n":"apply","t":"apply(x: T)(using Quotes): Expr[T]","d":"scala.quoted.ToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$.html#","e":false,"i":"","n":"ToExpr","t":"ToExpr","d":"scala.quoted","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ArrayOfBooleanToExpr-0","e":false,"i":"","n":"ArrayOfBooleanToExpr","t":"ArrayOfBooleanToExpr: ArrayOfBooleanToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ArrayOfByteToExpr-0","e":false,"i":"","n":"ArrayOfByteToExpr","t":"ArrayOfByteToExpr: ArrayOfByteToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ArrayOfCharToExpr-0","e":false,"i":"","n":"ArrayOfCharToExpr","t":"ArrayOfCharToExpr: ArrayOfCharToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ArrayOfDoubleToExpr-0","e":false,"i":"","n":"ArrayOfDoubleToExpr","t":"ArrayOfDoubleToExpr: ArrayOfDoubleToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ArrayOfFloatToExpr-0","e":false,"i":"","n":"ArrayOfFloatToExpr","t":"ArrayOfFloatToExpr: ArrayOfFloatToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ArrayOfIntToExpr-0","e":false,"i":"","n":"ArrayOfIntToExpr","t":"ArrayOfIntToExpr: ArrayOfIntToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ArrayOfLongToExpr-0","e":false,"i":"","n":"ArrayOfLongToExpr","t":"ArrayOfLongToExpr: ArrayOfLongToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ArrayOfShortToExpr-0","e":false,"i":"","n":"ArrayOfShortToExpr","t":"ArrayOfShortToExpr: ArrayOfShortToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ArrayToExpr-373","e":false,"i":"","n":"ArrayToExpr","t":"ArrayToExpr[T : Type : ToExpr : ClassTag]: ArrayToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#BigDecimalToExpr-0","e":false,"i":"","n":"BigDecimalToExpr","t":"BigDecimalToExpr: BigDecimalToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#BigIntToExpr-0","e":false,"i":"","n":"BigIntToExpr","t":"BigIntToExpr: BigIntToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#BooleanToExpr-751","e":false,"i":"","n":"BooleanToExpr","t":"BooleanToExpr[T <: Boolean]: BooleanToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ByteToExpr-fffff2df","e":false,"i":"","n":"ByteToExpr","t":"ByteToExpr[T <: Byte]: ByteToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#CharToExpr-2ad","e":false,"i":"","n":"CharToExpr","t":"CharToExpr[T <: Char]: CharToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ClassTagToExpr-6e3","e":false,"i":"","n":"ClassTagToExpr","t":"ClassTagToExpr[T : Type]: ClassTagToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ClassToExpr-fffff2e1","e":false,"i":"","n":"ClassToExpr","t":"ClassToExpr[T <: Class[_]]: ClassToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#DoubleToExpr-528","e":false,"i":"","n":"DoubleToExpr","t":"DoubleToExpr[T <: Double]: DoubleToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#EitherToExpr-ffffff0f","e":false,"i":"","n":"EitherToExpr","t":"EitherToExpr[L : Type : ToExpr, R : Type : ToExpr]: EitherToExpr[L, R]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#EmptyTupleToExpr-0","e":false,"i":"","n":"EmptyTupleToExpr","t":"EmptyTupleToExpr: EmptyTupleToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#FloatToExpr-c5","e":false,"i":"","n":"FloatToExpr","t":"FloatToExpr[T <: Float]: FloatToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#IArrayToExpr-b71","e":false,"i":"","n":"IArrayToExpr","t":"IArrayToExpr[T](using evidence$1: Type[T], ltArray: ToExpr[Array[T]]): IArrayToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#IntToExpr-fffff658","e":false,"i":"","n":"IntToExpr","t":"IntToExpr[T <: Int]: IntToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#LeftToExpr-6ff","e":false,"i":"","n":"LeftToExpr","t":"LeftToExpr[L : Type : ToExpr, R : Type]: LeftToExpr[L, R]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ListToExpr-65f","e":false,"i":"","n":"ListToExpr","t":"ListToExpr[T : Type : ToExpr]: ListToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#LongToExpr-fffff153","e":false,"i":"","n":"LongToExpr","t":"LongToExpr[T <: Long]: LongToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#MapToExpr-6f2","e":false,"i":"","n":"MapToExpr","t":"MapToExpr[T : Type : ToExpr, U : Type : ToExpr]: MapToExpr[T, U]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#NilToExpr-0","e":false,"i":"","n":"NilToExpr","t":"NilToExpr: NilToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#NoneToExpr-0","e":false,"i":"","n":"NoneToExpr","t":"NoneToExpr: NoneToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#OptionToExpr-fffff0b6","e":false,"i":"","n":"OptionToExpr","t":"OptionToExpr[T : Type : ToExpr]: OptionToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#RightToExpr-fffff430","e":false,"i":"","n":"RightToExpr","t":"RightToExpr[L : Type, R : Type : ToExpr]: RightToExpr[L, R]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#SeqToExpr-fffff51e","e":false,"i":"","n":"SeqToExpr","t":"SeqToExpr[T : Type : ToExpr]: SeqToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#SetToExpr-6e1","e":false,"i":"","n":"SetToExpr","t":"SetToExpr[T : Type : ToExpr]: SetToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#ShortToExpr-fffffae5","e":false,"i":"","n":"ShortToExpr","t":"ShortToExpr[T <: Short]: ShortToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#SomeToExpr-fffff235","e":false,"i":"","n":"SomeToExpr","t":"SomeToExpr[T : Type : ToExpr]: SomeToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#StringContextToExpr-0","e":false,"i":"","n":"StringContextToExpr","t":"StringContextToExpr: StringContextToExpr","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#StringToExpr-968","e":false,"i":"","n":"StringToExpr","t":"StringToExpr[T <: String]: StringToExpr[T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple10ToExpr-fffffa9a","e":false,"i":"","n":"Tuple10ToExpr","t":"Tuple10ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr]: Tuple10ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple11ToExpr-fffff272","e":false,"i":"","n":"Tuple11ToExpr","t":"Tuple11ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr]: Tuple11ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple12ToExpr-e4a","e":false,"i":"","n":"Tuple12ToExpr","t":"Tuple12ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr]: Tuple12ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple13ToExpr-e22","e":false,"i":"","n":"Tuple13ToExpr","t":"Tuple13ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr]: Tuple13ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple14ToExpr-fffff1fa","e":false,"i":"","n":"Tuple14ToExpr","t":"Tuple14ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr, T14 : Type : ToExpr]: Tuple14ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple15ToExpr-fffff9d2","e":false,"i":"","n":"Tuple15ToExpr","t":"Tuple15ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr, T14 : Type : ToExpr, T15 : Type : ToExpr]: Tuple15ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple16ToExpr-fffff5aa","e":false,"i":"","n":"Tuple16ToExpr","t":"Tuple16ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr, T14 : Type : ToExpr, T15 : Type : ToExpr, T16 : Type : ToExpr]: Tuple16ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple17ToExpr-582","e":false,"i":"","n":"Tuple17ToExpr","t":"Tuple17ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr, T14 : Type : ToExpr, T15 : Type : ToExpr, T16 : Type : ToExpr, T17 : Type : ToExpr]: Tuple17ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple18ToExpr-95a","e":false,"i":"","n":"Tuple18ToExpr","t":"Tuple18ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr, T14 : Type : ToExpr, T15 : Type : ToExpr, T16 : Type : ToExpr, T17 : Type : ToExpr, T18 : Type : ToExpr]: Tuple18ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple19ToExpr-fffff132","e":false,"i":"","n":"Tuple19ToExpr","t":"Tuple19ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr, T14 : Type : ToExpr, T15 : Type : ToExpr, T16 : Type : ToExpr, T17 : Type : ToExpr, T18 : Type : ToExpr, T19 : Type : ToExpr]: Tuple19ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple1ToExpr-2aa","e":false,"i":"","n":"Tuple1ToExpr","t":"Tuple1ToExpr[T1 : Type : ToExpr]: Tuple1ToExpr[T1]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple20ToExpr-fffff234","e":false,"i":"","n":"Tuple20ToExpr","t":"Tuple20ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr, T14 : Type : ToExpr, T15 : Type : ToExpr, T16 : Type : ToExpr, T17 : Type : ToExpr, T18 : Type : ToExpr, T19 : Type : ToExpr, T20 : Type : ToExpr]: Tuple20ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple21ToExpr-b8c","e":false,"i":"","n":"Tuple21ToExpr","t":"Tuple21ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr, T14 : Type : ToExpr, T15 : Type : ToExpr, T16 : Type : ToExpr, T17 : Type : ToExpr, T18 : Type : ToExpr, T19 : Type : ToExpr, T20 : Type : ToExpr, T21 : Type : ToExpr]: Tuple21ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple22ToExpr-8e4","e":false,"i":"","n":"Tuple22ToExpr","t":"Tuple22ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr, T10 : Type : ToExpr, T11 : Type : ToExpr, T12 : Type : ToExpr, T13 : Type : ToExpr, T14 : Type : ToExpr, T15 : Type : ToExpr, T16 : Type : ToExpr, T17 : Type : ToExpr, T18 : Type : ToExpr, T19 : Type : ToExpr, T20 : Type : ToExpr, T21 : Type : ToExpr, T22 : Type : ToExpr]: Tuple22ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple2ToExpr-7f4","e":false,"i":"","n":"Tuple2ToExpr","t":"Tuple2ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr]: Tuple2ToExpr[T1, T2]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple3ToExpr-fffff93e","e":false,"i":"","n":"Tuple3ToExpr","t":"Tuple3ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr]: Tuple3ToExpr[T1, T2, T3]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple4ToExpr-fffff688","e":false,"i":"","n":"Tuple4ToExpr","t":"Tuple4ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr]: Tuple4ToExpr[T1, T2, T3, T4]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple5ToExpr-ffffffd2","e":false,"i":"","n":"Tuple5ToExpr","t":"Tuple5ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr]: Tuple5ToExpr[T1, T2, T3, T4, T5]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple6ToExpr-51c","e":false,"i":"","n":"Tuple6ToExpr","t":"Tuple6ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr]: Tuple6ToExpr[T1, T2, T3, T4, T5, T6]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple7ToExpr-666","e":false,"i":"","n":"Tuple7ToExpr","t":"Tuple7ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr]: Tuple7ToExpr[T1, T2, T3, T4, T5, T6, T7]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple8ToExpr-fffff3b0","e":false,"i":"","n":"Tuple8ToExpr","t":"Tuple8ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr]: Tuple8ToExpr[T1, T2, T3, T4, T5, T6, T7, T8]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#Tuple9ToExpr-fffffcfa","e":false,"i":"","n":"Tuple9ToExpr","t":"Tuple9ToExpr[T1 : Type : ToExpr, T2 : Type : ToExpr, T3 : Type : ToExpr, T4 : Type : ToExpr, T5 : Type : ToExpr, T6 : Type : ToExpr, T7 : Type : ToExpr, T8 : Type : ToExpr, T9 : Type : ToExpr]: Tuple9ToExpr[T1, T2, T3, T4, T5, T6, T7, T8, T9]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$.html#TupleConsToExpr-26f","e":false,"i":"","n":"TupleConsToExpr","t":"TupleConsToExpr[H : Type : ToExpr, T <: Tuple : Type : ToExpr]: TupleConsToExpr[H, T]","d":"scala.quoted.ToExpr","k":"given","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfBooleanToExpr$.html#","e":false,"i":"","n":"ArrayOfBooleanToExpr","t":"ArrayOfBooleanToExpr extends ToExpr[Array[Boolean]]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfBooleanToExpr$.html#apply-fffff260","e":false,"i":"","n":"apply","t":"apply(array: Array[Boolean])(using Quotes): Expr[Array[Boolean]]","d":"scala.quoted.ToExpr.ArrayOfBooleanToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfByteToExpr$.html#","e":false,"i":"","n":"ArrayOfByteToExpr","t":"ArrayOfByteToExpr extends ToExpr[Array[Byte]]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfByteToExpr$.html#apply-7d0","e":false,"i":"","n":"apply","t":"apply(array: Array[Byte])(using Quotes): Expr[Array[Byte]]","d":"scala.quoted.ToExpr.ArrayOfByteToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfCharToExpr$.html#","e":false,"i":"","n":"ArrayOfCharToExpr","t":"ArrayOfCharToExpr extends ToExpr[Array[Char]]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfCharToExpr$.html#apply-ffffff9e","e":false,"i":"","n":"apply","t":"apply(array: Array[Char])(using Quotes): Expr[Array[Char]]","d":"scala.quoted.ToExpr.ArrayOfCharToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfDoubleToExpr$.html#","e":false,"i":"","n":"ArrayOfDoubleToExpr","t":"ArrayOfDoubleToExpr extends ToExpr[Array[Double]]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfDoubleToExpr$.html#apply-fffff1d9","e":false,"i":"","n":"apply","t":"apply(array: Array[Double])(using Quotes): Expr[Array[Double]]","d":"scala.quoted.ToExpr.ArrayOfDoubleToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfFloatToExpr$.html#","e":false,"i":"","n":"ArrayOfFloatToExpr","t":"ArrayOfFloatToExpr extends ToExpr[Array[Float]]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfFloatToExpr$.html#apply-ffffff94","e":false,"i":"","n":"apply","t":"apply(array: Array[Float])(using Quotes): Expr[Array[Float]]","d":"scala.quoted.ToExpr.ArrayOfFloatToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfIntToExpr$.html#","e":false,"i":"","n":"ArrayOfIntToExpr","t":"ArrayOfIntToExpr extends ToExpr[Array[Int]]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfIntToExpr$.html#apply-ce7","e":false,"i":"","n":"apply","t":"apply(array: Array[Int])(using Quotes): Expr[Array[Int]]","d":"scala.quoted.ToExpr.ArrayOfIntToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfLongToExpr$.html#","e":false,"i":"","n":"ArrayOfLongToExpr","t":"ArrayOfLongToExpr extends ToExpr[Array[Long]]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfLongToExpr$.html#apply-fffff644","e":false,"i":"","n":"apply","t":"apply(array: Array[Long])(using Quotes): Expr[Array[Long]]","d":"scala.quoted.ToExpr.ArrayOfLongToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfShortToExpr$.html#","e":false,"i":"","n":"ArrayOfShortToExpr","t":"ArrayOfShortToExpr extends ToExpr[Array[Short]]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$ArrayOfShortToExpr$.html#apply-fffff9b4","e":false,"i":"","n":"apply","t":"apply(array: Array[Short])(using Quotes): Expr[Array[Short]]","d":"scala.quoted.ToExpr.ArrayOfShortToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$BigDecimalToExpr$.html#","e":false,"i":"","n":"BigDecimalToExpr","t":"BigDecimalToExpr extends ToExpr[BigDecimal]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$BigDecimalToExpr$.html#apply-d6d","e":false,"i":"","n":"apply","t":"apply(x: BigDecimal)(using Quotes): Expr[BigDecimal]","d":"scala.quoted.ToExpr.BigDecimalToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$BigIntToExpr$.html#","e":false,"i":"","n":"BigIntToExpr","t":"BigIntToExpr extends ToExpr[BigInt]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$BigIntToExpr$.html#apply-fffffa0b","e":false,"i":"","n":"apply","t":"apply(x: BigInt)(using Quotes): Expr[BigInt]","d":"scala.quoted.ToExpr.BigIntToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$EmptyTupleToExpr$.html#","e":false,"i":"","n":"EmptyTupleToExpr","t":"EmptyTupleToExpr extends ToExpr[EmptyTuple.type]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$EmptyTupleToExpr$.html#apply-6db","e":false,"i":"","n":"apply","t":"apply(tup: EmptyTuple.type)(using Quotes): Expr[EmptyTuple.type]","d":"scala.quoted.ToExpr.EmptyTupleToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$NilToExpr$.html#","e":false,"i":"","n":"NilToExpr","t":"NilToExpr extends ToExpr[Nil.type]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$NilToExpr$.html#apply-d05","e":false,"i":"","n":"apply","t":"apply(xs: Nil.type)(using Quotes): Expr[Nil.type]","d":"scala.quoted.ToExpr.NilToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$NoneToExpr$.html#","e":false,"i":"","n":"NoneToExpr","t":"NoneToExpr extends ToExpr[None.type]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$NoneToExpr$.html#apply-fc2","e":false,"i":"","n":"apply","t":"apply(x: None.type)(using Quotes): Expr[None.type]","d":"scala.quoted.ToExpr.NoneToExpr","k":"def","x":""},
{"l":"api/scala/quoted/ToExpr$$StringContextToExpr$.html#","e":false,"i":"","n":"StringContextToExpr","t":"StringContextToExpr extends ToExpr[StringContext]","d":"scala.quoted.ToExpr","k":"object","x":""},
{"l":"api/scala/quoted/ToExpr$$StringContextToExpr$.html#apply-734","e":false,"i":"","n":"apply","t":"apply(stringContext: StringContext)(using Quotes): Expr[StringContext]","d":"scala.quoted.ToExpr.StringContextToExpr","k":"def","x":""},
{"l":"api/scala/quoted/Type.html#","e":false,"i":"","n":"Type","t":"Type[T <: AnyKind]","d":"scala.quoted","k":"class","x":""},
{"l":"api/scala/quoted/Type.html#Underlying-0","e":false,"i":"","n":"Underlying","t":"Underlying = T","d":"scala.quoted.Type","k":"type","x":""},
{"l":"api/scala/quoted/Type$.html#","e":false,"i":"","n":"Type","t":"Type","d":"scala.quoted","k":"object","x":""},
{"l":"api/scala/quoted/Type$.html#of-194","e":false,"i":"","n":"of","t":"of[T <: AnyKind](using Quotes): Type[T]","d":"scala.quoted.Type","k":"given","x":""},
{"l":"api/scala/quoted/Type$.html#show-fffffdd3","e":false,"i":"","n":"show","t":"show[T <: AnyKind](using Type[T])(using Quotes): String","d":"scala.quoted.Type","k":"def","x":""},
{"l":"api/scala/quoted/Type$.html#valueOfConstant-4ab","e":false,"i":"","n":"valueOfConstant","t":"valueOfConstant[T](using Type[T])(using Quotes): Option[T]","d":"scala.quoted.Type","k":"def","x":""},
{"l":"api/scala/quoted/Type$.html#valueOfTuple-4ab","e":false,"i":"","n":"valueOfTuple","t":"valueOfTuple[T <: Tuple](using Type[T])(using Quotes): Option[T]","d":"scala.quoted.Type","k":"def","x":""},
{"l":"api/scala/quoted/Varargs$.html#","e":false,"i":"","n":"Varargs","t":"Varargs","d":"scala.quoted","k":"object","x":""},
{"l":"api/scala/quoted/Varargs$.html#apply-fffff2fa","e":false,"i":"","n":"apply","t":"apply[T](xs: Seq[Expr[T]])(using Type[T])(using Quotes): Expr[Seq[T]]","d":"scala.quoted.Varargs","k":"def","x":""},
{"l":"api/scala/quoted/Varargs$.html#unapply-fffff290","e":false,"i":"","n":"unapply","t":"unapply[T](expr: Expr[Seq[T]])(using Quotes): Option[Seq[Expr[T]]]","d":"scala.quoted.Varargs","k":"def","x":""},
{"l":"api/scala/ref.html#","e":false,"i":"","n":"scala.ref","t":"scala.ref","d":"","k":"package","x":""},
{"l":"api/scala/ref/PhantomReference.html#","e":false,"i":"","n":"PhantomReference","t":"PhantomReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T]","d":"scala.ref","k":"class","x":""},
{"l":"api/scala/ref/PhantomReference.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: PhantomReference[_ <: T]","d":"scala.ref.PhantomReference","k":"val","x":""},
{"l":"api/scala/ref/Reference.html#","e":false,"i":"","n":"Reference","t":"Reference[+T <: AnyRef] extends () => T","d":"scala.ref","k":"trait","x":""},
{"l":"api/scala/ref/Reference.html#apply-993","e":false,"i":"","n":"apply","t":"apply(): T","d":"scala.ref.Reference","k":"def","x":"return the underlying value"},
{"l":"api/scala/ref/Reference.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.ref.Reference","k":"def","x":""},
{"l":"api/scala/ref/Reference.html#enqueue-fffff760","e":false,"i":"","n":"enqueue","t":"enqueue(): Boolean","d":"scala.ref.Reference","k":"def","x":""},
{"l":"api/scala/ref/Reference.html#get-0","e":false,"i":"","n":"get","t":"get: Option[T]","d":"scala.ref.Reference","k":"def","x":"return Some underlying if it hasn't been collected, otherwise None"},
{"l":"api/scala/ref/Reference.html#isEnqueued-0","e":false,"i":"","n":"isEnqueued","t":"isEnqueued: Boolean","d":"scala.ref.Reference","k":"def","x":""},
{"l":"api/scala/ref/ReferenceQueue.html#","e":false,"i":"","n":"ReferenceQueue","t":"ReferenceQueue[+T <: AnyRef]","d":"scala.ref","k":"class","x":""},
{"l":"api/scala/ref/ReferenceQueue.html#poll-0","e":false,"i":"","n":"poll","t":"poll: Option[Reference[T]]","d":"scala.ref.ReferenceQueue","k":"def","x":""},
{"l":"api/scala/ref/ReferenceQueue.html#remove-0","e":false,"i":"","n":"remove","t":"remove: Option[Reference[T]]","d":"scala.ref.ReferenceQueue","k":"def","x":""},
{"l":"api/scala/ref/ReferenceQueue.html#remove-681","e":false,"i":"","n":"remove","t":"remove(timeout: Long): Option[Reference[T]]","d":"scala.ref.ReferenceQueue","k":"def","x":""},
{"l":"api/scala/ref/ReferenceWrapper.html#","e":false,"i":"","n":"ReferenceWrapper","t":"ReferenceWrapper[+T <: AnyRef] extends Reference[T], Proxy","d":"scala.ref","k":"trait","x":""},
{"l":"api/scala/ref/ReferenceWrapper.html#apply-993","e":false,"i":"","n":"apply","t":"apply(): T","d":"scala.ref.ReferenceWrapper","k":"def","x":"return the underlying value"},
{"l":"api/scala/ref/ReferenceWrapper.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.ref.ReferenceWrapper","k":"def","x":""},
{"l":"api/scala/ref/ReferenceWrapper.html#enqueue-fffff760","e":false,"i":"","n":"enqueue","t":"enqueue(): Boolean","d":"scala.ref.ReferenceWrapper","k":"def","x":""},
{"l":"api/scala/ref/ReferenceWrapper.html#isEnqueued-0","e":false,"i":"","n":"isEnqueued","t":"isEnqueued: Boolean","d":"scala.ref.ReferenceWrapper","k":"def","x":""},
{"l":"api/scala/ref/ReferenceWrapper.html#self-0","e":false,"i":"","n":"self","t":"self: Reference[_ <: T]","d":"scala.ref.ReferenceWrapper","k":"def","x":""},
{"l":"api/scala/ref/ReferenceWrapper.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: Reference[_ <: T]","d":"scala.ref.ReferenceWrapper","k":"val","x":""},
{"l":"api/scala/ref/SoftReference.html#","e":false,"i":"","n":"SoftReference","t":"SoftReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T]","d":"scala.ref","k":"class","x":""},
{"l":"api/scala/ref/SoftReference.html#<init>-fffff11a","e":false,"i":"","n":"this","t":"this(value: T)","d":"scala.ref.SoftReference","k":"def","x":""},
{"l":"api/scala/ref/SoftReference.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: SoftReference[_ <: T]","d":"scala.ref.SoftReference","k":"val","x":""},
{"l":"api/scala/ref/SoftReference$.html#","e":false,"i":"","n":"SoftReference","t":"SoftReference","d":"scala.ref","k":"object","x":"A companion object that implements an extractor for SoftReference values\n"},
{"l":"api/scala/ref/SoftReference$.html#apply-fffff11a","e":false,"i":"","n":"apply","t":"apply[T <: AnyRef](value: T): SoftReference[T]","d":"scala.ref.SoftReference","k":"def","x":"Creates a SoftReference pointing to value"},
{"l":"api/scala/ref/SoftReference$.html#unapply-fffff8ca","e":false,"i":"","n":"unapply","t":"unapply[T <: AnyRef](sr: SoftReference[T]): Option[T]","d":"scala.ref.SoftReference","k":"def","x":"Optionally returns the referenced value, or None if that value no longer exists"},
{"l":"api/scala/ref/WeakReference.html#","e":false,"i":"","n":"WeakReference","t":"WeakReference[+T <: AnyRef](value: T, queue: ReferenceQueue[T]) extends ReferenceWrapper[T]","d":"scala.ref","k":"class","x":"A wrapper class for java.lang.ref.WeakReference\nThe new functionality is (1) results are Option values, instead of using null.\n(2) There is an extractor that maps the weak reference itself into an option.\n"},
{"l":"api/scala/ref/WeakReference.html#<init>-fffffd8c","e":false,"i":"","n":"this","t":"this(value: T)","d":"scala.ref.WeakReference","k":"def","x":""},
{"l":"api/scala/ref/WeakReference.html#underlying-0","e":false,"i":"","n":"underlying","t":"underlying: WeakReference[_ <: T]","d":"scala.ref.WeakReference","k":"val","x":""},
{"l":"api/scala/ref/WeakReference$.html#","e":false,"i":"","n":"WeakReference","t":"WeakReference","d":"scala.ref","k":"object","x":"An extractor for weak reference values"},
{"l":"api/scala/ref/WeakReference$.html#apply-fffffd8c","e":false,"i":"","n":"apply","t":"apply[T <: AnyRef](value: T): WeakReference[T]","d":"scala.ref.WeakReference","k":"def","x":"Creates a weak reference pointing to value"},
{"l":"api/scala/ref/WeakReference$.html#unapply-fffffa3c","e":false,"i":"","n":"unapply","t":"unapply[T <: AnyRef](wr: WeakReference[T]): Option[T]","d":"scala.ref.WeakReference","k":"def","x":"Optionally returns the referenced value, or None if that value no longer exists"},
{"l":"api/scala/reflect.html#","e":false,"i":"","n":"scala.reflect","t":"scala.reflect","d":"","k":"package","x":""},
{"l":"api/scala/reflect.html#ClassManifest-0","e":false,"i":"","n":"ClassManifest","t":"ClassManifest[T] = ClassTag[T]","d":"scala.reflect","k":"type","x":"A ClassManifest[T] is an opaque descriptor for type T.\nIt is used by the compiler to preserve information necessary\nfor instantiating Arrays in those cases where the element type\nis unknown at compile time."},
{"l":"api/scala/reflect.html#ClassManifest-0","e":false,"i":"","n":"ClassManifest","t":"ClassManifest: ClassManifestFactory.type","d":"scala.reflect","k":"val","x":"The object ClassManifest defines factory methods for manifests.\nIt is intended for use by the compiler and should not be used in client code.\n"},
{"l":"api/scala/reflect.html#Typeable-0","e":false,"i":"","n":"Typeable","t":"Typeable[T] = TypeTest[Any, T]","d":"scala.reflect","k":"type","x":""},
{"l":"api/scala/reflect.html#classTag-fffff227","e":false,"i":"","n":"classTag","t":"classTag[T](implicit ctag: ClassTag[T]): ClassTag[T]","d":"scala.reflect","k":"def","x":""},
{"l":"api/scala/reflect.html#ensureAccessible-f25","e":false,"i":"","n":"ensureAccessible","t":"ensureAccessible[T <: AccessibleObject](m: T): T","d":"scala.reflect","k":"def","x":"Make a java reflection object accessible, if it is not already\nand it is possible to do so. If a SecurityException is thrown in the\nattempt, it is caught and discarded.\n"},
{"l":"api/scala/reflect/AnyValManifest.html#","e":false,"i":"","n":"AnyValManifest","t":"AnyValManifest[T <: AnyVal](val toString: String) extends Manifest[T], Equals","d":"scala.reflect","k":"class","x":""},
{"l":"api/scala/reflect/AnyValManifest.html#hashCode-0","e":false,"i":"","n":"hashCode","t":"hashCode: Int","d":"scala.reflect.AnyValManifest","k":"val","x":"Calculates a hash code value for the object."},
{"l":"api/scala/reflect/AnyValManifest.html#toString-0","e":false,"i":"","n":"toString","t":"toString: String","d":"scala.reflect.AnyValManifest","k":"val","x":"Returns a string representation of the object."},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#","e":false,"i":"","n":"ClassManifestDeprecatedApis","t":"ClassManifestDeprecatedApis[T] extends OptManifest[T]","d":"scala.reflect","k":"trait","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#<:<-fffff465","e":false,"i":"","n":"<:<","t":"<:<(that: ClassTag[_]): Boolean","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":"Tests whether the type represented by this manifest is a subtype\nof the type represented by that manifest, subject to the limitations\ndescribed in the header.\n"},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#>:>-fffff465","e":false,"i":"","n":">:>","t":">:>(that: ClassTag[_]): Boolean","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":"Tests whether the type represented by this manifest is a supertype\nof the type represented by that manifest, subject to the limitations\ndescribed in the header.\n"},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#argString-0","e":false,"i":"","n":"argString","t":"argString: String","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#arrayClass-fffff7f1","e":false,"i":"","n":"arrayClass","t":"arrayClass[A](tp: Class[_]): Class[Array[A]]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#arrayManifest-0","e":false,"i":"","n":"arrayManifest","t":"arrayManifest: ClassTag[Array[T]]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#erasure-0","e":false,"i":"","n":"erasure","t":"erasure: Class[_]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#newArray2-ffffff9c","e":false,"i":"","n":"newArray2","t":"newArray2(len: Int): Array[Array[T]]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#newArray3-3fe","e":false,"i":"","n":"newArray3","t":"newArray3(len: Int): Array[Array[Array[T]]]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#newArray4-fffff7e0","e":false,"i":"","n":"newArray4","t":"newArray4(len: Int): Array[Array[Array[Array[T]]]]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#newArray5-b42","e":false,"i":"","n":"newArray5","t":"newArray5(len: Int): Array[Array[Array[Array[Array[T]]]]]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#newArrayBuilder-d92","e":false,"i":"","n":"newArrayBuilder","t":"newArrayBuilder(): ArrayBuilder[T]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#newWrappedArray-ffffff8f","e":false,"i":"","n":"newWrappedArray","t":"newWrappedArray(len: Int): ArraySeq[T]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestDeprecatedApis.html#typeArguments-0","e":false,"i":"","n":"typeArguments","t":"typeArguments: List[OptManifest[_]]","d":"scala.reflect.ClassManifestDeprecatedApis","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#","e":false,"i":"","n":"ClassManifestFactory","t":"ClassManifestFactory","d":"scala.reflect","k":"object","x":"ClassManifestFactory defines factory methods for manifests.\nIt is intended for use by the compiler and should not be used in client code."},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Any-0","e":false,"i":"","n":"Any","t":"Any: Manifest[Any]","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#AnyVal-0","e":false,"i":"","n":"AnyVal","t":"AnyVal: Manifest[AnyVal]","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Boolean-0","e":false,"i":"","n":"Boolean","t":"Boolean: BooleanManifest","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Byte-0","e":false,"i":"","n":"Byte","t":"Byte: ByteManifest","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Char-0","e":false,"i":"","n":"Char","t":"Char: CharManifest","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Double-0","e":false,"i":"","n":"Double","t":"Double: DoubleManifest","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Float-0","e":false,"i":"","n":"Float","t":"Float: FloatManifest","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Int-0","e":false,"i":"","n":"Int","t":"Int: IntManifest","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Long-0","e":false,"i":"","n":"Long","t":"Long: LongManifest","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Nothing-0","e":false,"i":"","n":"Nothing","t":"Nothing: Manifest[Nothing]","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Null-0","e":false,"i":"","n":"Null","t":"Null: Manifest[Null]","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Object-0","e":false,"i":"","n":"Object","t":"Object: Manifest[Object]","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Short-0","e":false,"i":"","n":"Short","t":"Short: ShortManifest","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#Unit-0","e":false,"i":"","n":"Unit","t":"Unit: UnitManifest","d":"scala.reflect.ClassManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#abstractType-fffff56d","e":false,"i":"","n":"abstractType","t":"abstractType[T](prefix: OptManifest[_], name: String, clazz: Class[_], args: OptManifest[_]*): ClassTag[T]","d":"scala.reflect.ClassManifestFactory","k":"def","x":"ClassManifest for the abstract type prefix # name. upperBound is not\nstrictly necessary as it could be obtained by reflection. It was\nadded so that erasure can be calculated without reflection."},
{"l":"api/scala/reflect/ClassManifestFactory$.html#abstractType-4be","e":false,"i":"","n":"abstractType","t":"abstractType[T](prefix: OptManifest[_], name: String, upperbound: ClassTag[_], args: OptManifest[_]*): ClassTag[T]","d":"scala.reflect.ClassManifestFactory","k":"def","x":"ClassManifest for the abstract type prefix # name. upperBound is not\nstrictly necessary as it could be obtained by reflection. It was\nadded so that erasure can be calculated without reflection.\ntodo: remove after next bootstrap\n"},
{"l":"api/scala/reflect/ClassManifestFactory$.html#arrayType-fffffd53","e":false,"i":"","n":"arrayType","t":"arrayType[T](arg: OptManifest[_]): ClassTag[Array[T]]","d":"scala.reflect.ClassManifestFactory","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#classType-eee","e":false,"i":"","n":"classType","t":"classType[T](clazz: Class[_]): ClassTag[T]","d":"scala.reflect.ClassManifestFactory","k":"def","x":"ClassManifest for the class type clazz, where clazz is\na top-level or static class."},
{"l":"api/scala/reflect/ClassManifestFactory$.html#classType-a5c","e":false,"i":"","n":"classType","t":"classType[T](clazz: Class[_], arg1: OptManifest[_], args: OptManifest[_]*): ClassTag[T]","d":"scala.reflect.ClassManifestFactory","k":"def","x":"ClassManifest for the class type clazz[args], where clazz is\na top-level or static class and args are its type arguments"},
{"l":"api/scala/reflect/ClassManifestFactory$.html#classType-fffff9f2","e":false,"i":"","n":"classType","t":"classType[T](prefix: OptManifest[_], clazz: Class[_], args: OptManifest[_]*): ClassTag[T]","d":"scala.reflect.ClassManifestFactory","k":"def","x":"ClassManifest for the class type clazz[args], where clazz is\na class with non-package prefix type prefix and type arguments args.\n"},
{"l":"api/scala/reflect/ClassManifestFactory$.html#fromClass-eee","e":false,"i":"","n":"fromClass","t":"fromClass[T](clazz: Class[T]): ClassTag[T]","d":"scala.reflect.ClassManifestFactory","k":"def","x":""},
{"l":"api/scala/reflect/ClassManifestFactory$.html#singleType-fffffecc","e":false,"i":"","n":"singleType","t":"singleType[T <: AnyRef](value: AnyRef): Manifest[T]","d":"scala.reflect.ClassManifestFactory","k":"def","x":""},
{"l":"api/scala/reflect/ClassTag.html#","e":false,"i":"","n":"ClassTag","t":"ClassTag[T] extends ClassManifestDeprecatedApis[T], Equals, Serializable","d":"scala.reflect","k":"trait","x":"A ClassTag[T] stores the erased class of a given type T, accessible via the runtimeClass\nfield. This is particularly useful for instantiating Arrays whose element types are unknown\nat compile time."},
{"l":"api/scala/reflect/ClassTag.html#newArray-aba","e":false,"i":"","n":"newArray","t":"newArray(len: Int): Array[T]","d":"scala.reflect.ClassTag","k":"def","x":"Produces a new array with element type T and length len"},
{"l":"api/scala/reflect/ClassTag.html#runtimeClass-0","e":false,"i":"","n":"runtimeClass","t":"runtimeClass: Class[_]","d":"scala.reflect.ClassTag","k":"def","x":"A class representing the type U to which T would be erased.\nNote that there is no subtyping relationship between T and U.\n"},
{"l":"api/scala/reflect/ClassTag.html#unapply-fffffb50","e":false,"i":"","n":"unapply","t":"unapply(x: Any): Option[T]","d":"scala.reflect.ClassTag","k":"def","x":"A ClassTag[T] can serve as an extractor that matches only objects of type T."},
{"l":"api/scala/reflect/ClassTag.html#wrap-0","e":false,"i":"","n":"wrap","t":"wrap: ClassTag[Array[T]]","d":"scala.reflect.ClassTag","k":"def","x":"Produces a ClassTag that knows how to instantiate an Array[Array[T]]"},
{"l":"api/scala/reflect/ClassTag$.html#","e":false,"i":"","n":"ClassTag","t":"ClassTag","d":"scala.reflect","k":"object","x":"Class tags corresponding to primitive types and constructor/extractor for ClassTags.\n"},
{"l":"api/scala/reflect/ClassTag$.html#Any-0","e":false,"i":"","n":"Any","t":"Any: ClassTag[Any]","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#AnyRef-0","e":false,"i":"","n":"AnyRef","t":"AnyRef: ClassTag[AnyRef]","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#AnyVal-0","e":false,"i":"","n":"AnyVal","t":"AnyVal: ClassTag[AnyVal]","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Boolean-0","e":false,"i":"","n":"Boolean","t":"Boolean: BooleanManifest","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Byte-0","e":false,"i":"","n":"Byte","t":"Byte: ByteManifest","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Char-0","e":false,"i":"","n":"Char","t":"Char: CharManifest","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Double-0","e":false,"i":"","n":"Double","t":"Double: DoubleManifest","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Float-0","e":false,"i":"","n":"Float","t":"Float: FloatManifest","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Int-0","e":false,"i":"","n":"Int","t":"Int: IntManifest","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Long-0","e":false,"i":"","n":"Long","t":"Long: LongManifest","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Nothing-0","e":false,"i":"","n":"Nothing","t":"Nothing: ClassTag[Nothing]","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Null-0","e":false,"i":"","n":"Null","t":"Null: ClassTag[Null]","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Object-0","e":false,"i":"","n":"Object","t":"Object: ClassTag[Object]","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Short-0","e":false,"i":"","n":"Short","t":"Short: ShortManifest","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#Unit-0","e":false,"i":"","n":"Unit","t":"Unit: UnitManifest","d":"scala.reflect.ClassTag","k":"val","x":""},
{"l":"api/scala/reflect/ClassTag$.html#apply-eee","e":false,"i":"","n":"apply","t":"apply[T](runtimeClass1: Class[_]): ClassTag[T]","d":"scala.reflect.ClassTag","k":"def","x":""},
{"l":"api/scala/reflect/ClassTag$.html#unapply-fffff889","e":false,"i":"","n":"unapply","t":"unapply[T](ctag: ClassTag[T]): Option[Class[_]]","d":"scala.reflect.ClassTag","k":"def","x":""},
{"l":"api/scala/reflect/Enum.html#","e":false,"i":"","n":"Enum","t":"Enum extends Product, Serializable","d":"scala.reflect","k":"trait","x":""},
{"l":"api/scala/reflect/Enum.html#ordinal-0","e":false,"i":"","n":"ordinal","t":"ordinal: Int","d":"scala.reflect.Enum","k":"def","x":""},
{"l":"api/scala/reflect/Manifest.html#","e":false,"i":"","n":"Manifest","t":"Manifest[T] extends ClassTag[T], Equals","d":"scala.reflect","k":"trait","x":"A Manifest[T] is an opaque descriptor for type T.  Its supported use\nis to give access to the erasure of the type as a Class instance, as\nis necessary for the creation of native Arrays if the class is not\nknown at compile time."},
{"l":"api/scala/reflect/Manifest$.html#","e":false,"i":"","n":"Manifest","t":"Manifest","d":"scala.reflect","k":"object","x":"The object Manifest defines factory methods for manifests.\nIt is intended for use by the compiler and should not be used in client code.\n"},
{"l":"api/scala/reflect/Manifest$.html#Any-0","e":false,"i":"","n":"Any","t":"Any: Manifest[Any]","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#AnyRef-0","e":false,"i":"","n":"AnyRef","t":"AnyRef: Manifest[AnyRef]","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#AnyVal-0","e":false,"i":"","n":"AnyVal","t":"AnyVal: Manifest[AnyVal]","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Boolean-0","e":false,"i":"","n":"Boolean","t":"Boolean: BooleanManifest","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Byte-0","e":false,"i":"","n":"Byte","t":"Byte: ByteManifest","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Char-0","e":false,"i":"","n":"Char","t":"Char: CharManifest","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Double-0","e":false,"i":"","n":"Double","t":"Double: DoubleManifest","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Float-0","e":false,"i":"","n":"Float","t":"Float: FloatManifest","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Int-0","e":false,"i":"","n":"Int","t":"Int: IntManifest","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Long-0","e":false,"i":"","n":"Long","t":"Long: LongManifest","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Nothing-0","e":false,"i":"","n":"Nothing","t":"Nothing: Manifest[Nothing]","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Null-0","e":false,"i":"","n":"Null","t":"Null: Manifest[Null]","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Object-0","e":false,"i":"","n":"Object","t":"Object: Manifest[Object]","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Short-0","e":false,"i":"","n":"Short","t":"Short: ShortManifest","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#Unit-0","e":false,"i":"","n":"Unit","t":"Unit: UnitManifest","d":"scala.reflect.Manifest","k":"val","x":""},
{"l":"api/scala/reflect/Manifest$.html#abstractType-fffff7f9","e":false,"i":"","n":"abstractType","t":"abstractType[T](prefix: Manifest[_], name: String, upperBound: Class[_], args: Manifest[_]*): Manifest[T]","d":"scala.reflect.Manifest","k":"def","x":"Manifest for the abstract type prefix # name. upperBound is not\nstrictly necessary as it could be obtained by reflection. It was\nadded so that erasure can be calculated without reflection."},
{"l":"api/scala/reflect/Manifest$.html#arrayType-fffff8c1","e":false,"i":"","n":"arrayType","t":"arrayType[T](arg: Manifest[_]): Manifest[Array[T]]","d":"scala.reflect.Manifest","k":"def","x":""},
{"l":"api/scala/reflect/Manifest$.html#classType-21b","e":false,"i":"","n":"classType","t":"classType[T](clazz: Class[_]): Manifest[T]","d":"scala.reflect.Manifest","k":"def","x":"Manifest for the class type clazz[args], where clazz is\na top-level or static class."},
{"l":"api/scala/reflect/Manifest$.html#classType-48e","e":false,"i":"","n":"classType","t":"classType[T](clazz: Class[T], arg1: Manifest[_], args: Manifest[_]*): Manifest[T]","d":"scala.reflect.Manifest","k":"def","x":"Manifest for the class type clazz, where clazz is\na top-level or static class and args are its type arguments."},
{"l":"api/scala/reflect/Manifest$.html#classType-fffffa7e","e":false,"i":"","n":"classType","t":"classType[T](prefix: Manifest[_], clazz: Class[_], args: Manifest[_]*): Manifest[T]","d":"scala.reflect.Manifest","k":"def","x":"Manifest for the class type clazz[args], where clazz is\na class with non-package prefix type prefix and type arguments args.\n"},
{"l":"api/scala/reflect/Manifest$.html#intersectionType-3a4","e":false,"i":"","n":"intersectionType","t":"intersectionType[T](parents: Manifest[_]*): Manifest[T]","d":"scala.reflect.Manifest","k":"def","x":"Manifest for the intersection type parents_0 with ... with parents_n."},
{"l":"api/scala/reflect/Manifest$.html#singleType-fffffecc","e":false,"i":"","n":"singleType","t":"singleType[T <: AnyRef](value: AnyRef): Manifest[T]","d":"scala.reflect.Manifest","k":"def","x":"Manifest for the singleton type value.type."},
{"l":"api/scala/reflect/Manifest$.html#valueManifests-0","e":false,"i":"","n":"valueManifests","t":"valueManifests: List[AnyValManifest[_]]","d":"scala.reflect.Manifest","k":"def","x":""},
{"l":"api/scala/reflect/Manifest$.html#wildcardType-409","e":false,"i":"","n":"wildcardType","t":"wildcardType[T](lowerBound: Manifest[_], upperBound: Manifest[_]): Manifest[T]","d":"scala.reflect.Manifest","k":"def","x":"Manifest for the unknown type _ >: L <: U in an existential."},
{"l":"api/scala/reflect/ManifestFactory$.html#","e":false,"i":"","n":"ManifestFactory","t":"ManifestFactory","d":"scala.reflect","k":"object","x":"ManifestFactory defines factory methods for manifests.\nIt is intended for use by the compiler and should not be used in client code."},
{"l":"api/scala/reflect/ManifestFactory$.html#Any-0","e":false,"i":"","n":"Any","t":"Any: Manifest[Any]","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#AnyRef-0","e":false,"i":"","n":"AnyRef","t":"AnyRef: Manifest[AnyRef]","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#AnyVal-0","e":false,"i":"","n":"AnyVal","t":"AnyVal: Manifest[AnyVal]","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Boolean-0","e":false,"i":"","n":"Boolean","t":"Boolean: BooleanManifest","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Byte-0","e":false,"i":"","n":"Byte","t":"Byte: ByteManifest","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Char-0","e":false,"i":"","n":"Char","t":"Char: CharManifest","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Double-0","e":false,"i":"","n":"Double","t":"Double: DoubleManifest","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Float-0","e":false,"i":"","n":"Float","t":"Float: FloatManifest","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Int-0","e":false,"i":"","n":"Int","t":"Int: IntManifest","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Long-0","e":false,"i":"","n":"Long","t":"Long: LongManifest","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Nothing-0","e":false,"i":"","n":"Nothing","t":"Nothing: Manifest[Nothing]","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Null-0","e":false,"i":"","n":"Null","t":"Null: Manifest[Null]","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Object-0","e":false,"i":"","n":"Object","t":"Object: Manifest[Object]","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Short-0","e":false,"i":"","n":"Short","t":"Short: ShortManifest","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#Unit-0","e":false,"i":"","n":"Unit","t":"Unit: UnitManifest","d":"scala.reflect.ManifestFactory","k":"val","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#abstractType-fffff7f9","e":false,"i":"","n":"abstractType","t":"abstractType[T](prefix: Manifest[_], name: String, upperBound: Class[_], args: Manifest[_]*): Manifest[T]","d":"scala.reflect.ManifestFactory","k":"def","x":"Manifest for the abstract type prefix # name. upperBound is not\nstrictly necessary as it could be obtained by reflection. It was\nadded so that erasure can be calculated without reflection."},
{"l":"api/scala/reflect/ManifestFactory$.html#arrayType-fffff8c1","e":false,"i":"","n":"arrayType","t":"arrayType[T](arg: Manifest[_]): Manifest[Array[T]]","d":"scala.reflect.ManifestFactory","k":"def","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#classType-21b","e":false,"i":"","n":"classType","t":"classType[T](clazz: Class[_]): Manifest[T]","d":"scala.reflect.ManifestFactory","k":"def","x":"Manifest for the class type clazz[args], where clazz is\na top-level or static class."},
{"l":"api/scala/reflect/ManifestFactory$.html#classType-48e","e":false,"i":"","n":"classType","t":"classType[T](clazz: Class[T], arg1: Manifest[_], args: Manifest[_]*): Manifest[T]","d":"scala.reflect.ManifestFactory","k":"def","x":"Manifest for the class type clazz, where clazz is\na top-level or static class and args are its type arguments."},
{"l":"api/scala/reflect/ManifestFactory$.html#classType-fffffa7e","e":false,"i":"","n":"classType","t":"classType[T](prefix: Manifest[_], clazz: Class[_], args: Manifest[_]*): Manifest[T]","d":"scala.reflect.ManifestFactory","k":"def","x":"Manifest for the class type clazz[args], where clazz is\na class with non-package prefix type prefix and type arguments args.\n"},
{"l":"api/scala/reflect/ManifestFactory$.html#intersectionType-3a4","e":false,"i":"","n":"intersectionType","t":"intersectionType[T](parents: Manifest[_]*): Manifest[T]","d":"scala.reflect.ManifestFactory","k":"def","x":"Manifest for the intersection type parents_0 with ... with parents_n."},
{"l":"api/scala/reflect/ManifestFactory$.html#singleType-fffffecc","e":false,"i":"","n":"singleType","t":"singleType[T <: AnyRef](value: AnyRef): Manifest[T]","d":"scala.reflect.ManifestFactory","k":"def","x":"Manifest for the singleton type value.type."},
{"l":"api/scala/reflect/ManifestFactory$.html#valueManifests-0","e":false,"i":"","n":"valueManifests","t":"valueManifests: List[AnyValManifest[_]]","d":"scala.reflect.ManifestFactory","k":"def","x":""},
{"l":"api/scala/reflect/ManifestFactory$.html#wildcardType-409","e":false,"i":"","n":"wildcardType","t":"wildcardType[T](lowerBound: Manifest[_], upperBound: Manifest[_]): Manifest[T]","d":"scala.reflect.ManifestFactory","k":"def","x":"Manifest for the unknown type _ >: L <: U in an existential.\n"},
{"l":"api/scala/reflect/NameTransformer$.html#","e":false,"i":"","n":"NameTransformer","t":"NameTransformer","d":"scala.reflect","k":"object","x":"Provides functions to encode and decode Scala symbolic names.\nAlso provides some constants.\n"},
{"l":"api/scala/reflect/NameTransformer$.html#LAZY_LOCAL_SUFFIX_STRING-0","e":false,"i":"","n":"LAZY_LOCAL_SUFFIX_STRING","t":"LAZY_LOCAL_SUFFIX_STRING: \"$lzy\"","d":"scala.reflect.NameTransformer","k":"val","x":""},
{"l":"api/scala/reflect/NameTransformer$.html#LOCAL_SUFFIX_STRING-0","e":false,"i":"","n":"LOCAL_SUFFIX_STRING","t":"LOCAL_SUFFIX_STRING: \" \"","d":"scala.reflect.NameTransformer","k":"val","x":""},
{"l":"api/scala/reflect/NameTransformer$.html#MODULE_INSTANCE_NAME-0","e":false,"i":"","n":"MODULE_INSTANCE_NAME","t":"MODULE_INSTANCE_NAME: \"MODULE$\"","d":"scala.reflect.NameTransformer","k":"val","x":""},
{"l":"api/scala/reflect/NameTransformer$.html#MODULE_SUFFIX_STRING-0","e":false,"i":"","n":"MODULE_SUFFIX_STRING","t":"MODULE_SUFFIX_STRING: \"$\"","d":"scala.reflect.NameTransformer","k":"val","x":""},
{"l":"api/scala/reflect/NameTransformer$.html#MODULE_VAR_SUFFIX_STRING-0","e":false,"i":"","n":"MODULE_VAR_SUFFIX_STRING","t":"MODULE_VAR_SUFFIX_STRING: \"$module\"","d":"scala.reflect.NameTransformer","k":"val","x":""},
{"l":"api/scala/reflect/NameTransformer$.html#NAME_JOIN_STRING-0","e":false,"i":"","n":"NAME_JOIN_STRING","t":"NAME_JOIN_STRING: \"$\"","d":"scala.reflect.NameTransformer","k":"val","x":""},
{"l":"api/scala/reflect/NameTransformer$.html#SETTER_SUFFIX_STRING-0","e":false,"i":"","n":"SETTER_SUFFIX_STRING","t":"SETTER_SUFFIX_STRING: \"_$eq\"","d":"scala.reflect.NameTransformer","k":"val","x":""},
{"l":"api/scala/reflect/NameTransformer$.html#TRAIT_SETTER_SEPARATOR_STRING-0","e":false,"i":"","n":"TRAIT_SETTER_SEPARATOR_STRING","t":"TRAIT_SETTER_SEPARATOR_STRING: \"$_setter_$\"","d":"scala.reflect.NameTransformer","k":"val","x":""},
{"l":"api/scala/reflect/NameTransformer$.html#decode-fffff2ca","e":false,"i":"","n":"decode","t":"decode(name0: String): String","d":"scala.reflect.NameTransformer","k":"def","x":"Replace $opname by corresponding operator symbol.\n"},
{"l":"api/scala/reflect/NameTransformer$.html#encode-fffff2ca","e":false,"i":"","n":"encode","t":"encode(name: String): String","d":"scala.reflect.NameTransformer","k":"def","x":"Replace operator symbols by corresponding $opname.\n"},
{"l":"api/scala/reflect/NoManifest$.html#","e":false,"i":"","n":"NoManifest","t":"NoManifest extends OptManifest[Nothing], Serializable","d":"scala.reflect","k":"object","x":"One of the branches of an scala.reflect.OptManifest.\n"},
{"l":"api/scala/reflect/OptManifest.html#","e":false,"i":"","n":"OptManifest","t":"OptManifest[+T] extends Serializable","d":"scala.reflect","k":"trait","x":"A OptManifest[T] is an optional scala.reflect.Manifest."},
{"l":"api/scala/reflect/Selectable.html#","e":false,"i":"","n":"Selectable","t":"Selectable extends Selectable","d":"scala.reflect","k":"trait","x":""},
{"l":"api/scala/reflect/Selectable.html#applyDynamic-38e","e":false,"i":"","n":"applyDynamic","t":"applyDynamic(name: String, paramTypes: Class[_]*)(args: Any*): Any","d":"scala.reflect.Selectable","k":"def","x":""},
{"l":"api/scala/reflect/Selectable.html#selectDynamic-fffff5f8","e":false,"i":"","n":"selectDynamic","t":"selectDynamic(name: String): Any","d":"scala.reflect.Selectable","k":"def","x":""},
{"l":"api/scala/reflect/Selectable$.html#","e":false,"i":"","n":"Selectable","t":"Selectable","d":"scala.reflect","k":"object","x":""},
{"l":"api/scala/reflect/Selectable$.html#reflectiveSelectable-e82","e":false,"i":"","n":"reflectiveSelectable","t":"reflectiveSelectable(x: Any): Selectable","d":"scala.reflect.Selectable","k":"def","x":""},
{"l":"api/scala/reflect/TypeTest.html#","e":false,"i":"","n":"TypeTest","t":"TypeTest[-S, T] extends Serializable","d":"scala.reflect","k":"trait","x":""},
{"l":"api/scala/reflect/TypeTest.html#unapply-fffffb50","e":false,"i":"","n":"unapply","t":"unapply(x: S): Option[x.type & T]","d":"scala.reflect.TypeTest","k":"def","x":""},
{"l":"api/scala/reflect/TypeTest$.html#","e":false,"i":"","n":"TypeTest","t":"TypeTest","d":"scala.reflect","k":"object","x":""},
{"l":"api/scala/reflect/TypeTest$.html#identity-436","e":false,"i":"","n":"identity","t":"identity[T]: TypeTest[T, T]","d":"scala.reflect.TypeTest","k":"def","x":""},
{"l":"api/scala/runtime.html#","e":false,"i":"","n":"scala.runtime","t":"scala.runtime","d":"","k":"package","x":""},
{"l":"api/scala/runtime.html#$throws-0","e":false,"i":"","n":"$throws","t":"$throws[R, +E <: Exception] = CanThrow[E] ?=> R","d":"scala.runtime","k":"type","x":""},
{"l":"api/scala/runtime/coverage.html#","e":false,"i":"","n":"scala.runtime.coverage","t":"scala.runtime.coverage","d":"","k":"package","x":""},
{"l":"api/scala/runtime/coverage/Invoker$.html#","e":false,"i":"","n":"Invoker","t":"Invoker","d":"scala.runtime.coverage","k":"object","x":""},
{"l":"api/scala/runtime/coverage/Invoker$.html#invoked-1d8","e":false,"i":"","n":"invoked","t":"invoked(id: Int, dataDir: String): Unit","d":"scala.runtime.coverage.Invoker","k":"def","x":""},
{"l":"api/scala/runtime/coverage/Invoker$.html#measurementFile-fffffc7d","e":false,"i":"","n":"measurementFile","t":"measurementFile(dataDir: String): File","d":"scala.runtime.coverage.Invoker","k":"def","x":""},
{"l":"api/scala/runtime/java8.html#","e":false,"i":"","n":"scala.runtime.java8","t":"scala.runtime.java8","d":"","k":"package","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcB$sp.html#","e":false,"i":"","n":"JFunction0$mcB$sp","t":"JFunction0$mcB$sp extends () => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcB$sp.html#apply$mcB$sp-d0","e":false,"i":"","n":"apply$mcB$sp","t":"apply$mcB$sp(): Byte","d":"scala.runtime.java8.JFunction0$mcB$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcC$sp.html#","e":false,"i":"","n":"JFunction0$mcC$sp","t":"JFunction0$mcC$sp extends () => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcC$sp.html#apply$mcC$sp-31e","e":false,"i":"","n":"apply$mcC$sp","t":"apply$mcC$sp(): Char","d":"scala.runtime.java8.JFunction0$mcC$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcD$sp.html#","e":false,"i":"","n":"JFunction0$mcD$sp","t":"JFunction0$mcD$sp extends () => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcD$sp.html#apply$mcD$sp-999","e":false,"i":"","n":"apply$mcD$sp","t":"apply$mcD$sp(): Double","d":"scala.runtime.java8.JFunction0$mcD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcF$sp.html#","e":false,"i":"","n":"JFunction0$mcF$sp","t":"JFunction0$mcF$sp extends () => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcF$sp.html#apply$mcF$sp-fffffb94","e":false,"i":"","n":"apply$mcF$sp","t":"apply$mcF$sp(): Float","d":"scala.runtime.java8.JFunction0$mcF$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcI$sp.html#","e":false,"i":"","n":"JFunction0$mcI$sp","t":"JFunction0$mcI$sp extends () => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcI$sp.html#apply$mcI$sp-ffffff27","e":false,"i":"","n":"apply$mcI$sp","t":"apply$mcI$sp(): Int","d":"scala.runtime.java8.JFunction0$mcI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcJ$sp.html#","e":false,"i":"","n":"JFunction0$mcJ$sp","t":"JFunction0$mcJ$sp extends () => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcJ$sp.html#apply$mcJ$sp-644","e":false,"i":"","n":"apply$mcJ$sp","t":"apply$mcJ$sp(): Long","d":"scala.runtime.java8.JFunction0$mcJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcS$sp.html#","e":false,"i":"","n":"JFunction0$mcS$sp","t":"JFunction0$mcS$sp extends () => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcS$sp.html#apply$mcS$sp-fffffdb4","e":false,"i":"","n":"apply$mcS$sp","t":"apply$mcS$sp(): Short","d":"scala.runtime.java8.JFunction0$mcS$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcV$sp.html#","e":false,"i":"","n":"JFunction0$mcV$sp","t":"JFunction0$mcV$sp extends () => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcV$sp.html#apply$mcV$sp-94c","e":false,"i":"","n":"apply$mcV$sp","t":"apply$mcV$sp(): Unit","d":"scala.runtime.java8.JFunction0$mcV$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcZ$sp.html#","e":false,"i":"","n":"JFunction0$mcZ$sp","t":"JFunction0$mcZ$sp extends () => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction0$mcZ$sp.html#apply$mcZ$sp-fffff760","e":false,"i":"","n":"apply$mcZ$sp","t":"apply$mcZ$sp(): Boolean","d":"scala.runtime.java8.JFunction0$mcZ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcDD$sp.html#","e":false,"i":"","n":"JFunction1$mcDD$sp","t":"JFunction1$mcDD$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcDD$sp.html#apply$mcDD$sp-5b2","e":false,"i":"","n":"apply$mcDD$sp","t":"apply$mcDD$sp(v1: Double): Double","d":"scala.runtime.java8.JFunction1$mcDD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcDF$sp.html#","e":false,"i":"","n":"JFunction1$mcDF$sp","t":"JFunction1$mcDF$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcDF$sp.html#apply$mcDF$sp-72d","e":false,"i":"","n":"apply$mcDF$sp","t":"apply$mcDF$sp(v1: Float): Double","d":"scala.runtime.java8.JFunction1$mcDF$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcDI$sp.html#","e":false,"i":"","n":"JFunction1$mcDI$sp","t":"JFunction1$mcDI$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcDI$sp.html#apply$mcDI$sp-640","e":false,"i":"","n":"apply$mcDI$sp","t":"apply$mcDI$sp(v1: Int): Double","d":"scala.runtime.java8.JFunction1$mcDI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcDJ$sp.html#","e":false,"i":"","n":"JFunction1$mcDJ$sp","t":"JFunction1$mcDJ$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcDJ$sp.html#apply$mcDJ$sp-9dd","e":false,"i":"","n":"apply$mcDJ$sp","t":"apply$mcDJ$sp(v1: Long): Double","d":"scala.runtime.java8.JFunction1$mcDJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcFD$sp.html#","e":false,"i":"","n":"JFunction1$mcFD$sp","t":"JFunction1$mcFD$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcFD$sp.html#apply$mcFD$sp-85b","e":false,"i":"","n":"apply$mcFD$sp","t":"apply$mcFD$sp(v1: Double): Float","d":"scala.runtime.java8.JFunction1$mcFD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcFF$sp.html#","e":false,"i":"","n":"JFunction1$mcFF$sp","t":"JFunction1$mcFF$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcFF$sp.html#apply$mcFF$sp-fffffb80","e":false,"i":"","n":"apply$mcFF$sp","t":"apply$mcFF$sp(v1: Float): Float","d":"scala.runtime.java8.JFunction1$mcFF$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcFI$sp.html#","e":false,"i":"","n":"JFunction1$mcFI$sp","t":"JFunction1$mcFI$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcFI$sp.html#apply$mcFI$sp-fffffe0d","e":false,"i":"","n":"apply$mcFI$sp","t":"apply$mcFI$sp(v1: Int): Float","d":"scala.runtime.java8.JFunction1$mcFI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcFJ$sp.html#","e":false,"i":"","n":"JFunction1$mcFJ$sp","t":"JFunction1$mcFJ$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcFJ$sp.html#apply$mcFJ$sp-2d0","e":false,"i":"","n":"apply$mcFJ$sp","t":"apply$mcFJ$sp(v1: Long): Float","d":"scala.runtime.java8.JFunction1$mcFJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcID$sp.html#","e":false,"i":"","n":"JFunction1$mcID$sp","t":"JFunction1$mcID$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcID$sp.html#apply$mcID$sp-fffff1ae","e":false,"i":"","n":"apply$mcID$sp","t":"apply$mcID$sp(v1: Double): Int","d":"scala.runtime.java8.JFunction1$mcID$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcIF$sp.html#","e":false,"i":"","n":"JFunction1$mcIF$sp","t":"JFunction1$mcIF$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcIF$sp.html#apply$mcIF$sp-a13","e":false,"i":"","n":"apply$mcIF$sp","t":"apply$mcIF$sp(v1: Float): Int","d":"scala.runtime.java8.JFunction1$mcIF$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcII$sp.html#","e":false,"i":"","n":"JFunction1$mcII$sp","t":"JFunction1$mcII$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcII$sp.html#apply$mcII$sp-fffffbe0","e":false,"i":"","n":"apply$mcII$sp","t":"apply$mcII$sp(v1: Int): Int","d":"scala.runtime.java8.JFunction1$mcII$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcIJ$sp.html#","e":false,"i":"","n":"JFunction1$mcIJ$sp","t":"JFunction1$mcIJ$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcIJ$sp.html#apply$mcIJ$sp-fffff563","e":false,"i":"","n":"apply$mcIJ$sp","t":"apply$mcIJ$sp(v1: Long): Int","d":"scala.runtime.java8.JFunction1$mcIJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcJD$sp.html#","e":false,"i":"","n":"JFunction1$mcJD$sp","t":"JFunction1$mcJD$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcJD$sp.html#apply$mcJD$sp-fffff49d","e":false,"i":"","n":"apply$mcJD$sp","t":"apply$mcJD$sp(v1: Double): Long","d":"scala.runtime.java8.JFunction1$mcJD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcJF$sp.html#","e":false,"i":"","n":"JFunction1$mcJF$sp","t":"JFunction1$mcJF$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcJF$sp.html#apply$mcJF$sp-8d8","e":false,"i":"","n":"apply$mcJF$sp","t":"apply$mcJF$sp(v1: Float): Long","d":"scala.runtime.java8.JFunction1$mcJF$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcJI$sp.html#","e":false,"i":"","n":"JFunction1$mcJI$sp","t":"JFunction1$mcJI$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcJI$sp.html#apply$mcJI$sp-fffff0ab","e":false,"i":"","n":"apply$mcJI$sp","t":"apply$mcJI$sp(v1: Int): Long","d":"scala.runtime.java8.JFunction1$mcJI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcJJ$sp.html#","e":false,"i":"","n":"JFunction1$mcJJ$sp","t":"JFunction1$mcJJ$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcJJ$sp.html#apply$mcJJ$sp-fffff788","e":false,"i":"","n":"apply$mcJJ$sp","t":"apply$mcJJ$sp(v1: Long): Long","d":"scala.runtime.java8.JFunction1$mcJJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcVD$sp.html#","e":false,"i":"","n":"JFunction1$mcVD$sp","t":"JFunction1$mcVD$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcVD$sp.html#apply$mcVD$sp-fffff7a5","e":false,"i":"","n":"apply$mcVD$sp","t":"apply$mcVD$sp(v1: Double): Unit","d":"scala.runtime.java8.JFunction1$mcVD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcVF$sp.html#","e":false,"i":"","n":"JFunction1$mcVF$sp","t":"JFunction1$mcVF$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcVF$sp.html#apply$mcVF$sp-be0","e":false,"i":"","n":"apply$mcVF$sp","t":"apply$mcVF$sp(v1: Float): Unit","d":"scala.runtime.java8.JFunction1$mcVF$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcVI$sp.html#","e":false,"i":"","n":"JFunction1$mcVI$sp","t":"JFunction1$mcVI$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcVI$sp.html#apply$mcVI$sp-fffff3b3","e":false,"i":"","n":"apply$mcVI$sp","t":"apply$mcVI$sp(v1: Int): Unit","d":"scala.runtime.java8.JFunction1$mcVI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcVJ$sp.html#","e":false,"i":"","n":"JFunction1$mcVJ$sp","t":"JFunction1$mcVJ$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcVJ$sp.html#apply$mcVJ$sp-fffffa90","e":false,"i":"","n":"apply$mcVJ$sp","t":"apply$mcVJ$sp(v1: Long): Unit","d":"scala.runtime.java8.JFunction1$mcVJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcZD$sp.html#","e":false,"i":"","n":"JFunction1$mcZD$sp","t":"JFunction1$mcZD$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcZD$sp.html#apply$mcZD$sp-e67","e":false,"i":"","n":"apply$mcZD$sp","t":"apply$mcZD$sp(v1: Double): Boolean","d":"scala.runtime.java8.JFunction1$mcZD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcZF$sp.html#","e":false,"i":"","n":"JFunction1$mcZF$sp","t":"JFunction1$mcZF$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcZF$sp.html#apply$mcZF$sp-fffffc4c","e":false,"i":"","n":"apply$mcZF$sp","t":"apply$mcZF$sp(v1: Float): Boolean","d":"scala.runtime.java8.JFunction1$mcZF$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcZI$sp.html#","e":false,"i":"","n":"JFunction1$mcZI$sp","t":"JFunction1$mcZI$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcZI$sp.html#apply$mcZI$sp-ffffff99","e":false,"i":"","n":"apply$mcZI$sp","t":"apply$mcZI$sp(v1: Int): Boolean","d":"scala.runtime.java8.JFunction1$mcZI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcZJ$sp.html#","e":false,"i":"","n":"JFunction1$mcZJ$sp","t":"JFunction1$mcZJ$sp extends Any => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction1$mcZJ$sp.html#apply$mcZJ$sp-f9c","e":false,"i":"","n":"apply$mcZJ$sp","t":"apply$mcZJ$sp(v1: Long): Boolean","d":"scala.runtime.java8.JFunction1$mcZJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDDD$sp.html#","e":false,"i":"","n":"JFunction2$mcDDD$sp","t":"JFunction2$mcDDD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDDD$sp.html#apply$mcDDD$sp-44b","e":false,"i":"","n":"apply$mcDDD$sp","t":"apply$mcDDD$sp(v1: Double, v2: Double): Double","d":"scala.runtime.java8.JFunction2$mcDDD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDDI$sp.html#","e":false,"i":"","n":"JFunction2$mcDDI$sp","t":"JFunction2$mcDDI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDDI$sp.html#apply$mcDDI$sp-647","e":false,"i":"","n":"apply$mcDDI$sp","t":"apply$mcDDI$sp(v1: Double, v2: Int): Double","d":"scala.runtime.java8.JFunction2$mcDDI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDDJ$sp.html#","e":false,"i":"","n":"JFunction2$mcDDJ$sp","t":"JFunction2$mcDDJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDDJ$sp.html#apply$mcDDJ$sp-ab6","e":false,"i":"","n":"apply$mcDDJ$sp","t":"apply$mcDDJ$sp(v1: Double, v2: Long): Double","d":"scala.runtime.java8.JFunction2$mcDDJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDID$sp.html#","e":false,"i":"","n":"JFunction2$mcDID$sp","t":"JFunction2$mcDID$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDID$sp.html#apply$mcDID$sp-ffffffd9","e":false,"i":"","n":"apply$mcDID$sp","t":"apply$mcDID$sp(v1: Int, v2: Double): Double","d":"scala.runtime.java8.JFunction2$mcDID$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDII$sp.html#","e":false,"i":"","n":"JFunction2$mcDII$sp","t":"JFunction2$mcDII$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDII$sp.html#apply$mcDII$sp-579","e":false,"i":"","n":"apply$mcDII$sp","t":"apply$mcDII$sp(v1: Int, v2: Int): Double","d":"scala.runtime.java8.JFunction2$mcDII$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDIJ$sp.html#","e":false,"i":"","n":"JFunction2$mcDIJ$sp","t":"JFunction2$mcDIJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDIJ$sp.html#apply$mcDIJ$sp-fffff1c4","e":false,"i":"","n":"apply$mcDIJ$sp","t":"apply$mcDIJ$sp(v1: Int, v2: Long): Double","d":"scala.runtime.java8.JFunction2$mcDIJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDJD$sp.html#","e":false,"i":"","n":"JFunction2$mcDJD$sp","t":"JFunction2$mcDJD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDJD$sp.html#apply$mcDJD$sp-ff6","e":false,"i":"","n":"apply$mcDJD$sp","t":"apply$mcDJD$sp(v1: Long, v2: Double): Double","d":"scala.runtime.java8.JFunction2$mcDJD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDJI$sp.html#","e":false,"i":"","n":"JFunction2$mcDJI$sp","t":"JFunction2$mcDJI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDJI$sp.html#apply$mcDJI$sp-fffff27c","e":false,"i":"","n":"apply$mcDJI$sp","t":"apply$mcDJI$sp(v1: Long, v2: Int): Double","d":"scala.runtime.java8.JFunction2$mcDJI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDJJ$sp.html#","e":false,"i":"","n":"JFunction2$mcDJJ$sp","t":"JFunction2$mcDJJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcDJJ$sp.html#apply$mcDJJ$sp-fffff521","e":false,"i":"","n":"apply$mcDJJ$sp","t":"apply$mcDJJ$sp(v1: Long, v2: Long): Double","d":"scala.runtime.java8.JFunction2$mcDJJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFDD$sp.html#","e":false,"i":"","n":"JFunction2$mcFDD$sp","t":"JFunction2$mcFDD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFDD$sp.html#apply$mcFDD$sp-fffff2a2","e":false,"i":"","n":"apply$mcFDD$sp","t":"apply$mcFDD$sp(v1: Double, v2: Double): Float","d":"scala.runtime.java8.JFunction2$mcFDD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFDI$sp.html#","e":false,"i":"","n":"JFunction2$mcFDI$sp","t":"JFunction2$mcFDI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFDI$sp.html#apply$mcFDI$sp-126","e":false,"i":"","n":"apply$mcFDI$sp","t":"apply$mcFDI$sp(v1: Double, v2: Int): Float","d":"scala.runtime.java8.JFunction2$mcFDI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFDJ$sp.html#","e":false,"i":"","n":"JFunction2$mcFDJ$sp","t":"JFunction2$mcFDJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFDJ$sp.html#apply$mcFDJ$sp-fffff2d7","e":false,"i":"","n":"apply$mcFDJ$sp","t":"apply$mcFDJ$sp(v1: Double, v2: Long): Float","d":"scala.runtime.java8.JFunction2$mcFDJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFID$sp.html#","e":false,"i":"","n":"JFunction2$mcFID$sp","t":"JFunction2$mcFID$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFID$sp.html#apply$mcFID$sp-d54","e":false,"i":"","n":"apply$mcFID$sp","t":"apply$mcFID$sp(v1: Int, v2: Double): Float","d":"scala.runtime.java8.JFunction2$mcFID$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFII$sp.html#","e":false,"i":"","n":"JFunction2$mcFII$sp","t":"JFunction2$mcFII$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFII$sp.html#apply$mcFII$sp-3b4","e":false,"i":"","n":"apply$mcFII$sp","t":"apply$mcFII$sp(v1: Int, v2: Int): Float","d":"scala.runtime.java8.JFunction2$mcFII$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFIJ$sp.html#","e":false,"i":"","n":"JFunction2$mcFIJ$sp","t":"JFunction2$mcFIJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFIJ$sp.html#apply$mcFIJ$sp-fffff209","e":false,"i":"","n":"apply$mcFIJ$sp","t":"apply$mcFIJ$sp(v1: Int, v2: Long): Float","d":"scala.runtime.java8.JFunction2$mcFIJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFJD$sp.html#","e":false,"i":"","n":"JFunction2$mcFJD$sp","t":"JFunction2$mcFJD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFJD$sp.html#apply$mcFJD$sp-fffff597","e":false,"i":"","n":"apply$mcFJD$sp","t":"apply$mcFJD$sp(v1: Long, v2: Double): Float","d":"scala.runtime.java8.JFunction2$mcFJD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFJI$sp.html#","e":false,"i":"","n":"JFunction2$mcFJI$sp","t":"JFunction2$mcFJI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFJI$sp.html#apply$mcFJI$sp-fffffa51","e":false,"i":"","n":"apply$mcFJI$sp","t":"apply$mcFJI$sp(v1: Long, v2: Int): Float","d":"scala.runtime.java8.JFunction2$mcFJI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFJJ$sp.html#","e":false,"i":"","n":"JFunction2$mcFJJ$sp","t":"JFunction2$mcFJJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcFJJ$sp.html#apply$mcFJJ$sp-ffffff0c","e":false,"i":"","n":"apply$mcFJJ$sp","t":"apply$mcFJJ$sp(v1: Long, v2: Long): Float","d":"scala.runtime.java8.JFunction2$mcFJJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIDD$sp.html#","e":false,"i":"","n":"JFunction2$mcIDD$sp","t":"JFunction2$mcIDD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIDD$sp.html#apply$mcIDD$sp-1b5","e":false,"i":"","n":"apply$mcIDD$sp","t":"apply$mcIDD$sp(v1: Double, v2: Double): Int","d":"scala.runtime.java8.JFunction2$mcIDD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIDI$sp.html#","e":false,"i":"","n":"JFunction2$mcIDI$sp","t":"JFunction2$mcIDI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIDI$sp.html#apply$mcIDI$sp-139","e":false,"i":"","n":"apply$mcIDI$sp","t":"apply$mcIDI$sp(v1: Double, v2: Int): Int","d":"scala.runtime.java8.JFunction2$mcIDI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIDJ$sp.html#","e":false,"i":"","n":"JFunction2$mcIDJ$sp","t":"JFunction2$mcIDJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIDJ$sp.html#apply$mcIDJ$sp-b2a","e":false,"i":"","n":"apply$mcIDJ$sp","t":"apply$mcIDJ$sp(v1: Double, v2: Long): Int","d":"scala.runtime.java8.JFunction2$mcIDJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIID$sp.html#","e":false,"i":"","n":"JFunction2$mcIID$sp","t":"JFunction2$mcIID$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIID$sp.html#apply$mcIID$sp-fffff0e7","e":false,"i":"","n":"apply$mcIID$sp","t":"apply$mcIID$sp(v1: Int, v2: Double): Int","d":"scala.runtime.java8.JFunction2$mcIID$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIII$sp.html#","e":false,"i":"","n":"JFunction2$mcIII$sp","t":"JFunction2$mcIII$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIII$sp.html#apply$mcIII$sp-f47","e":false,"i":"","n":"apply$mcIII$sp","t":"apply$mcIII$sp(v1: Int, v2: Int): Int","d":"scala.runtime.java8.JFunction2$mcIII$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIIJ$sp.html#","e":false,"i":"","n":"JFunction2$mcIIJ$sp","t":"JFunction2$mcIIJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIIJ$sp.html#apply$mcIIJ$sp-edc","e":false,"i":"","n":"apply$mcIIJ$sp","t":"apply$mcIIJ$sp(v1: Int, v2: Long): Int","d":"scala.runtime.java8.JFunction2$mcIIJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIJD$sp.html#","e":false,"i":"","n":"JFunction2$mcIJD$sp","t":"JFunction2$mcIJD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIJD$sp.html#apply$mcIJD$sp-dea","e":false,"i":"","n":"apply$mcIJD$sp","t":"apply$mcIJD$sp(v1: Long, v2: Double): Int","d":"scala.runtime.java8.JFunction2$mcIJD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIJI$sp.html#","e":false,"i":"","n":"JFunction2$mcIJI$sp","t":"JFunction2$mcIJI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIJI$sp.html#apply$mcIJI$sp-924","e":false,"i":"","n":"apply$mcIJI$sp","t":"apply$mcIJI$sp(v1: Long, v2: Int): Int","d":"scala.runtime.java8.JFunction2$mcIJI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIJJ$sp.html#","e":false,"i":"","n":"JFunction2$mcIJJ$sp","t":"JFunction2$mcIJJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcIJJ$sp.html#apply$mcIJJ$sp-9f","e":false,"i":"","n":"apply$mcIJJ$sp","t":"apply$mcIJJ$sp(v1: Long, v2: Long): Int","d":"scala.runtime.java8.JFunction2$mcIJJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJDD$sp.html#","e":false,"i":"","n":"JFunction2$mcJDD$sp","t":"JFunction2$mcJDD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJDD$sp.html#apply$mcJDD$sp-fffff576","e":false,"i":"","n":"apply$mcJDD$sp","t":"apply$mcJDD$sp(v1: Double, v2: Double): Long","d":"scala.runtime.java8.JFunction2$mcJDD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJDI$sp.html#","e":false,"i":"","n":"JFunction2$mcJDI$sp","t":"JFunction2$mcJDI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJDI$sp.html#apply$mcJDI$sp-672","e":false,"i":"","n":"apply$mcJDI$sp","t":"apply$mcJDI$sp(v1: Double, v2: Int): Long","d":"scala.runtime.java8.JFunction2$mcJDI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJDJ$sp.html#","e":false,"i":"","n":"JFunction2$mcJDJ$sp","t":"JFunction2$mcJDJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJDJ$sp.html#apply$mcJDJ$sp-aa1","e":false,"i":"","n":"apply$mcJDJ$sp","t":"apply$mcJDJ$sp(v1: Double, v2: Long): Long","d":"scala.runtime.java8.JFunction2$mcJDJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJID$sp.html#","e":false,"i":"","n":"JFunction2$mcJID$sp","t":"JFunction2$mcJID$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJID$sp.html#apply$mcJID$sp-c84","e":false,"i":"","n":"apply$mcJID$sp","t":"apply$mcJID$sp(v1: Int, v2: Double): Long","d":"scala.runtime.java8.JFunction2$mcJID$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJII$sp.html#","e":false,"i":"","n":"JFunction2$mcJII$sp","t":"JFunction2$mcJII$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJII$sp.html#apply$mcJII$sp-a24","e":false,"i":"","n":"apply$mcJII$sp","t":"apply$mcJII$sp(v1: Int, v2: Int): Long","d":"scala.runtime.java8.JFunction2$mcJII$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJIJ$sp.html#","e":false,"i":"","n":"JFunction2$mcJIJ$sp","t":"JFunction2$mcJIJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJIJ$sp.html#apply$mcJIJ$sp-d2f","e":false,"i":"","n":"apply$mcJIJ$sp","t":"apply$mcJIJ$sp(v1: Int, v2: Long): Long","d":"scala.runtime.java8.JFunction2$mcJIJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJJD$sp.html#","e":false,"i":"","n":"JFunction2$mcJJD$sp","t":"JFunction2$mcJJD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJJD$sp.html#apply$mcJJD$sp-fe1","e":false,"i":"","n":"apply$mcJJD$sp","t":"apply$mcJJD$sp(v1: Long, v2: Double): Long","d":"scala.runtime.java8.JFunction2$mcJJD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJJI$sp.html#","e":false,"i":"","n":"JFunction2$mcJJI$sp","t":"JFunction2$mcJJI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJJI$sp.html#apply$mcJJI$sp-be7","e":false,"i":"","n":"apply$mcJJI$sp","t":"apply$mcJJI$sp(v1: Long, v2: Int): Long","d":"scala.runtime.java8.JFunction2$mcJJI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJJJ$sp.html#","e":false,"i":"","n":"JFunction2$mcJJJ$sp","t":"JFunction2$mcJJJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcJJJ$sp.html#apply$mcJJJ$sp-fffff3cc","e":false,"i":"","n":"apply$mcJJJ$sp","t":"apply$mcJJJ$sp(v1: Long, v2: Long): Long","d":"scala.runtime.java8.JFunction2$mcJJJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVDD$sp.html#","e":false,"i":"","n":"JFunction2$mcVDD$sp","t":"JFunction2$mcVDD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVDD$sp.html#apply$mcVDD$sp-fffff87e","e":false,"i":"","n":"apply$mcVDD$sp","t":"apply$mcVDD$sp(v1: Double, v2: Double): Unit","d":"scala.runtime.java8.JFunction2$mcVDD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVDI$sp.html#","e":false,"i":"","n":"JFunction2$mcVDI$sp","t":"JFunction2$mcVDI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVDI$sp.html#apply$mcVDI$sp-97a","e":false,"i":"","n":"apply$mcVDI$sp","t":"apply$mcVDI$sp(v1: Double, v2: Int): Unit","d":"scala.runtime.java8.JFunction2$mcVDI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVDJ$sp.html#","e":false,"i":"","n":"JFunction2$mcVDJ$sp","t":"JFunction2$mcVDJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVDJ$sp.html#apply$mcVDJ$sp-da9","e":false,"i":"","n":"apply$mcVDJ$sp","t":"apply$mcVDJ$sp(v1: Double, v2: Long): Unit","d":"scala.runtime.java8.JFunction2$mcVDJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVID$sp.html#","e":false,"i":"","n":"JFunction2$mcVID$sp","t":"JFunction2$mcVID$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVID$sp.html#apply$mcVID$sp-f8c","e":false,"i":"","n":"apply$mcVID$sp","t":"apply$mcVID$sp(v1: Int, v2: Double): Unit","d":"scala.runtime.java8.JFunction2$mcVID$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVII$sp.html#","e":false,"i":"","n":"JFunction2$mcVII$sp","t":"JFunction2$mcVII$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVII$sp.html#apply$mcVII$sp-d2c","e":false,"i":"","n":"apply$mcVII$sp","t":"apply$mcVII$sp(v1: Int, v2: Int): Unit","d":"scala.runtime.java8.JFunction2$mcVII$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVIJ$sp.html#","e":false,"i":"","n":"JFunction2$mcVIJ$sp","t":"JFunction2$mcVIJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVIJ$sp.html#apply$mcVIJ$sp-37","e":false,"i":"","n":"apply$mcVIJ$sp","t":"apply$mcVIJ$sp(v1: Int, v2: Long): Unit","d":"scala.runtime.java8.JFunction2$mcVIJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVJD$sp.html#","e":false,"i":"","n":"JFunction2$mcVJD$sp","t":"JFunction2$mcVJD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVJD$sp.html#apply$mcVJD$sp-2e9","e":false,"i":"","n":"apply$mcVJD$sp","t":"apply$mcVJD$sp(v1: Long, v2: Double): Unit","d":"scala.runtime.java8.JFunction2$mcVJD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVJI$sp.html#","e":false,"i":"","n":"JFunction2$mcVJI$sp","t":"JFunction2$mcVJI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVJI$sp.html#apply$mcVJI$sp-eef","e":false,"i":"","n":"apply$mcVJI$sp","t":"apply$mcVJI$sp(v1: Long, v2: Int): Unit","d":"scala.runtime.java8.JFunction2$mcVJI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVJJ$sp.html#","e":false,"i":"","n":"JFunction2$mcVJJ$sp","t":"JFunction2$mcVJJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcVJJ$sp.html#apply$mcVJJ$sp-fffff6d4","e":false,"i":"","n":"apply$mcVJJ$sp","t":"apply$mcVJJ$sp(v1: Long, v2: Long): Unit","d":"scala.runtime.java8.JFunction2$mcVJJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZDD$sp.html#","e":false,"i":"","n":"JFunction2$mcZDD$sp","t":"JFunction2$mcZDD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZDD$sp.html#apply$mcZDD$sp-fffff2ee","e":false,"i":"","n":"apply$mcZDD$sp","t":"apply$mcZDD$sp(v1: Double, v2: Double): Boolean","d":"scala.runtime.java8.JFunction2$mcZDD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZDI$sp.html#","e":false,"i":"","n":"JFunction2$mcZDI$sp","t":"JFunction2$mcZDI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZDI$sp.html#apply$mcZDI$sp-72","e":false,"i":"","n":"apply$mcZDI$sp","t":"apply$mcZDI$sp(v1: Double, v2: Int): Boolean","d":"scala.runtime.java8.JFunction2$mcZDI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZDJ$sp.html#","e":false,"i":"","n":"JFunction2$mcZDJ$sp","t":"JFunction2$mcZDJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZDJ$sp.html#apply$mcZDJ$sp-fffff9e3","e":false,"i":"","n":"apply$mcZDJ$sp","t":"apply$mcZDJ$sp(v1: Double, v2: Long): Boolean","d":"scala.runtime.java8.JFunction2$mcZDJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZID$sp.html#","e":false,"i":"","n":"JFunction2$mcZID$sp","t":"JFunction2$mcZID$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZID$sp.html#apply$mcZID$sp-920","e":false,"i":"","n":"apply$mcZID$sp","t":"apply$mcZID$sp(v1: Int, v2: Double): Boolean","d":"scala.runtime.java8.JFunction2$mcZID$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZII$sp.html#","e":false,"i":"","n":"JFunction2$mcZII$sp","t":"JFunction2$mcZII$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZII$sp.html#apply$mcZII$sp-780","e":false,"i":"","n":"apply$mcZII$sp","t":"apply$mcZII$sp(v1: Int, v2: Int): Boolean","d":"scala.runtime.java8.JFunction2$mcZII$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZIJ$sp.html#","e":false,"i":"","n":"JFunction2$mcZIJ$sp","t":"JFunction2$mcZIJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZIJ$sp.html#apply$mcZIJ$sp-495","e":false,"i":"","n":"apply$mcZIJ$sp","t":"apply$mcZIJ$sp(v1: Int, v2: Long): Boolean","d":"scala.runtime.java8.JFunction2$mcZIJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZJD$sp.html#","e":false,"i":"","n":"JFunction2$mcZJD$sp","t":"JFunction2$mcZJD$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZJD$sp.html#apply$mcZJD$sp-ca3","e":false,"i":"","n":"apply$mcZJD$sp","t":"apply$mcZJD$sp(v1: Long, v2: Double): Boolean","d":"scala.runtime.java8.JFunction2$mcZJD$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZJI$sp.html#","e":false,"i":"","n":"JFunction2$mcZJI$sp","t":"JFunction2$mcZJI$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZJI$sp.html#apply$mcZJI$sp-add","e":false,"i":"","n":"apply$mcZJI$sp","t":"apply$mcZJI$sp(v1: Long, v2: Int): Boolean","d":"scala.runtime.java8.JFunction2$mcZJI$sp","k":"def","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZJJ$sp.html#","e":false,"i":"","n":"JFunction2$mcZJJ$sp","t":"JFunction2$mcZJJ$sp extends (Any, Any) => Any, Serializable","d":"scala.runtime.java8","k":"trait","x":""},
{"l":"api/scala/runtime/java8/JFunction2$mcZJJ$sp.html#apply$mcZJJ$sp-fffffcd8","e":false,"i":"","n":"apply$mcZJJ$sp","t":"apply$mcZJJ$sp(v1: Long, v2: Long): Boolean","d":"scala.runtime.java8.JFunction2$mcZJJ$sp","k":"def","x":""},
{"l":"api/scala/runtime/AbstractFunction0.html#","e":false,"i":"","n":"AbstractFunction0","t":"AbstractFunction0[+R] extends () => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction1.html#","e":false,"i":"","n":"AbstractFunction1","t":"AbstractFunction1[-T1, +R] extends T1 => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction10.html#","e":false,"i":"","n":"AbstractFunction10","t":"AbstractFunction10[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction11.html#","e":false,"i":"","n":"AbstractFunction11","t":"AbstractFunction11[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction12.html#","e":false,"i":"","n":"AbstractFunction12","t":"AbstractFunction12[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction13.html#","e":false,"i":"","n":"AbstractFunction13","t":"AbstractFunction13[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction14.html#","e":false,"i":"","n":"AbstractFunction14","t":"AbstractFunction14[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction15.html#","e":false,"i":"","n":"AbstractFunction15","t":"AbstractFunction15[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction16.html#","e":false,"i":"","n":"AbstractFunction16","t":"AbstractFunction16[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction17.html#","e":false,"i":"","n":"AbstractFunction17","t":"AbstractFunction17[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction18.html#","e":false,"i":"","n":"AbstractFunction18","t":"AbstractFunction18[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction19.html#","e":false,"i":"","n":"AbstractFunction19","t":"AbstractFunction19[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction2.html#","e":false,"i":"","n":"AbstractFunction2","t":"AbstractFunction2[-T1, -T2, +R] extends (T1, T2) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction20.html#","e":false,"i":"","n":"AbstractFunction20","t":"AbstractFunction20[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction21.html#","e":false,"i":"","n":"AbstractFunction21","t":"AbstractFunction21[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction22.html#","e":false,"i":"","n":"AbstractFunction22","t":"AbstractFunction22[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, -T22, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction3.html#","e":false,"i":"","n":"AbstractFunction3","t":"AbstractFunction3[-T1, -T2, -T3, +R] extends (T1, T2, T3) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction4.html#","e":false,"i":"","n":"AbstractFunction4","t":"AbstractFunction4[-T1, -T2, -T3, -T4, +R] extends (T1, T2, T3, T4) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction5.html#","e":false,"i":"","n":"AbstractFunction5","t":"AbstractFunction5[-T1, -T2, -T3, -T4, -T5, +R] extends (T1, T2, T3, T4, T5) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction6.html#","e":false,"i":"","n":"AbstractFunction6","t":"AbstractFunction6[-T1, -T2, -T3, -T4, -T5, -T6, +R] extends (T1, T2, T3, T4, T5, T6) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction7.html#","e":false,"i":"","n":"AbstractFunction7","t":"AbstractFunction7[-T1, -T2, -T3, -T4, -T5, -T6, -T7, +R] extends (T1, T2, T3, T4, T5, T6, T7) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction8.html#","e":false,"i":"","n":"AbstractFunction8","t":"AbstractFunction8[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractFunction9.html#","e":false,"i":"","n":"AbstractFunction9","t":"AbstractFunction9[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, +R] extends (T1, T2, T3, T4, T5, T6, T7, T8, T9) => R","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/AbstractPartialFunction.html#","e":false,"i":"","n":"AbstractPartialFunction","t":"AbstractPartialFunction[-T1, +R] extends T1 => R, PartialFunction[T1, R]","d":"scala.runtime","k":"class","x":"AbstractPartialFunction reformulates all operations of its supertrait PartialFunction\nin terms of isDefinedAt and applyOrElse."},
{"l":"api/scala/runtime/AbstractPartialFunction.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(x: T1): R","d":"scala.runtime.AbstractPartialFunction","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/runtime/ArrayCharSequence.html#","e":false,"i":"","n":"ArrayCharSequence","t":"ArrayCharSequence(val xs: Array[Char], start: Int, end: Int) extends CharSequence","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/ArrayCharSequence.html#charAt-fffffd85","e":false,"i":"","n":"charAt","t":"charAt(index: Int): Char","d":"scala.runtime.ArrayCharSequence","k":"def","x":""},
{"l":"api/scala/runtime/ArrayCharSequence.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.runtime.ArrayCharSequence","k":"def","x":""},
{"l":"api/scala/runtime/ArrayCharSequence.html#subSequence-46b","e":false,"i":"","n":"subSequence","t":"subSequence(start0: Int, end0: Int): CharSequence","d":"scala.runtime.ArrayCharSequence","k":"def","x":""},
{"l":"api/scala/runtime/ArrayCharSequence.html#xs-0","e":false,"i":"","n":"xs","t":"xs: Array[Char]","d":"scala.runtime.ArrayCharSequence","k":"val","x":""},
{"l":"api/scala/runtime/Arrays$.html#","e":false,"i":"","n":"Arrays","t":"Arrays","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/Arrays$.html#newArray-fffffdcb","e":false,"i":"","n":"newArray","t":"newArray[Arr](componentType: Class[_], returnType: Class[Arr], dimensions: Array[Int]): Arr","d":"scala.runtime.Arrays","k":"def","x":""},
{"l":"api/scala/runtime/Arrays$.html#newGenericArray-fffff804","e":false,"i":"","n":"newGenericArray","t":"newGenericArray[T](length: Int)(implicit tag: ClassTag[T]): Array[T]","d":"scala.runtime.Arrays","k":"def","x":""},
{"l":"api/scala/runtime/Arrays$.html#seqToArray-81b","e":false,"i":"","n":"seqToArray","t":"seqToArray[T](xs: Seq[T], clazz: Class[_]): Array[T]","d":"scala.runtime.Arrays","k":"def","x":""},
{"l":"api/scala/runtime/EnumValue.html#","e":false,"i":"","n":"EnumValue","t":"EnumValue extends Product, Serializable","d":"scala.runtime","k":"trait","x":""},
{"l":"api/scala/runtime/FractionalProxy.html#","e":false,"i":"","n":"FractionalProxy","t":"FractionalProxy[T] extends ScalaNumberProxy[T]","d":"scala.runtime","k":"trait","x":""},
{"l":"api/scala/runtime/FractionalProxy.html#isWhole-0","e":false,"i":"","n":"isWhole","t":"isWhole: Boolean","d":"scala.runtime.FractionalProxy","k":"def","x":""},
{"l":"api/scala/runtime/FractionalProxy.html#num-0","e":false,"i":"","n":"num","t":"num: Fractional[T]","d":"scala.runtime.FractionalProxy","k":"def","x":""},
{"l":"api/scala/runtime/FunctionXXL.html#","e":false,"i":"","n":"FunctionXXL","t":"FunctionXXL","d":"scala.runtime","k":"trait","x":""},
{"l":"api/scala/runtime/FunctionXXL.html#apply-fffffbc8","e":false,"i":"","n":"apply","t":"apply(xs: IArray[Object]): Object","d":"scala.runtime.FunctionXXL","k":"def","x":""},
{"l":"api/scala/runtime/IntegralProxy.html#","e":false,"i":"","n":"IntegralProxy","t":"IntegralProxy[T] extends ScalaWholeNumberProxy[T], RangedProxy[T]","d":"scala.runtime","k":"trait","x":""},
{"l":"api/scala/runtime/IntegralProxy.html#ResultWithoutStep-0","e":false,"i":"","n":"ResultWithoutStep","t":"ResultWithoutStep = NumericRange[T]","d":"scala.runtime.IntegralProxy","k":"type","x":""},
{"l":"api/scala/runtime/IntegralProxy.html#num-0","e":false,"i":"","n":"num","t":"num: Integral[T]","d":"scala.runtime.IntegralProxy","k":"def","x":""},
{"l":"api/scala/runtime/IntegralProxy.html#to-fffff2f1","e":false,"i":"","n":"to","t":"to(end: T): Inclusive[T]","d":"scala.runtime.IntegralProxy","k":"def","x":""},
{"l":"api/scala/runtime/IntegralProxy.html#to-fffffbc4","e":false,"i":"","n":"to","t":"to(end: T, step: T): Inclusive[T]","d":"scala.runtime.IntegralProxy","k":"def","x":""},
{"l":"api/scala/runtime/IntegralProxy.html#until-7a3","e":false,"i":"","n":"until","t":"until(end: T): Exclusive[T]","d":"scala.runtime.IntegralProxy","k":"def","x":""},
{"l":"api/scala/runtime/IntegralProxy.html#until-76","e":false,"i":"","n":"until","t":"until(end: T, step: T): Exclusive[T]","d":"scala.runtime.IntegralProxy","k":"def","x":""},
{"l":"api/scala/runtime/LambdaDeserialize.html#","e":false,"i":"","n":"LambdaDeserialize","t":"LambdaDeserialize","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LambdaDeserialize.html#deserializeLambda-fffff920","e":false,"i":"","n":"deserializeLambda","t":"deserializeLambda(serialized: SerializedLambda): AnyRef","d":"scala.runtime.LambdaDeserialize","k":"def","x":""},
{"l":"api/scala/runtime/LambdaDeserialize$.html#","e":false,"i":"","n":"LambdaDeserialize","t":"LambdaDeserialize","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/LambdaDeserialize$.html#bootstrap-fffffd30","e":false,"i":"","n":"bootstrap","t":"bootstrap(lookup: Lookup, invokedName: String, invokedType: MethodType, targetMethods: MethodHandle*): CallSite","d":"scala.runtime.LambdaDeserialize","k":"def","x":""},
{"l":"api/scala/runtime/LambdaDeserialize$.html#nameAndDescriptorKey-fffff52f","e":false,"i":"","n":"nameAndDescriptorKey","t":"nameAndDescriptorKey(name: String, descriptor: String): String","d":"scala.runtime.LambdaDeserialize","k":"def","x":""},
{"l":"api/scala/runtime/LambdaDeserializer$.html#","e":false,"i":"","n":"LambdaDeserializer","t":"LambdaDeserializer","d":"scala.runtime","k":"object","x":"This class is only intended to be called by synthetic $deserializeLambda$ method that the Scala 2.12\ncompiler will add to classes hosting lambdas."},
{"l":"api/scala/runtime/LambdaDeserializer$.html#deserializeLambda-234","e":false,"i":"","n":"deserializeLambda","t":"deserializeLambda(lookup: Lookup, cache: Map[String, MethodHandle], targetMethodMap: Map[String, MethodHandle], serialized: SerializedLambda): AnyRef","d":"scala.runtime.LambdaDeserializer","k":"def","x":"Deserialize a lambda by calling LambdaMetafactory.altMetafactory to spin up a lambda class\nand instantiating this class with the captured arguments."},
{"l":"api/scala/runtime/LambdaDeserializer$.html#deserializeLambdaOrNull-234","e":false,"i":"","n":"deserializeLambdaOrNull","t":"deserializeLambdaOrNull(lookup: Lookup, cache: Map[String, MethodHandle], targetMethodMap: Map[String, MethodHandle], serialized: SerializedLambda): AnyRef","d":"scala.runtime.LambdaDeserializer","k":"def","x":""},
{"l":"api/scala/runtime/LazyBoolean.html#","e":false,"i":"","n":"LazyBoolean","t":"LazyBoolean extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LazyBoolean.html#initialize-c00","e":false,"i":"","n":"initialize","t":"initialize(value: Boolean): Boolean","d":"scala.runtime.LazyBoolean","k":"def","x":""},
{"l":"api/scala/runtime/LazyBoolean.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyBoolean","k":"def","x":""},
{"l":"api/scala/runtime/LazyBoolean.html#value-0","e":false,"i":"","n":"value","t":"value: Boolean","d":"scala.runtime.LazyBoolean","k":"def","x":""},
{"l":"api/scala/runtime/LazyByte.html#","e":false,"i":"","n":"LazyByte","t":"LazyByte extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LazyByte.html#initialize-da0","e":false,"i":"","n":"initialize","t":"initialize(value: Byte): Byte","d":"scala.runtime.LazyByte","k":"def","x":""},
{"l":"api/scala/runtime/LazyByte.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyByte","k":"def","x":""},
{"l":"api/scala/runtime/LazyByte.html#value-0","e":false,"i":"","n":"value","t":"value: Byte","d":"scala.runtime.LazyByte","k":"def","x":""},
{"l":"api/scala/runtime/LazyChar.html#","e":false,"i":"","n":"LazyChar","t":"LazyChar extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LazyChar.html#initialize-8bc","e":false,"i":"","n":"initialize","t":"initialize(value: Char): Char","d":"scala.runtime.LazyChar","k":"def","x":""},
{"l":"api/scala/runtime/LazyChar.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyChar","k":"def","x":""},
{"l":"api/scala/runtime/LazyChar.html#value-0","e":false,"i":"","n":"value","t":"value: Char","d":"scala.runtime.LazyChar","k":"def","x":""},
{"l":"api/scala/runtime/LazyDouble.html#","e":false,"i":"","n":"LazyDouble","t":"LazyDouble extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LazyDouble.html#initialize-5b2","e":false,"i":"","n":"initialize","t":"initialize(value: Double): Double","d":"scala.runtime.LazyDouble","k":"def","x":""},
{"l":"api/scala/runtime/LazyDouble.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyDouble","k":"def","x":""},
{"l":"api/scala/runtime/LazyDouble.html#value-0","e":false,"i":"","n":"value","t":"value: Double","d":"scala.runtime.LazyDouble","k":"def","x":""},
{"l":"api/scala/runtime/LazyFloat.html#","e":false,"i":"","n":"LazyFloat","t":"LazyFloat extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LazyFloat.html#initialize-fffffb80","e":false,"i":"","n":"initialize","t":"initialize(value: Float): Float","d":"scala.runtime.LazyFloat","k":"def","x":""},
{"l":"api/scala/runtime/LazyFloat.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyFloat","k":"def","x":""},
{"l":"api/scala/runtime/LazyFloat.html#value-0","e":false,"i":"","n":"value","t":"value: Float","d":"scala.runtime.LazyFloat","k":"def","x":""},
{"l":"api/scala/runtime/LazyInt.html#","e":false,"i":"","n":"LazyInt","t":"LazyInt extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LazyInt.html#initialize-fffffbe0","e":false,"i":"","n":"initialize","t":"initialize(value: Int): Int","d":"scala.runtime.LazyInt","k":"def","x":""},
{"l":"api/scala/runtime/LazyInt.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyInt","k":"def","x":""},
{"l":"api/scala/runtime/LazyInt.html#value-0","e":false,"i":"","n":"value","t":"value: Int","d":"scala.runtime.LazyInt","k":"def","x":""},
{"l":"api/scala/runtime/LazyLong.html#","e":false,"i":"","n":"LazyLong","t":"LazyLong extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LazyLong.html#initialize-fffff788","e":false,"i":"","n":"initialize","t":"initialize(value: Long): Long","d":"scala.runtime.LazyLong","k":"def","x":""},
{"l":"api/scala/runtime/LazyLong.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyLong","k":"def","x":""},
{"l":"api/scala/runtime/LazyLong.html#value-0","e":false,"i":"","n":"value","t":"value: Long","d":"scala.runtime.LazyLong","k":"def","x":""},
{"l":"api/scala/runtime/LazyRef.html#","e":false,"i":"","n":"LazyRef","t":"LazyRef[T] extends Serializable","d":"scala.runtime","k":"class","x":"Classes used as holders for lazy vals defined in methods."},
{"l":"api/scala/runtime/LazyRef.html#initialize-d26","e":false,"i":"","n":"initialize","t":"initialize(value: T): T","d":"scala.runtime.LazyRef","k":"def","x":""},
{"l":"api/scala/runtime/LazyRef.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyRef","k":"def","x":""},
{"l":"api/scala/runtime/LazyRef.html#value-0","e":false,"i":"","n":"value","t":"value: T","d":"scala.runtime.LazyRef","k":"def","x":""},
{"l":"api/scala/runtime/LazyShort.html#","e":false,"i":"","n":"LazyShort","t":"LazyShort extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LazyShort.html#initialize-fffff780","e":false,"i":"","n":"initialize","t":"initialize(value: Short): Short","d":"scala.runtime.LazyShort","k":"def","x":""},
{"l":"api/scala/runtime/LazyShort.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyShort","k":"def","x":""},
{"l":"api/scala/runtime/LazyShort.html#value-0","e":false,"i":"","n":"value","t":"value: Short","d":"scala.runtime.LazyShort","k":"def","x":""},
{"l":"api/scala/runtime/LazyUnit.html#","e":false,"i":"","n":"LazyUnit","t":"LazyUnit extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/LazyUnit.html#initialize-94c","e":false,"i":"","n":"initialize","t":"initialize(): Unit","d":"scala.runtime.LazyUnit","k":"def","x":""},
{"l":"api/scala/runtime/LazyUnit.html#initialized-0","e":false,"i":"","n":"initialized","t":"initialized: Boolean","d":"scala.runtime.LazyUnit","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$.html#","e":false,"i":"","n":"LazyVals","t":"LazyVals","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/LazyVals$.html#BITS_PER_LAZY_VAL-0","e":false,"i":"","n":"BITS_PER_LAZY_VAL","t":"BITS_PER_LAZY_VAL: 2L","d":"scala.runtime.LazyVals","k":"val","x":""},
{"l":"api/scala/runtime/LazyVals$.html#CAS-fffffa85","e":false,"i":"","n":"CAS","t":"CAS(t: Object, offset: Long, e: Long, v: Int, ord: Int): Boolean","d":"scala.runtime.LazyVals","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$.html#STATE-be7","e":false,"i":"","n":"STATE","t":"STATE(cur: Long, ord: Int): Long","d":"scala.runtime.LazyVals","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$.html#get-fffff99b","e":false,"i":"","n":"get","t":"get(t: Object, off: Long): Long","d":"scala.runtime.LazyVals","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$.html#getOffset-60d","e":false,"i":"","n":"getOffset","t":"getOffset(clz: Class[_], name: String): Long","d":"scala.runtime.LazyVals","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$.html#getOffsetStatic-fffffdb9","e":false,"i":"","n":"getOffsetStatic","t":"getOffsetStatic(field: Field): Long","d":"scala.runtime.LazyVals","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$.html#getStaticFieldOffset-fffffdb9","e":false,"i":"","n":"getStaticFieldOffset","t":"getStaticFieldOffset(field: Field): Long","d":"scala.runtime.LazyVals","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$.html#objCAS-fffffd43","e":false,"i":"","n":"objCAS","t":"objCAS(t: Object, offset: Long, exp: Object, n: Object): Boolean","d":"scala.runtime.LazyVals","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$.html#setFlag-fffff8c3","e":false,"i":"","n":"setFlag","t":"setFlag(t: Object, offset: Long, v: Int, ord: Int): Unit","d":"scala.runtime.LazyVals","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$.html#wait4Notification-638","e":false,"i":"","n":"wait4Notification","t":"wait4Notification(t: Object, offset: Long, cur: Long, ord: Int): Unit","d":"scala.runtime.LazyVals","k":"def","x":""},
{"l":"api/scala/runtime/LazyVals$$Evaluating$.html#","e":false,"i":"","n":"Evaluating","t":"Evaluating extends LazyValControlState","d":"scala.runtime.LazyVals","k":"object","x":""},
{"l":"api/scala/runtime/LazyVals$$LazyValControlState.html#","e":false,"i":"","n":"LazyValControlState","t":"LazyValControlState extends Serializable","d":"scala.runtime.LazyVals","k":"trait","x":""},
{"l":"api/scala/runtime/LazyVals$$Names$.html#","e":false,"i":"","n":"Names","t":"Names","d":"scala.runtime.LazyVals","k":"object","x":""},
{"l":"api/scala/runtime/LazyVals$$Names$.html#cas-0","e":false,"i":"","n":"cas","t":"cas: \"CAS\"","d":"scala.runtime.LazyVals.Names","k":"val","x":""},
{"l":"api/scala/runtime/LazyVals$$Names$.html#get-0","e":false,"i":"","n":"get","t":"get: \"get\"","d":"scala.runtime.LazyVals.Names","k":"val","x":""},
{"l":"api/scala/runtime/LazyVals$$Names$.html#getOffset-0","e":false,"i":"","n":"getOffset","t":"getOffset: \"getOffset\"","d":"scala.runtime.LazyVals.Names","k":"val","x":""},
{"l":"api/scala/runtime/LazyVals$$Names$.html#setFlag-0","e":false,"i":"","n":"setFlag","t":"setFlag: \"setFlag\"","d":"scala.runtime.LazyVals.Names","k":"val","x":""},
{"l":"api/scala/runtime/LazyVals$$Names$.html#state-0","e":false,"i":"","n":"state","t":"state: \"STATE\"","d":"scala.runtime.LazyVals.Names","k":"val","x":""},
{"l":"api/scala/runtime/LazyVals$$Names$.html#wait4Notification-0","e":false,"i":"","n":"wait4Notification","t":"wait4Notification: \"wait4Notification\"","d":"scala.runtime.LazyVals.Names","k":"val","x":""},
{"l":"api/scala/runtime/LazyVals$$NullValue$.html#","e":false,"i":"","n":"NullValue","t":"NullValue extends LazyValControlState","d":"scala.runtime.LazyVals","k":"object","x":""},
{"l":"api/scala/runtime/LazyVals$$Waiting.html#","e":false,"i":"","n":"Waiting","t":"Waiting extends CountDownLatch, LazyValControlState","d":"scala.runtime.LazyVals","k":"class","x":""},
{"l":"api/scala/runtime/MatchCase.html#","e":false,"i":"","n":"MatchCase","t":"MatchCase[Pat, +Body]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/ModuleSerializationProxy.html#","e":false,"i":"","n":"ModuleSerializationProxy","t":"ModuleSerializationProxy(moduleClass: Class[_]) extends Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/NonLocalReturnControl.html#","e":false,"i":"","n":"NonLocalReturnControl","t":"NonLocalReturnControl[T](val key: AnyRef, val value: T) extends ControlThrowable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/NonLocalReturnControl.html#key-0","e":false,"i":"","n":"key","t":"key: AnyRef","d":"scala.runtime.NonLocalReturnControl","k":"val","x":""},
{"l":"api/scala/runtime/NonLocalReturnControl.html#value-0","e":false,"i":"","n":"value","t":"value: T","d":"scala.runtime.NonLocalReturnControl","k":"val","x":""},
{"l":"api/scala/runtime/Nothing$.html#","e":false,"i":"","n":"Nothing$","t":"Nothing$ extends Throwable","d":"scala.runtime","k":"class","x":"Dummy class which exist only to satisfy the JVM. It corresponds\nto scala.Nothing. If such type appears in method\nsignatures, it is erased to this one.\n"},
{"l":"api/scala/runtime/Null$.html#","e":false,"i":"","n":"Null$","t":"Null$","d":"scala.runtime","k":"class","x":"Dummy class which exist only to satisfy the JVM. It corresponds to\nscala.Null. If such type appears in method signatures, it is erased\nto this one. A private constructor ensures that Java code can't create\nsubclasses. The only value of type Null$ should be null\n"},
{"l":"api/scala/runtime/OrderedProxy.html#","e":false,"i":"","n":"OrderedProxy","t":"OrderedProxy[T] extends Ordered[T], Typed[T]","d":"scala.runtime","k":"trait","x":""},
{"l":"api/scala/runtime/OrderedProxy.html#compare-fffffaf4","e":false,"i":"","n":"compare","t":"compare(y: T): Int","d":"scala.runtime.OrderedProxy","k":"def","x":"Result of comparing this with operand that."},
{"l":"api/scala/runtime/OrderedProxy.html#ord-0","e":false,"i":"","n":"ord","t":"ord: Ordering[T]","d":"scala.runtime.OrderedProxy","k":"def","x":""},
{"l":"api/scala/runtime/RangedProxy.html#","e":false,"i":"","n":"RangedProxy","t":"RangedProxy[T] extends Typed[T]","d":"scala.runtime","k":"trait","x":""},
{"l":"api/scala/runtime/RangedProxy.html#ResultWithoutStep-0","e":false,"i":"","n":"ResultWithoutStep","t":"ResultWithoutStep","d":"scala.runtime.RangedProxy","k":"type","x":""},
{"l":"api/scala/runtime/RangedProxy.html#to-d26","e":false,"i":"","n":"to","t":"to(end: T): ResultWithoutStep","d":"scala.runtime.RangedProxy","k":"def","x":""},
{"l":"api/scala/runtime/RangedProxy.html#to-fc","e":false,"i":"","n":"to","t":"to(end: T, step: T): IndexedSeq[T]","d":"scala.runtime.RangedProxy","k":"def","x":""},
{"l":"api/scala/runtime/RangedProxy.html#until-d26","e":false,"i":"","n":"until","t":"until(end: T): ResultWithoutStep","d":"scala.runtime.RangedProxy","k":"def","x":""},
{"l":"api/scala/runtime/RangedProxy.html#until-fc","e":false,"i":"","n":"until","t":"until(end: T, step: T): IndexedSeq[T]","d":"scala.runtime.RangedProxy","k":"def","x":""},
{"l":"api/scala/runtime/RichBoolean.html#","e":false,"i":"","n":"RichBoolean","t":"RichBoolean(val self: Boolean) extends AnyVal, OrderedProxy[Boolean]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/RichBoolean.html#self-0","e":false,"i":"","n":"self","t":"self: Boolean","d":"scala.runtime.RichBoolean","k":"val","x":""},
{"l":"api/scala/runtime/RichByte.html#","e":false,"i":"","n":"RichByte","t":"RichByte(val self: Byte) extends AnyVal, ScalaWholeNumberProxy[Byte]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/RichByte.html#self-0","e":false,"i":"","n":"self","t":"self: Byte","d":"scala.runtime.RichByte","k":"val","x":""},
{"l":"api/scala/runtime/RichChar.html#","e":false,"i":"","n":"RichChar","t":"RichChar(val self: Char) extends AnyVal, IntegralProxy[Char]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/RichChar.html#asDigit-0","e":false,"i":"","n":"asDigit","t":"asDigit: Int","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#getDirectionality-0","e":false,"i":"","n":"getDirectionality","t":"getDirectionality: Byte","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#getNumericValue-0","e":false,"i":"","n":"getNumericValue","t":"getNumericValue: Int","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#getType-0","e":false,"i":"","n":"getType","t":"getType: Int","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isControl-0","e":false,"i":"","n":"isControl","t":"isControl: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isDigit-0","e":false,"i":"","n":"isDigit","t":"isDigit: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isHighSurrogate-0","e":false,"i":"","n":"isHighSurrogate","t":"isHighSurrogate: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isIdentifierIgnorable-0","e":false,"i":"","n":"isIdentifierIgnorable","t":"isIdentifierIgnorable: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isLetter-0","e":false,"i":"","n":"isLetter","t":"isLetter: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isLetterOrDigit-0","e":false,"i":"","n":"isLetterOrDigit","t":"isLetterOrDigit: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isLowSurrogate-0","e":false,"i":"","n":"isLowSurrogate","t":"isLowSurrogate: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isLower-0","e":false,"i":"","n":"isLower","t":"isLower: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isMirrored-0","e":false,"i":"","n":"isMirrored","t":"isMirrored: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isSpaceChar-0","e":false,"i":"","n":"isSpaceChar","t":"isSpaceChar: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isSurrogate-0","e":false,"i":"","n":"isSurrogate","t":"isSurrogate: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isTitleCase-0","e":false,"i":"","n":"isTitleCase","t":"isTitleCase: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isUnicodeIdentifierPart-0","e":false,"i":"","n":"isUnicodeIdentifierPart","t":"isUnicodeIdentifierPart: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isUnicodeIdentifierStart-0","e":false,"i":"","n":"isUnicodeIdentifierStart","t":"isUnicodeIdentifierStart: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isUpper-0","e":false,"i":"","n":"isUpper","t":"isUpper: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#isWhitespace-0","e":false,"i":"","n":"isWhitespace","t":"isWhitespace: Boolean","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#reverseBytes-0","e":false,"i":"","n":"reverseBytes","t":"reverseBytes: Char","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#self-0","e":false,"i":"","n":"self","t":"self: Char","d":"scala.runtime.RichChar","k":"val","x":""},
{"l":"api/scala/runtime/RichChar.html#toLower-0","e":false,"i":"","n":"toLower","t":"toLower: Char","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#toTitleCase-0","e":false,"i":"","n":"toTitleCase","t":"toTitleCase: Char","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichChar.html#toUpper-0","e":false,"i":"","n":"toUpper","t":"toUpper: Char","d":"scala.runtime.RichChar","k":"def","x":""},
{"l":"api/scala/runtime/RichDouble.html#","e":false,"i":"","n":"RichDouble","t":"RichDouble(val self: Double) extends AnyVal, FractionalProxy[Double]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/RichDouble.html#ceil-0","e":false,"i":"","n":"ceil","t":"ceil: Double","d":"scala.runtime.RichDouble","k":"def","x":""},
{"l":"api/scala/runtime/RichDouble.html#floor-0","e":false,"i":"","n":"floor","t":"floor: Double","d":"scala.runtime.RichDouble","k":"def","x":""},
{"l":"api/scala/runtime/RichDouble.html#isFinite-0","e":false,"i":"","n":"isFinite","t":"isFinite: Boolean","d":"scala.runtime.RichDouble","k":"def","x":""},
{"l":"api/scala/runtime/RichDouble.html#isInfinity-0","e":false,"i":"","n":"isInfinity","t":"isInfinity: Boolean","d":"scala.runtime.RichDouble","k":"def","x":""},
{"l":"api/scala/runtime/RichDouble.html#isNaN-0","e":false,"i":"","n":"isNaN","t":"isNaN: Boolean","d":"scala.runtime.RichDouble","k":"def","x":""},
{"l":"api/scala/runtime/RichDouble.html#isNegInfinity-0","e":false,"i":"","n":"isNegInfinity","t":"isNegInfinity: Boolean","d":"scala.runtime.RichDouble","k":"def","x":""},
{"l":"api/scala/runtime/RichDouble.html#isPosInfinity-0","e":false,"i":"","n":"isPosInfinity","t":"isPosInfinity: Boolean","d":"scala.runtime.RichDouble","k":"def","x":""},
{"l":"api/scala/runtime/RichDouble.html#round-0","e":false,"i":"","n":"round","t":"round: Long","d":"scala.runtime.RichDouble","k":"def","x":""},
{"l":"api/scala/runtime/RichDouble.html#self-0","e":false,"i":"","n":"self","t":"self: Double","d":"scala.runtime.RichDouble","k":"val","x":""},
{"l":"api/scala/runtime/RichDouble.html#toDegrees-0","e":false,"i":"","n":"toDegrees","t":"toDegrees: Double","d":"scala.runtime.RichDouble","k":"def","x":"Converts an angle measured in radians to an approximately equivalent\nangle measured in degrees."},
{"l":"api/scala/runtime/RichDouble.html#toRadians-0","e":false,"i":"","n":"toRadians","t":"toRadians: Double","d":"scala.runtime.RichDouble","k":"def","x":"Converts an angle measured in degrees to an approximately equivalent\nangle measured in radians.\n"},
{"l":"api/scala/runtime/RichFloat.html#","e":false,"i":"","n":"RichFloat","t":"RichFloat(val self: Float) extends AnyVal, FractionalProxy[Float]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/RichFloat.html#ceil-0","e":false,"i":"","n":"ceil","t":"ceil: Float","d":"scala.runtime.RichFloat","k":"def","x":""},
{"l":"api/scala/runtime/RichFloat.html#floor-0","e":false,"i":"","n":"floor","t":"floor: Float","d":"scala.runtime.RichFloat","k":"def","x":""},
{"l":"api/scala/runtime/RichFloat.html#isFinite-0","e":false,"i":"","n":"isFinite","t":"isFinite: Boolean","d":"scala.runtime.RichFloat","k":"def","x":""},
{"l":"api/scala/runtime/RichFloat.html#isInfinity-0","e":false,"i":"","n":"isInfinity","t":"isInfinity: Boolean","d":"scala.runtime.RichFloat","k":"def","x":""},
{"l":"api/scala/runtime/RichFloat.html#isNaN-0","e":false,"i":"","n":"isNaN","t":"isNaN: Boolean","d":"scala.runtime.RichFloat","k":"def","x":""},
{"l":"api/scala/runtime/RichFloat.html#isNegInfinity-0","e":false,"i":"","n":"isNegInfinity","t":"isNegInfinity: Boolean","d":"scala.runtime.RichFloat","k":"def","x":""},
{"l":"api/scala/runtime/RichFloat.html#isPosInfinity-0","e":false,"i":"","n":"isPosInfinity","t":"isPosInfinity: Boolean","d":"scala.runtime.RichFloat","k":"def","x":""},
{"l":"api/scala/runtime/RichFloat.html#round-0","e":false,"i":"","n":"round","t":"round: Int","d":"scala.runtime.RichFloat","k":"def","x":""},
{"l":"api/scala/runtime/RichFloat.html#self-0","e":false,"i":"","n":"self","t":"self: Float","d":"scala.runtime.RichFloat","k":"val","x":""},
{"l":"api/scala/runtime/RichFloat.html#toDegrees-0","e":false,"i":"","n":"toDegrees","t":"toDegrees: Float","d":"scala.runtime.RichFloat","k":"def","x":"Converts an angle measured in radians to an approximately equivalent\nangle measured in degrees.\n"},
{"l":"api/scala/runtime/RichFloat.html#toRadians-0","e":false,"i":"","n":"toRadians","t":"toRadians: Float","d":"scala.runtime.RichFloat","k":"def","x":"Converts an angle measured in degrees to an approximately equivalent\nangle measured in radians.\n"},
{"l":"api/scala/runtime/RichInt.html#","e":false,"i":"","n":"RichInt","t":"RichInt(val self: Int) extends AnyVal, ScalaNumberProxy[Int], RangedProxy[Int]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/RichInt.html#ResultWithoutStep-0","e":false,"i":"","n":"ResultWithoutStep","t":"ResultWithoutStep = Range","d":"scala.runtime.RichInt","k":"type","x":""},
{"l":"api/scala/runtime/RichInt.html#isValidLong-0","e":false,"i":"","n":"isValidLong","t":"isValidLong: Boolean","d":"scala.runtime.RichInt","k":"def","x":""},
{"l":"api/scala/runtime/RichInt.html#isWhole-0","e":false,"i":"","n":"isWhole","t":"isWhole: Boolean","d":"scala.runtime.RichInt","k":"def","x":"Returns true if this number has no decimal component.\nAlways true for RichInt.\n"},
{"l":"api/scala/runtime/RichInt.html#round-0","e":false,"i":"","n":"round","t":"round: Int","d":"scala.runtime.RichInt","k":"def","x":"There is no reason to round an Int, but this method is provided to avoid accidental loss of precision from a detour through Float."},
{"l":"api/scala/runtime/RichInt.html#self-0","e":false,"i":"","n":"self","t":"self: Int","d":"scala.runtime.RichInt","k":"val","x":""},
{"l":"api/scala/runtime/RichInt.html#to-fffffb52","e":false,"i":"","n":"to","t":"to(end: Int): Inclusive","d":"scala.runtime.RichInt","k":"def","x":""},
{"l":"api/scala/runtime/RichInt.html#to-4f9","e":false,"i":"","n":"to","t":"to(end: Int, step: Int): Inclusive","d":"scala.runtime.RichInt","k":"def","x":""},
{"l":"api/scala/runtime/RichInt.html#toBinaryString-0","e":false,"i":"","n":"toBinaryString","t":"toBinaryString: String","d":"scala.runtime.RichInt","k":"def","x":""},
{"l":"api/scala/runtime/RichInt.html#toHexString-0","e":false,"i":"","n":"toHexString","t":"toHexString: String","d":"scala.runtime.RichInt","k":"def","x":""},
{"l":"api/scala/runtime/RichInt.html#toOctalString-0","e":false,"i":"","n":"toOctalString","t":"toOctalString: String","d":"scala.runtime.RichInt","k":"def","x":""},
{"l":"api/scala/runtime/RichInt.html#until-fffff730","e":false,"i":"","n":"until","t":"until(end: Int): Range","d":"scala.runtime.RichInt","k":"def","x":""},
{"l":"api/scala/runtime/RichInt.html#until-fe9","e":false,"i":"","n":"until","t":"until(end: Int, step: Int): Range","d":"scala.runtime.RichInt","k":"def","x":""},
{"l":"api/scala/runtime/RichLong.html#","e":false,"i":"","n":"RichLong","t":"RichLong(val self: Long) extends AnyVal, IntegralProxy[Long]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/RichLong.html#isValidLong-0","e":false,"i":"","n":"isValidLong","t":"isValidLong: Boolean","d":"scala.runtime.RichLong","k":"def","x":""},
{"l":"api/scala/runtime/RichLong.html#round-0","e":false,"i":"","n":"round","t":"round: Long","d":"scala.runtime.RichLong","k":"def","x":"There is no reason to round a Long, but this method is provided to avoid accidental conversion to Int through Float."},
{"l":"api/scala/runtime/RichLong.html#self-0","e":false,"i":"","n":"self","t":"self: Long","d":"scala.runtime.RichLong","k":"val","x":""},
{"l":"api/scala/runtime/RichLong.html#toBinaryString-0","e":false,"i":"","n":"toBinaryString","t":"toBinaryString: String","d":"scala.runtime.RichLong","k":"def","x":""},
{"l":"api/scala/runtime/RichLong.html#toHexString-0","e":false,"i":"","n":"toHexString","t":"toHexString: String","d":"scala.runtime.RichLong","k":"def","x":""},
{"l":"api/scala/runtime/RichLong.html#toOctalString-0","e":false,"i":"","n":"toOctalString","t":"toOctalString: String","d":"scala.runtime.RichLong","k":"def","x":""},
{"l":"api/scala/runtime/RichShort.html#","e":false,"i":"","n":"RichShort","t":"RichShort(val self: Short) extends AnyVal, ScalaWholeNumberProxy[Short]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/RichShort.html#self-0","e":false,"i":"","n":"self","t":"self: Short","d":"scala.runtime.RichShort","k":"val","x":""},
{"l":"api/scala/runtime/Scala3RunTime$.html#","e":false,"i":"","n":"Scala3RunTime","t":"Scala3RunTime","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/Scala3RunTime$.html#assertFailed-fffff052","e":false,"i":"","n":"assertFailed","t":"assertFailed(message: Any): Nothing","d":"scala.runtime.Scala3RunTime","k":"def","x":""},
{"l":"api/scala/runtime/Scala3RunTime$.html#assertFailed-305","e":false,"i":"","n":"assertFailed","t":"assertFailed(): Nothing","d":"scala.runtime.Scala3RunTime","k":"def","x":""},
{"l":"api/scala/runtime/Scala3RunTime$.html#nn-957","e":false,"i":"","n":"nn","t":"nn[T](x: T | Null): x.type & T","d":"scala.runtime.Scala3RunTime","k":"def","x":""},
{"l":"api/scala/runtime/Scala3RunTime$.html#nnFail-305","e":false,"i":"","n":"nnFail","t":"nnFail(): Nothing","d":"scala.runtime.Scala3RunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaNumberProxy.html#","e":false,"i":"","n":"ScalaNumberProxy","t":"ScalaNumberProxy[T] extends ScalaNumericAnyConversions, Typed[T], OrderedProxy[T]","d":"scala.runtime","k":"trait","x":"Base classes for the Rich* wrappers of the primitive types.\nAs with all classes in scala.runtime.*, this is not a supported API.\n"},
{"l":"api/scala/runtime/ScalaNumberProxy.html#abs-0","e":false,"i":"","n":"abs","t":"abs: T","d":"scala.runtime.ScalaNumberProxy","k":"def","x":"Returns the absolute value of this."},
{"l":"api/scala/runtime/ScalaNumberProxy.html#byteValue-0","e":false,"i":"","n":"byteValue","t":"byteValue: Byte","d":"scala.runtime.ScalaNumberProxy","k":"def","x":""},
{"l":"api/scala/runtime/ScalaNumberProxy.html#doubleValue-0","e":false,"i":"","n":"doubleValue","t":"doubleValue: Double","d":"scala.runtime.ScalaNumberProxy","k":"def","x":""},
{"l":"api/scala/runtime/ScalaNumberProxy.html#floatValue-0","e":false,"i":"","n":"floatValue","t":"floatValue: Float","d":"scala.runtime.ScalaNumberProxy","k":"def","x":""},
{"l":"api/scala/runtime/ScalaNumberProxy.html#intValue-0","e":false,"i":"","n":"intValue","t":"intValue: Int","d":"scala.runtime.ScalaNumberProxy","k":"def","x":""},
{"l":"api/scala/runtime/ScalaNumberProxy.html#longValue-0","e":false,"i":"","n":"longValue","t":"longValue: Long","d":"scala.runtime.ScalaNumberProxy","k":"def","x":""},
{"l":"api/scala/runtime/ScalaNumberProxy.html#max-d26","e":false,"i":"","n":"max","t":"max(that: T): T","d":"scala.runtime.ScalaNumberProxy","k":"def","x":"Returns this if this > that or that otherwise."},
{"l":"api/scala/runtime/ScalaNumberProxy.html#min-d26","e":false,"i":"","n":"min","t":"min(that: T): T","d":"scala.runtime.ScalaNumberProxy","k":"def","x":"Returns this if this < that or that otherwise."},
{"l":"api/scala/runtime/ScalaNumberProxy.html#num-0","e":false,"i":"","n":"num","t":"num: Numeric[T]","d":"scala.runtime.ScalaNumberProxy","k":"def","x":""},
{"l":"api/scala/runtime/ScalaNumberProxy.html#shortValue-0","e":false,"i":"","n":"shortValue","t":"shortValue: Short","d":"scala.runtime.ScalaNumberProxy","k":"def","x":""},
{"l":"api/scala/runtime/ScalaNumberProxy.html#sign-0","e":false,"i":"","n":"sign","t":"sign: T","d":"scala.runtime.ScalaNumberProxy","k":"def","x":"Returns the sign of this.\nzero if the argument is zero, -zero if the argument is -zero,\none if the argument is greater than zero, -one if the argument is less than zero,\nand NaN if the argument is NaN where applicable.\n"},
{"l":"api/scala/runtime/ScalaNumberProxy.html#signum-0","e":false,"i":"","n":"signum","t":"signum: Int","d":"scala.runtime.ScalaNumberProxy","k":"def","x":"Returns the signum of this."},
{"l":"api/scala/runtime/ScalaRunTime$.html#","e":false,"i":"","n":"ScalaRunTime","t":"ScalaRunTime","d":"scala.runtime","k":"object","x":"The object ScalaRunTime provides support methods required by\nthe scala runtime.  All these methods should be considered\noutside the API and subject to change or removal without notice.\n"},
{"l":"api/scala/runtime/ScalaRunTime$.html#_hashCode-fffff2e0","e":false,"i":"","n":"_hashCode","t":"_hashCode(x: Product): Int","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#_toString-8c","e":false,"i":"","n":"_toString","t":"_toString(x: Product): String","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#anyValClass-b25","e":false,"i":"","n":"anyValClass","t":"anyValClass[T <: AnyVal : ClassTag](value: T): Class[T]","d":"scala.runtime.ScalaRunTime","k":"def","x":"Return the class object representing an unboxed value type,\ne.g., classOf[int], not classOf[java.lang.Integer].  The compiler\nrewrites expressions like 5.getClass to come here.\n"},
{"l":"api/scala/runtime/ScalaRunTime$.html#arrayClass-fffff380","e":false,"i":"","n":"arrayClass","t":"arrayClass(clazz: Class[_]): Class[_]","d":"scala.runtime.ScalaRunTime","k":"def","x":"Return the class object representing an array with element class clazz.\n"},
{"l":"api/scala/runtime/ScalaRunTime$.html#array_apply-fffffc87","e":false,"i":"","n":"array_apply","t":"array_apply(xs: AnyRef, idx: Int): Any","d":"scala.runtime.ScalaRunTime","k":"def","x":"Retrieve generic array element"},
{"l":"api/scala/runtime/ScalaRunTime$.html#array_clone-d26","e":false,"i":"","n":"array_clone","t":"array_clone(xs: AnyRef): AnyRef","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#array_length-fffffaf4","e":false,"i":"","n":"array_length","t":"array_length(xs: AnyRef): Int","d":"scala.runtime.ScalaRunTime","k":"def","x":"Get generic array length"},
{"l":"api/scala/runtime/ScalaRunTime$.html#array_update-913","e":false,"i":"","n":"array_update","t":"array_update(xs: AnyRef, idx: Int, value: Any): Unit","d":"scala.runtime.ScalaRunTime","k":"def","x":"update generic array element"},
{"l":"api/scala/runtime/ScalaRunTime$.html#drop-fffff5cb","e":false,"i":"","n":"drop","t":"drop[Repr](coll: Repr, num: Int)(implicit iterable: IsIterable[Repr] { type C <: Repr;  }): Repr","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#ensureAccessible-50c","e":false,"i":"","n":"ensureAccessible","t":"ensureAccessible(m: Method): Method","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#genericWrapArray-fffffab6","e":false,"i":"","n":"genericWrapArray","t":"genericWrapArray[T](xs: Array[T]): ArraySeq[T]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#isArray-fffff8ec","e":false,"i":"","n":"isArray","t":"isArray(x: Any, atLevel: Int): Boolean","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#replStringOf-fffff959","e":false,"i":"","n":"replStringOf","t":"replStringOf(arg: Any, maxElements: Int): String","d":"scala.runtime.ScalaRunTime","k":"def","x":"stringOf formatted for use in a repl result."},
{"l":"api/scala/runtime/ScalaRunTime$.html#stringOf-9f8","e":false,"i":"","n":"stringOf","t":"stringOf(arg: Any): String","d":"scala.runtime.ScalaRunTime","k":"def","x":"Given any Scala value, convert it to a String."},
{"l":"api/scala/runtime/ScalaRunTime$.html#stringOf-fffff959","e":false,"i":"","n":"stringOf","t":"stringOf(arg: Any, maxElements: Int): String","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#toArray-e7d","e":false,"i":"","n":"toArray","t":"toArray[T](xs: Seq[T]): Array[AnyRef]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#toObjectArray-708","e":false,"i":"","n":"toObjectArray","t":"toObjectArray(src: AnyRef): Array[Object]","d":"scala.runtime.ScalaRunTime","k":"def","x":"Convert an array to an object array.\nNeeded to deal with vararg arguments of primitive types that are passed\nto a generic Java vararg parameter T ...\n"},
{"l":"api/scala/runtime/ScalaRunTime$.html#typedProductIterator-fffff660","e":false,"i":"","n":"typedProductIterator","t":"typedProductIterator[T](x: Product): Iterator[T]","d":"scala.runtime.ScalaRunTime","k":"def","x":"A helper for case classes."},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapBooleanArray-fffff6f8","e":false,"i":"","n":"wrapBooleanArray","t":"wrapBooleanArray(xs: Array[Boolean]): ArraySeq[Boolean]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapByteArray-fffff388","e":false,"i":"","n":"wrapByteArray","t":"wrapByteArray(xs: Array[Byte]): ArraySeq[Byte]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapCharArray-9fa","e":false,"i":"","n":"wrapCharArray","t":"wrapCharArray(xs: Array[Char]): ArraySeq[Char]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapDoubleArray-fffff45f","e":false,"i":"","n":"wrapDoubleArray","t":"wrapDoubleArray(xs: Array[Double]): ArraySeq[Double]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapFloatArray-fffff344","e":false,"i":"","n":"wrapFloatArray","t":"wrapFloatArray(xs: Array[Float]): ArraySeq[Float]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapIntArray-f91","e":false,"i":"","n":"wrapIntArray","t":"wrapIntArray(xs: Array[Int]): ArraySeq[Int]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapLongArray-fffff694","e":false,"i":"","n":"wrapLongArray","t":"wrapLongArray(xs: Array[Long]): ArraySeq[Long]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapRefArray-fffff514","e":false,"i":"","n":"wrapRefArray","t":"wrapRefArray[T <: AnyRef](xs: Array[T]): ArraySeq[T]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapShortArray-524","e":false,"i":"","n":"wrapShortArray","t":"wrapShortArray(xs: Array[Short]): ArraySeq[Short]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaRunTime$.html#wrapUnitArray-168","e":false,"i":"","n":"wrapUnitArray","t":"wrapUnitArray(xs: Array[Unit]): ArraySeq[Unit]","d":"scala.runtime.ScalaRunTime","k":"def","x":""},
{"l":"api/scala/runtime/ScalaWholeNumberProxy.html#","e":false,"i":"","n":"ScalaWholeNumberProxy","t":"ScalaWholeNumberProxy[T] extends ScalaNumberProxy[T]","d":"scala.runtime","k":"trait","x":""},
{"l":"api/scala/runtime/ScalaWholeNumberProxy.html#isWhole-0","e":false,"i":"","n":"isWhole","t":"isWhole: Boolean","d":"scala.runtime.ScalaWholeNumberProxy","k":"def","x":""},
{"l":"api/scala/runtime/StructuralCallSite.html#","e":false,"i":"","n":"StructuralCallSite","t":"StructuralCallSite","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/StructuralCallSite.html#add-5b0","e":false,"i":"","n":"add","t":"add(receiver: Class[_], m: Method): Method","d":"scala.runtime.StructuralCallSite","k":"def","x":""},
{"l":"api/scala/runtime/StructuralCallSite.html#find-fffff02a","e":false,"i":"","n":"find","t":"find(receiver: Class[_]): Method","d":"scala.runtime.StructuralCallSite","k":"def","x":""},
{"l":"api/scala/runtime/StructuralCallSite.html#get-0","e":false,"i":"","n":"get","t":"get: MethodCache","d":"scala.runtime.StructuralCallSite","k":"def","x":""},
{"l":"api/scala/runtime/StructuralCallSite.html#parameterTypes-0","e":false,"i":"","n":"parameterTypes","t":"parameterTypes: Array[Class[_]]","d":"scala.runtime.StructuralCallSite","k":"val","x":""},
{"l":"api/scala/runtime/StructuralCallSite$.html#","e":false,"i":"","n":"StructuralCallSite","t":"StructuralCallSite","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/StructuralCallSite$.html#bootstrap-fffff596","e":false,"i":"","n":"bootstrap","t":"bootstrap(lookup: Lookup, invokedName: String, invokedType: MethodType, reflectiveCallType: MethodType): CallSite","d":"scala.runtime.StructuralCallSite","k":"def","x":""},
{"l":"api/scala/runtime/Tuple2Zipped.html#","e":false,"i":"","n":"Tuple2Zipped","t":"Tuple2Zipped[El1, It1 <: Iterable[El1], El2, It2 <: Iterable[El2]](colls: (It1, It2)) extends AnyVal, ZippedIterable2[El1, El2]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/Tuple2Zipped.html#exists-fffff00e","e":false,"i":"","n":"exists","t":"exists(p: (El1, El2) => Boolean): Boolean","d":"scala.runtime.Tuple2Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple2Zipped.html#filter-fffff432","e":false,"i":"","n":"filter","t":"filter[To1, To2](f: (El1, El2) => Boolean)(implicit bf1: BuildFrom[It1, El1, To1], bf2: BuildFrom[It2, El2, To2]): (To1, To2)","d":"scala.runtime.Tuple2Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple2Zipped.html#flatMap-723","e":false,"i":"","n":"flatMap","t":"flatMap[B, To](f: (El1, El2) => IterableOnce[B])(implicit bf: BuildFrom[It1, B, To]): To","d":"scala.runtime.Tuple2Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple2Zipped.html#forall-fffff00e","e":false,"i":"","n":"forall","t":"forall(p: (El1, El2) => Boolean): Boolean","d":"scala.runtime.Tuple2Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple2Zipped.html#foreach-fffff84d","e":false,"i":"","n":"foreach","t":"foreach[U](f: (El1, El2) => U): Unit","d":"scala.runtime.Tuple2Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple2Zipped.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(El1, El2)]","d":"scala.runtime.Tuple2Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple2Zipped.html#map-723","e":false,"i":"","n":"map","t":"map[B, To](f: (El1, El2) => B)(implicit bf: BuildFrom[It1, B, To]): To","d":"scala.runtime.Tuple2Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple2Zipped$.html#","e":false,"i":"","n":"Tuple2Zipped","t":"Tuple2Zipped","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/Tuple2Zipped$$Ops.html#","e":false,"i":"","n":"Ops","t":"Ops[T1, T2](x: (T1, T2)) extends AnyVal","d":"scala.runtime.Tuple2Zipped","k":"class","x":""},
{"l":"api/scala/runtime/Tuple2Zipped$$Ops.html#invert-fffff078","e":false,"i":"","n":"invert","t":"invert[El1, It1 <: (Iterable), El2, It2 <: (Iterable), That](implicit w1: T1 <:< It1[El1], w2: T2 <:< It2[El2], bf: BuildFrom[T1, (El1, El2), That]): That","d":"scala.runtime.Tuple2Zipped.Ops","k":"def","x":""},
{"l":"api/scala/runtime/Tuple2Zipped$$Ops.html#zipped-fffffa46","e":false,"i":"","n":"zipped","t":"zipped[El1, It1 <: Iterable[El1], El2, It2 <: Iterable[El2]](implicit w1: T1 => IterableOps[El1, Iterable, It1] & It1, w2: T2 => IterableOps[El2, Iterable, It2] & It2): Tuple2Zipped[El1, It1, El2, It2]","d":"scala.runtime.Tuple2Zipped.Ops","k":"def","x":""},
{"l":"api/scala/runtime/Tuple3Zipped.html#","e":false,"i":"","n":"Tuple3Zipped","t":"Tuple3Zipped[El1, It1 <: Iterable[El1], El2, It2 <: Iterable[El2], El3, It3 <: Iterable[El3]](colls: (It1, It2, It3)) extends AnyVal, ZippedIterable3[El1, El2, El3]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/Tuple3Zipped.html#exists-fffff9ad","e":false,"i":"","n":"exists","t":"exists(p: (El1, El2, El3) => Boolean): Boolean","d":"scala.runtime.Tuple3Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple3Zipped.html#filter-d83","e":false,"i":"","n":"filter","t":"filter[To1, To2, To3](f: (El1, El2, El3) => Boolean)(implicit bf1: BuildFrom[It1, El1, To1], bf2: BuildFrom[It2, El2, To2], bf3: BuildFrom[It3, El3, To3]): (To1, To2, To3)","d":"scala.runtime.Tuple3Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple3Zipped.html#flatMap-5e4","e":false,"i":"","n":"flatMap","t":"flatMap[B, To](f: (El1, El2, El3) => IterableOnce[B])(implicit bf: BuildFrom[It1, B, To]): To","d":"scala.runtime.Tuple3Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple3Zipped.html#forall-fffff9ad","e":false,"i":"","n":"forall","t":"forall(p: (El1, El2, El3) => Boolean): Boolean","d":"scala.runtime.Tuple3Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple3Zipped.html#foreach-fffffb0e","e":false,"i":"","n":"foreach","t":"foreach[U](f: (El1, El2, El3) => U): Unit","d":"scala.runtime.Tuple3Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple3Zipped.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(El1, El2, El3)]","d":"scala.runtime.Tuple3Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple3Zipped.html#map-5e4","e":false,"i":"","n":"map","t":"map[B, To](f: (El1, El2, El3) => B)(implicit bf: BuildFrom[It1, B, To]): To","d":"scala.runtime.Tuple3Zipped","k":"def","x":""},
{"l":"api/scala/runtime/Tuple3Zipped$.html#","e":false,"i":"","n":"Tuple3Zipped","t":"Tuple3Zipped","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/Tuple3Zipped$$Ops.html#","e":false,"i":"","n":"Ops","t":"Ops[T1, T2, T3](x: (T1, T2, T3)) extends AnyVal","d":"scala.runtime.Tuple3Zipped","k":"class","x":""},
{"l":"api/scala/runtime/Tuple3Zipped$$Ops.html#invert-fffffac2","e":false,"i":"","n":"invert","t":"invert[El1, It1 <: (Iterable), El2, It2 <: (Iterable), El3, It3 <: (Iterable), That](implicit w1: T1 <:< It1[El1], w2: T2 <:< It2[El2], w3: T3 <:< It3[El3], bf: BuildFrom[T1, (El1, El2, El3), That]): That","d":"scala.runtime.Tuple3Zipped.Ops","k":"def","x":""},
{"l":"api/scala/runtime/Tuple3Zipped$$Ops.html#zipped-fffffaee","e":false,"i":"","n":"zipped","t":"zipped[El1, It1 <: Iterable[El1], El2, It2 <: Iterable[El2], El3, It3 <: Iterable[El3]](implicit w1: T1 => IterableOps[El1, Iterable, It1] & It1, w2: T2 => IterableOps[El2, Iterable, It2] & It2, w3: T3 => IterableOps[El3, Iterable, It3] & It3): Tuple3Zipped[El1, It1, El2, It2, El3, It3]","d":"scala.runtime.Tuple3Zipped.Ops","k":"def","x":""},
{"l":"api/scala/runtime/TupleMirror.html#","e":false,"i":"","n":"TupleMirror","t":"TupleMirror(arity: Int) extends Product, Serializable","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/TupleMirror.html#MirroredMonoType-0","e":false,"i":"","n":"MirroredMonoType","t":"MirroredMonoType <: Tuple","d":"scala.runtime.TupleMirror","k":"type","x":""},
{"l":"api/scala/runtime/TupleMirror.html#fromProduct-fffff760","e":false,"i":"","n":"fromProduct","t":"fromProduct(product: Product): MirroredMonoType","d":"scala.runtime.TupleMirror","k":"def","x":""},
{"l":"api/scala/runtime/TupleXXL.html#","e":false,"i":"","n":"TupleXXL","t":"TupleXXL extends Product","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/TupleXXL.html#elems-0","e":false,"i":"","n":"elems","t":"elems: IArray[Object]","d":"scala.runtime.TupleXXL","k":"def","x":""},
{"l":"api/scala/runtime/TupleXXL.html#productArity-0","e":false,"i":"","n":"productArity","t":"productArity: Int","d":"scala.runtime.TupleXXL","k":"def","x":""},
{"l":"api/scala/runtime/TupleXXL.html#productElement-aba","e":false,"i":"","n":"productElement","t":"productElement(n: Int): Any","d":"scala.runtime.TupleXXL","k":"def","x":""},
{"l":"api/scala/runtime/TupleXXL.html#tailXXL-0","e":false,"i":"","n":"tailXXL","t":"tailXXL: TupleXXL","d":"scala.runtime.TupleXXL","k":"def","x":""},
{"l":"api/scala/runtime/TupleXXL.html#toArray-0","e":false,"i":"","n":"toArray","t":"toArray: Array[Object]","d":"scala.runtime.TupleXXL","k":"def","x":""},
{"l":"api/scala/runtime/TupleXXL$.html#","e":false,"i":"","n":"TupleXXL","t":"TupleXXL","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/TupleXXL$.html#apply-fffff98d","e":false,"i":"","n":"apply","t":"apply(elems: Any*): TupleXXL","d":"scala.runtime.TupleXXL","k":"def","x":""},
{"l":"api/scala/runtime/TupleXXL$.html#fromIArray-817","e":false,"i":"","n":"fromIArray","t":"fromIArray(elems: IArray[Object]): TupleXXL","d":"scala.runtime.TupleXXL","k":"def","x":""},
{"l":"api/scala/runtime/TupleXXL$.html#fromIterator-658","e":false,"i":"","n":"fromIterator","t":"fromIterator(elems: Iterator[Any]): TupleXXL","d":"scala.runtime.TupleXXL","k":"def","x":""},
{"l":"api/scala/runtime/TupleXXL$.html#unapplySeq-fffff4df","e":false,"i":"","n":"unapplySeq","t":"unapplySeq(x: TupleXXL): Option[Seq[Any]]","d":"scala.runtime.TupleXXL","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#","e":false,"i":"","n":"TupledFunctions","t":"TupledFunctions","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction0-fffff886","e":false,"i":"","n":"tupledFunction0","t":"tupledFunction0[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction1-fffff886","e":false,"i":"","n":"tupledFunction1","t":"tupledFunction1[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction10-fffff886","e":false,"i":"","n":"tupledFunction10","t":"tupledFunction10[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction11-fffff886","e":false,"i":"","n":"tupledFunction11","t":"tupledFunction11[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction12-fffff886","e":false,"i":"","n":"tupledFunction12","t":"tupledFunction12[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction13-fffff886","e":false,"i":"","n":"tupledFunction13","t":"tupledFunction13[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction14-fffff886","e":false,"i":"","n":"tupledFunction14","t":"tupledFunction14[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction15-fffff886","e":false,"i":"","n":"tupledFunction15","t":"tupledFunction15[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction16-fffff886","e":false,"i":"","n":"tupledFunction16","t":"tupledFunction16[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction17-fffff886","e":false,"i":"","n":"tupledFunction17","t":"tupledFunction17[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction18-fffff886","e":false,"i":"","n":"tupledFunction18","t":"tupledFunction18[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction19-fffff886","e":false,"i":"","n":"tupledFunction19","t":"tupledFunction19[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction2-fffff886","e":false,"i":"","n":"tupledFunction2","t":"tupledFunction2[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction20-fffff886","e":false,"i":"","n":"tupledFunction20","t":"tupledFunction20[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction21-fffff886","e":false,"i":"","n":"tupledFunction21","t":"tupledFunction21[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction22-fffff886","e":false,"i":"","n":"tupledFunction22","t":"tupledFunction22[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction3-fffff886","e":false,"i":"","n":"tupledFunction3","t":"tupledFunction3[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction4-fffff886","e":false,"i":"","n":"tupledFunction4","t":"tupledFunction4[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction5-fffff886","e":false,"i":"","n":"tupledFunction5","t":"tupledFunction5[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction6-fffff886","e":false,"i":"","n":"tupledFunction6","t":"tupledFunction6[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction7-fffff886","e":false,"i":"","n":"tupledFunction7","t":"tupledFunction7[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction8-fffff886","e":false,"i":"","n":"tupledFunction8","t":"tupledFunction8[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunction9-fffff886","e":false,"i":"","n":"tupledFunction9","t":"tupledFunction9[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/TupledFunctions$.html#tupledFunctionXXL-fffff886","e":false,"i":"","n":"tupledFunctionXXL","t":"tupledFunctionXXL[F, G]: TupledFunction[F, G]","d":"scala.runtime.TupledFunctions","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#","e":false,"i":"","n":"Tuples","t":"Tuples","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/Tuples$.html#MaxSpecialized-0","e":false,"i":"","n":"MaxSpecialized","t":"MaxSpecialized: 22","d":"scala.runtime.Tuples","k":"val","x":""},
{"l":"api/scala/runtime/Tuples$.html#append-f33","e":false,"i":"","n":"append","t":"append(x: Any, self: Tuple): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#apply-fffffc73","e":false,"i":"","n":"apply","t":"apply(self: Tuple, n: Int): Any","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#concat-855","e":false,"i":"","n":"concat","t":"concat[This <: Tuple, That <: Tuple](self: This, that: That): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#concatIterator-fffff5d6","e":false,"i":"","n":"concatIterator","t":"concatIterator(tup1: Tuple, tup2: Tuple): Iterator[Any]","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#cons-f33","e":false,"i":"","n":"cons","t":"cons(x: Any, self: Tuple): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#consIterator-fffff642","e":false,"i":"","n":"consIterator","t":"consIterator(head: Any, tail: Tuple): Iterator[Any]","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#drop-147","e":false,"i":"","n":"drop","t":"drop(self: Tuple, n: Int): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#fromArray-a12","e":false,"i":"","n":"fromArray","t":"fromArray(xs: Array[Object]): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#fromIArray-a12","e":false,"i":"","n":"fromIArray","t":"fromIArray(xs: IArray[Object]): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#fromProduct-fffff760","e":false,"i":"","n":"fromProduct","t":"fromProduct(xs: Product): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#init-fffff760","e":false,"i":"","n":"init","t":"init(self: Tuple): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#isInstanceOfEmptyTuple-4ad","e":false,"i":"","n":"isInstanceOfEmptyTuple","t":"isInstanceOfEmptyTuple(x: Any): Boolean","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#isInstanceOfNonEmptyTuple-4ad","e":false,"i":"","n":"isInstanceOfNonEmptyTuple","t":"isInstanceOfNonEmptyTuple(x: Any): Boolean","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#isInstanceOfTuple-4ad","e":false,"i":"","n":"isInstanceOfTuple","t":"isInstanceOfTuple(x: Any): Boolean","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#last-3ba","e":false,"i":"","n":"last","t":"last(self: Tuple): Any","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#map-9cc","e":false,"i":"","n":"map","t":"map[F[_]](self: Tuple, f: [t] => t => F[t]): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#productToArray-fffff89c","e":false,"i":"","n":"productToArray","t":"productToArray(self: Product): Array[Object]","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#reverse-fffff760","e":false,"i":"","n":"reverse","t":"reverse(self: Tuple): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#size-fffff2e0","e":false,"i":"","n":"size","t":"size(self: Tuple): Int","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#splitAt-fffff212","e":false,"i":"","n":"splitAt","t":"splitAt(self: Tuple, n: Int): (Tuple, Tuple)","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#tail-fffff760","e":false,"i":"","n":"tail","t":"tail(self: Tuple): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#take-147","e":false,"i":"","n":"take","t":"take(self: Tuple, n: Int): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#toArray-fffff89c","e":false,"i":"","n":"toArray","t":"toArray(self: Tuple): Array[Object]","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#toIArray-fffff89c","e":false,"i":"","n":"toIArray","t":"toIArray(self: Tuple): IArray[Object]","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/Tuples$.html#zip-cc7","e":false,"i":"","n":"zip","t":"zip(t1: Tuple, t2: Tuple): Tuple","d":"scala.runtime.Tuples","k":"def","x":""},
{"l":"api/scala/runtime/TypeBox.html#","e":false,"i":"","n":"TypeBox","t":"TypeBox[-L <: U, +U]","d":"scala.runtime","k":"class","x":""},
{"l":"api/scala/runtime/TypeBox.html#CAP-0","e":false,"i":"","n":"CAP","t":"CAP >: L <: U","d":"scala.runtime.TypeBox","k":"type","x":""},
{"l":"api/scala/runtime/ZippedIterable2.html#","e":false,"i":"","n":"ZippedIterable2","t":"ZippedIterable2[+El1, +El2]","d":"scala.runtime","k":"trait","x":"This interface is intended as a minimal interface, not complicated\nby the requirement to resolve type constructors, for implicit search (which only\nneeds to find an implicit conversion to Iterable for our purposes.)\n"},
{"l":"api/scala/runtime/ZippedIterable2.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.runtime.ZippedIterable2","k":"def","x":""},
{"l":"api/scala/runtime/ZippedIterable2.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(El1, El2)]","d":"scala.runtime.ZippedIterable2","k":"def","x":""},
{"l":"api/scala/runtime/ZippedIterable2$.html#","e":false,"i":"","n":"ZippedIterable2","t":"ZippedIterable2","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/ZippedIterable2$.html#zippedIterable2ToIterable-fffffdf8","e":false,"i":"","n":"zippedIterable2ToIterable","t":"zippedIterable2ToIterable[El1, El2](zz: ZippedIterable2[El1, El2]): Iterable[(El1, El2)]","d":"scala.runtime.ZippedIterable2","k":"def","x":""},
{"l":"api/scala/runtime/ZippedIterable3.html#","e":false,"i":"","n":"ZippedIterable3","t":"ZippedIterable3[+El1, +El2, +El3]","d":"scala.runtime","k":"trait","x":"See comment on ZippedIterable2\n"},
{"l":"api/scala/runtime/ZippedIterable3.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.runtime.ZippedIterable3","k":"def","x":""},
{"l":"api/scala/runtime/ZippedIterable3.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(El1, El2, El3)]","d":"scala.runtime.ZippedIterable3","k":"def","x":""},
{"l":"api/scala/runtime/ZippedIterable3$.html#","e":false,"i":"","n":"ZippedIterable3","t":"ZippedIterable3","d":"scala.runtime","k":"object","x":""},
{"l":"api/scala/runtime/ZippedIterable3$.html#zippedIterable3ToIterable-fffff658","e":false,"i":"","n":"zippedIterable3ToIterable","t":"zippedIterable3ToIterable[El1, El2, El3](zz: ZippedIterable3[El1, El2, El3]): Iterable[(El1, El2, El3)]","d":"scala.runtime.ZippedIterable3","k":"def","x":""},
{"l":"api/scala/sys.html#","e":false,"i":"","n":"scala.sys","t":"scala.sys","d":"","k":"package","x":"The package object scala.sys contains methods for reading\nand altering core aspects of the virtual machine as well as the\nworld outside of it.\n"},
{"l":"api/scala/sys.html#addShutdownHook-f1c","e":false,"i":"","n":"addShutdownHook","t":"addShutdownHook(body: => Unit): ShutdownHookThread","d":"scala.sys","k":"def","x":"Register a shutdown hook to be run when the VM exits.\nThe hook is automatically registered: the returned value can be ignored,\nbut is available in case the Thread requires further modification.\nIt can also be unregistered by calling ShutdownHookThread#remove()."},
{"l":"api/scala/sys.html#allThreads-fffffe62","e":false,"i":"","n":"allThreads","t":"allThreads(): IndexedSeq[Thread]","d":"scala.sys","k":"def","x":"Returns all active thread in the current thread's thread group and subgroups.\n"},
{"l":"api/scala/sys.html#env-0","e":false,"i":"","n":"env","t":"env: Map[String, String]","d":"scala.sys","k":"def","x":"An immutable Map representing the current system environment."},
{"l":"api/scala/sys.html#error-8c0","e":false,"i":"","n":"error","t":"error(message: String): Nothing","d":"scala.sys","k":"def","x":"Throw a new RuntimeException with the supplied message.\n"},
{"l":"api/scala/sys.html#exit-305","e":false,"i":"","n":"exit","t":"exit(): Nothing","d":"scala.sys","k":"def","x":"Exit the JVM with the default status code.\n"},
{"l":"api/scala/sys.html#exit-b3e","e":false,"i":"","n":"exit","t":"exit(status: Int): Nothing","d":"scala.sys","k":"def","x":"Exit the JVM with the given status code.\n"},
{"l":"api/scala/sys.html#props-0","e":false,"i":"","n":"props","t":"props: SystemProperties","d":"scala.sys","k":"def","x":"A bidirectional, mutable Map representing the current system Properties.\n"},
{"l":"api/scala/sys.html#runtime-0","e":false,"i":"","n":"runtime","t":"runtime: Runtime","d":"scala.sys","k":"def","x":"A convenience method to get the current Runtime instance.\n"},
{"l":"api/scala/sys/process.html#","e":false,"i":"","n":"scala.sys.process","t":"scala.sys.process","d":"","k":"package","x":"This package handles the execution of external processes.  The contents of\nthis package can be divided in three groups, according to their\nresponsibilities:"},
{"l":"api/scala/sys/process.html#stderr-0","e":false,"i":"","n":"stderr","t":"stderr: PrintStream","d":"scala.sys.process","k":"def","x":"The error stream of this process"},
{"l":"api/scala/sys/process.html#stdin-0","e":false,"i":"","n":"stdin","t":"stdin: InputStream","d":"scala.sys.process","k":"def","x":"The input stream of this process"},
{"l":"api/scala/sys/process.html#stdout-0","e":false,"i":"","n":"stdout","t":"stdout: PrintStream","d":"scala.sys.process","k":"def","x":"The output stream of this process"},
{"l":"api/scala/sys/process/BasicIO$.html#","e":false,"i":"","n":"BasicIO","t":"BasicIO","d":"scala.sys.process","k":"object","x":"This object contains factories for scala.sys.process.ProcessIO,\nwhich can be used to control the I/O of a scala.sys.process.Process\nwhen a scala.sys.process.ProcessBuilder is started with the run\ncommand."},
{"l":"api/scala/sys/process/BasicIO$.html#BufferSize-0","e":false,"i":"","n":"BufferSize","t":"BufferSize: 8192","d":"scala.sys.process.BasicIO","k":"val","x":"Size of the buffer used in all the functions that copy data"},
{"l":"api/scala/sys/process/BasicIO$.html#Newline-0","e":false,"i":"","n":"Newline","t":"Newline: String","d":"scala.sys.process.BasicIO","k":"val","x":"Used to separate lines in the processFully function that takes Appendable."},
{"l":"api/scala/sys/process/BasicIO$.html#apply-fffff0bf","e":false,"i":"","n":"apply","t":"apply(withIn: Boolean, output: String => Unit, log: Option[ProcessLogger]): ProcessIO","d":"scala.sys.process.BasicIO","k":"def","x":"Creates a ProcessIO from a function String => Unit. It can attach the\nprocess input to stdin, and it will either send the error stream to\nstderr, or to a ProcessLogger."},
{"l":"api/scala/sys/process/BasicIO$.html#apply-ee8","e":false,"i":"","n":"apply","t":"apply(withIn: Boolean, buffer: Appendable, log: Option[ProcessLogger]): ProcessIO","d":"scala.sys.process.BasicIO","k":"def","x":"Creates a ProcessIO that appends its output to an Appendable. It can\nattach the process input to stdin, and it will either send the error\nstream to stderr, or to a ProcessLogger."},
{"l":"api/scala/sys/process/BasicIO$.html#apply-ff6","e":false,"i":"","n":"apply","t":"apply(withIn: Boolean, log: ProcessLogger): ProcessIO","d":"scala.sys.process.BasicIO","k":"def","x":"Creates a ProcessIO from a ProcessLogger . It can attach the\nprocess input to stdin.\n"},
{"l":"api/scala/sys/process/BasicIO$.html#close-682","e":false,"i":"","n":"close","t":"close(c: Closeable): Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Closes a Closeable without throwing an exception"},
{"l":"api/scala/sys/process/BasicIO$.html#connectToIn-fffff509","e":false,"i":"","n":"connectToIn","t":"connectToIn(o: OutputStream): Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Copy contents of stdin to the OutputStream."},
{"l":"api/scala/sys/process/BasicIO$.html#getErr-cb4","e":false,"i":"","n":"getErr","t":"getErr(log: Option[ProcessLogger]): InputStream => Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Returns a function InputStream => Unit given an optional\nProcessLogger. If no logger is passed, the function will send the output\nto stderr. This function can be used to create a\nscala.sys.process.ProcessIO.\n"},
{"l":"api/scala/sys/process/BasicIO$.html#input-131","e":false,"i":"","n":"input","t":"input(connect: Boolean): OutputStream => Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Returns a function OutputStream => Unit that either reads the content\nfrom stdin or does nothing but close the stream. This function can be used by\nscala.sys.process.ProcessIO.\n"},
{"l":"api/scala/sys/process/BasicIO$.html#processFully-7c9","e":false,"i":"","n":"processFully","t":"processFully(buffer: Appendable): InputStream => Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Returns a function InputStream => Unit that appends all data read to the\nprovided Appendable. This function can be used to create a\nscala.sys.process.ProcessIO. The buffer will be appended line by line.\n"},
{"l":"api/scala/sys/process/BasicIO$.html#processFully-be0","e":false,"i":"","n":"processFully","t":"processFully(processLine: String => Unit): InputStream => Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Returns a function InputStream => Unit that will call the passed\nfunction with all data read. This function can be used to create a\nscala.sys.process.ProcessIO. The processLine function will be called\nwith each line read, and Newline will be appended after each line.\n"},
{"l":"api/scala/sys/process/BasicIO$.html#processLinesFully-fffffa6b","e":false,"i":"","n":"processLinesFully","t":"processLinesFully(processLine: String => Unit)(readLine: () => String): Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Calls processLine with the result of readLine until the latter returns\nnull or the current thread is interrupted.\n"},
{"l":"api/scala/sys/process/BasicIO$.html#standard-fffff80d","e":false,"i":"","n":"standard","t":"standard(connectInput: Boolean): ProcessIO","d":"scala.sys.process.BasicIO","k":"def","x":"Returns a ProcessIO connected to stdout and stderr, and, optionally, stdin."},
{"l":"api/scala/sys/process/BasicIO$.html#standard-fffff43c","e":false,"i":"","n":"standard","t":"standard(in: OutputStream => Unit): ProcessIO","d":"scala.sys.process.BasicIO","k":"def","x":"Returns a ProcessIO connected to stdout, stderr and the provided in"},
{"l":"api/scala/sys/process/BasicIO$.html#toStdErr-0","e":false,"i":"","n":"toStdErr","t":"toStdErr: InputStream => Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Send all the input from the stream to stderr, and closes the input stream\nafterwards.\n"},
{"l":"api/scala/sys/process/BasicIO$.html#toStdOut-0","e":false,"i":"","n":"toStdOut","t":"toStdOut: InputStream => Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Send all the input from the stream to stdout, and closes the input stream\nafterwards.\n"},
{"l":"api/scala/sys/process/BasicIO$.html#transferFully-fffff4d7","e":false,"i":"","n":"transferFully","t":"transferFully(in: InputStream, out: OutputStream): Unit","d":"scala.sys.process.BasicIO","k":"def","x":"Copy all input from the input stream to the output stream. Closes the\ninput stream once it's all read.\n"},
{"l":"api/scala/sys/process/FileProcessLogger.html#","e":false,"i":"","n":"FileProcessLogger","t":"FileProcessLogger(file: File) extends ProcessLogger, Closeable, Flushable","d":"scala.sys.process","k":"class","x":"A scala.sys.process.ProcessLogger that writes output to a file."},
{"l":"api/scala/sys/process/FileProcessLogger.html#buffer-fffff7d2","e":false,"i":"","n":"buffer","t":"buffer[T](f: => T): T","d":"scala.sys.process.FileProcessLogger","k":"def","x":"If a process is begun with one of these ProcessBuilder methods:"},
{"l":"api/scala/sys/process/FileProcessLogger.html#close-94c","e":false,"i":"","n":"close","t":"close(): Unit","d":"scala.sys.process.FileProcessLogger","k":"def","x":""},
{"l":"api/scala/sys/process/FileProcessLogger.html#err-9dc","e":false,"i":"","n":"err","t":"err(s: => String): Unit","d":"scala.sys.process.FileProcessLogger","k":"def","x":"Will be called with each line read from the process error stream.\n"},
{"l":"api/scala/sys/process/FileProcessLogger.html#flush-94c","e":false,"i":"","n":"flush","t":"flush(): Unit","d":"scala.sys.process.FileProcessLogger","k":"def","x":""},
{"l":"api/scala/sys/process/FileProcessLogger.html#out-9dc","e":false,"i":"","n":"out","t":"out(s: => String): Unit","d":"scala.sys.process.FileProcessLogger","k":"def","x":"Will be called with each line read from the process output stream.\n"},
{"l":"api/scala/sys/process/Process.html#","e":false,"i":"","n":"Process","t":"Process","d":"scala.sys.process","k":"trait","x":"Represents a process that is running or has finished running.\nIt may be a compound process with several underlying native processes (such as a #&& b)."},
{"l":"api/scala/sys/process/Process.html#destroy-94c","e":false,"i":"","n":"destroy","t":"destroy(): Unit","d":"scala.sys.process.Process","k":"def","x":"Destroys this process."},
{"l":"api/scala/sys/process/Process.html#exitValue-ffffff27","e":false,"i":"","n":"exitValue","t":"exitValue(): Int","d":"scala.sys.process.Process","k":"def","x":"Blocks until this process exits and returns the exit code."},
{"l":"api/scala/sys/process/Process.html#isAlive-fffff760","e":false,"i":"","n":"isAlive","t":"isAlive(): Boolean","d":"scala.sys.process.Process","k":"def","x":"Returns this process alive status"},
{"l":"api/scala/sys/process/Process$.html#","e":false,"i":"","n":"Process","t":"Process extends ProcessCreation","d":"scala.sys.process","k":"object","x":"Methods for constructing simple commands that can then be combined."},
{"l":"api/scala/sys/process/ProcessBuilder.html#","e":false,"i":"","n":"ProcessBuilder","t":"ProcessBuilder extends Source, Sink","d":"scala.sys.process","k":"trait","x":"Represents a sequence of one or more external processes that can be\nexecuted. A ProcessBuilder can be a single external process, or a\ncombination of other ProcessBuilder. One can control where the\noutput of an external process will go to, and where its input will come\nfrom, or leave that decision to whoever starts it."},
{"l":"api/scala/sys/process/ProcessBuilder.html#!-0","e":false,"i":"","n":"!","t":"!: Int","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder, blocks until it exits, and\nreturns the exit code.  Standard output and error are sent to the console.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#!-fffffc90","e":false,"i":"","n":"!","t":"!(log: ProcessLogger): Int","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder, blocks until it exits, and\nreturns the exit code.  Standard output and error are sent to the given\nProcessLogger.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#!!-0","e":false,"i":"","n":"!!","t":"!!: String","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder, blocks until it exits, and\nreturns the output as a String.  Standard error is sent to the console.  If\nthe exit code is non-zero, an exception is thrown.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#!!-dc","e":false,"i":"","n":"!!","t":"!!(log: ProcessLogger): String","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder, blocks until it exits, and\nreturns the output as a String.  Standard error is sent to the provided\nProcessLogger.  If the exit code is non-zero, an exception is thrown.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#!!<-0","e":false,"i":"","n":"!!<","t":"!!<: String","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder, blocks until it exits, and\nreturns the output as a String.  Standard error is sent to the console.  If\nthe exit code is non-zero, an exception is thrown.  The newly started\nprocess reads from standard input of the current process.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#!!<-dc","e":false,"i":"","n":"!!<","t":"!!<(log: ProcessLogger): String","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder, blocks until it exits, and\nreturns the output as a String.  Standard error is sent to the provided\nProcessLogger.  If the exit code is non-zero, an exception is thrown.  The\nnewly started process reads from standard input of the current process.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#!<-0","e":false,"i":"","n":"!<","t":"!<: Int","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder, blocks until it exits, and\nreturns the exit code.  Standard output and error are sent to the console.\nThe newly started process reads from standard input of the current process.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#!<-fffffc90","e":false,"i":"","n":"!<","t":"!<(log: ProcessLogger): Int","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder, blocks until it exits, and\nreturns the exit code.  Standard output and error are sent to the given\nProcessLogger.  The newly started process reads from standard input of the\ncurrent process.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html####-328","e":false,"i":"","n":"###","t":"###(other: ProcessBuilder): ProcessBuilder","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Constructs a command that will run this command and then other.  The\nexit code will be the exit code of other.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html##&&-328","e":false,"i":"","n":"#&&","t":"#&&(other: ProcessBuilder): ProcessBuilder","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Constructs a command that runs this command first and then other if this\ncommand succeeds.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html##|-328","e":false,"i":"","n":"#|","t":"#|(other: ProcessBuilder): ProcessBuilder","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Constructs a command that will run this command and pipes the output to\nother.  other must be a simple command.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html##||-328","e":false,"i":"","n":"#||","t":"#||(other: ProcessBuilder): ProcessBuilder","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Constructs a command that runs this command first and then other if this\ncommand does not succeed.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#canPipeTo-0","e":false,"i":"","n":"canPipeTo","t":"canPipeTo: Boolean","d":"scala.sys.process.ProcessBuilder","k":"def","x":"True if this command can be the target of a pipe."},
{"l":"api/scala/sys/process/ProcessBuilder.html#hasExitValue-0","e":false,"i":"","n":"hasExitValue","t":"hasExitValue: Boolean","d":"scala.sys.process.ProcessBuilder","k":"def","x":"True if this command has an exit code which should be propagated to the\nuser.  Given a pipe between A and B, if B.hasExitValue is true then the\nexit code will be the one from B; if it is false, the one from A.  This\nexists to prevent output redirections (implemented as pipes) from masking\nuseful process error codes.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lazyLines-0","e":false,"i":"","n":"lazyLines","t":"lazyLines: LazyList[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na LazyList that blocks when lines are not available but the process has not\ncompleted.  Standard error is sent to the console.  If the process exits\nwith a non-zero value, the LazyList will provide all lines up to termination\nand then throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lazyLines-23c","e":false,"i":"","n":"lazyLines","t":"lazyLines(capacity: Integer): LazyList[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na LazyList that blocks when lines are not available but the process has not\ncompleted.\nThe producer process will block if the given capacity of lines if filled\nwithout being consumed from the LazyList.\nStandard error is sent to the console.  If the process exits\nwith a non-zero value, the LazyList will provide all lines up to termination\nand then throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lazyLines-c0f","e":false,"i":"","n":"lazyLines","t":"lazyLines(log: ProcessLogger): LazyList[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na LazyList that blocks when lines are not available but the process has not\ncompleted.  Standard error is sent to the provided ProcessLogger.  If the\nprocess exits with a non-zero value, the LazyList will provide all lines up\nto termination and then throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lazyLines-d33","e":false,"i":"","n":"lazyLines","t":"lazyLines(log: ProcessLogger, capacity: Integer): LazyList[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na LazyList that blocks when lines are not available but the process has not\ncompleted.\nThe producer process will block if the given capacity of lines if filled\nwithout being consumed from the LazyList.\nStandard error is sent to the provided ProcessLogger.  If the\nprocess exits with a non-zero value, the LazyList will provide all lines up\nto termination and then throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lazyLines_!-0","e":false,"i":"","n":"lazyLines_!","t":"lazyLines_!: LazyList[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na LazyList that blocks when lines are not available but the process has not\ncompleted.  Standard error is sent to the console. If the process exits\nwith a non-zero value, the LazyList will provide all lines up to termination\nbut will not throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lazyLines_!-23c","e":false,"i":"","n":"lazyLines_!","t":"lazyLines_!(capacity: Integer): LazyList[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na LazyList that blocks when lines are not available but the process has not\ncompleted.\nThe producer process will block if the given capacity of lines if filled\nwithout being consumed from the stream.\nStandard error is sent to the console. If the process exits\nwith a non-zero value, the LazyList will provide all lines up to termination\nbut will not throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lazyLines_!-c0f","e":false,"i":"","n":"lazyLines_!","t":"lazyLines_!(log: ProcessLogger): LazyList[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na LazyList that blocks when lines are not available but the process has not\ncompleted.  Standard error is sent to the provided ProcessLogger. If the\nprocess exits with a non-zero value, the LazyList will provide all lines up\nto termination but will not throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lazyLines_!-d33","e":false,"i":"","n":"lazyLines_!","t":"lazyLines_!(log: ProcessLogger, capacity: Integer): LazyList[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na LazyList that blocks when lines are not available but the process has not\ncompleted.\nThe producer process will block if the given capacity of lines if filled\nwithout being consumed from the stream.\nStandard error is sent to the provided ProcessLogger. If the\nprocess exits with a non-zero value, the LazyList will provide all lines up\nto termination but will not throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lineStream-0","e":false,"i":"","n":"lineStream","t":"lineStream: Stream[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na Stream that blocks when lines are not available but the process has not\ncompleted.  Standard error is sent to the console.  If the process exits\nwith a non-zero value, the Stream will provide all lines up to termination\nand then throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lineStream-e0a","e":false,"i":"","n":"lineStream","t":"lineStream(capacity: Integer): Stream[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na Stream that blocks when lines are not available but the process has not\ncompleted.\nThe producer process will block if the given capacity of lines if filled\nwithout being consumed from the stream.\nStandard error is sent to the console.  If the process exits\nwith a non-zero value, the Stream will provide all lines up to termination\nand then throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lineStream-fffff09d","e":false,"i":"","n":"lineStream","t":"lineStream(log: ProcessLogger): Stream[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na Stream that blocks when lines are not available but the process has not\ncompleted.  Standard error is sent to the provided ProcessLogger.  If the\nprocess exits with a non-zero value, the Stream will provide all lines up\nto termination and then throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lineStream-fffffac1","e":false,"i":"","n":"lineStream","t":"lineStream(log: ProcessLogger, capacity: Integer): Stream[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na Stream that blocks when lines are not available but the process has not\ncompleted.\nThe producer process will block if the given capacity of lines if filled\nwithout being consumed from the stream.\nStandard error is sent to the provided ProcessLogger.  If the\nprocess exits with a non-zero value, the Stream will provide all lines up\nto termination and then throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lineStream_!-0","e":false,"i":"","n":"lineStream_!","t":"lineStream_!: Stream[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na Stream that blocks when lines are not available but the process has not\ncompleted.  Standard error is sent to the console. If the process exits\nwith a non-zero value, the Stream will provide all lines up to termination\nbut will not throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lineStream_!-e0a","e":false,"i":"","n":"lineStream_!","t":"lineStream_!(capacity: Integer): Stream[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na Stream that blocks when lines are not available but the process has not\ncompleted.\nThe producer process will block if the given capacity of lines if filled\nwithout being consumed from the stream.\nStandard error is sent to the console. If the process exits\nwith a non-zero value, the Stream will provide all lines up to termination\nbut will not throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lineStream_!-fffff09d","e":false,"i":"","n":"lineStream_!","t":"lineStream_!(log: ProcessLogger): Stream[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na Stream that blocks when lines are not available but the process has not\ncompleted.  Standard error is sent to the provided ProcessLogger. If the\nprocess exits with a non-zero value, the Stream will provide all lines up\nto termination but will not throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#lineStream_!-fffffac1","e":false,"i":"","n":"lineStream_!","t":"lineStream_!(log: ProcessLogger, capacity: Integer): Stream[String]","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  The output is returned as\na Stream that blocks when lines are not available but the process has not\ncompleted.\nThe producer process will block if the given capacity of lines if filled\nwithout being consumed from the stream.\nStandard error is sent to the provided ProcessLogger. If the\nprocess exits with a non-zero value, the Stream will provide all lines up\nto termination but will not throw an exception.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#run-fffff807","e":false,"i":"","n":"run","t":"run(): Process","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  Standard output and error\nare sent to the console."},
{"l":"api/scala/sys/process/ProcessBuilder.html#run-fffff370","e":false,"i":"","n":"run","t":"run(log: ProcessLogger): Process","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  Standard output and error\nare sent to the given ProcessLogger.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#run-13a","e":false,"i":"","n":"run","t":"run(io: ProcessIO): Process","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  I/O is handled by the\ngiven ProcessIO instance.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#run-ca7","e":false,"i":"","n":"run","t":"run(connectInput: Boolean): Process","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  Standard output and error\nare sent to the console.  The newly started process reads from standard\ninput of the current process if connectInput is true.\n"},
{"l":"api/scala/sys/process/ProcessBuilder.html#run-3de","e":false,"i":"","n":"run","t":"run(log: ProcessLogger, connectInput: Boolean): Process","d":"scala.sys.process.ProcessBuilder","k":"def","x":"Starts the process represented by this builder.  Standard output and error\nare sent to the given ProcessLogger.  The newly started process reads from\nstandard input of the current process if connectInput is true.\n"},
{"l":"api/scala/sys/process/ProcessBuilder$.html#","e":false,"i":"","n":"ProcessBuilder","t":"ProcessBuilder","d":"scala.sys.process","k":"object","x":"This object contains traits used to describe input and output sources."},
{"l":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html#","e":false,"i":"","n":"FileBuilder","t":"FileBuilder extends Sink, Source","d":"scala.sys.process.ProcessBuilder","k":"trait","x":"Used when creating scala.sys.process.ProcessBuilder.Source and/or\nscala.sys.process.ProcessBuilder.Sink from a file.\n"},
{"l":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html##<<-f2c","e":false,"i":"","n":"#<<","t":"#<<(f: File): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.FileBuilder","k":"def","x":"Append the contents of a java.io.File to this file"},
{"l":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html##<<-f46","e":false,"i":"","n":"#<<","t":"#<<(u: URL): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.FileBuilder","k":"def","x":"Append the contents from a java.net.URL to this file"},
{"l":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html##<<-fffffe24","e":false,"i":"","n":"#<<","t":"#<<(i: => InputStream): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.FileBuilder","k":"def","x":"Append the contents of a java.io.InputStream to this file"},
{"l":"api/scala/sys/process/ProcessBuilder$$FileBuilder.html##<<-328","e":false,"i":"","n":"#<<","t":"#<<(p: ProcessBuilder): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.FileBuilder","k":"def","x":"Append the contents of a scala.sys.process.ProcessBuilder to this file"},
{"l":"api/scala/sys/process/ProcessBuilder$$Sink.html#","e":false,"i":"","n":"Sink","t":"Sink","d":"scala.sys.process.ProcessBuilder","k":"trait","x":"Represents everything that can receive an output from a\nscala.sys.process.ProcessBuilder.\n"},
{"l":"api/scala/sys/process/ProcessBuilder$$Sink.html##<-f2c","e":false,"i":"","n":"#<","t":"#<(f: File): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Sink","k":"def","x":"Reads the given file into the input stream of this process."},
{"l":"api/scala/sys/process/ProcessBuilder$$Sink.html##<-f46","e":false,"i":"","n":"#<","t":"#<(f: URL): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Sink","k":"def","x":"Reads the given URL into the input stream of this process."},
{"l":"api/scala/sys/process/ProcessBuilder$$Sink.html##<-fffffe24","e":false,"i":"","n":"#<","t":"#<(in: => InputStream): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Sink","k":"def","x":"Reads the given InputStream into the input stream of this process. The\nargument is call-by-name, so the stream is recreated, read, and closed each\ntime this process is executed.\n"},
{"l":"api/scala/sys/process/ProcessBuilder$$Sink.html##<-328","e":false,"i":"","n":"#<","t":"#<(b: ProcessBuilder): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Sink","k":"def","x":"Reads the output of a scala.sys.process.ProcessBuilder into the input stream of this process."},
{"l":"api/scala/sys/process/ProcessBuilder$$Sink.html#toSink-0","e":false,"i":"","n":"toSink","t":"toSink: ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Sink","k":"def","x":""},
{"l":"api/scala/sys/process/ProcessBuilder$$Source.html#","e":false,"i":"","n":"Source","t":"Source","d":"scala.sys.process.ProcessBuilder","k":"trait","x":"Represents everything that can be used as an input to a\nscala.sys.process.ProcessBuilder.\n"},
{"l":"api/scala/sys/process/ProcessBuilder$$Source.html##>-f2c","e":false,"i":"","n":"#>","t":"#>(f: File): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Source","k":"def","x":"Writes the output stream of this process to the given file."},
{"l":"api/scala/sys/process/ProcessBuilder$$Source.html##>-fffffe24","e":false,"i":"","n":"#>","t":"#>(out: => OutputStream): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Source","k":"def","x":"Writes the output stream of this process to the given OutputStream. The\nargument is call-by-name, so the stream is recreated, written, and closed each\ntime this process is executed.\n"},
{"l":"api/scala/sys/process/ProcessBuilder$$Source.html##>-328","e":false,"i":"","n":"#>","t":"#>(b: ProcessBuilder): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Source","k":"def","x":"Writes the output stream of this process to a scala.sys.process.ProcessBuilder."},
{"l":"api/scala/sys/process/ProcessBuilder$$Source.html##>>-f2c","e":false,"i":"","n":"#>>","t":"#>>(f: File): ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Source","k":"def","x":"Appends the output stream of this process to the given file."},
{"l":"api/scala/sys/process/ProcessBuilder$$Source.html#cat-0","e":false,"i":"","n":"cat","t":"cat: ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Source","k":"def","x":"Returns a scala.sys.process.ProcessBuilder representing this Source."},
{"l":"api/scala/sys/process/ProcessBuilder$$Source.html#toSource-0","e":false,"i":"","n":"toSource","t":"toSource: ProcessBuilder","d":"scala.sys.process.ProcessBuilder.Source","k":"def","x":""},
{"l":"api/scala/sys/process/ProcessBuilder$$URLBuilder.html#","e":false,"i":"","n":"URLBuilder","t":"URLBuilder extends Source","d":"scala.sys.process.ProcessBuilder","k":"trait","x":"Used when creating scala.sys.process.ProcessBuilder.Source from an URL."},
{"l":"api/scala/sys/process/ProcessCreation.html#","e":false,"i":"","n":"ProcessCreation","t":"ProcessCreation","d":"scala.sys.process","k":"trait","x":"Factories for creating scala.sys.process.ProcessBuilder. They can be\nfound on and used through scala.sys.process.Process's companion object.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-fffffbf9","e":false,"i":"","n":"apply","t":"apply(command: String): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from a String, including the\nparameters.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-42b","e":false,"i":"","n":"apply","t":"apply(command: Seq[String]): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from a sequence of String,\nwhere the head is the command and each element of the tail is a parameter.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-210","e":false,"i":"","n":"apply","t":"apply(command: String, arguments: Seq[String]): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from a command represented by a String,\nand a sequence of String representing the arguments.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-fffff77c","e":false,"i":"","n":"apply","t":"apply(command: String, cwd: File, extraEnv: (String, String)*): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder with working dir set to File and extra\nenvironment variables.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-12e","e":false,"i":"","n":"apply","t":"apply(command: Seq[String], cwd: File, extraEnv: (String, String)*): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder with working dir set to File and extra\nenvironment variables.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-561","e":false,"i":"","n":"apply","t":"apply(command: String, cwd: Option[File], extraEnv: (String, String)*): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder with working dir optionally set to\nFile and extra environment variables.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-ffffff13","e":false,"i":"","n":"apply","t":"apply(command: Seq[String], cwd: Option[File], extraEnv: (String, String)*): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder with working dir optionally set to\nFile and extra environment variables.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-fffffa14","e":false,"i":"","n":"apply","t":"apply(builder: JProcessBuilder): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from a java.lang.ProcessBuilder.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-ffffffe9","e":false,"i":"","n":"apply","t":"apply(file: File): FileBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from a java.io.File. This\nProcessBuilder can then be used as a Source or a Sink, so one can\npipe things from and to it.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-fffffd9c","e":false,"i":"","n":"apply","t":"apply(url: URL): URLBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from a java.net.URL. This\nProcessBuilder can then be used as a Source, so that one can pipe things\nfrom it.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-f4","e":false,"i":"","n":"apply","t":"apply(value: Boolean): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from a Boolean. This can be\nto force an exit value.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#apply-51f","e":false,"i":"","n":"apply","t":"apply(name: String, exitValue: => Int): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from a String name and a\nBoolean. This can be used to force an exit value, with the name being\nused for toString.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#applySeq-f60","e":false,"i":"","n":"applySeq","t":"applySeq[T](builders: Seq[T])(implicit convert: T => Source): Seq[Source]","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a sequence of scala.sys.process.ProcessBuilder.Source from a sequence of\nsomething else for which there's an implicit conversion to Source.\n"},
{"l":"api/scala/sys/process/ProcessCreation.html#cat-fffff0d8","e":false,"i":"","n":"cat","t":"cat(file: Source, files: Source*): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from one or more\nscala.sys.process.ProcessBuilder.Source, which can then be\npiped to something else."},
{"l":"api/scala/sys/process/ProcessCreation.html#cat-42b","e":false,"i":"","n":"cat","t":"cat(files: Seq[Source]): ProcessBuilder","d":"scala.sys.process.ProcessCreation","k":"def","x":"Creates a scala.sys.process.ProcessBuilder from a non-empty sequence\nof scala.sys.process.ProcessBuilder.Source, which can then be\npiped to something else."},
{"l":"api/scala/sys/process/ProcessIO.html#","e":false,"i":"","n":"ProcessIO","t":"ProcessIO(val writeInput: OutputStream => Unit, val processOutput: InputStream => Unit, val processError: InputStream => Unit, val daemonizeThreads: Boolean)","d":"scala.sys.process","k":"class","x":"This class is used to control the I/O of every\nscala.sys.process.Process. The functions used to create it will be\ncalled with the process streams once it has been started. It might not be\nnecessary to use ProcessIO directly --\nscala.sys.process.ProcessBuilder can return the process output to the\ncaller, or use a scala.sys.process.ProcessLogger which avoids direct\ninteraction with a stream. One can even use the factories at BasicIO to\ncreate a ProcessIO, or use its helper methods when creating one's own\nProcessIO."},
{"l":"api/scala/sys/process/ProcessIO.html#daemonizeThreads-0","e":false,"i":"","n":"daemonizeThreads","t":"daemonizeThreads: Boolean","d":"scala.sys.process.ProcessIO","k":"val","x":""},
{"l":"api/scala/sys/process/ProcessIO.html#daemonized-fffffb6d","e":false,"i":"","n":"daemonized","t":"daemonized(): ProcessIO","d":"scala.sys.process.ProcessIO","k":"def","x":"Creates a new ProcessIO, with daemonizeThreads true."},
{"l":"api/scala/sys/process/ProcessIO.html#processError-0","e":false,"i":"","n":"processError","t":"processError: InputStream => Unit","d":"scala.sys.process.ProcessIO","k":"val","x":""},
{"l":"api/scala/sys/process/ProcessIO.html#processOutput-0","e":false,"i":"","n":"processOutput","t":"processOutput: InputStream => Unit","d":"scala.sys.process.ProcessIO","k":"val","x":""},
{"l":"api/scala/sys/process/ProcessIO.html#<init>-81c","e":false,"i":"","n":"this","t":"this(in: OutputStream => Unit, out: InputStream => Unit, err: InputStream => Unit)","d":"scala.sys.process.ProcessIO","k":"def","x":""},
{"l":"api/scala/sys/process/ProcessIO.html#withError-fffff43c","e":false,"i":"","n":"withError","t":"withError(process: InputStream => Unit): ProcessIO","d":"scala.sys.process.ProcessIO","k":"def","x":"Creates a new ProcessIO with a different handler for the error output."},
{"l":"api/scala/sys/process/ProcessIO.html#withInput-fffff43c","e":false,"i":"","n":"withInput","t":"withInput(write: OutputStream => Unit): ProcessIO","d":"scala.sys.process.ProcessIO","k":"def","x":"Creates a new ProcessIO with a different handler for the process input."},
{"l":"api/scala/sys/process/ProcessIO.html#withOutput-fffff43c","e":false,"i":"","n":"withOutput","t":"withOutput(process: InputStream => Unit): ProcessIO","d":"scala.sys.process.ProcessIO","k":"def","x":"Creates a new ProcessIO with a different handler for the normal output."},
{"l":"api/scala/sys/process/ProcessIO.html#writeInput-0","e":false,"i":"","n":"writeInput","t":"writeInput: OutputStream => Unit","d":"scala.sys.process.ProcessIO","k":"val","x":""},
{"l":"api/scala/sys/process/ProcessImplicits.html#","e":false,"i":"","n":"ProcessImplicits","t":"ProcessImplicits","d":"scala.sys.process","k":"trait","x":"Provide implicit conversions for the factories offered by scala.sys.process.Process's\ncompanion object. These implicits can then be used to decrease the noise in a pipeline\nof commands, making it look more shell-like. They are available through the package object\nscala.sys.process.\n"},
{"l":"api/scala/sys/process/ProcessImplicits.html#builderToProcess-fffffa14","e":false,"i":"","n":"builderToProcess","t":"builderToProcess(builder: JProcessBuilder): ProcessBuilder","d":"scala.sys.process.ProcessImplicits","k":"def","x":"Implicitly convert a java.lang.ProcessBuilder into a Scala one."},
{"l":"api/scala/sys/process/ProcessImplicits.html#buildersToProcess-f60","e":false,"i":"","n":"buildersToProcess","t":"buildersToProcess[T](builders: Seq[T])(implicit convert: T => Source): Seq[Source]","d":"scala.sys.process.ProcessImplicits","k":"def","x":"Return a sequence of scala.sys.process.ProcessBuilder.Source from a sequence\nof values for which an implicit conversion to Source is available.\n"},
{"l":"api/scala/sys/process/ProcessImplicits.html#fileToProcess-ffffffe9","e":false,"i":"","n":"fileToProcess","t":"fileToProcess(file: File): FileBuilder","d":"scala.sys.process.ProcessImplicits","k":"def","x":"Implicitly convert a java.io.File into a\nscala.sys.process.ProcessBuilder.FileBuilder, which can be used as\neither input or output of a process. For example:"},
{"l":"api/scala/sys/process/ProcessImplicits.html#stringSeqToProcess-42b","e":false,"i":"","n":"stringSeqToProcess","t":"stringSeqToProcess(command: Seq[String]): ProcessBuilder","d":"scala.sys.process.ProcessImplicits","k":"def","x":"Implicitly convert a sequence of String into a\nscala.sys.process.ProcessBuilder. The first argument will be taken to\nbe the command to be executed, and the remaining will be its arguments.\nWhen using this, arguments may contain spaces.\n"},
{"l":"api/scala/sys/process/ProcessImplicits.html#stringToProcess-fffffbf9","e":false,"i":"","n":"stringToProcess","t":"stringToProcess(command: String): ProcessBuilder","d":"scala.sys.process.ProcessImplicits","k":"def","x":"Implicitly convert a String into a scala.sys.process.ProcessBuilder."},
{"l":"api/scala/sys/process/ProcessImplicits.html#urlToProcess-fffffd9c","e":false,"i":"","n":"urlToProcess","t":"urlToProcess(url: URL): URLBuilder","d":"scala.sys.process.ProcessImplicits","k":"def","x":"Implicitly convert a java.net.URL into a\nscala.sys.process.ProcessBuilder.URLBuilder , which can be used as\ninput to a process. For example:"},
{"l":"api/scala/sys/process/ProcessLogger.html#","e":false,"i":"","n":"ProcessLogger","t":"ProcessLogger","d":"scala.sys.process","k":"trait","x":"Encapsulates the output and error streams of a running process. This is used\nby scala.sys.process.ProcessBuilder when starting a process, as an\nalternative to scala.sys.process.ProcessIO, which can be more difficult\nto use. Note that a ProcessLogger will be used to create a ProcessIO\nanyway. The object BasicIO has some functions to do that."},
{"l":"api/scala/sys/process/ProcessLogger.html#buffer-fffff7d2","e":false,"i":"","n":"buffer","t":"buffer[T](f: => T): T","d":"scala.sys.process.ProcessLogger","k":"def","x":"If a process is begun with one of these ProcessBuilder methods:"},
{"l":"api/scala/sys/process/ProcessLogger.html#err-9dc","e":false,"i":"","n":"err","t":"err(s: => String): Unit","d":"scala.sys.process.ProcessLogger","k":"def","x":"Will be called with each line read from the process error stream.\n"},
{"l":"api/scala/sys/process/ProcessLogger.html#out-9dc","e":false,"i":"","n":"out","t":"out(s: => String): Unit","d":"scala.sys.process.ProcessLogger","k":"def","x":"Will be called with each line read from the process output stream.\n"},
{"l":"api/scala/sys/process/ProcessLogger$.html#","e":false,"i":"","n":"ProcessLogger","t":"ProcessLogger","d":"scala.sys.process","k":"object","x":"Provides factories to create scala.sys.process.ProcessLogger, which\nare used to capture output of scala.sys.process.ProcessBuilder commands\nwhen run.\n"},
{"l":"api/scala/sys/process/ProcessLogger$.html#apply-3c3","e":false,"i":"","n":"apply","t":"apply(file: File): FileProcessLogger","d":"scala.sys.process.ProcessLogger","k":"def","x":"Creates a scala.sys.process.ProcessLogger that redirects output to a java.io.File."},
{"l":"api/scala/sys/process/ProcessLogger$.html#apply-fffff1c6","e":false,"i":"","n":"apply","t":"apply(fn: String => Unit): ProcessLogger","d":"scala.sys.process.ProcessLogger","k":"def","x":"Creates a scala.sys.process.ProcessLogger that sends all output, standard and error,\nto the passed function.\n"},
{"l":"api/scala/sys/process/ProcessLogger$.html#apply-fffff097","e":false,"i":"","n":"apply","t":"apply(fout: String => Unit, ferr: String => Unit): ProcessLogger","d":"scala.sys.process.ProcessLogger","k":"def","x":"Creates a scala.sys.process.ProcessLogger that sends all output to the corresponding\nfunction.\n"},
{"l":"api/scala/sys/BooleanProp.html#","e":false,"i":"","n":"BooleanProp","t":"BooleanProp extends Prop[Boolean]","d":"scala.sys","k":"trait","x":"A few additional conveniences for Boolean properties.\n"},
{"l":"api/scala/sys/BooleanProp.html#disable-94c","e":false,"i":"","n":"disable","t":"disable(): Unit","d":"scala.sys.BooleanProp","k":"def","x":"Alter this property so that value will be false."},
{"l":"api/scala/sys/BooleanProp.html#enable-94c","e":false,"i":"","n":"enable","t":"enable(): Unit","d":"scala.sys.BooleanProp","k":"def","x":"Alter this property so that value will be true."},
{"l":"api/scala/sys/BooleanProp.html#toggle-94c","e":false,"i":"","n":"toggle","t":"toggle(): Unit","d":"scala.sys.BooleanProp","k":"def","x":"Toggle the property between enabled and disabled states."},
{"l":"api/scala/sys/BooleanProp.html#value-0","e":false,"i":"","n":"value","t":"value: Boolean","d":"scala.sys.BooleanProp","k":"def","x":"The semantics of value are determined at Prop creation.  See methods\nvalueIsTrue and keyExists in object BooleanProp for examples.\n"},
{"l":"api/scala/sys/BooleanProp$.html#","e":false,"i":"","n":"BooleanProp","t":"BooleanProp","d":"scala.sys","k":"object","x":""},
{"l":"api/scala/sys/BooleanProp$.html#booleanPropAsBoolean-fffff55e","e":false,"i":"","n":"booleanPropAsBoolean","t":"booleanPropAsBoolean(b: BooleanProp): Boolean","d":"scala.sys.BooleanProp","k":"def","x":""},
{"l":"api/scala/sys/BooleanProp$.html#constant-f07","e":false,"i":"","n":"constant","t":"constant(key: String, isOn: Boolean): BooleanProp","d":"scala.sys.BooleanProp","k":"def","x":"A constant true or false property which ignores all method calls.\n"},
{"l":"api/scala/sys/BooleanProp$.html#keyExists-26c","e":false,"i":"","n":"keyExists","t":"keyExists[T](key: String): BooleanProp","d":"scala.sys.BooleanProp","k":"def","x":"As an alternative, this method creates a BooleanProp which is true\nif the key exists in the map and is not assigned a value other than \"true\",\ncompared case-insensitively, or the empty string.  This way -Dmy.property\nresults in a true-valued property, but -Dmy.property=false does not.\n"},
{"l":"api/scala/sys/BooleanProp$.html#valueIsTrue-26c","e":false,"i":"","n":"valueIsTrue","t":"valueIsTrue[T](key: String): BooleanProp","d":"scala.sys.BooleanProp","k":"def","x":"The java definition of property truth is that the key be in the map and\nthe value be equal to the String \"true\", case insensitively.  This method\ncreates a BooleanProp instance which adheres to that definition.\n"},
{"l":"api/scala/sys/Prop.html#","e":false,"i":"","n":"Prop","t":"Prop[+T]","d":"scala.sys","k":"trait","x":"A lightweight interface wrapping a property contained in some\nunspecified map.  Generally it'll be the system properties but this\nis not a requirement."},
{"l":"api/scala/sys/Prop.html#clear-94c","e":false,"i":"","n":"clear","t":"clear(): Unit","d":"scala.sys.Prop","k":"def","x":"Removes the property from the underlying map.\n"},
{"l":"api/scala/sys/Prop.html#get-0","e":false,"i":"","n":"get","t":"get: String","d":"scala.sys.Prop","k":"def","x":"Gets the current string value if any.  Will not return null: use\nisSet to test for existence."},
{"l":"api/scala/sys/Prop.html#isSet-0","e":false,"i":"","n":"isSet","t":"isSet: Boolean","d":"scala.sys.Prop","k":"def","x":"True if the key exists in the properties map.  Note that this\nis not sufficient for a Boolean property to be considered true."},
{"l":"api/scala/sys/Prop.html#key-0","e":false,"i":"","n":"key","t":"key: String","d":"scala.sys.Prop","k":"def","x":"The full name of the property, e.g., \"java.awt.headless\".\n"},
{"l":"api/scala/sys/Prop.html#option-0","e":false,"i":"","n":"option","t":"option: Option[T]","d":"scala.sys.Prop","k":"def","x":"Some(value) if the property is set, None otherwise.\n"},
{"l":"api/scala/sys/Prop.html#set-fffff2ca","e":false,"i":"","n":"set","t":"set(newValue: String): String","d":"scala.sys.Prop","k":"def","x":"Sets the property.\n"},
{"l":"api/scala/sys/Prop.html#setValue-957","e":false,"i":"","n":"setValue","t":"setValue[T1 >: T](value: T1): T","d":"scala.sys.Prop","k":"def","x":"Sets the property with a value of the represented type.\n"},
{"l":"api/scala/sys/Prop.html#value-0","e":false,"i":"","n":"value","t":"value: T","d":"scala.sys.Prop","k":"def","x":"If the key exists in the properties map, converts the value\nto type T using valueFn.  As yet no validation is performed:\nit will throw an exception on a failed conversion."},
{"l":"api/scala/sys/Prop$.html#","e":false,"i":"","n":"Prop","t":"Prop","d":"scala.sys","k":"object","x":""},
{"l":"api/scala/sys/Prop$.html#apply-fffff86c","e":false,"i":"","n":"apply","t":"apply[T : Creator](key: String): Prop[T]","d":"scala.sys.Prop","k":"def","x":""},
{"l":"api/scala/sys/Prop$$Creator.html#","e":false,"i":"","n":"Creator","t":"Creator[+T]","d":"scala.sys.Prop","k":"trait","x":"A creator of property instances.  For any type T, if an implicit\nparameter of type Creator[T] is in scope, a Prop[T] can be created\nvia this object's apply method.\n"},
{"l":"api/scala/sys/Prop$$Creator.html#apply-fffff351","e":false,"i":"","n":"apply","t":"apply(key: String): Prop[T]","d":"scala.sys.Prop.Creator","k":"def","x":"Creates a Prop[T] of this type based on the given key."},
{"l":"api/scala/sys/Prop$$DoubleProp$.html#","e":false,"i":"","n":"DoubleProp","t":"DoubleProp","d":"scala.sys.Prop","k":"object","x":""},
{"l":"api/scala/sys/Prop$$DoubleProp$.html#apply-fffff351","e":false,"i":"","n":"apply","t":"apply(key: String): Prop[Double]","d":"scala.sys.Prop.DoubleProp","k":"def","x":"Creates a Prop[T] of this type based on the given key."},
{"l":"api/scala/sys/Prop$$FileProp$.html#","e":false,"i":"","n":"FileProp","t":"FileProp","d":"scala.sys.Prop","k":"object","x":""},
{"l":"api/scala/sys/Prop$$FileProp$.html#apply-fffff351","e":false,"i":"","n":"apply","t":"apply(key: String): Prop[File]","d":"scala.sys.Prop.FileProp","k":"def","x":"Creates a Prop[T] of this type based on the given key."},
{"l":"api/scala/sys/Prop$$IntProp$.html#","e":false,"i":"","n":"IntProp","t":"IntProp","d":"scala.sys.Prop","k":"object","x":""},
{"l":"api/scala/sys/Prop$$IntProp$.html#apply-fffff351","e":false,"i":"","n":"apply","t":"apply(key: String): Prop[Int]","d":"scala.sys.Prop.IntProp","k":"def","x":"Creates a Prop[T] of this type based on the given key."},
{"l":"api/scala/sys/Prop$$StringProp$.html#","e":false,"i":"","n":"StringProp","t":"StringProp","d":"scala.sys.Prop","k":"object","x":""},
{"l":"api/scala/sys/Prop$$StringProp$.html#apply-fffff351","e":false,"i":"","n":"apply","t":"apply(key: String): Prop[String]","d":"scala.sys.Prop.StringProp","k":"def","x":"Creates a Prop[T] of this type based on the given key."},
{"l":"api/scala/sys/ShutdownHookThread.html#","e":false,"i":"","n":"ShutdownHookThread","t":"ShutdownHookThread extends Thread","d":"scala.sys","k":"class","x":"A minimal Thread wrapper to enhance shutdown hooks.  It knows\nhow to unregister itself.\n"},
{"l":"api/scala/sys/ShutdownHookThread.html#remove-fffff760","e":false,"i":"","n":"remove","t":"remove(): Boolean","d":"scala.sys.ShutdownHookThread","k":"def","x":""},
{"l":"api/scala/sys/ShutdownHookThread$.html#","e":false,"i":"","n":"ShutdownHookThread","t":"ShutdownHookThread","d":"scala.sys","k":"object","x":""},
{"l":"api/scala/sys/ShutdownHookThread$.html#apply-f1c","e":false,"i":"","n":"apply","t":"apply(body: => Unit): ShutdownHookThread","d":"scala.sys.ShutdownHookThread","k":"def","x":"Creates, names, and registers a shutdown hook to run the\ngiven code.\n"},
{"l":"api/scala/sys/SystemProperties.html#","e":false,"i":"","n":"SystemProperties","t":"SystemProperties extends AbstractMap[String, String]","d":"scala.sys","k":"class","x":"A bidirectional map wrapping the java System properties.\nChanges to System properties will be immediately visible in the map,\nand modifications made to the map will be immediately applied to the\nSystem properties.  If a security manager is in place which prevents\nthe properties from being read or written, the AccessControlException\nwill be caught and discarded.\n"},
{"l":"api/scala/sys/SystemProperties.html#addOne-fffffa3d","e":false,"i":"","n":"addOne","t":"addOne(kv: (String, String)): this.type","d":"scala.sys.SystemProperties","k":"def","x":"Adds a single element to this mutable map.\n"},
{"l":"api/scala/sys/SystemProperties.html#get-fffffd22","e":false,"i":"","n":"get","t":"get(key: String): Option[String]","d":"scala.sys.SystemProperties","k":"def","x":"Optionally returns the value associated with a key.\n"},
{"l":"api/scala/sys/SystemProperties.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[(String, String)]","d":"scala.sys.SystemProperties","k":"def","x":"An scala.collection.Iterator over the elements of this mutable map."},
{"l":"api/scala/sys/SystemProperties.html#names-0","e":false,"i":"","n":"names","t":"names: Iterator[String]","d":"scala.sys.SystemProperties","k":"def","x":""},
{"l":"api/scala/sys/SystemProperties.html#subtractOne-7b0","e":false,"i":"","n":"subtractOne","t":"subtractOne(key: String): this.type","d":"scala.sys.SystemProperties","k":"def","x":"Removes a single element from this mutable map.\n"},
{"l":"api/scala/sys/SystemProperties.html#wrapAccess-bfc","e":false,"i":"","n":"wrapAccess","t":"wrapAccess[T](body: => T): Option[T]","d":"scala.sys.SystemProperties","k":"def","x":""},
{"l":"api/scala/sys/SystemProperties$.html#","e":false,"i":"","n":"SystemProperties","t":"SystemProperties","d":"scala.sys","k":"object","x":"The values in SystemProperties can be used to access and manipulate\ndesignated system properties.  See scala.sys.Prop for particulars."},
{"l":"api/scala/sys/SystemProperties$.html#exclusively-fffff7d2","e":false,"i":"","n":"exclusively","t":"exclusively[T](body: => T): T","d":"scala.sys.SystemProperties","k":"def","x":"An unenforceable, advisory only place to do some synchronization when\nmutating system properties.\n"},
{"l":"api/scala/sys/SystemProperties$.html#headless-0","e":false,"i":"","n":"headless","t":"headless: BooleanProp","d":"scala.sys.SystemProperties","k":"val","x":""},
{"l":"api/scala/sys/SystemProperties$.html#help-fffff2ca","e":false,"i":"","n":"help","t":"help(key: String): String","d":"scala.sys.SystemProperties","k":"def","x":""},
{"l":"api/scala/sys/SystemProperties$.html#noTraceSuppression-0","e":false,"i":"","n":"noTraceSuppression","t":"noTraceSuppression: BooleanProp","d":"scala.sys.SystemProperties","k":"val","x":""},
{"l":"api/scala/sys/SystemProperties$.html#preferIPv4Stack-0","e":false,"i":"","n":"preferIPv4Stack","t":"preferIPv4Stack: BooleanProp","d":"scala.sys.SystemProperties","k":"val","x":""},
{"l":"api/scala/sys/SystemProperties$.html#preferIPv6Addresses-0","e":false,"i":"","n":"preferIPv6Addresses","t":"preferIPv6Addresses: BooleanProp","d":"scala.sys.SystemProperties","k":"val","x":""},
{"l":"api/scala/sys/SystemProperties$.html#systemPropertiesToCompanion-78e","e":false,"i":"","n":"systemPropertiesToCompanion","t":"systemPropertiesToCompanion(p: SystemProperties): SystemProperties.type","d":"scala.sys.SystemProperties","k":"def","x":""},
{"l":"api/scala/util.html#","e":false,"i":"","n":"scala.util","t":"scala.util","d":"","k":"package","x":""},
{"l":"api/scala/util/control.html#","e":false,"i":"","n":"scala.util.control","t":"scala.util.control","d":"","k":"package","x":""},
{"l":"api/scala/util/control/Breaks.html#","e":false,"i":"","n":"Breaks","t":"Breaks","d":"scala.util.control","k":"class","x":"Provides the break control abstraction."},
{"l":"api/scala/util/control/Breaks.html#break-305","e":false,"i":"","n":"break","t":"break(): Nothing","d":"scala.util.control.Breaks","k":"def","x":"Break from the dynamically closest enclosing breakable block that also uses\nthis Breaks instance.\n"},
{"l":"api/scala/util/control/Breaks.html#breakable-9dc","e":false,"i":"","n":"breakable","t":"breakable(op: => Unit): Unit","d":"scala.util.control.Breaks","k":"def","x":"A block from which one can exit with a break. The break may be\nexecuted further down in the call stack provided that it is called on the\nexact same instance of Breaks.\n"},
{"l":"api/scala/util/control/Breaks.html#tryBreakable-496","e":false,"i":"","n":"tryBreakable","t":"tryBreakable[T](op: => T): TryBlock[T]","d":"scala.util.control.Breaks","k":"def","x":"Try a computation that produces a value, supplying a default\nto be used if the computation terminates with a break."},
{"l":"api/scala/util/control/Breaks$TryBlock.html#","e":false,"i":"","n":"TryBlock","t":"TryBlock[T]","d":"scala.util.control.Breaks","k":"trait","x":""},
{"l":"api/scala/util/control/Breaks$TryBlock.html#catchBreak-fffffe23","e":false,"i":"","n":"catchBreak","t":"catchBreak(onBreak: => T): T","d":"scala.util.control.Breaks.TryBlock","k":"def","x":""},
{"l":"api/scala/util/control/Breaks$.html#","e":false,"i":"","n":"Breaks","t":"Breaks extends Breaks","d":"scala.util.control","k":"object","x":"An object that can be used for the break control abstraction."},
{"l":"api/scala/util/control/ControlThrowable.html#","e":false,"i":"","n":"ControlThrowable","t":"ControlThrowable(message: String) extends Throwable","d":"scala.util.control","k":"class","x":"A parent class for throwable objects intended for flow control."},
{"l":"api/scala/util/control/ControlThrowable.html#<init>-2b8","e":false,"i":"","n":"this","t":"this()","d":"scala.util.control.ControlThrowable","k":"def","x":""},
{"l":"api/scala/util/control/Exception$.html#","e":false,"i":"","n":"Exception","t":"Exception","d":"scala.util.control","k":"object","x":"Classes representing the components of exception handling."},
{"l":"api/scala/util/control/Exception$.html#Catcher-0","e":false,"i":"","n":"Catcher","t":"Catcher[+T] = PartialFunction[Throwable, T]","d":"scala.util.control.Exception","k":"type","x":""},
{"l":"api/scala/util/control/Exception$.html#allCatch-9a6","e":false,"i":"","n":"allCatch","t":"allCatch[T]: Catch[T]","d":"scala.util.control.Exception","k":"def","x":"A Catch object which catches everything."},
{"l":"api/scala/util/control/Exception$.html#allCatcher-fffffc20","e":false,"i":"","n":"allCatcher","t":"allCatcher[T]: Catcher[T]","d":"scala.util.control.Exception","k":"def","x":""},
{"l":"api/scala/util/control/Exception$.html#catching-fffffb5b","e":false,"i":"","n":"catching","t":"catching[T](exceptions: Class[_]*): Catch[T]","d":"scala.util.control.Exception","k":"def","x":"Creates a Catch object which will catch any of the supplied exceptions.\nSince the returned Catch object has no specific logic defined and will simply\nrethrow the exceptions it catches, you will typically want to call opt,\neither or withTry on the return value, or assign custom logic by calling \"withApply\"."},
{"l":"api/scala/util/control/Exception$.html#catching-ffffff57","e":false,"i":"","n":"catching","t":"catching[T](c: Catcher[T]): Catch[T]","d":"scala.util.control.Exception","k":"def","x":""},
{"l":"api/scala/util/control/Exception$.html#catchingPromiscuously-fffffb5b","e":false,"i":"","n":"catchingPromiscuously","t":"catchingPromiscuously[T](exceptions: Class[_]*): Catch[T]","d":"scala.util.control.Exception","k":"def","x":"Creates a Catch object which will catch any of the supplied exceptions.\nUnlike \"catching\" which filters out those in shouldRethrow, this one will\ncatch whatever you ask of it including ControlThrowable or InterruptedException."},
{"l":"api/scala/util/control/Exception$.html#catchingPromiscuously-ffffff57","e":false,"i":"","n":"catchingPromiscuously","t":"catchingPromiscuously[T](c: Catcher[T]): Catch[T]","d":"scala.util.control.Exception","k":"def","x":""},
{"l":"api/scala/util/control/Exception$.html#failAsValue-83","e":false,"i":"","n":"failAsValue","t":"failAsValue[T](exceptions: Class[_]*)(value: => T): Catch[T]","d":"scala.util.control.Exception","k":"def","x":"Creates a Catch object which maps all the supplied exceptions to the given value."},
{"l":"api/scala/util/control/Exception$.html#failing-fffffb5b","e":false,"i":"","n":"failing","t":"failing[T](exceptions: Class[_]*): Catch[Option[T]]","d":"scala.util.control.Exception","k":"def","x":"Creates a Catch object which maps all the supplied exceptions to None."},
{"l":"api/scala/util/control/Exception$.html#handling-3b7","e":false,"i":"","n":"handling","t":"handling[T](exceptions: Class[_]*): By[Throwable => T, Catch[T]]","d":"scala.util.control.Exception","k":"def","x":"Returns a partially constructed Catch object, which you must give\nan exception handler function as an argument to by."},
{"l":"api/scala/util/control/Exception$.html#ignoring-d6c","e":false,"i":"","n":"ignoring","t":"ignoring(exceptions: Class[_]*): Catch[Unit]","d":"scala.util.control.Exception","k":"def","x":"Creates a Catch object which catches and ignores any of the supplied exceptions."},
{"l":"api/scala/util/control/Exception$.html#mkCatcher-be4","e":false,"i":"","n":"mkCatcher","t":"mkCatcher[Ex <: Throwable : ClassTag, T](isDef: Ex => Boolean, f: Ex => T): PartialFunction[Throwable, T]","d":"scala.util.control.Exception","k":"def","x":""},
{"l":"api/scala/util/control/Exception$.html#mkThrowableCatcher-0","e":false,"i":"","n":"mkThrowableCatcher","t":"mkThrowableCatcher[T](isDef: Throwable => Boolean, f: Throwable => T): PartialFunction[Throwable, T]","d":"scala.util.control.Exception","k":"def","x":""},
{"l":"api/scala/util/control/Exception$.html#noCatch-0","e":false,"i":"","n":"noCatch","t":"noCatch: Catch[Nothing]","d":"scala.util.control.Exception","k":"val","x":"The empty Catch object."},
{"l":"api/scala/util/control/Exception$.html#nonFatalCatch-9a6","e":false,"i":"","n":"nonFatalCatch","t":"nonFatalCatch[T]: Catch[T]","d":"scala.util.control.Exception","k":"def","x":"A Catch object which catches non-fatal exceptions."},
{"l":"api/scala/util/control/Exception$.html#nonFatalCatcher-fffffc20","e":false,"i":"","n":"nonFatalCatcher","t":"nonFatalCatcher[T]: Catcher[T]","d":"scala.util.control.Exception","k":"def","x":""},
{"l":"api/scala/util/control/Exception$.html#nothingCatcher-0","e":false,"i":"","n":"nothingCatcher","t":"nothingCatcher: Catcher[Nothing]","d":"scala.util.control.Exception","k":"val","x":""},
{"l":"api/scala/util/control/Exception$.html#shouldRethrow-fffff474","e":false,"i":"","n":"shouldRethrow","t":"shouldRethrow(x: Throwable): Boolean","d":"scala.util.control.Exception","k":"def","x":"!!! Not at all sure of every factor which goes into this,\nand/or whether we need multiple standard variations."},
{"l":"api/scala/util/control/Exception$.html#throwableSubtypeToCatcher-fffff397","e":false,"i":"","n":"throwableSubtypeToCatcher","t":"throwableSubtypeToCatcher[Ex <: Throwable : ClassTag, T](pf: PartialFunction[Ex, T]): Catcher[T]","d":"scala.util.control.Exception","k":"def","x":""},
{"l":"api/scala/util/control/Exception$.html#ultimately-fffff2d8","e":false,"i":"","n":"ultimately","t":"ultimately[T](body: => Unit): Catch[T]","d":"scala.util.control.Exception","k":"def","x":"Returns a Catch object with no catch logic and the argument as the finally logic."},
{"l":"api/scala/util/control/Exception$.html#unwrapping-fffffb5b","e":false,"i":"","n":"unwrapping","t":"unwrapping[T](exceptions: Class[_]*): Catch[T]","d":"scala.util.control.Exception","k":"def","x":"Creates a Catch object which unwraps any of the supplied exceptions."},
{"l":"api/scala/util/control/Exception$$By.html#","e":false,"i":"","n":"By","t":"By[T, R](f: T => R)","d":"scala.util.control.Exception","k":"class","x":""},
{"l":"api/scala/util/control/Exception$$By.html#by-d26","e":false,"i":"","n":"by","t":"by(x: T): R","d":"scala.util.control.Exception.By","k":"def","x":""},
{"l":"api/scala/util/control/Exception$$Catch.html#","e":false,"i":"","n":"Catch","t":"Catch[+T](val pf: Catcher[T], val fin: Option[Finally], val rethrow: Throwable => Boolean) extends Described","d":"scala.util.control.Exception","k":"class","x":"A container class for catch/finally logic."},
{"l":"api/scala/util/control/Exception$$Catch.html#andFinally-fffff0e7","e":false,"i":"","n":"andFinally","t":"andFinally(body: => Unit): Catch[T]","d":"scala.util.control.Exception.Catch","k":"def","x":"Create a new Catch container from this object and the supplied finally body."},
{"l":"api/scala/util/control/Exception$$Catch.html#apply-fffff7d2","e":false,"i":"","n":"apply","t":"apply[U >: T](body: => U): U","d":"scala.util.control.Exception.Catch","k":"def","x":"Apply this catch logic to the supplied body."},
{"l":"api/scala/util/control/Exception$$Catch.html#either-54a","e":false,"i":"","n":"either","t":"either[U >: T](body: => U): Either[Throwable, U]","d":"scala.util.control.Exception.Catch","k":"def","x":"Apply this catch logic to the supplied body, mapping the result\ninto Either[Throwable, T] - Left(exception) if an exception was caught,\nRight(T) otherwise.\n"},
{"l":"api/scala/util/control/Exception$$Catch.html#fin-0","e":false,"i":"","n":"fin","t":"fin: Option[Finally]","d":"scala.util.control.Exception.Catch","k":"val","x":""},
{"l":"api/scala/util/control/Exception$$Catch.html#opt-bfc","e":false,"i":"","n":"opt","t":"opt[U >: T](body: => U): Option[U]","d":"scala.util.control.Exception.Catch","k":"def","x":"Apply this catch logic to the supplied body, mapping the result\ninto Option[T] - None if any exception was caught, Some(T) otherwise.\n"},
{"l":"api/scala/util/control/Exception$$Catch.html#or-ffffff57","e":false,"i":"","n":"or","t":"or[U >: T](pf2: Catcher[U]): Catch[U]","d":"scala.util.control.Exception.Catch","k":"def","x":"Create a new Catch with additional exception handling logic."},
{"l":"api/scala/util/control/Exception$$Catch.html#or-411","e":false,"i":"","n":"or","t":"or[U >: T](other: Catch[U]): Catch[U]","d":"scala.util.control.Exception.Catch","k":"def","x":""},
{"l":"api/scala/util/control/Exception$$Catch.html#pf-0","e":false,"i":"","n":"pf","t":"pf: Catcher[T]","d":"scala.util.control.Exception.Catch","k":"val","x":""},
{"l":"api/scala/util/control/Exception$$Catch.html#rethrow-0","e":false,"i":"","n":"rethrow","t":"rethrow: Throwable => Boolean","d":"scala.util.control.Exception.Catch","k":"val","x":""},
{"l":"api/scala/util/control/Exception$$Catch.html#toEither-0","e":false,"i":"","n":"toEither","t":"toEither: Catch[Either[Throwable, T]]","d":"scala.util.control.Exception.Catch","k":"def","x":""},
{"l":"api/scala/util/control/Exception$$Catch.html#toOption-0","e":false,"i":"","n":"toOption","t":"toOption: Catch[Option[T]]","d":"scala.util.control.Exception.Catch","k":"def","x":"Convenience methods."},
{"l":"api/scala/util/control/Exception$$Catch.html#toTry-0","e":false,"i":"","n":"toTry","t":"toTry: Catch[Try[T]]","d":"scala.util.control.Exception.Catch","k":"def","x":""},
{"l":"api/scala/util/control/Exception$$Catch.html#withApply-b37","e":false,"i":"","n":"withApply","t":"withApply[U](f: Throwable => U): Catch[U]","d":"scala.util.control.Exception.Catch","k":"def","x":"Create a Catch object with the same isDefinedAt logic as this one,\nbut with the supplied apply method replacing the current one."},
{"l":"api/scala/util/control/Exception$$Catch.html#withTry-fffffb56","e":false,"i":"","n":"withTry","t":"withTry[U >: T](body: => U): Try[U]","d":"scala.util.control.Exception.Catch","k":"def","x":"Apply this catch logic to the supplied body, mapping the result\ninto Try[T] - Failure if an exception was caught, Success(T) otherwise.\n"},
{"l":"api/scala/util/control/Exception$$Described.html#","e":false,"i":"","n":"Described","t":"Described","d":"scala.util.control.Exception","k":"trait","x":""},
{"l":"api/scala/util/control/Exception$$Described.html#desc-0","e":false,"i":"","n":"desc","t":"desc: String","d":"scala.util.control.Exception.Described","k":"def","x":""},
{"l":"api/scala/util/control/Exception$$Described.html#name-0","e":false,"i":"","n":"name","t":"name: String","d":"scala.util.control.Exception.Described","k":"val","x":""},
{"l":"api/scala/util/control/Exception$$Described.html#withDesc-fffff7b0","e":false,"i":"","n":"withDesc","t":"withDesc(s: String): this.type","d":"scala.util.control.Exception.Described","k":"def","x":""},
{"l":"api/scala/util/control/Exception$$Finally.html#","e":false,"i":"","n":"Finally","t":"Finally extends Described","d":"scala.util.control.Exception","k":"class","x":"A container class for finally code."},
{"l":"api/scala/util/control/Exception$$Finally.html#and-af","e":false,"i":"","n":"and","t":"and(other: => Unit): Finally","d":"scala.util.control.Exception.Finally","k":"def","x":""},
{"l":"api/scala/util/control/Exception$$Finally.html#invoke-94c","e":false,"i":"","n":"invoke","t":"invoke(): Unit","d":"scala.util.control.Exception.Finally","k":"def","x":""},
{"l":"api/scala/util/control/NoStackTrace.html#","e":false,"i":"","n":"NoStackTrace","t":"NoStackTrace extends Throwable","d":"scala.util.control","k":"trait","x":"A trait for exceptions which, for efficiency reasons, do not\nfill in the stack trace.  Stack trace suppression can be disabled\non a global basis via a system property wrapper in\nscala.sys.SystemProperties.\n"},
{"l":"api/scala/util/control/NoStackTrace$.html#","e":false,"i":"","n":"NoStackTrace","t":"NoStackTrace","d":"scala.util.control","k":"object","x":""},
{"l":"api/scala/util/control/NoStackTrace$.html#noSuppression-0","e":false,"i":"","n":"noSuppression","t":"noSuppression: Boolean","d":"scala.util.control.NoStackTrace","k":"def","x":""},
{"l":"api/scala/util/control/NonFatal$.html#","e":false,"i":"","n":"NonFatal","t":"NonFatal","d":"scala.util.control","k":"object","x":"Extractor of non-fatal Throwables. Will not match fatal errors like VirtualMachineError\n(for example, OutOfMemoryError and StackOverflowError, subclasses of VirtualMachineError), ThreadDeath,\nLinkageError, InterruptedException, ControlThrowable."},
{"l":"api/scala/util/control/NonFatal$.html#apply-fffff474","e":false,"i":"","n":"apply","t":"apply(t: Throwable): Boolean","d":"scala.util.control.NonFatal","k":"def","x":"Returns true if the provided Throwable is to be considered non-fatal, or false if it is to be considered fatal\n"},
{"l":"api/scala/util/control/NonFatal$.html#unapply-6a9","e":false,"i":"","n":"unapply","t":"unapply(t: Throwable): Option[Throwable]","d":"scala.util.control.NonFatal","k":"def","x":"Returns Some(t) if NonFatal(t) == true, otherwise None\n"},
{"l":"api/scala/util/control/NonLocalReturns$.html#","e":false,"i":"","n":"NonLocalReturns","t":"NonLocalReturns","d":"scala.util.control","k":"object","x":""},
{"l":"api/scala/util/control/NonLocalReturns$.html#returning-5d3","e":false,"i":"","n":"returning","t":"returning[T](op: ReturnThrowable[T] ?=> T): T","d":"scala.util.control.NonLocalReturns","k":"def","x":""},
{"l":"api/scala/util/control/NonLocalReturns$.html#throwReturn-a53","e":false,"i":"","n":"throwReturn","t":"throwReturn[T](result: T)(using returner: ReturnThrowable[_ >: T]): Nothing","d":"scala.util.control.NonLocalReturns","k":"def","x":""},
{"l":"api/scala/util/control/NonLocalReturns$$ReturnThrowable.html#","e":false,"i":"","n":"ReturnThrowable","t":"ReturnThrowable[T] extends ControlThrowable","d":"scala.util.control.NonLocalReturns","k":"class","x":""},
{"l":"api/scala/util/control/NonLocalReturns$$ReturnThrowable.html#result-0","e":false,"i":"","n":"result","t":"result: T","d":"scala.util.control.NonLocalReturns.ReturnThrowable","k":"def","x":""},
{"l":"api/scala/util/control/NonLocalReturns$$ReturnThrowable.html#throwReturn-fffff052","e":false,"i":"","n":"throwReturn","t":"throwReturn(result: T): Nothing","d":"scala.util.control.NonLocalReturns.ReturnThrowable","k":"def","x":""},
{"l":"api/scala/util/control/TailCalls$.html#","e":false,"i":"","n":"TailCalls","t":"TailCalls","d":"scala.util.control","k":"object","x":"Methods exported by this object implement tail calls via trampolining."},
{"l":"api/scala/util/control/TailCalls$.html#done-fffff842","e":false,"i":"","n":"done","t":"done[A](result: A): TailRec[A]","d":"scala.util.control.TailCalls","k":"def","x":"Return the final result from a tailcalling computation."},
{"l":"api/scala/util/control/TailCalls$.html#tailcall-4a7","e":false,"i":"","n":"tailcall","t":"tailcall[A](rest: => TailRec[A]): TailRec[A]","d":"scala.util.control.TailCalls","k":"def","x":"Perform a tailcall."},
{"l":"api/scala/util/control/TailCalls$$TailRec.html#","e":false,"i":"","n":"TailRec","t":"TailRec[+A]","d":"scala.util.control.TailCalls","k":"class","x":"This class represents a tailcalling computation.\n"},
{"l":"api/scala/util/control/TailCalls$$TailRec.html#flatMap-146","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: A => TailRec[B]): TailRec[B]","d":"scala.util.control.TailCalls.TailRec","k":"def","x":"Continue the computation with f and merge the trampolining\nof this computation with that of f."},
{"l":"api/scala/util/control/TailCalls$$TailRec.html#map-146","e":false,"i":"","n":"map","t":"map[B](f: A => B): TailRec[B]","d":"scala.util.control.TailCalls.TailRec","k":"def","x":"Continue the computation with f."},
{"l":"api/scala/util/control/TailCalls$$TailRec.html#result-0","e":false,"i":"","n":"result","t":"result: A","d":"scala.util.control.TailCalls.TailRec","k":"def","x":"Returns the result of the tailcalling computation.\n"},
{"l":"api/scala/util/control/TailCalls$$TailRec.html#resume-0","e":false,"i":"","n":"resume","t":"resume: Either[() => TailRec[A], A]","d":"scala.util.control.TailCalls.TailRec","k":"def","x":"Returns either the next step of the tailcalling computation,\nor the result if there are no more steps."},
{"l":"api/scala/util/hashing.html#","e":false,"i":"","n":"scala.util.hashing","t":"scala.util.hashing","d":"","k":"package","x":""},
{"l":"api/scala/util/hashing.html#byteswap32-fffffbe0","e":false,"i":"","n":"byteswap32","t":"byteswap32(v: Int): Int","d":"scala.util.hashing","k":"def","x":"Fast multiplicative hash with a nice distribution.\n"},
{"l":"api/scala/util/hashing.html#byteswap64-fffff788","e":false,"i":"","n":"byteswap64","t":"byteswap64(v: Long): Long","d":"scala.util.hashing","k":"def","x":"Fast multiplicative hash with a nice distribution\nfor 64-bit values.\n"},
{"l":"api/scala/util/hashing/ByteswapHashing.html#","e":false,"i":"","n":"ByteswapHashing","t":"ByteswapHashing[T] extends Hashing[T]","d":"scala.util.hashing","k":"class","x":"A fast multiplicative hash by Phil Bagwell.\n"},
{"l":"api/scala/util/hashing/ByteswapHashing.html#hash-fffffaf4","e":false,"i":"","n":"hash","t":"hash(v: T): Int","d":"scala.util.hashing.ByteswapHashing","k":"def","x":""},
{"l":"api/scala/util/hashing/ByteswapHashing$.html#","e":false,"i":"","n":"ByteswapHashing","t":"ByteswapHashing","d":"scala.util.hashing","k":"object","x":""},
{"l":"api/scala/util/hashing/ByteswapHashing$.html#chain-fffffddd","e":false,"i":"","n":"chain","t":"chain[T](h: Hashing[T]): Hashing[T]","d":"scala.util.hashing.ByteswapHashing","k":"def","x":"Composes another Hashing with the Byteswap hash.\n"},
{"l":"api/scala/util/hashing/Hashing.html#","e":false,"i":"","n":"Hashing","t":"Hashing[T] extends Serializable","d":"scala.util.hashing","k":"trait","x":"Hashing is a trait whose instances each represent a strategy for hashing\ninstances of a type."},
{"l":"api/scala/util/hashing/Hashing.html#hash-fffffaf4","e":false,"i":"","n":"hash","t":"hash(x: T): Int","d":"scala.util.hashing.Hashing","k":"def","x":""},
{"l":"api/scala/util/hashing/Hashing$.html#","e":false,"i":"","n":"Hashing","t":"Hashing","d":"scala.util.hashing","k":"object","x":""},
{"l":"api/scala/util/hashing/Hashing$.html#default-fffff370","e":false,"i":"","n":"default","t":"default[T]: Default[T]","d":"scala.util.hashing.Hashing","k":"def","x":""},
{"l":"api/scala/util/hashing/Hashing$.html#fromFunction-e16","e":false,"i":"","n":"fromFunction","t":"fromFunction[T](f: T => Int): Hashing[T]","d":"scala.util.hashing.Hashing","k":"def","x":""},
{"l":"api/scala/util/hashing/Hashing$$Default.html#","e":false,"i":"","n":"Default","t":"Default[T] extends Hashing[T]","d":"scala.util.hashing.Hashing","k":"class","x":""},
{"l":"api/scala/util/hashing/Hashing$$Default.html#hash-fffffaf4","e":false,"i":"","n":"hash","t":"hash(x: T): Int","d":"scala.util.hashing.Hashing.Default","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#","e":false,"i":"","n":"MurmurHash3","t":"MurmurHash3","d":"scala.util.hashing","k":"object","x":"An implementation of Austin Appleby's MurmurHash 3 algorithm\n(MurmurHash3_x86_32). This object contains methods that hash\nvalues of various types as well as means to construct Hashing\nobjects."},
{"l":"api/scala/util/hashing/MurmurHash3$.html#arrayHash-fffff3e3","e":false,"i":"","n":"arrayHash","t":"arrayHash[T](a: Array[T]): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#arrayHash-fffffaa4","e":false,"i":"","n":"arrayHash","t":"arrayHash[T](a: Array[T], seed: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Compute the hash of an array. Potential range hashes are recognized to produce a\nhash that is compatible with rangeHash.\n"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#arrayHashing-15d","e":false,"i":"","n":"arrayHashing","t":"arrayHashing[T]: ArrayHashing[T]","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#arraySeed-0","e":false,"i":"","n":"arraySeed","t":"arraySeed: 1007110753","d":"scala.util.hashing.MurmurHash3","k":"val","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#bytesHash-f35","e":false,"i":"","n":"bytesHash","t":"bytesHash(data: Array[Byte]): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#bytesHash-fffffb92","e":false,"i":"","n":"bytesHash","t":"bytesHash(data: Array[Byte], seed: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Compute the hash of a byte array. Faster than arrayHash, because\nit hashes 4 bytes at once. Note that the result is not compatible with\narrayHash!\n"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#bytesHashing-0","e":false,"i":"","n":"bytesHashing","t":"bytesHashing: Hashing[Array[Byte]]","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#finalizeHash-f47","e":false,"i":"","n":"finalizeHash","t":"finalizeHash(hash: Int, length: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Finalize a hash to incorporate the length and make sure all bits avalanche."},
{"l":"api/scala/util/hashing/MurmurHash3$.html#indexedSeqHash-ad6","e":false,"i":"","n":"indexedSeqHash","t":"indexedSeqHash(a: IndexedSeq[Any], seed: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Compute the hash of an IndexedSeq. Potential range hashes are recognized to produce a\nhash that is compatible with rangeHash.\n"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#listHash-fffff7b2","e":false,"i":"","n":"listHash","t":"listHash(xs: List[_], seed: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Compute the hash of a List. Potential range hashes are recognized to produce a\nhash that is compatible with rangeHash.\n"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#mapHash-fffff613","e":false,"i":"","n":"mapHash","t":"mapHash(xs: Map[_, _]): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#mapSeed-0","e":false,"i":"","n":"mapSeed","t":"mapSeed: Int","d":"scala.util.hashing.MurmurHash3","k":"val","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#mix-f47","e":false,"i":"","n":"mix","t":"mix(hash: Int, data: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Mix in a block of data into an intermediate hash value."},
{"l":"api/scala/util/hashing/MurmurHash3$.html#mixLast-f47","e":false,"i":"","n":"mixLast","t":"mixLast(hash: Int, data: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"May optionally be used as the last mixing step. Is a little bit faster than mix,\nas it does no further mixing of the resulting hash. For the last element this is not\nnecessary as the hash is thoroughly mixed during finalization anyway."},
{"l":"api/scala/util/hashing/MurmurHash3$.html#orderedHash-2ac","e":false,"i":"","n":"orderedHash","t":"orderedHash(xs: IterableOnce[Any]): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#orderedHash-dfb","e":false,"i":"","n":"orderedHash","t":"orderedHash(xs: IterableOnce[Any], seed: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Compute a hash that depends on the order of its arguments. Potential range\nhashes are recognized to produce a hash that is compatible with rangeHash.\n"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#orderedHashing-0","e":false,"i":"","n":"orderedHashing","t":"orderedHashing: Hashing[IterableOnce[Any]]","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#productHash-fffff2e0","e":false,"i":"","n":"productHash","t":"productHash(x: Product): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#productHash-fffffea7","e":false,"i":"","n":"productHash","t":"productHash(x: Product, seed: Int, ignorePrefix: Boolean): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Compute the hash of a product"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#productHashing-0","e":false,"i":"","n":"productHashing","t":"productHashing: Hashing[Product]","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#productSeed-0","e":false,"i":"","n":"productSeed","t":"productSeed: -889275714","d":"scala.util.hashing.MurmurHash3","k":"val","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#rangeHash-ffffffc0","e":false,"i":"","n":"rangeHash","t":"rangeHash(start: Int, step: Int, last: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#rangeHash-fffff767","e":false,"i":"","n":"rangeHash","t":"rangeHash(start: Int, step: Int, last: Int, seed: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Compute the hash of a Range with at least 2 elements. Ranges with fewer\nelements need to use seqHash instead. The last parameter must be the\nactual last element produced by a Range, not the nominal end.\n"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#seqHash-270","e":false,"i":"","n":"seqHash","t":"seqHash(xs: Seq[_]): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"To offer some potential for optimization.\n"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#seqSeed-0","e":false,"i":"","n":"seqSeed","t":"seqSeed: Int","d":"scala.util.hashing.MurmurHash3","k":"val","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#setHash-5cd","e":false,"i":"","n":"setHash","t":"setHash(xs: Set[_]): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#setSeed-0","e":false,"i":"","n":"setSeed","t":"setSeed: Int","d":"scala.util.hashing.MurmurHash3","k":"val","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#stringHash-a62","e":false,"i":"","n":"stringHash","t":"stringHash(x: String): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#stringHash-305","e":false,"i":"","n":"stringHash","t":"stringHash(str: String, seed: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Compute the hash of a string"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#stringHashing-0","e":false,"i":"","n":"stringHashing","t":"stringHashing: Hashing[String]","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#stringSeed-0","e":false,"i":"","n":"stringSeed","t":"stringSeed: -137723950","d":"scala.util.hashing.MurmurHash3","k":"val","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#symmetricSeed-0","e":false,"i":"","n":"symmetricSeed","t":"symmetricSeed: -1248659538","d":"scala.util.hashing.MurmurHash3","k":"val","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#traversableSeed-0","e":false,"i":"","n":"traversableSeed","t":"traversableSeed: -415593707","d":"scala.util.hashing.MurmurHash3","k":"val","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#unorderedHash-2ac","e":false,"i":"","n":"unorderedHash","t":"unorderedHash(xs: IterableOnce[Any]): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$.html#unorderedHash-dfb","e":false,"i":"","n":"unorderedHash","t":"unorderedHash(xs: IterableOnce[Any], seed: Int): Int","d":"scala.util.hashing.MurmurHash3","k":"def","x":"Compute a hash that is symmetric in its arguments - that is a hash\nwhere the order of appearance of elements does not matter.\nThis is useful for hashing sets, for example.\n"},
{"l":"api/scala/util/hashing/MurmurHash3$.html#unorderedHashing-0","e":false,"i":"","n":"unorderedHashing","t":"unorderedHashing: Hashing[IterableOnce[Any]]","d":"scala.util.hashing.MurmurHash3","k":"def","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$$ArrayHashing.html#","e":false,"i":"","n":"ArrayHashing","t":"ArrayHashing[T] extends Hashing[Array[T]]","d":"scala.util.hashing.MurmurHash3","k":"class","x":""},
{"l":"api/scala/util/hashing/MurmurHash3$$ArrayHashing.html#hash-fffffaf4","e":false,"i":"","n":"hash","t":"hash(a: Array[T]): Int","d":"scala.util.hashing.MurmurHash3.ArrayHashing","k":"def","x":""},
{"l":"api/scala/util/matching.html#","e":false,"i":"","n":"scala.util.matching","t":"scala.util.matching","d":"","k":"package","x":""},
{"l":"api/scala/util/matching/Regex.html#","e":false,"i":"","n":"Regex","t":"Regex extends Serializable","d":"scala.util.matching","k":"class","x":"A regular expression is used to determine whether a string matches a pattern\nand, if it does, to extract or transform the parts that match."},
{"l":"api/scala/util/matching/Regex.html#anchored-0","e":false,"i":"","n":"anchored","t":"anchored: Regex","d":"scala.util.matching.Regex","k":"def","x":""},
{"l":"api/scala/util/matching/Regex.html#findAllIn-17a","e":false,"i":"","n":"findAllIn","t":"findAllIn(source: CharSequence): MatchIterator","d":"scala.util.matching.Regex","k":"def","x":"Return all non-overlapping matches of this Regex in the given character\nsequence as a scala.util.matching.Regex.MatchIterator,\nwhich is a special scala.collection.Iterator that returns the\nmatched strings but can also be queried for more data about the last match,\nsuch as capturing groups and start position."},
{"l":"api/scala/util/matching/Regex.html#findAllMatchIn-30b","e":false,"i":"","n":"findAllMatchIn","t":"findAllMatchIn(source: CharSequence): Iterator[Match]","d":"scala.util.matching.Regex","k":"def","x":"Return all non-overlapping matches of this regexp in given character sequence as a\nscala.collection.Iterator of scala.util.matching.Regex.Match.\n"},
{"l":"api/scala/util/matching/Regex.html#findFirstIn-fffffe48","e":false,"i":"","n":"findFirstIn","t":"findFirstIn(source: CharSequence): Option[String]","d":"scala.util.matching.Regex","k":"def","x":"Return an optional first matching string of this Regex in the given character sequence,\nor None if there is no match.\n"},
{"l":"api/scala/util/matching/Regex.html#findFirstMatchIn-fffffe48","e":false,"i":"","n":"findFirstMatchIn","t":"findFirstMatchIn(source: CharSequence): Option[Match]","d":"scala.util.matching.Regex","k":"def","x":"Return an optional first match of this Regex in the given character sequence,\nor None if it does not exist."},
{"l":"api/scala/util/matching/Regex.html#findPrefixMatchOf-fffffe48","e":false,"i":"","n":"findPrefixMatchOf","t":"findPrefixMatchOf(source: CharSequence): Option[Match]","d":"scala.util.matching.Regex","k":"def","x":"Return an optional match of this Regex at the beginning of the\ngiven character sequence, or None if it matches no prefix\nof the character sequence."},
{"l":"api/scala/util/matching/Regex.html#findPrefixOf-fffffe48","e":false,"i":"","n":"findPrefixOf","t":"findPrefixOf(source: CharSequence): Option[String]","d":"scala.util.matching.Regex","k":"def","x":"Return an optional match of this Regex at the beginning of the\ngiven character sequence, or None if it matches no prefix\nof the character sequence."},
{"l":"api/scala/util/matching/Regex.html#matches-b5","e":false,"i":"","n":"matches","t":"matches(source: CharSequence): Boolean","d":"scala.util.matching.Regex","k":"def","x":"Returns whether this Regex matches the given character sequence."},
{"l":"api/scala/util/matching/Regex.html#pattern-0","e":false,"i":"","n":"pattern","t":"pattern: Pattern","d":"scala.util.matching.Regex","k":"val","x":""},
{"l":"api/scala/util/matching/Regex.html#regex-0","e":false,"i":"","n":"regex","t":"regex: String","d":"scala.util.matching.Regex","k":"def","x":""},
{"l":"api/scala/util/matching/Regex.html#replaceAllIn-755","e":false,"i":"","n":"replaceAllIn","t":"replaceAllIn(target: CharSequence, replacement: String): String","d":"scala.util.matching.Regex","k":"def","x":"Replaces all matches by a string."},
{"l":"api/scala/util/matching/Regex.html#replaceAllIn-70b","e":false,"i":"","n":"replaceAllIn","t":"replaceAllIn(target: CharSequence, replacer: Match => String): String","d":"scala.util.matching.Regex","k":"def","x":"Replaces all matches using a replacer function. The replacer function takes a\nscala.util.matching.Regex.Match so that extra information can be obtained\nfrom the match. For example:"},
{"l":"api/scala/util/matching/Regex.html#replaceFirstIn-755","e":false,"i":"","n":"replaceFirstIn","t":"replaceFirstIn(target: CharSequence, replacement: String): String","d":"scala.util.matching.Regex","k":"def","x":"Replaces the first match by a string."},
{"l":"api/scala/util/matching/Regex.html#replaceSomeIn-70b","e":false,"i":"","n":"replaceSomeIn","t":"replaceSomeIn(target: CharSequence, replacer: Match => Option[String]): String","d":"scala.util.matching.Regex","k":"def","x":"Replaces some of the matches using a replacer function that returns an scala.Option.\nThe replacer function takes a scala.util.matching.Regex.Match so that extra\ninformation can be obtained from the match. For example:"},
{"l":"api/scala/util/matching/Regex.html#split-fffff052","e":false,"i":"","n":"split","t":"split(toSplit: CharSequence): Array[String]","d":"scala.util.matching.Regex","k":"def","x":"Splits the provided character sequence around matches of this regexp.\n"},
{"l":"api/scala/util/matching/Regex.html#<init>-fffff1ea","e":false,"i":"","n":"this","t":"this(regex: String, groupNames: String*)","d":"scala.util.matching.Regex","k":"def","x":"Compile a regular expression, supplied as a string, into a pattern that\ncan be matched against inputs."},
{"l":"api/scala/util/matching/Regex.html#unanchored-0","e":false,"i":"","n":"unanchored","t":"unanchored: UnanchoredRegex","d":"scala.util.matching.Regex","k":"def","x":"Create a new Regex with the same pattern, but no requirement that\nthe entire String matches in extractor patterns and Regex#matches."},
{"l":"api/scala/util/matching/Regex.html#unapplySeq-fffffe48","e":false,"i":"","n":"unapplySeq","t":"unapplySeq(s: CharSequence): Option[List[String]]","d":"scala.util.matching.Regex","k":"def","x":"Tries to match a java.lang.CharSequence."},
{"l":"api/scala/util/matching/Regex.html#unapplySeq-fffffc5b","e":false,"i":"","n":"unapplySeq","t":"unapplySeq(c: Char): Option[List[Char]]","d":"scala.util.matching.Regex","k":"def","x":"Tries to match the String representation of a scala.Char."},
{"l":"api/scala/util/matching/Regex.html#unapplySeq-fffff91e","e":false,"i":"","n":"unapplySeq","t":"unapplySeq(m: Match): Option[List[String]]","d":"scala.util.matching.Regex","k":"def","x":"Tries to match on a scala.util.matching.Regex.Match."},
{"l":"api/scala/util/matching/Regex$.html#","e":false,"i":"","n":"Regex","t":"Regex","d":"scala.util.matching","k":"object","x":"This object defines inner classes that describe\nregex matches and helper objects.\n"},
{"l":"api/scala/util/matching/Regex$.html#quote-fffff2ca","e":false,"i":"","n":"quote","t":"quote(text: String): String","d":"scala.util.matching.Regex","k":"def","x":"Quotes strings to be used literally in regex patterns."},
{"l":"api/scala/util/matching/Regex$.html#quoteReplacement-fffff2ca","e":false,"i":"","n":"quoteReplacement","t":"quoteReplacement(text: String): String","d":"scala.util.matching.Regex","k":"def","x":"Quotes replacement strings to be used in replacement methods."},
{"l":"api/scala/util/matching/Regex$$Groups$.html#","e":false,"i":"","n":"Groups","t":"Groups","d":"scala.util.matching.Regex","k":"object","x":"An extractor object that yields the groups in the match. Using this extractor\nrather than the original Regex ensures that the match is not recomputed."},
{"l":"api/scala/util/matching/Regex$$Groups$.html#unapplySeq-fffff91e","e":false,"i":"","n":"unapplySeq","t":"unapplySeq(m: Match): Option[Seq[String]]","d":"scala.util.matching.Regex.Groups","k":"def","x":""},
{"l":"api/scala/util/matching/Regex$$Match.html#","e":false,"i":"","n":"Match","t":"Match(val source: CharSequence, val matcher: Matcher, _groupNames: Seq[String]) extends MatchData","d":"scala.util.matching.Regex","k":"class","x":"Provides information about a successful match."},
{"l":"api/scala/util/matching/Regex$$Match.html#end-fffffbe0","e":false,"i":"","n":"end","t":"end(i: Int): Int","d":"scala.util.matching.Regex.Match","k":"def","x":"The index following the last matched character in group i."},
{"l":"api/scala/util/matching/Regex$$Match.html#end-0","e":false,"i":"","n":"end","t":"end: Int","d":"scala.util.matching.Regex.Match","k":"val","x":"The index following the last matched character."},
{"l":"api/scala/util/matching/Regex$$Match.html#force-0","e":false,"i":"","n":"force","t":"force: this.type","d":"scala.util.matching.Regex.Match","k":"def","x":"The match itself with matcher-dependent lazy vals forced,\nso that match is valid even once matcher is advanced.\n"},
{"l":"api/scala/util/matching/Regex$$Match.html#groupCount-0","e":false,"i":"","n":"groupCount","t":"groupCount: Int","d":"scala.util.matching.Regex.Match","k":"def","x":"The number of subgroups."},
{"l":"api/scala/util/matching/Regex$$Match.html#groupNames-0","e":false,"i":"","n":"groupNames","t":"groupNames: Seq[String]","d":"scala.util.matching.Regex.Match","k":"val","x":"The names of the groups, or an empty sequence if none defined"},
{"l":"api/scala/util/matching/Regex$$Match.html#source-0","e":false,"i":"","n":"source","t":"source: CharSequence","d":"scala.util.matching.Regex.Match","k":"val","x":"The source from which the match originated"},
{"l":"api/scala/util/matching/Regex$$Match.html#start-fffffbe0","e":false,"i":"","n":"start","t":"start(i: Int): Int","d":"scala.util.matching.Regex.Match","k":"def","x":"The index of the first matched character in group i."},
{"l":"api/scala/util/matching/Regex$$Match.html#start-0","e":false,"i":"","n":"start","t":"start: Int","d":"scala.util.matching.Regex.Match","k":"val","x":"The index of the first matched character."},
{"l":"api/scala/util/matching/Regex$$Match$.html#","e":false,"i":"","n":"Match","t":"Match","d":"scala.util.matching.Regex","k":"object","x":"An extractor object for Matches, yielding the matched string."},
{"l":"api/scala/util/matching/Regex$$Match$.html#unapply-fffffbdd","e":false,"i":"","n":"unapply","t":"unapply(m: Match): Some[String]","d":"scala.util.matching.Regex.Match","k":"def","x":""},
{"l":"api/scala/util/matching/Regex$$MatchData.html#","e":false,"i":"","n":"MatchData","t":"MatchData","d":"scala.util.matching.Regex","k":"trait","x":"This class provides methods to access\nthe details of a match.\n"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#after-0","e":false,"i":"","n":"after","t":"after: CharSequence","d":"scala.util.matching.Regex.MatchData","k":"def","x":"Returns char sequence after last character of match,\nor null if nothing was matched.\n"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#after-872","e":false,"i":"","n":"after","t":"after(i: Int): CharSequence","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The char sequence after last character of match in group i,\nor null if nothing was matched for that group.\n"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#before-0","e":false,"i":"","n":"before","t":"before: CharSequence","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The char sequence before first character of match,\nor null if nothing was matched.\n"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#before-872","e":false,"i":"","n":"before","t":"before(i: Int): CharSequence","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The char sequence before first character of match in group i,\nor null if nothing was matched for that group.\n"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#end-0","e":false,"i":"","n":"end","t":"end: Int","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The index following the last matched character, or -1 if nothing was matched."},
{"l":"api/scala/util/matching/Regex$$MatchData.html#end-fffffbe0","e":false,"i":"","n":"end","t":"end(i: Int): Int","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The index following the last matched character in group i,\nor -1 if nothing was matched for that group.\n"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#group-78c","e":false,"i":"","n":"group","t":"group(i: Int): String","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The matched string in group i,\nor null if nothing was matched.\n"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#group-fffff2ca","e":false,"i":"","n":"group","t":"group(id: String): String","d":"scala.util.matching.Regex.MatchData","k":"def","x":"Returns the group with the given name."},
{"l":"api/scala/util/matching/Regex$$MatchData.html#groupCount-0","e":false,"i":"","n":"groupCount","t":"groupCount: Int","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The number of capturing groups in the pattern.\n(For a given successful match, some of those groups may not have matched any input.)\n"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#groupNames-0","e":false,"i":"","n":"groupNames","t":"groupNames: Seq[String]","d":"scala.util.matching.Regex.MatchData","k":"val","x":"The names of the groups, or an empty sequence if none defined"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#matched-0","e":false,"i":"","n":"matched","t":"matched: String","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The matched string, or null if nothing was matched."},
{"l":"api/scala/util/matching/Regex$$MatchData.html#matcher-0","e":false,"i":"","n":"matcher","t":"matcher: Matcher","d":"scala.util.matching.Regex.MatchData","k":"def","x":"Basically, wraps a platform Matcher."},
{"l":"api/scala/util/matching/Regex$$MatchData.html#source-0","e":false,"i":"","n":"source","t":"source: CharSequence","d":"scala.util.matching.Regex.MatchData","k":"val","x":"The source from which the match originated"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#start-0","e":false,"i":"","n":"start","t":"start: Int","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The index of the first matched character, or -1 if nothing was matched"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#start-fffffbe0","e":false,"i":"","n":"start","t":"start(i: Int): Int","d":"scala.util.matching.Regex.MatchData","k":"def","x":"The index of the first matched character in group i,\nor -1 if nothing was matched for that group.\n"},
{"l":"api/scala/util/matching/Regex$$MatchData.html#subgroups-0","e":false,"i":"","n":"subgroups","t":"subgroups: List[String]","d":"scala.util.matching.Regex.MatchData","k":"def","x":"All capturing groups, i.e., not including group(0)."},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#","e":false,"i":"","n":"MatchIterator","t":"MatchIterator(val source: CharSequence, val regex: Regex, val _groupNames: Seq[String]) extends AbstractIterator[String], MatchData","d":"scala.util.matching.Regex","k":"class","x":"A class to step through a sequence of regex matches."},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#end-0","e":false,"i":"","n":"end","t":"end: Int","d":"scala.util.matching.Regex.MatchIterator","k":"def","x":"The index of the last matched character."},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#end-fffffbe0","e":false,"i":"","n":"end","t":"end(i: Int): Int","d":"scala.util.matching.Regex.MatchIterator","k":"def","x":"The index following the last matched character in group i."},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#groupCount-0","e":false,"i":"","n":"groupCount","t":"groupCount: Int","d":"scala.util.matching.Regex.MatchIterator","k":"def","x":"The number of subgroups."},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#groupNames-0","e":false,"i":"","n":"groupNames","t":"groupNames: Seq[String]","d":"scala.util.matching.Regex.MatchIterator","k":"val","x":"The names of the groups, or an empty sequence if none defined"},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#hasNext-0","e":false,"i":"","n":"hasNext","t":"hasNext: Boolean","d":"scala.util.matching.Regex.MatchIterator","k":"def","x":"Return true if next will find a match.\nAs a side effect, advance the underlying matcher if necessary;\nqueries about the current match data pertain to the underlying matcher.\n"},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#matchData-0","e":false,"i":"","n":"matchData","t":"matchData: Iterator[Match]","d":"scala.util.matching.Regex.MatchIterator","k":"def","x":"Convert to an iterator that yields MatchData elements instead of Strings."},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#next-665","e":false,"i":"","n":"next","t":"next(): String","d":"scala.util.matching.Regex.MatchIterator","k":"def","x":"The next matched substring of source.\nAs a side effect, advance the underlying matcher if necessary.\n"},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#regex-0","e":false,"i":"","n":"regex","t":"regex: Regex","d":"scala.util.matching.Regex.MatchIterator","k":"val","x":""},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#source-0","e":false,"i":"","n":"source","t":"source: CharSequence","d":"scala.util.matching.Regex.MatchIterator","k":"val","x":"The source from which the match originated"},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#start-0","e":false,"i":"","n":"start","t":"start: Int","d":"scala.util.matching.Regex.MatchIterator","k":"def","x":"The index of the first matched character."},
{"l":"api/scala/util/matching/Regex$$MatchIterator.html#start-fffffbe0","e":false,"i":"","n":"start","t":"start(i: Int): Int","d":"scala.util.matching.Regex.MatchIterator","k":"def","x":"The index of the first matched character in group i."},
{"l":"api/scala/util/matching/UnanchoredRegex.html#","e":false,"i":"","n":"UnanchoredRegex","t":"UnanchoredRegex extends Regex","d":"scala.util.matching","k":"trait","x":"A Regex that finds the first match when used in a pattern match.\n"},
{"l":"api/scala/util/ChainingOps.html#","e":false,"i":"","n":"ChainingOps","t":"ChainingOps[A](self: A) extends AnyVal","d":"scala.util","k":"class","x":"Adds chaining methods tap and pipe to every type.\n"},
{"l":"api/scala/util/ChainingOps.html#pipe-5d3","e":false,"i":"","n":"pipe","t":"pipe[B](f: A => B): B","d":"scala.util.ChainingOps","k":"def","x":"Converts the value by applying the function f."},
{"l":"api/scala/util/ChainingOps.html#tap-5d3","e":false,"i":"","n":"tap","t":"tap[U](f: A => U): A","d":"scala.util.ChainingOps","k":"def","x":"Applies f to the value for its side effects, and returns the original value."},
{"l":"api/scala/util/ChainingSyntax.html#","e":false,"i":"","n":"ChainingSyntax","t":"ChainingSyntax","d":"scala.util","k":"trait","x":""},
{"l":"api/scala/util/ChainingSyntax.html#scalaUtilChainingOps-957","e":false,"i":"","n":"scalaUtilChainingOps","t":"scalaUtilChainingOps[A](a: A): ChainingOps[A]","d":"scala.util.ChainingSyntax","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$.html#","e":false,"i":"","n":"CommandLineParser","t":"CommandLineParser","d":"scala.util","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$.html#parseArgument-941","e":false,"i":"","n":"parseArgument","t":"parseArgument[T](args: Array[String], n: Int)(using fs: FromString[T]): T","d":"scala.util.CommandLineParser","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$.html#parseRemainingArguments-ae4","e":false,"i":"","n":"parseRemainingArguments","t":"parseRemainingArguments[T](args: Array[String], n: Int)(using fs: FromString[T]): List[T]","d":"scala.util.CommandLineParser","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$.html#parseString-fffffae3","e":false,"i":"","n":"parseString","t":"parseString[T](str: String, n: Int)(using fs: FromString[T]): T","d":"scala.util.CommandLineParser","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$.html#showError-bc5","e":false,"i":"","n":"showError","t":"showError(err: ParseError): Unit","d":"scala.util.CommandLineParser","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$.html#","e":false,"i":"","n":"FromString","t":"FromString","d":"scala.util.CommandLineParser","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$.html#given_FromString_Boolean-0","e":false,"i":"","n":"given_FromString_Boolean","t":"given_FromString_Boolean: given_FromString_Boolean","d":"scala.util.CommandLineParser.FromString","k":"given","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$.html#given_FromString_Byte-0","e":false,"i":"","n":"given_FromString_Byte","t":"given_FromString_Byte: given_FromString_Byte","d":"scala.util.CommandLineParser.FromString","k":"given","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$.html#given_FromString_Double-0","e":false,"i":"","n":"given_FromString_Double","t":"given_FromString_Double: given_FromString_Double","d":"scala.util.CommandLineParser.FromString","k":"given","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$.html#given_FromString_Float-0","e":false,"i":"","n":"given_FromString_Float","t":"given_FromString_Float: given_FromString_Float","d":"scala.util.CommandLineParser.FromString","k":"given","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$.html#given_FromString_Int-0","e":false,"i":"","n":"given_FromString_Int","t":"given_FromString_Int: given_FromString_Int","d":"scala.util.CommandLineParser.FromString","k":"given","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$.html#given_FromString_Long-0","e":false,"i":"","n":"given_FromString_Long","t":"given_FromString_Long: given_FromString_Long","d":"scala.util.CommandLineParser.FromString","k":"given","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$.html#given_FromString_Short-0","e":false,"i":"","n":"given_FromString_Short","t":"given_FromString_Short: given_FromString_Short","d":"scala.util.CommandLineParser.FromString","k":"given","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$.html#given_FromString_String-0","e":false,"i":"","n":"given_FromString_String","t":"given_FromString_String: given_FromString_String","d":"scala.util.CommandLineParser.FromString","k":"given","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Boolean$.html#","e":false,"i":"","n":"given_FromString_Boolean","t":"given_FromString_Boolean extends FromString[Boolean]","d":"scala.util.CommandLineParser.FromString","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Boolean$.html#fromString-fffffd1b","e":false,"i":"","n":"fromString","t":"fromString(s: String): Boolean","d":"scala.util.CommandLineParser.FromString.given_FromString_Boolean","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Byte$.html#","e":false,"i":"","n":"given_FromString_Byte","t":"given_FromString_Byte extends FromString[Byte]","d":"scala.util.CommandLineParser.FromString","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Byte$.html#fromString-cf5","e":false,"i":"","n":"fromString","t":"fromString(s: String): Byte","d":"scala.util.CommandLineParser.FromString.given_FromString_Byte","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Double$.html#","e":false,"i":"","n":"given_FromString_Double","t":"given_FromString_Double extends FromString[Double]","d":"scala.util.CommandLineParser.FromString","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Double$.html#fromString-fffff07e","e":false,"i":"","n":"fromString","t":"fromString(s: String): Double","d":"scala.util.CommandLineParser.FromString.given_FromString_Double","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Float$.html#","e":false,"i":"","n":"given_FromString_Float","t":"given_FromString_Float extends FromString[Float]","d":"scala.util.CommandLineParser.FromString","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Float$.html#fromString-fffff40f","e":false,"i":"","n":"fromString","t":"fromString(s: String): Float","d":"scala.util.CommandLineParser.FromString.given_FromString_Float","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Int$.html#","e":false,"i":"","n":"given_FromString_Int","t":"given_FromString_Int extends FromString[Int]","d":"scala.util.CommandLineParser.FromString","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Int$.html#fromString-a62","e":false,"i":"","n":"fromString","t":"fromString(s: String): Int","d":"scala.util.CommandLineParser.FromString.given_FromString_Int","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Long$.html#","e":false,"i":"","n":"given_FromString_Long","t":"given_FromString_Long extends FromString[Long]","d":"scala.util.CommandLineParser.FromString","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Long$.html#fromString-269","e":false,"i":"","n":"fromString","t":"fromString(s: String): Long","d":"scala.util.CommandLineParser.FromString.given_FromString_Long","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Short$.html#","e":false,"i":"","n":"given_FromString_Short","t":"given_FromString_Short extends FromString[Short]","d":"scala.util.CommandLineParser.FromString","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_Short$.html#fromString-fffff62f","e":false,"i":"","n":"fromString","t":"fromString(s: String): Short","d":"scala.util.CommandLineParser.FromString.given_FromString_Short","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_String$.html#","e":false,"i":"","n":"given_FromString_String","t":"given_FromString_String extends FromString[String]","d":"scala.util.CommandLineParser.FromString","k":"object","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString$$given_FromString_String$.html#fromString-fffff2ca","e":false,"i":"","n":"fromString","t":"fromString(s: String): String","d":"scala.util.CommandLineParser.FromString.given_FromString_String","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString.html#","e":false,"i":"","n":"FromString","t":"FromString[T]","d":"scala.util.CommandLineParser","k":"trait","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString.html#fromString-fffff5f8","e":false,"i":"","n":"fromString","t":"fromString(s: String): T","d":"scala.util.CommandLineParser.FromString","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$FromString.html#fromStringOption-fffffd22","e":false,"i":"","n":"fromStringOption","t":"fromStringOption(s: String): Option[T]","d":"scala.util.CommandLineParser.FromString","k":"def","x":""},
{"l":"api/scala/util/CommandLineParser$$ParseError.html#","e":false,"i":"","n":"ParseError","t":"ParseError(val idx: Int, val msg: String) extends Exception","d":"scala.util.CommandLineParser","k":"class","x":""},
{"l":"api/scala/util/CommandLineParser$$ParseError.html#idx-0","e":false,"i":"","n":"idx","t":"idx: Int","d":"scala.util.CommandLineParser.ParseError","k":"val","x":""},
{"l":"api/scala/util/CommandLineParser$$ParseError.html#msg-0","e":false,"i":"","n":"msg","t":"msg: String","d":"scala.util.CommandLineParser.ParseError","k":"val","x":""},
{"l":"api/scala/util/DynamicVariable.html#","e":false,"i":"","n":"DynamicVariable","t":"DynamicVariable[T](init: T)","d":"scala.util","k":"class","x":"DynamicVariables provide a binding mechanism where the current\nvalue is found through dynamic scope, but where access to the\nvariable itself is resolved through static scope."},
{"l":"api/scala/util/DynamicVariable.html#value-0","e":false,"i":"","n":"value","t":"value: T","d":"scala.util.DynamicVariable","k":"def","x":"Retrieve the current value"},
{"l":"api/scala/util/DynamicVariable.html#value_=-fffff71f","e":false,"i":"","n":"value_=","t":"value_=(newval: T): Unit","d":"scala.util.DynamicVariable","k":"def","x":"Change the currently bound value, discarding the old value.\nUsually withValue() gives better semantics.\n"},
{"l":"api/scala/util/DynamicVariable.html#withValue-ddf","e":false,"i":"","n":"withValue","t":"withValue[S](newval: T)(thunk: => S): S","d":"scala.util.DynamicVariable","k":"def","x":"Set the value of the variable while executing the specified\nthunk.\n"},
{"l":"api/scala/util/Either.html#","e":false,"i":"","n":"Either","t":"Either[+A, +B] extends Product, Serializable","d":"scala.util","k":"class","x":"Represents a value of one of two possible types (a disjoint union).\nAn instance of Either is an instance of either scala.util.Left or scala.util.Right."},
{"l":"api/scala/util/Either.html#contains-e1c","e":false,"i":"","n":"contains","t":"contains[B1 >: B](elem: B1): Boolean","d":"scala.util.Either","k":"def","x":"Returns true if this is a Right and its value is equal to elem (as determined by ==),\nreturns false otherwise."},
{"l":"api/scala/util/Either.html#exists-fffff66f","e":false,"i":"","n":"exists","t":"exists(p: B => Boolean): Boolean","d":"scala.util.Either","k":"def","x":"Returns false if Left or returns the result of the application of\nthe given predicate to the Right value."},
{"l":"api/scala/util/Either.html#filterOrElse-559","e":false,"i":"","n":"filterOrElse","t":"filterOrElse[A1 >: A](p: B => Boolean, zero: => A1): Either[A1, B]","d":"scala.util.Either","k":"def","x":"Returns Right with the existing value of Right if this is a Right\nand the given predicate p holds for the right value,\nor Left(zero) if this is a Right and the given predicate p does not hold for the right value,\nor Left with the existing value of Left if this is a Left."},
{"l":"api/scala/util/Either.html#flatMap-36a","e":false,"i":"","n":"flatMap","t":"flatMap[A1 >: A, B1](f: B => Either[A1, B1]): Either[A1, B1]","d":"scala.util.Either","k":"def","x":"Binds the given function across Right.\n"},
{"l":"api/scala/util/Either.html#flatten-45","e":false,"i":"","n":"flatten","t":"flatten[A1 >: A, B1](implicit ev: B <:< Either[A1, B1]): Either[A1, B1]","d":"scala.util.Either","k":"def","x":"Returns the right value if this is right\nor this value if this is left\n"},
{"l":"api/scala/util/Either.html#fold-7e4","e":false,"i":"","n":"fold","t":"fold[C](fa: A => C, fb: B => C): C","d":"scala.util.Either","k":"def","x":"Applies fa if this is a Left or fb if this is a Right.\n"},
{"l":"api/scala/util/Either.html#forall-fffff66f","e":false,"i":"","n":"forall","t":"forall(f: B => Boolean): Boolean","d":"scala.util.Either","k":"def","x":"Returns true if Left or returns the result of the application of\nthe given predicate to the Right value."},
{"l":"api/scala/util/Either.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: B => U): Unit","d":"scala.util.Either","k":"def","x":"Executes the given side-effecting function if this is a Right."},
{"l":"api/scala/util/Either.html#getOrElse-fffff7d2","e":false,"i":"","n":"getOrElse","t":"getOrElse[B1 >: B](or: => B1): B1","d":"scala.util.Either","k":"def","x":"Returns the value from this Right or the given argument if this is a Left."},
{"l":"api/scala/util/Either.html#isLeft-0","e":false,"i":"","n":"isLeft","t":"isLeft: Boolean","d":"scala.util.Either","k":"def","x":"Returns true if this is a Left, false otherwise."},
{"l":"api/scala/util/Either.html#isRight-0","e":false,"i":"","n":"isRight","t":"isRight: Boolean","d":"scala.util.Either","k":"def","x":"Returns true if this is a Right, false otherwise."},
{"l":"api/scala/util/Either.html#joinLeft-106","e":false,"i":"","n":"joinLeft","t":"joinLeft[A1 >: A, B1 >: B, C](implicit ev: A1 <:< Either[C, B1]): Either[C, B1]","d":"scala.util.Either","k":"def","x":"Joins an Either through Left."},
{"l":"api/scala/util/Either.html#joinRight-106","e":false,"i":"","n":"joinRight","t":"joinRight[A1 >: A, B1 >: B, C](implicit ev: B1 <:< Either[A1, C]): Either[A1, C]","d":"scala.util.Either","k":"def","x":"Joins an Either through Right."},
{"l":"api/scala/util/Either.html#left-0","e":false,"i":"","n":"left","t":"left: LeftProjection[A, B]","d":"scala.util.Either","k":"def","x":"Projects this Either as a Left."},
{"l":"api/scala/util/Either.html#map-fffff769","e":false,"i":"","n":"map","t":"map[B1](f: B => B1): Either[A, B1]","d":"scala.util.Either","k":"def","x":"The given function is applied if this is a Right."},
{"l":"api/scala/util/Either.html#orElse-fffff14b","e":false,"i":"","n":"orElse","t":"orElse[A1 >: A, B1 >: B](or: => Either[A1, B1]): Either[A1, B1]","d":"scala.util.Either","k":"def","x":"Returns this Right or the given argument if this is a Left."},
{"l":"api/scala/util/Either.html#right-0","e":false,"i":"","n":"right","t":"right: RightProjection[A, B]","d":"scala.util.Either","k":"def","x":"Projects this Either as a Right."},
{"l":"api/scala/util/Either.html#swap-0","e":false,"i":"","n":"swap","t":"swap: Either[B, A]","d":"scala.util.Either","k":"def","x":"If this is a Left, then return the left value in Right or vice versa.\n"},
{"l":"api/scala/util/Either.html#toOption-0","e":false,"i":"","n":"toOption","t":"toOption: Option[B]","d":"scala.util.Either","k":"def","x":"Returns a Some containing the Right value\nif it exists or a None if this is a Left."},
{"l":"api/scala/util/Either.html#toSeq-0","e":false,"i":"","n":"toSeq","t":"toSeq: Seq[B]","d":"scala.util.Either","k":"def","x":"Returns a Seq containing the Right value if\nit exists or an empty Seq if this is a Left."},
{"l":"api/scala/util/Either.html#toTry-fffff2ad","e":false,"i":"","n":"toTry","t":"toTry(implicit ev: A <:< Throwable): Try[B]","d":"scala.util.Either","k":"def","x":""},
{"l":"api/scala/util/Either$.html#","e":false,"i":"","n":"Either","t":"Either","d":"scala.util","k":"object","x":""},
{"l":"api/scala/util/Either$.html#MergeableEither-b11","e":false,"i":"","n":"MergeableEither","t":"MergeableEither[A](x: Either[A, A]): MergeableEither[A]","d":"scala.util.Either","k":"def","x":"Allows use of a merge method to extract values from Either instances\nregardless of whether they are Left or Right."},
{"l":"api/scala/util/Either$.html#cond-fffff37b","e":false,"i":"","n":"cond","t":"cond[A, B](test: Boolean, right: => B, left: => A): Either[A, B]","d":"scala.util.Either","k":"def","x":"If the condition is satisfied, return the given B in Right,\notherwise, return the given A in Left."},
{"l":"api/scala/util/Either$$LeftProjection.html#","e":false,"i":"","n":"LeftProjection","t":"LeftProjection[+A, +B](e: Either[A, B])","d":"scala.util.Either","k":"class","x":"Projects an Either into a Left.\n"},
{"l":"api/scala/util/Either$$LeftProjection.html#exists-fffff66f","e":false,"i":"","n":"exists","t":"exists(p: A => Boolean): Boolean","d":"scala.util.Either.LeftProjection","k":"def","x":"Returns false if Right or returns the result of the application of\nthe given function to the Left value."},
{"l":"api/scala/util/Either$$LeftProjection.html#filter-27d","e":false,"i":"","n":"filter","t":"filter[B1](p: A => Boolean): Option[Either[A, B1]]","d":"scala.util.Either.LeftProjection","k":"def","x":"Returns None if this is a Right or if the given predicate\np does not hold for the left value, otherwise, returns a Left."},
{"l":"api/scala/util/Either$$LeftProjection.html#filterToOption-27d","e":false,"i":"","n":"filterToOption","t":"filterToOption[B1](p: A => Boolean): Option[Either[A, B1]]","d":"scala.util.Either.LeftProjection","k":"def","x":"Returns None if this is a Right or if the given predicate\np does not hold for the left value, otherwise, returns a Left."},
{"l":"api/scala/util/Either$$LeftProjection.html#flatMap-36a","e":false,"i":"","n":"flatMap","t":"flatMap[A1, B1 >: B](f: A => Either[A1, B1]): Either[A1, B1]","d":"scala.util.Either.LeftProjection","k":"def","x":"Binds the given function across Left."},
{"l":"api/scala/util/Either$$LeftProjection.html#forall-fffff66f","e":false,"i":"","n":"forall","t":"forall(p: A => Boolean): Boolean","d":"scala.util.Either.LeftProjection","k":"def","x":"Returns true if Right or returns the result of the application of\nthe given function to the Left value."},
{"l":"api/scala/util/Either$$LeftProjection.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: A => U): Unit","d":"scala.util.Either.LeftProjection","k":"def","x":"Executes the given side-effecting function if this is a Left."},
{"l":"api/scala/util/Either$$LeftProjection.html#get-0","e":false,"i":"","n":"get","t":"get: A","d":"scala.util.Either.LeftProjection","k":"def","x":"Returns the value from this Left or throws NoSuchElementException\nif this is a Right."},
{"l":"api/scala/util/Either$$LeftProjection.html#getOrElse-fffff7d2","e":false,"i":"","n":"getOrElse","t":"getOrElse[A1 >: A](or: => A1): A1","d":"scala.util.Either.LeftProjection","k":"def","x":"Returns the value from this Left or the given argument if this is a Right."},
{"l":"api/scala/util/Either$$LeftProjection.html#map-fffff769","e":false,"i":"","n":"map","t":"map[A1](f: A => A1): Either[A1, B]","d":"scala.util.Either.LeftProjection","k":"def","x":"Maps the function argument through Left."},
{"l":"api/scala/util/Either$$LeftProjection.html#toOption-0","e":false,"i":"","n":"toOption","t":"toOption: Option[A]","d":"scala.util.Either.LeftProjection","k":"def","x":"Returns a Some containing the Left value if it exists or a\nNone if this is a Right."},
{"l":"api/scala/util/Either$$LeftProjection.html#toSeq-0","e":false,"i":"","n":"toSeq","t":"toSeq: Seq[A]","d":"scala.util.Either.LeftProjection","k":"def","x":"Returns a Seq containing the Left value if it exists or an empty\nSeq if this is a Right."},
{"l":"api/scala/util/Either$$MergeableEither.html#","e":false,"i":"","n":"MergeableEither","t":"MergeableEither[A](x: Either[A, A]) extends AnyVal","d":"scala.util.Either","k":"class","x":"Allows use of a merge method to extract values from Either instances\nregardless of whether they are Left or Right."},
{"l":"api/scala/util/Either$$MergeableEither.html#merge-0","e":false,"i":"","n":"merge","t":"merge: A","d":"scala.util.Either.MergeableEither","k":"def","x":""},
{"l":"api/scala/util/Either$$RightProjection.html#","e":false,"i":"","n":"RightProjection","t":"RightProjection[+A, +B](e: Either[A, B])","d":"scala.util.Either","k":"class","x":"Projects an Either into a Right."},
{"l":"api/scala/util/Either$$RightProjection.html#exists-fffff66f","e":false,"i":"","n":"exists","t":"exists(p: B => Boolean): Boolean","d":"scala.util.Either.RightProjection","k":"def","x":"Returns false if Left or returns the result of the application of\nthe given function to the Right value."},
{"l":"api/scala/util/Either$$RightProjection.html#filter-27d","e":false,"i":"","n":"filter","t":"filter[A1](p: B => Boolean): Option[Either[A1, B]]","d":"scala.util.Either.RightProjection","k":"def","x":"Returns None if this is a Left or if the\ngiven predicate p does not hold for the right value,\notherwise, returns a Right."},
{"l":"api/scala/util/Either$$RightProjection.html#filterToOption-27d","e":false,"i":"","n":"filterToOption","t":"filterToOption[A1](p: B => Boolean): Option[Either[A1, B]]","d":"scala.util.Either.RightProjection","k":"def","x":"Returns None if this is a Left or if the\ngiven predicate p does not hold for the right value,\notherwise, returns a Right."},
{"l":"api/scala/util/Either$$RightProjection.html#flatMap-36a","e":false,"i":"","n":"flatMap","t":"flatMap[A1 >: A, B1](f: B => Either[A1, B1]): Either[A1, B1]","d":"scala.util.Either.RightProjection","k":"def","x":"Binds the given function across Right.\n"},
{"l":"api/scala/util/Either$$RightProjection.html#forall-fffff66f","e":false,"i":"","n":"forall","t":"forall(f: B => Boolean): Boolean","d":"scala.util.Either.RightProjection","k":"def","x":"Returns true if Left or returns the result of the application of\nthe given function to the Right value."},
{"l":"api/scala/util/Either$$RightProjection.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: B => U): Unit","d":"scala.util.Either.RightProjection","k":"def","x":"Executes the given side-effecting function if this is a Right."},
{"l":"api/scala/util/Either$$RightProjection.html#get-0","e":false,"i":"","n":"get","t":"get: B","d":"scala.util.Either.RightProjection","k":"def","x":"Returns the value from this Right or throws\nNoSuchElementException if this is a Left."},
{"l":"api/scala/util/Either$$RightProjection.html#getOrElse-fffff7d2","e":false,"i":"","n":"getOrElse","t":"getOrElse[B1 >: B](or: => B1): B1","d":"scala.util.Either.RightProjection","k":"def","x":"Returns the value from this Right or the given argument if this is a Left."},
{"l":"api/scala/util/Either$$RightProjection.html#map-fffff769","e":false,"i":"","n":"map","t":"map[B1](f: B => B1): Either[A, B1]","d":"scala.util.Either.RightProjection","k":"def","x":"The given function is applied if this is a Right."},
{"l":"api/scala/util/Either$$RightProjection.html#toOption-0","e":false,"i":"","n":"toOption","t":"toOption: Option[B]","d":"scala.util.Either.RightProjection","k":"def","x":"Returns a Some containing the Right value\nif it exists or a None if this is a Left."},
{"l":"api/scala/util/Either$$RightProjection.html#toSeq-0","e":false,"i":"","n":"toSeq","t":"toSeq: Seq[B]","d":"scala.util.Either.RightProjection","k":"def","x":"Returns a Seq containing the Right value if\nit exists or an empty Seq if this is a Left."},
{"l":"api/scala/util/Failure.html#","e":false,"i":"","n":"Failure","t":"Failure[+T](exception: Throwable) extends Try[T]","d":"scala.util","k":"class","x":""},
{"l":"api/scala/util/FromDigits.html#","e":false,"i":"","n":"FromDigits","t":"FromDigits[T]","d":"scala.util","k":"trait","x":""},
{"l":"api/scala/util/FromDigits.html#fromDigits-fffff5f8","e":false,"i":"","n":"fromDigits","t":"fromDigits(digits: String): T","d":"scala.util.FromDigits","k":"def","x":""},
{"l":"api/scala/util/FromDigits$.html#","e":false,"i":"","n":"FromDigits","t":"FromDigits","d":"scala.util","k":"object","x":""},
{"l":"api/scala/util/FromDigits$.html#BigDecimalFromDigits-0","e":false,"i":"","n":"BigDecimalFromDigits","t":"BigDecimalFromDigits: BigDecimalFromDigits","d":"scala.util.FromDigits","k":"given","x":""},
{"l":"api/scala/util/FromDigits$.html#BigIntFromDigits-0","e":false,"i":"","n":"BigIntFromDigits","t":"BigIntFromDigits: BigIntFromDigits","d":"scala.util.FromDigits","k":"given","x":""},
{"l":"api/scala/util/FromDigits$.html#doubleFromDigits-fffff07e","e":false,"i":"","n":"doubleFromDigits","t":"doubleFromDigits(digits: String): Double","d":"scala.util.FromDigits","k":"def","x":""},
{"l":"api/scala/util/FromDigits$.html#floatFromDigits-fffff40f","e":false,"i":"","n":"floatFromDigits","t":"floatFromDigits(digits: String): Float","d":"scala.util.FromDigits","k":"def","x":""},
{"l":"api/scala/util/FromDigits$.html#intFromDigits-305","e":false,"i":"","n":"intFromDigits","t":"intFromDigits(digits: String, radix: Int): Int","d":"scala.util.FromDigits","k":"def","x":""},
{"l":"api/scala/util/FromDigits$.html#longFromDigits-fffffe26","e":false,"i":"","n":"longFromDigits","t":"longFromDigits(digits: String, radix: Int): Long","d":"scala.util.FromDigits","k":"def","x":""},
{"l":"api/scala/util/FromDigits$$BigDecimalFromDigits$.html#","e":false,"i":"","n":"BigDecimalFromDigits","t":"BigDecimalFromDigits extends Floating[BigDecimal]","d":"scala.util.FromDigits","k":"object","x":""},
{"l":"api/scala/util/FromDigits$$BigDecimalFromDigits$.html#fromDigits-fffff30a","e":false,"i":"","n":"fromDigits","t":"fromDigits(digits: String): BigDecimal","d":"scala.util.FromDigits.BigDecimalFromDigits","k":"def","x":""},
{"l":"api/scala/util/FromDigits$$BigIntFromDigits$.html#","e":false,"i":"","n":"BigIntFromDigits","t":"BigIntFromDigits extends WithRadix[BigInt]","d":"scala.util.FromDigits","k":"object","x":""},
{"l":"api/scala/util/FromDigits$$BigIntFromDigits$.html#fromDigits-fffff1cb","e":false,"i":"","n":"fromDigits","t":"fromDigits(digits: String, radix: Int): BigInt","d":"scala.util.FromDigits.BigIntFromDigits","k":"def","x":""},
{"l":"api/scala/util/FromDigits$$Decimal.html#","e":false,"i":"","n":"Decimal","t":"Decimal[T] extends FromDigits[T]","d":"scala.util.FromDigits","k":"trait","x":""},
{"l":"api/scala/util/FromDigits$$Floating.html#","e":false,"i":"","n":"Floating","t":"Floating[T] extends Decimal[T]","d":"scala.util.FromDigits","k":"trait","x":""},
{"l":"api/scala/util/FromDigits$$FromDigitsException.html#","e":false,"i":"","n":"FromDigitsException","t":"FromDigitsException(msg: String) extends NumberFormatException","d":"scala.util.FromDigits","k":"class","x":""},
{"l":"api/scala/util/FromDigits$$MalformedNumber.html#","e":false,"i":"","n":"MalformedNumber","t":"MalformedNumber(msg: String) extends FromDigitsException","d":"scala.util.FromDigits","k":"class","x":""},
{"l":"api/scala/util/FromDigits$$NumberTooLarge.html#","e":false,"i":"","n":"NumberTooLarge","t":"NumberTooLarge(msg: String) extends FromDigitsException","d":"scala.util.FromDigits","k":"class","x":""},
{"l":"api/scala/util/FromDigits$$NumberTooSmall.html#","e":false,"i":"","n":"NumberTooSmall","t":"NumberTooSmall(msg: String) extends FromDigitsException","d":"scala.util.FromDigits","k":"class","x":""},
{"l":"api/scala/util/FromDigits$$WithRadix.html#","e":false,"i":"","n":"WithRadix","t":"WithRadix[T] extends FromDigits[T]","d":"scala.util.FromDigits","k":"trait","x":""},
{"l":"api/scala/util/FromDigits$$WithRadix.html#fromDigits-fffff5f8","e":false,"i":"","n":"fromDigits","t":"fromDigits(digits: String): T","d":"scala.util.FromDigits.WithRadix","k":"def","x":""},
{"l":"api/scala/util/FromDigits$$WithRadix.html#fromDigits-ff5","e":false,"i":"","n":"fromDigits","t":"fromDigits(digits: String, radix: Int): T","d":"scala.util.FromDigits.WithRadix","k":"def","x":""},
{"l":"api/scala/util/Left.html#","e":false,"i":"","n":"Left","t":"Left[+A, +B](value: A) extends Either[A, B]","d":"scala.util","k":"class","x":"The left side of the disjoint union, as opposed to the scala.util.Right side.\n"},
{"l":"api/scala/util/Left.html#isLeft-0","e":false,"i":"","n":"isLeft","t":"isLeft: Boolean","d":"scala.util.Left","k":"def","x":"Returns true if this is a Left, false otherwise."},
{"l":"api/scala/util/Left.html#isRight-0","e":false,"i":"","n":"isRight","t":"isRight: Boolean","d":"scala.util.Left","k":"def","x":"Returns true if this is a Right, false otherwise."},
{"l":"api/scala/util/Left.html#withRight-fffff398","e":false,"i":"","n":"withRight","t":"withRight[B1 >: B]: Either[A, B1]","d":"scala.util.Left","k":"def","x":"Upcasts this Left[A, B] to Either[A, B1]"},
{"l":"api/scala/util/LowPriorityNotGiven.html#","e":false,"i":"","n":"LowPriorityNotGiven","t":"LowPriorityNotGiven","d":"scala.util","k":"trait","x":""},
{"l":"api/scala/util/LowPriorityNotGiven.html#default-fffffa7d","e":false,"i":"","n":"default","t":"default[T]: NotGiven[T]","d":"scala.util.LowPriorityNotGiven","k":"given","x":""},
{"l":"api/scala/util/NotGiven.html#","e":false,"i":"","n":"NotGiven","t":"NotGiven[+T]","d":"scala.util","k":"class","x":""},
{"l":"api/scala/util/NotGiven$.html#","e":false,"i":"","n":"NotGiven","t":"NotGiven extends LowPriorityNotGiven","d":"scala.util","k":"object","x":""},
{"l":"api/scala/util/NotGiven$.html#amb1-c0a","e":false,"i":"","n":"amb1","t":"amb1[T](using ev: T): NotGiven[T]","d":"scala.util.NotGiven","k":"given","x":""},
{"l":"api/scala/util/NotGiven$.html#amb2-c0a","e":false,"i":"","n":"amb2","t":"amb2[T](using ev: T): NotGiven[T]","d":"scala.util.NotGiven","k":"given","x":""},
{"l":"api/scala/util/NotGiven$.html#value-0","e":false,"i":"","n":"value","t":"value: NotGiven[Nothing]","d":"scala.util.NotGiven","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#","e":false,"i":"","n":"Properties","t":"Properties","d":"scala.util","k":"object","x":"Loads library.properties from the jar."},
{"l":"api/scala/util/Properties$.html#ScalaCompilerVersion-0","e":false,"i":"","n":"ScalaCompilerVersion","t":"ScalaCompilerVersion: Name","d":"scala.util.Properties","k":"val","x":"Scala manifest attributes.\n"},
{"l":"api/scala/util/Properties$.html#clearProp-fffff2ca","e":false,"i":"","n":"clearProp","t":"clearProp(name: String): String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#copyrightString-0","e":false,"i":"","n":"copyrightString","t":"copyrightString: String","d":"scala.util.Properties","k":"val","x":""},
{"l":"api/scala/util/Properties$.html#developmentVersion-0","e":false,"i":"","n":"developmentVersion","t":"developmentVersion: Option[String]","d":"scala.util.Properties","k":"val","x":"The version of the Scala runtime, if this is a snapshot.\n"},
{"l":"api/scala/util/Properties$.html#encodingString-0","e":false,"i":"","n":"encodingString","t":"encodingString: String","d":"scala.util.Properties","k":"def","x":"This is the default text encoding, overridden (unreliably) with\nJAVA_OPTS=\"-Dfile.encoding=Foo\"\n"},
{"l":"api/scala/util/Properties$.html#envOrElse-7f0","e":false,"i":"","n":"envOrElse","t":"envOrElse(name: String, alt: => String): String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#envOrNone-fffffd22","e":false,"i":"","n":"envOrNone","t":"envOrNone(name: String): Option[String]","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#envOrSome-548","e":false,"i":"","n":"envOrSome","t":"envOrSome(name: String, alt: => Option[String]): Option[String]","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#isJavaAtLeast-ffffff99","e":false,"i":"","n":"isJavaAtLeast","t":"isJavaAtLeast(version: Int): Boolean","d":"scala.util.Properties","k":"def","x":"Compares the given specification version to the major version of the platform."},
{"l":"api/scala/util/Properties$.html#isJavaAtLeast-fffffd1b","e":false,"i":"","n":"isJavaAtLeast","t":"isJavaAtLeast(version: String): Boolean","d":"scala.util.Properties","k":"def","x":"Compares the given specification version to the specification version of the platform.\n"},
{"l":"api/scala/util/Properties$.html#isLinux-0","e":false,"i":"","n":"isLinux","t":"isLinux: Boolean","d":"scala.util.Properties","k":"val","x":"Returns true iff the underlying operating system is a Linux distribution."},
{"l":"api/scala/util/Properties$.html#isMac-0","e":false,"i":"","n":"isMac","t":"isMac: Boolean","d":"scala.util.Properties","k":"val","x":"Returns true iff the underlying operating system is a version of Apple Mac OSX."},
{"l":"api/scala/util/Properties$.html#isWin-0","e":false,"i":"","n":"isWin","t":"isWin: Boolean","d":"scala.util.Properties","k":"val","x":"Returns true iff the underlying operating system is a version of Microsoft Windows."},
{"l":"api/scala/util/Properties$.html#javaClassPath-0","e":false,"i":"","n":"javaClassPath","t":"javaClassPath: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaHome-0","e":false,"i":"","n":"javaHome","t":"javaHome: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaSpecName-0","e":false,"i":"","n":"javaSpecName","t":"javaSpecName: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaSpecVendor-0","e":false,"i":"","n":"javaSpecVendor","t":"javaSpecVendor: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaSpecVersion-0","e":false,"i":"","n":"javaSpecVersion","t":"javaSpecVersion: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaVendor-0","e":false,"i":"","n":"javaVendor","t":"javaVendor: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaVersion-0","e":false,"i":"","n":"javaVersion","t":"javaVersion: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaVmInfo-0","e":false,"i":"","n":"javaVmInfo","t":"javaVmInfo: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaVmName-0","e":false,"i":"","n":"javaVmName","t":"javaVmName: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaVmVendor-0","e":false,"i":"","n":"javaVmVendor","t":"javaVmVendor: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#javaVmVersion-0","e":false,"i":"","n":"javaVmVersion","t":"javaVmVersion: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#jdkHome-0","e":false,"i":"","n":"jdkHome","t":"jdkHome: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#lineSeparator-0","e":false,"i":"","n":"lineSeparator","t":"lineSeparator: String","d":"scala.util.Properties","k":"def","x":"The default end of line character.\n"},
{"l":"api/scala/util/Properties$.html#main-913","e":false,"i":"","n":"main","t":"main(args: Array[String]): Unit","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#osName-0","e":false,"i":"","n":"osName","t":"osName: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#propFilename-0","e":false,"i":"","n":"propFilename","t":"propFilename: String","d":"scala.util.Properties","k":"val","x":"The name of the properties file"},
{"l":"api/scala/util/Properties$.html#propIsSet-fffffd1b","e":false,"i":"","n":"propIsSet","t":"propIsSet(name: String): Boolean","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#propIsSetTo-cd6","e":false,"i":"","n":"propIsSetTo","t":"propIsSetTo(name: String, value: String): Boolean","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#propOrElse-7f0","e":false,"i":"","n":"propOrElse","t":"propOrElse(name: String, alt: => String): String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#propOrEmpty-fffff2ca","e":false,"i":"","n":"propOrEmpty","t":"propOrEmpty(name: String): String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#propOrFalse-fffffd1b","e":false,"i":"","n":"propOrFalse","t":"propOrFalse(name: String): Boolean","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#propOrNone-fffffd22","e":false,"i":"","n":"propOrNone","t":"propOrNone(name: String): Option[String]","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#propOrNull-fffff2ca","e":false,"i":"","n":"propOrNull","t":"propOrNull(name: String): String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#releaseVersion-0","e":false,"i":"","n":"releaseVersion","t":"releaseVersion: Option[String]","d":"scala.util.Properties","k":"val","x":"The version of the Scala runtime, if this is not a snapshot.\n"},
{"l":"api/scala/util/Properties$.html#scalaCmd-0","e":false,"i":"","n":"scalaCmd","t":"scalaCmd: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#scalaHome-0","e":false,"i":"","n":"scalaHome","t":"scalaHome: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#scalaPropOrElse-7f0","e":false,"i":"","n":"scalaPropOrElse","t":"scalaPropOrElse(name: String, alt: => String): String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#scalaPropOrEmpty-fffff2ca","e":false,"i":"","n":"scalaPropOrEmpty","t":"scalaPropOrEmpty(name: String): String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#scalaPropOrNone-fffffd22","e":false,"i":"","n":"scalaPropOrNone","t":"scalaPropOrNone(name: String): Option[String]","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#scalaProps-0","e":false,"i":"","n":"scalaProps","t":"scalaProps: Properties","d":"scala.util.Properties","k":"val","x":"The loaded properties"},
{"l":"api/scala/util/Properties$.html#scalacCmd-0","e":false,"i":"","n":"scalacCmd","t":"scalacCmd: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#setProp-fffff52f","e":false,"i":"","n":"setProp","t":"setProp(name: String, value: String): String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#sourceEncoding-0","e":false,"i":"","n":"sourceEncoding","t":"sourceEncoding: String","d":"scala.util.Properties","k":"def","x":"This is the encoding to use reading in source files, overridden with -encoding.\nNote that it uses \"prop\" i.e. looks in the scala jar, not the system properties.\n"},
{"l":"api/scala/util/Properties$.html#sourceReader-0","e":false,"i":"","n":"sourceReader","t":"sourceReader: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#tmpDir-0","e":false,"i":"","n":"tmpDir","t":"tmpDir: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#userDir-0","e":false,"i":"","n":"userDir","t":"userDir: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#userHome-0","e":false,"i":"","n":"userHome","t":"userHome: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#userName-0","e":false,"i":"","n":"userName","t":"userName: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#versionMsg-0","e":false,"i":"","n":"versionMsg","t":"versionMsg: String","d":"scala.util.Properties","k":"def","x":""},
{"l":"api/scala/util/Properties$.html#versionNumberString-0","e":false,"i":"","n":"versionNumberString","t":"versionNumberString: String","d":"scala.util.Properties","k":"def","x":"The version of the Scala runtime, or the empty string if unknown."},
{"l":"api/scala/util/Properties$.html#versionString-0","e":false,"i":"","n":"versionString","t":"versionString: String","d":"scala.util.Properties","k":"val","x":"A verbose alternative to versionNumberString.\n"},
{"l":"api/scala/util/Random.html#","e":false,"i":"","n":"Random","t":"Random(val self: Random) extends Serializable","d":"scala.util","k":"class","x":""},
{"l":"api/scala/util/Random.html#alphanumeric-0","e":false,"i":"","n":"alphanumeric","t":"alphanumeric: LazyList[Char]","d":"scala.util.Random","k":"def","x":"Returns a LazyList of pseudorandomly chosen alphanumeric characters,\nequally chosen from A-Z, a-z, and 0-9.\n"},
{"l":"api/scala/util/Random.html#between-44b","e":false,"i":"","n":"between","t":"between(minInclusive: Double, maxExclusive: Double): Double","d":"scala.util.Random","k":"def","x":"Returns the next pseudorandom, uniformly distributed double value\nbetween min (inclusive) and max (exclusive) from this random number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#between-14","e":false,"i":"","n":"between","t":"between(minInclusive: Float, maxExclusive: Float): Float","d":"scala.util.Random","k":"def","x":"Returns the next pseudorandom, uniformly distributed float value\nbetween min (inclusive) and max (exclusive) from this random number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#between-f47","e":false,"i":"","n":"between","t":"between(minInclusive: Int, maxExclusive: Int): Int","d":"scala.util.Random","k":"def","x":"Returns a pseudorandom, uniformly distributed int value between min\n(inclusive) and the specified value max (exclusive), drawn from this\nrandom number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#between-fffff3cc","e":false,"i":"","n":"between","t":"between(minInclusive: Long, maxExclusive: Long): Long","d":"scala.util.Random","k":"def","x":"Returns a pseudorandom, uniformly distributed long value between min\n(inclusive) and the specified value max (exclusive), drawn from this\nrandom number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#nextBoolean-fffff760","e":false,"i":"","n":"nextBoolean","t":"nextBoolean(): Boolean","d":"scala.util.Random","k":"def","x":"Returns the next pseudorandom, uniformly distributed boolean value\nfrom this random number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#nextBytes-afe","e":false,"i":"","n":"nextBytes","t":"nextBytes(bytes: Array[Byte]): Unit","d":"scala.util.Random","k":"def","x":"Generates random bytes and places them into a user-supplied byte\narray.\n"},
{"l":"api/scala/util/Random.html#nextBytes-4d9","e":false,"i":"","n":"nextBytes","t":"nextBytes(n: Int): Array[Byte]","d":"scala.util.Random","k":"def","x":"Generates n random bytes and returns them in a new array."},
{"l":"api/scala/util/Random.html#nextDouble-999","e":false,"i":"","n":"nextDouble","t":"nextDouble(): Double","d":"scala.util.Random","k":"def","x":"Returns the next pseudorandom, uniformly distributed double value\nbetween 0.0 and 1.0 from this random number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#nextFloat-fffffb94","e":false,"i":"","n":"nextFloat","t":"nextFloat(): Float","d":"scala.util.Random","k":"def","x":"Returns the next pseudorandom, uniformly distributed float value\nbetween 0.0 and 1.0 from this random number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#nextGaussian-999","e":false,"i":"","n":"nextGaussian","t":"nextGaussian(): Double","d":"scala.util.Random","k":"def","x":"Returns the next pseudorandom, Gaussian (\"normally\") distributed\ndouble value with mean 0.0 and standard deviation 1.0 from this\nrandom number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#nextInt-ffffff27","e":false,"i":"","n":"nextInt","t":"nextInt(): Int","d":"scala.util.Random","k":"def","x":"Returns the next pseudorandom, uniformly distributed int value\nfrom this random number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#nextInt-fffffbe0","e":false,"i":"","n":"nextInt","t":"nextInt(n: Int): Int","d":"scala.util.Random","k":"def","x":"Returns a pseudorandom, uniformly distributed int value between 0\n(inclusive) and the specified value (exclusive), drawn from this\nrandom number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#nextLong-644","e":false,"i":"","n":"nextLong","t":"nextLong(): Long","d":"scala.util.Random","k":"def","x":"Returns the next pseudorandom, uniformly distributed long value\nfrom this random number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#nextLong-fffff788","e":false,"i":"","n":"nextLong","t":"nextLong(n: Long): Long","d":"scala.util.Random","k":"def","x":"Returns a pseudorandom, uniformly distributed long value between 0\n(inclusive) and the specified value (exclusive), drawn from this\nrandom number generator's sequence.\n"},
{"l":"api/scala/util/Random.html#nextPrintableChar-31e","e":false,"i":"","n":"nextPrintableChar","t":"nextPrintableChar(): Char","d":"scala.util.Random","k":"def","x":"Returns the next pseudorandom, uniformly distributed value\nfrom the ASCII range 33-126.\n"},
{"l":"api/scala/util/Random.html#nextString-78c","e":false,"i":"","n":"nextString","t":"nextString(length: Int): String","d":"scala.util.Random","k":"def","x":"Returns a pseudorandomly generated String.  This routine does\nnot take any measures to preserve the randomness of the distribution\nin the face of factors like unicode's variable-length encoding,\nso please don't use this for anything important.  It's primarily\nintended for generating test data.\n"},
{"l":"api/scala/util/Random.html#self-0","e":false,"i":"","n":"self","t":"self: Random","d":"scala.util.Random","k":"val","x":""},
{"l":"api/scala/util/Random.html#setSeed-fffffa90","e":false,"i":"","n":"setSeed","t":"setSeed(seed: Long): Unit","d":"scala.util.Random","k":"def","x":""},
{"l":"api/scala/util/Random.html#shuffle-9ac","e":false,"i":"","n":"shuffle","t":"shuffle[T, C](xs: IterableOnce[T])(implicit bf: BuildFrom[xs.type, T, C]): C","d":"scala.util.Random","k":"def","x":"Returns a new collection of the same type in a randomly chosen order.\n"},
{"l":"api/scala/util/Random.html#<init>-fffff1e3","e":false,"i":"","n":"this","t":"this(seed: Long)","d":"scala.util.Random","k":"def","x":"Creates a new random number generator using a single long seed."},
{"l":"api/scala/util/Random.html#<init>-b60","e":false,"i":"","n":"this","t":"this(seed: Int)","d":"scala.util.Random","k":"def","x":"Creates a new random number generator using a single integer seed."},
{"l":"api/scala/util/Random.html#<init>-7a7","e":false,"i":"","n":"this","t":"this()","d":"scala.util.Random","k":"def","x":"Creates a new random number generator."},
{"l":"api/scala/util/Random$.html#","e":false,"i":"","n":"Random","t":"Random extends Random","d":"scala.util","k":"object","x":"The object Random offers a default implementation\nof scala.util.Random and random-related convenience methods.\n"},
{"l":"api/scala/util/Random$.html#javaRandomToRandom-f84","e":false,"i":"","n":"javaRandomToRandom","t":"javaRandomToRandom(r: Random): Random","d":"scala.util.Random","k":"def","x":""},
{"l":"api/scala/util/Right.html#","e":false,"i":"","n":"Right","t":"Right[+A, +B](value: B) extends Either[A, B]","d":"scala.util","k":"class","x":"The right side of the disjoint union, as opposed to the scala.util.Left side.\n"},
{"l":"api/scala/util/Right.html#isLeft-0","e":false,"i":"","n":"isLeft","t":"isLeft: Boolean","d":"scala.util.Right","k":"def","x":"Returns true if this is a Left, false otherwise."},
{"l":"api/scala/util/Right.html#isRight-0","e":false,"i":"","n":"isRight","t":"isRight: Boolean","d":"scala.util.Right","k":"def","x":"Returns true if this is a Right, false otherwise."},
{"l":"api/scala/util/Right.html#withLeft-fffff398","e":false,"i":"","n":"withLeft","t":"withLeft[A1 >: A]: Either[A1, B]","d":"scala.util.Right","k":"def","x":"Upcasts this Right[A, B] to Either[A1, B]"},
{"l":"api/scala/util/Sorting$.html#","e":false,"i":"","n":"Sorting","t":"Sorting","d":"scala.util","k":"object","x":"The Sorting object provides convenience wrappers for java.util.Arrays.sort.\nMethods that defer to java.util.Arrays.sort say that they do or under what\nconditions that they do."},
{"l":"api/scala/util/Sorting$.html#quickSort-e47","e":false,"i":"","n":"quickSort","t":"quickSort(a: Array[Double]): Unit","d":"scala.util.Sorting","k":"def","x":"Sort an array of Doubles using java.util.Arrays.sort."},
{"l":"api/scala/util/Sorting$.html#quickSort-ed5","e":false,"i":"","n":"quickSort","t":"quickSort(a: Array[Int]): Unit","d":"scala.util.Sorting","k":"def","x":"Sort an array of Ints using java.util.Arrays.sort."},
{"l":"api/scala/util/Sorting$.html#quickSort-fc2","e":false,"i":"","n":"quickSort","t":"quickSort(a: Array[Float]): Unit","d":"scala.util.Sorting","k":"def","x":"Sort an array of Floats using java.util.Arrays.sort."},
{"l":"api/scala/util/Sorting$.html#quickSort-fa","e":false,"i":"","n":"quickSort","t":"quickSort[K : Ordering](a: Array[K]): Unit","d":"scala.util.Sorting","k":"def","x":"Sort array a with quicksort, using the Ordering on its elements.\nThis algorithm sorts in place, so no additional memory is used aside from\nwhat might be required to box individual elements during comparison.\n"},
{"l":"api/scala/util/Sorting$.html#stableSort-fa","e":false,"i":"","n":"stableSort","t":"stableSort[K : Ordering](a: Array[K]): Unit","d":"scala.util.Sorting","k":"def","x":"Sort array a using the Ordering on its elements, preserving the original ordering where possible.\nUses java.util.Arrays.sort unless K is a primitive type. This is the same as stableSort(a, 0, a.length)."},
{"l":"api/scala/util/Sorting$.html#stableSort-a1a","e":false,"i":"","n":"stableSort","t":"stableSort[K : Ordering](a: Array[K], from: Int, until: Int): Unit","d":"scala.util.Sorting","k":"def","x":"Sort array a or a part of it using the Ordering on its elements, preserving the original ordering where possible.\nUses java.util.Arrays.sort unless K is a primitive type.\n"},
{"l":"api/scala/util/Sorting$.html#stableSort-fffffc1a","e":false,"i":"","n":"stableSort","t":"stableSort[K](a: Array[K], f: (K, K) => Boolean): Unit","d":"scala.util.Sorting","k":"def","x":"Sort array a using function f that computes the less-than relation for each element.\nUses java.util.Arrays.sort unless K is a primitive type. This is the same as stableSort(a, f, 0, a.length)."},
{"l":"api/scala/util/Sorting$.html#stableSort-fffff87a","e":false,"i":"","n":"stableSort","t":"stableSort[K](a: Array[K], f: (K, K) => Boolean, from: Int, until: Int): Unit","d":"scala.util.Sorting","k":"def","x":"Sort array a or a part of it using function f that computes the less-than relation for each element.\nUses java.util.Arrays.sort unless K is a primitive type.\n"},
{"l":"api/scala/util/Sorting$.html#stableSort-fffffd02","e":false,"i":"","n":"stableSort","t":"stableSort[K : ClassTag : Ordering](a: Seq[K]): Array[K]","d":"scala.util.Sorting","k":"def","x":"A sorted Array, using the Ordering for the elements in the sequence a.  Uses java.util.Arrays.sort unless K is a primitive type."},
{"l":"api/scala/util/Sorting$.html#stableSort-238","e":false,"i":"","n":"stableSort","t":"stableSort[K : ClassTag](a: Seq[K], f: (K, K) => Boolean): Array[K]","d":"scala.util.Sorting","k":"def","x":"A sorted Array, given a function f that computes the less-than relation for each item in the sequence a.  Uses java.util.Arrays.sort unless K is a primitive type."},
{"l":"api/scala/util/Sorting$.html#stableSort-da2","e":false,"i":"","n":"stableSort","t":"stableSort[K : ClassTag, M : Ordering](a: Seq[K], f: K => M): Array[K]","d":"scala.util.Sorting","k":"def","x":"A sorted Array, given an extraction function f that returns an ordered key for each item in the sequence a.  Uses java.util.Arrays.sort unless K is a primitive type."},
{"l":"api/scala/util/Success.html#","e":false,"i":"","n":"Success","t":"Success[+T](value: T) extends Try[T]","d":"scala.util","k":"class","x":""},
{"l":"api/scala/util/Try.html#","e":false,"i":"","n":"Try","t":"Try[+T] extends Product, Serializable","d":"scala.util","k":"class","x":"The Try type represents a computation that may fail during evaluation by raising an exception.\nIt holds either a successfully computed value or the exception that was thrown.\nThis is similar to the scala.util.Either type, but with different semantics."},
{"l":"api/scala/util/Try.html#collect-fffffd77","e":false,"i":"","n":"collect","t":"collect[U](pf: PartialFunction[T, U]): Try[U]","d":"scala.util.Try","k":"def","x":"Applies the given partial function to the value from this Success or returns this if this is a Failure.\n"},
{"l":"api/scala/util/Try.html#failed-0","e":false,"i":"","n":"failed","t":"failed: Try[Throwable]","d":"scala.util.Try","k":"def","x":"Inverts this Try. If this is a Failure, returns its exception wrapped in a Success.\nIf this is a Success, returns a Failure containing an UnsupportedOperationException.\n"},
{"l":"api/scala/util/Try.html#filter-c28","e":false,"i":"","n":"filter","t":"filter(p: T => Boolean): Try[T]","d":"scala.util.Try","k":"def","x":"Converts this to a Failure if the predicate is not satisfied.\n"},
{"l":"api/scala/util/Try.html#flatMap-597","e":false,"i":"","n":"flatMap","t":"flatMap[U](f: T => Try[U]): Try[U]","d":"scala.util.Try","k":"def","x":"Returns the given function applied to the value from this Success or returns this if this is a Failure.\n"},
{"l":"api/scala/util/Try.html#flatten-b5c","e":false,"i":"","n":"flatten","t":"flatten[U](implicit ev: T <:< Try[U]): Try[U]","d":"scala.util.Try","k":"def","x":"Transforms a nested Try, ie, a Try of type Try[Try[T]],\ninto an un-nested Try, ie, a Try of type Try[T].\n"},
{"l":"api/scala/util/Try.html#fold-7e4","e":false,"i":"","n":"fold","t":"fold[U](fa: Throwable => U, fb: T => U): U","d":"scala.util.Try","k":"def","x":"Applies fa if this is a Failure or fb if this is a Success.\nIf fb is initially applied and throws an exception,\nthen fa is applied with this exception.\n"},
{"l":"api/scala/util/Try.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: T => U): Unit","d":"scala.util.Try","k":"def","x":"Applies the given function f if this is a Success, otherwise returns Unit if this is a Failure."},
{"l":"api/scala/util/Try.html#get-0","e":false,"i":"","n":"get","t":"get: T","d":"scala.util.Try","k":"def","x":"Returns the value from this Success or throws the exception if this is a Failure.\n"},
{"l":"api/scala/util/Try.html#getOrElse-fffff7d2","e":false,"i":"","n":"getOrElse","t":"getOrElse[U >: T](default: => U): U","d":"scala.util.Try","k":"def","x":"Returns the value from this Success or the given default argument if this is a Failure."},
{"l":"api/scala/util/Try.html#isFailure-0","e":false,"i":"","n":"isFailure","t":"isFailure: Boolean","d":"scala.util.Try","k":"def","x":"Returns true if the Try is a Failure, false otherwise.\n"},
{"l":"api/scala/util/Try.html#isSuccess-0","e":false,"i":"","n":"isSuccess","t":"isSuccess: Boolean","d":"scala.util.Try","k":"def","x":"Returns true if the Try is a Success, false otherwise.\n"},
{"l":"api/scala/util/Try.html#map-597","e":false,"i":"","n":"map","t":"map[U](f: T => U): Try[U]","d":"scala.util.Try","k":"def","x":"Maps the given function to the value from this Success or returns this if this is a Failure.\n"},
{"l":"api/scala/util/Try.html#orElse-fffffb56","e":false,"i":"","n":"orElse","t":"orElse[U >: T](default: => Try[U]): Try[U]","d":"scala.util.Try","k":"def","x":"Returns this Try if it's a Success or the given default argument if this is a Failure.\n"},
{"l":"api/scala/util/Try.html#recover-fffffd77","e":false,"i":"","n":"recover","t":"recover[U >: T](pf: PartialFunction[Throwable, U]): Try[U]","d":"scala.util.Try","k":"def","x":"Applies the given function f if this is a Failure, otherwise returns this if this is a Success.\nThis is like map for the exception.\n"},
{"l":"api/scala/util/Try.html#recoverWith-fffffd77","e":false,"i":"","n":"recoverWith","t":"recoverWith[U >: T](pf: PartialFunction[Throwable, Try[U]]): Try[U]","d":"scala.util.Try","k":"def","x":"Applies the given function f if this is a Failure, otherwise returns this if this is a Success.\nThis is like flatMap for the exception.\n"},
{"l":"api/scala/util/Try.html#toEither-0","e":false,"i":"","n":"toEither","t":"toEither: Either[Throwable, T]","d":"scala.util.Try","k":"def","x":"Returns Left with Throwable if this is a Failure, otherwise returns Right with Success value.\n"},
{"l":"api/scala/util/Try.html#toOption-0","e":false,"i":"","n":"toOption","t":"toOption: Option[T]","d":"scala.util.Try","k":"def","x":"Returns None if this is a Failure or a Some containing the value if this is a Success.\n"},
{"l":"api/scala/util/Try.html#transform-fffff7e8","e":false,"i":"","n":"transform","t":"transform[U](s: T => Try[U], f: Throwable => Try[U]): Try[U]","d":"scala.util.Try","k":"def","x":"Completes this Try by applying the function f to this if this is of type Failure, or conversely, by applying\ns if this is a Success.\n"},
{"l":"api/scala/util/Try.html#withFilter-184","e":false,"i":"","n":"withFilter","t":"withFilter(p: T => Boolean): WithFilter","d":"scala.util.Try","k":"def","x":"Creates a non-strict filter, which eventually converts this to a Failure\nif the predicate is not satisfied."},
{"l":"api/scala/util/Try$WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter(p: Try.this.T => Boolean)","d":"scala.util.Try","k":"class","x":"We need a whole WithFilter class to honor the \"doesn't create a new\ncollection\" contract even though it seems unlikely to matter much in a\ncollection with max size 1.\n"},
{"l":"api/scala/util/Try$WithFilter.html#flatMap-597","e":false,"i":"","n":"flatMap","t":"flatMap[U](f: Try.this.T => Try[U]): Try[U]","d":"scala.util.Try.WithFilter","k":"def","x":""},
{"l":"api/scala/util/Try$WithFilter.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: Try.this.T => U): Unit","d":"scala.util.Try.WithFilter","k":"def","x":""},
{"l":"api/scala/util/Try$WithFilter.html#map-597","e":false,"i":"","n":"map","t":"map[U](f: Try.this.T => U): Try[U]","d":"scala.util.Try.WithFilter","k":"def","x":""},
{"l":"api/scala/util/Try$WithFilter.html#withFilter-184","e":false,"i":"","n":"withFilter","t":"withFilter(q: Try.this.T => Boolean): Try.this.WithFilter","d":"scala.util.Try.WithFilter","k":"def","x":""},
{"l":"api/scala/util/Try$.html#","e":false,"i":"","n":"Try","t":"Try","d":"scala.util","k":"object","x":""},
{"l":"api/scala/util/Try$.html#apply-fffffb56","e":false,"i":"","n":"apply","t":"apply[T](r: => T): Try[T]","d":"scala.util.Try","k":"def","x":"Constructs a Try using the by-name parameter as a result value."},
{"l":"api/scala/util/TupledFunction.html#","e":false,"i":"","n":"TupledFunction","t":"TupledFunction[F, G]","d":"scala.util","k":"trait","x":""},
{"l":"api/scala/util/TupledFunction.html#tupled-d26","e":false,"i":"","n":"tupled","t":"tupled(f: F): G","d":"scala.util.TupledFunction","k":"def","x":""},
{"l":"api/scala/util/TupledFunction.html#untupled-d26","e":false,"i":"","n":"untupled","t":"untupled(g: G): F","d":"scala.util.TupledFunction","k":"def","x":""},
{"l":"api/scala/util/Using$.html#","e":false,"i":"","n":"Using","t":"Using","d":"scala.util","k":"object","x":"A utility for performing automatic resource management. It can be used to perform an\noperation using resources, after which it releases the resources in reverse order\nof their creation."},
{"l":"api/scala/util/Using$.html#apply-fffff48c","e":false,"i":"","n":"apply","t":"apply[R : Releasable, A](resource: => R)(f: R => A): Try[A]","d":"scala.util.Using","k":"def","x":"Performs an operation using a resource, and then releases the resource,\neven if the operation throws an exception."},
{"l":"api/scala/util/Using$.html#resource-fffffb81","e":false,"i":"","n":"resource","t":"resource[R, A](resource: R)(body: R => A)(implicit releasable: Releasable[R]): A","d":"scala.util.Using","k":"def","x":"Performs an operation using a resource, and then releases the resource,\neven if the operation throws an exception. This method behaves similarly\nto Java's try-with-resources."},
{"l":"api/scala/util/Using$.html#resources-d5f","e":false,"i":"","n":"resources","t":"resources[R1 : Releasable, R2 : Releasable, A](resource1: R1, resource2: => R2)(body: (R1, R2) => A): A","d":"scala.util.Using","k":"def","x":"Performs an operation using two resources, and then releases the resources\nin reverse order, even if the operation throws an exception. This method\nbehaves similarly to Java's try-with-resources."},
{"l":"api/scala/util/Using$.html#resources-205","e":false,"i":"","n":"resources","t":"resources[R1 : Releasable, R2 : Releasable, R3 : Releasable, A](resource1: R1, resource2: => R2, resource3: => R3)(body: (R1, R2, R3) => A): A","d":"scala.util.Using","k":"def","x":"Performs an operation using three resources, and then releases the resources\nin reverse order, even if the operation throws an exception. This method\nbehaves similarly to Java's try-with-resources."},
{"l":"api/scala/util/Using$.html#resources-fffffe67","e":false,"i":"","n":"resources","t":"resources[R1 : Releasable, R2 : Releasable, R3 : Releasable, R4 : Releasable, A](resource1: R1, resource2: => R2, resource3: => R3, resource4: => R4)(body: (R1, R2, R3, R4) => A): A","d":"scala.util.Using","k":"def","x":"Performs an operation using four resources, and then releases the resources\nin reverse order, even if the operation throws an exception. This method\nbehaves similarly to Java's try-with-resources."},
{"l":"api/scala/util/Using$$Manager.html#","e":false,"i":"","n":"Manager","t":"Manager","d":"scala.util.Using","k":"class","x":"A resource manager."},
{"l":"api/scala/util/Using$$Manager.html#acquire-f52","e":false,"i":"","n":"acquire","t":"acquire[R : Releasable](resource: R): Unit","d":"scala.util.Using.Manager","k":"def","x":"Registers the specified resource with this manager, so that\nthe resource is released when the manager is closed.\n"},
{"l":"api/scala/util/Using$$Manager.html#apply-fffff319","e":false,"i":"","n":"apply","t":"apply[R : Releasable](resource: R): resource.type","d":"scala.util.Using.Manager","k":"def","x":"Registers the specified resource with this manager, so that\nthe resource is released when the manager is closed, and then\nreturns the (unmodified) resource.\n"},
{"l":"api/scala/util/Using$$Manager$.html#","e":false,"i":"","n":"Manager","t":"Manager","d":"scala.util.Using","k":"object","x":""},
{"l":"api/scala/util/Using$$Manager$.html#apply-597","e":false,"i":"","n":"apply","t":"apply[A](op: Manager => A): Try[A]","d":"scala.util.Using.Manager","k":"def","x":"Performs an operation using a Manager, then closes the Manager,\nreleasing its resources (in reverse order of acquisition)."},
{"l":"api/scala/util/Using$$Releasable$.html#","e":false,"i":"","n":"Releasable","t":"Releasable","d":"scala.util.Using","k":"object","x":""},
{"l":"api/scala/util/Using$$Releasable$$AutoCloseableIsReleasable$.html#","e":false,"i":"","n":"AutoCloseableIsReleasable","t":"AutoCloseableIsReleasable extends Releasable[AutoCloseable]","d":"scala.util.Using.Releasable","k":"object","x":"An implicit Releasable for AutoCloseables."},
{"l":"api/scala/util/Using$$Releasable$$AutoCloseableIsReleasable$.html#release-fffff41b","e":false,"i":"","n":"release","t":"release(resource: AutoCloseable): Unit","d":"scala.util.Using.Releasable.AutoCloseableIsReleasable","k":"def","x":"Releases the specified resource."},
{"l":"api/scala/util/Using$$Releasable.html#","e":false,"i":"","n":"Releasable","t":"Releasable[-R]","d":"scala.util.Using","k":"trait","x":"A type class describing how to release a particular type of resource."},
{"l":"api/scala/util/Using$$Releasable.html#release-fffff71f","e":false,"i":"","n":"release","t":"release(resource: R): Unit","d":"scala.util.Using.Releasable","k":"def","x":"Releases the specified resource."},
{"l":"api/scala/util/boundary$.html#","e":false,"i":"","n":"boundary","t":"boundary","d":"scala.util","k":"object","x":""},
{"l":"api/scala/util/boundary$.html#apply-5d3","e":false,"i":"","n":"apply","t":"apply[T](inline body: Label[T] ?=> T): T","d":"scala.util.boundary","k":"def","x":""},
{"l":"api/scala/util/boundary$.html#break-fffff165","e":false,"i":"","n":"break","t":"break[T](value: T)(using label: Label[T]): Nothing","d":"scala.util.boundary","k":"def","x":""},
{"l":"api/scala/util/boundary$.html#break-fffffda9","e":false,"i":"","n":"break","t":"break()(using label: Label[Unit]): Nothing","d":"scala.util.boundary","k":"def","x":""},
{"l":"api/scala/util/boundary$$Break.html#","e":false,"i":"","n":"Break","t":"Break[T] extends RuntimeException","d":"scala.util.boundary","k":"class","x":""},
{"l":"api/scala/util/boundary$$Break.html#label-0","e":false,"i":"","n":"label","t":"label: Label[T]","d":"scala.util.boundary.Break","k":"val","x":""},
{"l":"api/scala/util/boundary$$Break.html#value-0","e":false,"i":"","n":"value","t":"value: T","d":"scala.util.boundary.Break","k":"val","x":""},
{"l":"api/scala/util/boundary$$Label.html#","e":false,"i":"","n":"Label","t":"Label[-T]","d":"scala.util.boundary","k":"class","x":""},
{"l":"api/scala/util/chaining$.html#","e":false,"i":"","n":"chaining","t":"chaining extends ChainingSyntax","d":"scala.util","k":"object","x":"Adds chaining methods tap and pipe to every type. See ChainingOps.\n"},
{"l":"api/scala/$hash$colon$colon$$.html#","e":false,"i":"","n":"#::","t":"#::","d":"scala","k":"object","x":""},
{"l":"api/scala/$hash$colon$colon$$.html#unapply-fffff8d2","e":false,"i":"","n":"unapply","t":"unapply[A](s: LazyList[A]): Option[(A, LazyList[A])]","d":"scala.#::","k":"def","x":""},
{"l":"api/scala/$hash$colon$colon$$.html#unapply-1e0","e":false,"i":"","n":"unapply","t":"unapply[A](s: Stream[A]): Option[(A, Stream[A])]","d":"scala.#::","k":"def","x":""},
{"l":"api/scala/$times$colon$.html#","e":false,"i":"","n":"*:","t":"*:[+H, +T <: Tuple] extends NonEmptyTuple","d":"scala","k":"class","x":""},
{"l":"api/scala/$times$colon$$.html#","e":false,"i":"","n":"*:","t":"*:","d":"scala","k":"object","x":""},
{"l":"api/scala/$times$colon$$.html#unapply-e7","e":false,"i":"","n":"unapply","t":"unapply[H, T <: Tuple](x: H *: T): (H, T)","d":"scala.*:","k":"def","x":""},
{"l":"api/scala/$less$colon$less$.html#","e":false,"i":"","n":"<:<","t":"<:<[-From, +To] extends From => To, Serializable","d":"scala","k":"class","x":"An instance of A <:< B witnesses that A is a subtype of B.\nRequiring an implicit argument of the type A <:< B encodes\nthe generalized constraint A <: B."},
{"l":"api/scala/$less$colon$less$.html#andThen-6b1","e":false,"i":"","n":"andThen","t":"andThen[C](r: To <:< C): From <:< C","d":"scala.<:<","k":"def","x":"If From <: To and To <: C, then From <: C (subtyping is transitive)"},
{"l":"api/scala/$less$colon$less$.html#compose-6b1","e":false,"i":"","n":"compose","t":"compose[C](r: C <:< From): C <:< To","d":"scala.<:<","k":"def","x":"If From <: To and C <: From, then C <: To (subtyping is transitive)"},
{"l":"api/scala/$less$colon$less$.html#liftCo-ec5","e":false,"i":"","n":"liftCo","t":"liftCo[F[_]]: F[From] <:< F[To]","d":"scala.<:<","k":"def","x":"Lift this evidence over a covariant type constructor F."},
{"l":"api/scala/$less$colon$less$.html#liftContra-ec5","e":false,"i":"","n":"liftContra","t":"liftContra[F[_]]: F[To] <:< F[From]","d":"scala.<:<","k":"def","x":"Lift this evidence over a contravariant type constructor F."},
{"l":"api/scala/$less$colon$less$.html#substituteBoth-957","e":false,"i":"","n":"substituteBoth","t":"substituteBoth[F[_, _]](ftf: F[To, From]): F[From, To]","d":"scala.<:<","k":"def","x":"Substitute To for From and From for To in the type F[To, From], given that F is contravariant in the first argument and covariant in the second.\nEssentially swaps To and From in ftf's type."},
{"l":"api/scala/$less$colon$less$.html#substituteCo-957","e":false,"i":"","n":"substituteCo","t":"substituteCo[F[_]](ff: F[From]): F[To]","d":"scala.<:<","k":"def","x":"Substitute the From in the type F[From], where F is a covariant type constructor, for To."},
{"l":"api/scala/$less$colon$less$.html#substituteContra-957","e":false,"i":"","n":"substituteContra","t":"substituteContra[F[_]](ft: F[To]): F[From]","d":"scala.<:<","k":"def","x":"Substitute the To in the type F[To], where F is a contravariant type constructor, for From."},
{"l":"api/scala/$less$colon$less$$.html#","e":false,"i":"","n":"<:<","t":"<:<","d":"scala","k":"object","x":""},
{"l":"api/scala/$less$colon$less$$.html#antisymm-366","e":false,"i":"","n":"antisymm","t":"antisymm[A, B](implicit l: A <:< B, r: B <:< A): A =:= B","d":"scala.<:<","k":"def","x":"If A <: B and B <: A, then A = B (subtyping is antisymmetric)"},
{"l":"api/scala/$less$colon$less$$.html#refl-287","e":false,"i":"","n":"refl","t":"refl[A]: A =:= A","d":"scala.<:<","k":"def","x":"A =:= A for all A (equality is reflexive). This also provides implicit views A <:< B\nwhen A <: B, because (A =:= A) <: (A <:< A) <: (A <:< B).\n"},
{"l":"api/scala/$eq$colon$eq$.html#","e":false,"i":"","n":"=:=","t":"=:=[From, To] extends From <:< To, Serializable","d":"scala","k":"class","x":"An instance of A =:= B witnesses that the types A and B are equal. It also acts as a A <:< B,\nbut not a B <:< A (directly) due to restrictions on subclassing."},
{"l":"api/scala/$eq$colon$eq$.html#andThen-f1","e":false,"i":"","n":"andThen","t":"andThen[C](r: To =:= C): From =:= C","d":"scala.=:=","k":"def","x":"If From = To and To = C, then From = C (equality is transitive)"},
{"l":"api/scala/$eq$colon$eq$.html#compose-f1","e":false,"i":"","n":"compose","t":"compose[C](r: C =:= From): C =:= To","d":"scala.=:=","k":"def","x":"If From = To and C = From, then C = To (equality is transitive)"},
{"l":"api/scala/$eq$colon$eq$.html#flip-0","e":false,"i":"","n":"flip","t":"flip: To =:= From","d":"scala.=:=","k":"def","x":"If From = To then To = From (equality is symmetric)"},
{"l":"api/scala/Any.html#","e":false,"i":"","n":"Any","t":"Any","d":"scala","k":"class","x":"Class Any is the root of the Scala class hierarchy.  Every class in a Scala\nexecution environment inherits directly or indirectly from this class."},
{"l":"api/scala/Any.html#!=-4ad","e":false,"i":"","n":"!=","t":"!=(x$0: Any): Boolean","d":"scala.Any","k":"def","x":"Test two objects for inequality.\n"},
{"l":"api/scala/Any.html###-0","e":false,"i":"","n":"##","t":"##: Int","d":"scala.Any","k":"def","x":"Equivalent to x.hashCode except for boxed numeric types and null.\nFor numerics, it returns a hash value which is consistent\nwith value equality: if two value type instances compare\nas true, then ## will produce the same hash value for each\nof them.\nFor null returns a hashcode where null.hashCode throws a\nNullPointerException.\n"},
{"l":"api/scala/Any.html#==-4ad","e":false,"i":"","n":"==","t":"==(x$0: Any): Boolean","d":"scala.Any","k":"def","x":"Test two objects for equality.\nThe expression x == that is equivalent to if (x eq null) that eq null else x.equals(that).\n"},
{"l":"api/scala/Any.html#asInstanceOf-fffff7c4","e":false,"i":"","n":"asInstanceOf","t":"asInstanceOf[X0]: X0","d":"scala.Any","k":"def","x":"Cast the receiver object to be of type T0."},
{"l":"api/scala/Any.html#equals-4ad","e":false,"i":"","n":"equals","t":"equals(x$0: Any): Boolean","d":"scala.Any","k":"def","x":"Compares the receiver object (this) with the argument object (that) for equivalence."},
{"l":"api/scala/Any.html#getClass-53","e":false,"i":"","n":"getClass","t":"getClass[X0 >: this.type](): Class[_ <: X0]","d":"scala.Any","k":"def","x":"Returns the runtime class representation of the object.\n"},
{"l":"api/scala/Any.html#hashCode-ffffff27","e":false,"i":"","n":"hashCode","t":"hashCode(): Int","d":"scala.Any","k":"def","x":"Calculates a hash code value for the object."},
{"l":"api/scala/Any.html#isInstanceOf-ecf","e":false,"i":"","n":"isInstanceOf","t":"isInstanceOf[X0]: Boolean","d":"scala.Any","k":"def","x":"Test whether the dynamic type of the receiver object is T0."},
{"l":"api/scala/Any.html#toString-665","e":false,"i":"","n":"toString","t":"toString(): String","d":"scala.Any","k":"def","x":"Returns a string representation of the object."},
{"l":"api/scala/AnyKind.html#","e":false,"i":"","n":"AnyKind","t":"AnyKind","d":"scala","k":"class","x":"The super-type of all types."},
{"l":"api/scala/AnyRef.html#","e":false,"i":"","n":"AnyRef","t":"AnyRef","d":"scala","k":"class","x":"Class AnyRef is the root class of all reference types.\nAll types except the value types descend from this class.\n"},
{"l":"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#eq-java.lang.Object-","e":true,"i":"","n":"eq","t":"eq(x$0: Object): Boolean","d":"scala.AnyRef","k":"def","x":"Tests whether the argument (that) is a reference to the receiver object (this)."},
{"l":"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#ne-java.lang.Object-","e":true,"i":"","n":"ne","t":"ne(x$0: Object): Boolean","d":"scala.AnyRef","k":"def","x":"Equivalent to !(this eq that).\n"},
{"l":"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#synchronized-X0-","e":true,"i":"","n":"synchronized","t":"synchronized[X0](x$0: X0): X0","d":"scala.AnyRef","k":"def","x":"Executes the code in body with an exclusive lock on this.\n"},
{"l":"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--","e":true,"i":"","n":"notify","t":"notify(): Unit","d":"scala.AnyRef","k":"def","x":"Wakes up a single thread that is waiting on the receiver object's monitor.\n"},
{"l":"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--","e":true,"i":"","n":"notifyAll","t":"notifyAll(): Unit","d":"scala.AnyRef","k":"def","x":"Wakes up all threads that are waiting on the receiver object's monitor.\n"},
{"l":"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--","e":true,"i":"","n":"wait","t":"wait(): Unit","d":"scala.AnyRef","k":"def","x":"See https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--.\n"},
{"l":"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-","e":true,"i":"","n":"wait","t":"wait(x$0: Long): Unit","d":"scala.AnyRef","k":"def","x":"See https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-.\n"},
{"l":"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-","e":true,"i":"","n":"wait","t":"wait(x$0: Long, x$1: Int): Unit","d":"scala.AnyRef","k":"def","x":"See https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\n"},
{"l":"api/scala/AnyVal.html#","e":false,"i":"","n":"AnyVal","t":"AnyVal","d":"scala","k":"class","x":"AnyVal is the root class of all value types, which describe values\nnot implemented as objects in the underlying host system. Value classes\nare specified in Scala Language Specification, section 12.2."},
{"l":"api/scala/App.html#","e":false,"i":"","n":"App","t":"App extends DelayedInit","d":"scala","k":"trait","x":"The App trait can be used to quickly turn objects\ninto executable programs. Here is an example:"},
{"l":"api/scala/App.html#args-0","e":false,"i":"","n":"args","t":"args: Array[String]","d":"scala.App","k":"def","x":"The command line arguments passed to the application's main method.\n"},
{"l":"api/scala/App.html#executionStart-0","e":false,"i":"","n":"executionStart","t":"executionStart: Long","d":"scala.App","k":"val","x":"The time when the execution of this program started, in milliseconds since 1\nJanuary 1970 UTC."},
{"l":"api/scala/App.html#main-913","e":false,"i":"","n":"main","t":"main(args: Array[String]): Unit","d":"scala.App","k":"def","x":"The main method.\nThis stores all arguments so that they can be retrieved with args\nand then executes all initialization code segments in the order in which\nthey were passed to delayedInit."},
{"l":"api/scala/Array$.html#","e":false,"i":"","n":"Array","t":"Array","d":"scala","k":"object","x":"Utility methods for operating on arrays.\nFor example:"},
{"l":"api/scala/Array$.html#apply-c0a","e":false,"i":"","n":"apply","t":"apply[T : ClassTag](xs: T*): Array[T]","d":"scala.Array","k":"def","x":"Creates an array with given elements.\n"},
{"l":"api/scala/Array$.html#apply-9d7","e":false,"i":"","n":"apply","t":"apply(x: Boolean, xs: Boolean*): Array[Boolean]","d":"scala.Array","k":"def","x":"Creates an array of Boolean objects"},
{"l":"api/scala/Array$.html#apply-fffff6ad","e":false,"i":"","n":"apply","t":"apply(x: Byte, xs: Byte*): Array[Byte]","d":"scala.Array","k":"def","x":"Creates an array of Byte objects"},
{"l":"api/scala/Array$.html#apply-997","e":false,"i":"","n":"apply","t":"apply(x: Short, xs: Short*): Array[Short]","d":"scala.Array","k":"def","x":"Creates an array of Short objects"},
{"l":"api/scala/Array$.html#apply-e49","e":false,"i":"","n":"apply","t":"apply(x: Char, xs: Char*): Array[Char]","d":"scala.Array","k":"def","x":"Creates an array of Char objects"},
{"l":"api/scala/Array$.html#apply-fffff277","e":false,"i":"","n":"apply","t":"apply(x: Int, xs: Int*): Array[Int]","d":"scala.Array","k":"def","x":"Creates an array of Int objects"},
{"l":"api/scala/Array$.html#apply-395","e":false,"i":"","n":"apply","t":"apply(x: Long, xs: Long*): Array[Long]","d":"scala.Array","k":"def","x":"Creates an array of Long objects"},
{"l":"api/scala/Array$.html#apply-597","e":false,"i":"","n":"apply","t":"apply(x: Float, xs: Float*): Array[Float]","d":"scala.Array","k":"def","x":"Creates an array of Float objects"},
{"l":"api/scala/Array$.html#apply-fffffdbf","e":false,"i":"","n":"apply","t":"apply(x: Double, xs: Double*): Array[Double]","d":"scala.Array","k":"def","x":"Creates an array of Double objects"},
{"l":"api/scala/Array$.html#apply-d97","e":false,"i":"","n":"apply","t":"apply(x: Unit, xs: Unit*): Array[Unit]","d":"scala.Array","k":"def","x":"Creates an array of Unit objects"},
{"l":"api/scala/Array$.html#concat-c0a","e":false,"i":"","n":"concat","t":"concat[T : ClassTag](xss: Array[T]*): Array[T]","d":"scala.Array","k":"def","x":"Concatenates all arrays into a single array.\n"},
{"l":"api/scala/Array$.html#copy-fffff933","e":false,"i":"","n":"copy","t":"copy(src: AnyRef, srcPos: Int, dest: AnyRef, destPos: Int, length: Int): Unit","d":"scala.Array","k":"def","x":"Copy one array to another.\nEquivalent to Java's\n  System.arraycopy(src, srcPos, dest, destPos, length),\nexcept that this also works for polymorphic and boxed arrays."},
{"l":"api/scala/Array$.html#copyAs-411","e":false,"i":"","n":"copyAs","t":"copyAs[A](original: Array[_], newLength: Int)(implicit ct: ClassTag[A]): Array[A]","d":"scala.Array","k":"def","x":"Copy one array to another, truncating or padding with default values (if\nnecessary) so the copy has the specified length. The new array can have\na different type than the original one as long as the values are\nassignment-compatible. When copying between primitive and object arrays,\nboxing and unboxing are supported."},
{"l":"api/scala/Array$.html#copyOf-fffff776","e":false,"i":"","n":"copyOf","t":"copyOf[A](original: Array[A], newLength: Int): Array[A]","d":"scala.Array","k":"def","x":"Copy one array to another, truncating or padding with default values (if\nnecessary) so the copy has the specified length."},
{"l":"api/scala/Array$.html#empty-fffff5df","e":false,"i":"","n":"empty","t":"empty[T : ClassTag]: Array[T]","d":"scala.Array","k":"def","x":"Returns an array of length 0"},
{"l":"api/scala/Array$.html#emptyBooleanArray-0","e":false,"i":"","n":"emptyBooleanArray","t":"emptyBooleanArray: Array[Boolean]","d":"scala.Array","k":"val","x":""},
{"l":"api/scala/Array$.html#emptyByteArray-0","e":false,"i":"","n":"emptyByteArray","t":"emptyByteArray: Array[Byte]","d":"scala.Array","k":"val","x":""},
{"l":"api/scala/Array$.html#emptyCharArray-0","e":false,"i":"","n":"emptyCharArray","t":"emptyCharArray: Array[Char]","d":"scala.Array","k":"val","x":""},
{"l":"api/scala/Array$.html#emptyDoubleArray-0","e":false,"i":"","n":"emptyDoubleArray","t":"emptyDoubleArray: Array[Double]","d":"scala.Array","k":"val","x":""},
{"l":"api/scala/Array$.html#emptyFloatArray-0","e":false,"i":"","n":"emptyFloatArray","t":"emptyFloatArray: Array[Float]","d":"scala.Array","k":"val","x":""},
{"l":"api/scala/Array$.html#emptyIntArray-0","e":false,"i":"","n":"emptyIntArray","t":"emptyIntArray: Array[Int]","d":"scala.Array","k":"val","x":""},
{"l":"api/scala/Array$.html#emptyLongArray-0","e":false,"i":"","n":"emptyLongArray","t":"emptyLongArray: Array[Long]","d":"scala.Array","k":"val","x":""},
{"l":"api/scala/Array$.html#emptyObjectArray-0","e":false,"i":"","n":"emptyObjectArray","t":"emptyObjectArray: Array[Object]","d":"scala.Array","k":"val","x":""},
{"l":"api/scala/Array$.html#emptyShortArray-0","e":false,"i":"","n":"emptyShortArray","t":"emptyShortArray: Array[Short]","d":"scala.Array","k":"val","x":""},
{"l":"api/scala/Array$.html#equals-fffff676","e":false,"i":"","n":"equals","t":"equals(xs: Array[AnyRef], ys: Array[AnyRef]): Boolean","d":"scala.Array","k":"def","x":"Compare two arrays per element."},
{"l":"api/scala/Array$.html#fill-fffff6a8","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n: Int)(elem: => T): Array[T]","d":"scala.Array","k":"def","x":"Returns an array that contains the results of some element computation a number\nof times."},
{"l":"api/scala/Array$.html#fill-5ef","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n1: Int, n2: Int)(elem: => T): Array[Array[T]]","d":"scala.Array","k":"def","x":"Returns a two-dimensional array that contains the results of some element\ncomputation a number of times.\n"},
{"l":"api/scala/Array$.html#fill-28c","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n1: Int, n2: Int, n3: Int)(elem: => T): Array[Array[Array[T]]]","d":"scala.Array","k":"def","x":"Returns a three-dimensional array that contains the results of some element\ncomputation a number of times.\n"},
{"l":"api/scala/Array$.html#fill-f13","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => T): Array[Array[Array[Array[T]]]]","d":"scala.Array","k":"def","x":"Returns a four-dimensional array that contains the results of some element\ncomputation a number of times.\n"},
{"l":"api/scala/Array$.html#fill-470","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => T): Array[Array[Array[Array[Array[T]]]]]","d":"scala.Array","k":"def","x":"Returns a five-dimensional array that contains the results of some element\ncomputation a number of times.\n"},
{"l":"api/scala/Array$.html#from-fffff738","e":false,"i":"","n":"from","t":"from[A : ClassTag](it: IterableOnce[A]): Array[A]","d":"scala.Array","k":"def","x":"Build an array from the iterable collection."},
{"l":"api/scala/Array$.html#iterate-63c","e":false,"i":"","n":"iterate","t":"iterate[T : ClassTag](start: T, len: Int)(f: T => T): Array[T]","d":"scala.Array","k":"def","x":"Returns an array containing repeated applications of a function to a start value.\n"},
{"l":"api/scala/Array$.html#newBuilder-fffff8c6","e":false,"i":"","n":"newBuilder","t":"newBuilder[T](implicit t: ClassTag[T]): ArrayBuilder[T]","d":"scala.Array","k":"def","x":"Returns a new scala.collection.mutable.ArrayBuilder.\n"},
{"l":"api/scala/Array$.html#ofDim-fffff804","e":false,"i":"","n":"ofDim","t":"ofDim[T : ClassTag](n1: Int): Array[T]","d":"scala.Array","k":"def","x":"Creates array with given dimensions"},
{"l":"api/scala/Array$.html#ofDim-fffff721","e":false,"i":"","n":"ofDim","t":"ofDim[T : ClassTag](n1: Int, n2: Int): Array[Array[T]]","d":"scala.Array","k":"def","x":"Creates a 2-dimensional array"},
{"l":"api/scala/Array$.html#ofDim-fffff6a8","e":false,"i":"","n":"ofDim","t":"ofDim[T : ClassTag](n1: Int, n2: Int, n3: Int): Array[Array[Array[T]]]","d":"scala.Array","k":"def","x":"Creates a 3-dimensional array"},
{"l":"api/scala/Array$.html#ofDim-e85","e":false,"i":"","n":"ofDim","t":"ofDim[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int): Array[Array[Array[Array[T]]]]","d":"scala.Array","k":"def","x":"Creates a 4-dimensional array"},
{"l":"api/scala/Array$.html#ofDim-fffffb4c","e":false,"i":"","n":"ofDim","t":"ofDim[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int): Array[Array[Array[Array[Array[T]]]]]","d":"scala.Array","k":"def","x":"Creates a 5-dimensional array"},
{"l":"api/scala/Array$.html#range-4e9","e":false,"i":"","n":"range","t":"range(start: Int, end: Int): Array[Int]","d":"scala.Array","k":"def","x":"Returns an array containing a sequence of increasing integers in a range.\n"},
{"l":"api/scala/Array$.html#range-fffffb22","e":false,"i":"","n":"range","t":"range(start: Int, end: Int, step: Int): Array[Int]","d":"scala.Array","k":"def","x":"Returns an array containing equally spaced values in some integer interval.\n"},
{"l":"api/scala/Array$.html#tabulate-fffffde9","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n: Int)(f: Int => T): Array[T]","d":"scala.Array","k":"def","x":"Returns an array containing values of a given function over a range of integer\nvalues starting from 0.\n"},
{"l":"api/scala/Array$.html#tabulate-bf1","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n1: Int, n2: Int)(f: (Int, Int) => T): Array[Array[T]]","d":"scala.Array","k":"def","x":"Returns a two-dimensional array containing values of a given function\nover ranges of integer values starting from 0.\n"},
{"l":"api/scala/Array$.html#tabulate-fffffecf","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => T): Array[Array[Array[T]]]","d":"scala.Array","k":"def","x":"Returns a three-dimensional array containing values of a given function\nover ranges of integer values starting from 0.\n"},
{"l":"api/scala/Array$.html#tabulate-fffff917","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => T): Array[Array[Array[Array[T]]]]","d":"scala.Array","k":"def","x":"Returns a four-dimensional array containing values of a given function\nover ranges of integer values starting from 0.\n"},
{"l":"api/scala/Array$.html#tabulate-3b5","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => T): Array[Array[Array[Array[Array[T]]]]]","d":"scala.Array","k":"def","x":"Returns a five-dimensional array containing values of a given function\nover ranges of integer values starting from 0.\n"},
{"l":"api/scala/Array$.html#toFactory-fffff381","e":false,"i":"","n":"toFactory","t":"toFactory[A : ClassTag](dummy: Array.type): Factory[A, Array[A]]","d":"scala.Array","k":"def","x":"Provides an implicit conversion from the Array object to a collection Factory"},
{"l":"api/scala/Array$.html#unapplySeq-957","e":false,"i":"","n":"unapplySeq","t":"unapplySeq[T](x: Array[T]): UnapplySeqWrapper[T]","d":"scala.Array","k":"def","x":"Called in a pattern match like { case Array(x,y,z) => println('3 elements')}.\n"},
{"l":"api/scala/Array$$UnapplySeqWrapper.html#","e":false,"i":"","n":"UnapplySeqWrapper","t":"UnapplySeqWrapper[T](a: Array[T]) extends AnyVal","d":"scala.Array","k":"class","x":""},
{"l":"api/scala/Array$$UnapplySeqWrapper.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): T","d":"scala.Array.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/Array$$UnapplySeqWrapper.html#drop-fffffb12","e":false,"i":"","n":"drop","t":"drop(n: Int): Seq[T]","d":"scala.Array.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/Array$$UnapplySeqWrapper.html#get-0","e":false,"i":"","n":"get","t":"get: UnapplySeqWrapper[T]","d":"scala.Array.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/Array$$UnapplySeqWrapper.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: false","d":"scala.Array.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/Array$$UnapplySeqWrapper.html#lengthCompare-fffffbe0","e":false,"i":"","n":"lengthCompare","t":"lengthCompare(len: Int): Int","d":"scala.Array.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/Array$$UnapplySeqWrapper.html#toSeq-0","e":false,"i":"","n":"toSeq","t":"toSeq: Seq[T]","d":"scala.Array.UnapplySeqWrapper","k":"def","x":""},
{"l":"api/scala/Array.html#","e":false,"i":"","n":"Array","t":"Array[T](_length: Int) extends Serializable, Cloneable","d":"scala","k":"class","x":"Arrays are mutable, indexed collections of values. Array[T] is Scala's representation\nfor Java's T[]."},
{"l":"api/scala/Array.html#apply-aba","e":false,"i":"","n":"apply","t":"apply(i: Int): T","d":"scala.Array","k":"def","x":"The element at given index."},
{"l":"api/scala/Array.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.Array","k":"def","x":"The length of the array"},
{"l":"api/scala/Array.html#update-386","e":false,"i":"","n":"update","t":"update(i: Int, x: T): Unit","d":"scala.Array","k":"def","x":"Update the element at given index."},
{"l":"api/scala/Boolean.html#","e":false,"i":"","n":"Boolean","t":"Boolean() extends AnyVal","d":"scala","k":"class","x":"Boolean (equivalent to Java's boolean primitive type) is a\nsubtype of scala.AnyVal. Instances of Boolean are not\nrepresented by an object in the underlying runtime system."},
{"l":"api/scala/Boolean.html#!=-c00","e":false,"i":"","n":"!=","t":"!=(x: Boolean): Boolean","d":"scala.Boolean","k":"def","x":"Compares two Boolean expressions and returns true if they evaluate to a different value."},
{"l":"api/scala/Boolean.html#&-c00","e":false,"i":"","n":"&","t":"&(x: Boolean): Boolean","d":"scala.Boolean","k":"def","x":"Compares two Boolean expressions and returns true if both of them evaluate to true."},
{"l":"api/scala/Boolean.html#&&-c00","e":false,"i":"","n":"&&","t":"&&(x: Boolean): Boolean","d":"scala.Boolean","k":"def","x":"Compares two Boolean expressions and returns true if both of them evaluate to true."},
{"l":"api/scala/Boolean.html#==-c00","e":false,"i":"","n":"==","t":"==(x: Boolean): Boolean","d":"scala.Boolean","k":"def","x":"Compares two Boolean expressions and returns true if they evaluate to the same value."},
{"l":"api/scala/Boolean.html#^-c00","e":false,"i":"","n":"^","t":"^(x: Boolean): Boolean","d":"scala.Boolean","k":"def","x":"Compares two Boolean expressions and returns true if they evaluate to a different value."},
{"l":"api/scala/Boolean.html#unary_!-0","e":false,"i":"","n":"unary_!","t":"unary_!: Boolean","d":"scala.Boolean","k":"def","x":"Negates a Boolean expression."},
{"l":"api/scala/Boolean.html#|-c00","e":false,"i":"","n":"|","t":"|(x: Boolean): Boolean","d":"scala.Boolean","k":"def","x":"Compares two Boolean expressions and returns true if one or both of them evaluate to true."},
{"l":"api/scala/Boolean.html#||-c00","e":false,"i":"","n":"||","t":"||(x: Boolean): Boolean","d":"scala.Boolean","k":"def","x":"Compares two Boolean expressions and returns true if one or both of them evaluate to true."},
{"l":"api/scala/Boolean$.html#","e":false,"i":"","n":"Boolean","t":"Boolean","d":"scala","k":"object","x":""},
{"l":"api/scala/Boolean$.html#box-fffff4f4","e":false,"i":"","n":"box","t":"box(x: Boolean): Boolean","d":"scala.Boolean","k":"def","x":"Transform a value type into a boxed reference type."},
{"l":"api/scala/Boolean$.html#unbox-4ad","e":false,"i":"","n":"unbox","t":"unbox(x: Object): Boolean","d":"scala.Boolean","k":"def","x":"Transform a boxed type into a value type.  Note that this\nmethod is not typesafe: it accepts any Object, but will throw\nan exception if the argument is not a java.lang.Boolean."},
{"l":"api/scala/Byte.html#","e":false,"i":"","n":"Byte","t":"Byte() extends AnyVal","d":"scala","k":"class","x":"Byte, a 8-bit signed integer (equivalent to Java's byte primitive type) is a\nsubtype of scala.AnyVal. Instances of Byte are not\nrepresented by an object in the underlying runtime system."},
{"l":"api/scala/Byte.html#!=-890","e":false,"i":"","n":"!=","t":"!=(x: Byte): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Byte.html#!=-e2c","e":false,"i":"","n":"!=","t":"!=(x: Short): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Byte.html#!=-502","e":false,"i":"","n":"!=","t":"!=(x: Char): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Byte.html#!=-ffffff99","e":false,"i":"","n":"!=","t":"!=(x: Int): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Byte.html#!=-f9c","e":false,"i":"","n":"!=","t":"!=(x: Long): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Byte.html#!=-fffffc4c","e":false,"i":"","n":"!=","t":"!=(x: Float): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Byte.html#!=-e67","e":false,"i":"","n":"!=","t":"!=(x: Double): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Byte.html#%-857","e":false,"i":"","n":"%","t":"%(x: Byte): Int","d":"scala.Byte","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Byte.html#%-fffffbf3","e":false,"i":"","n":"%","t":"%(x: Short): Int","d":"scala.Byte","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Byte.html#%-dc9","e":false,"i":"","n":"%","t":"%(x: Char): Int","d":"scala.Byte","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Byte.html#%-fffffbe0","e":false,"i":"","n":"%","t":"%(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Byte.html#%-fffff788","e":false,"i":"","n":"%","t":"%(x: Long): Long","d":"scala.Byte","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Byte.html#%-fffffb80","e":false,"i":"","n":"%","t":"%(x: Float): Float","d":"scala.Byte","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Byte.html#%-5b2","e":false,"i":"","n":"%","t":"%(x: Double): Double","d":"scala.Byte","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Byte.html#&-857","e":false,"i":"","n":"&","t":"&(x: Byte): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Byte.html#&-fffffbf3","e":false,"i":"","n":"&","t":"&(x: Short): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Byte.html#&-dc9","e":false,"i":"","n":"&","t":"&(x: Char): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Byte.html#&-fffffbe0","e":false,"i":"","n":"&","t":"&(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Byte.html#&-fffff788","e":false,"i":"","n":"&","t":"&(x: Long): Long","d":"scala.Byte","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Byte.html#*-857","e":false,"i":"","n":"*","t":"*(x: Byte): Int","d":"scala.Byte","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Byte.html#*-fffffbf3","e":false,"i":"","n":"*","t":"*(x: Short): Int","d":"scala.Byte","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Byte.html#*-dc9","e":false,"i":"","n":"*","t":"*(x: Char): Int","d":"scala.Byte","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Byte.html#*-fffffbe0","e":false,"i":"","n":"*","t":"*(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Byte.html#*-fffff788","e":false,"i":"","n":"*","t":"*(x: Long): Long","d":"scala.Byte","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Byte.html#*-fffffb80","e":false,"i":"","n":"*","t":"*(x: Float): Float","d":"scala.Byte","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Byte.html#*-5b2","e":false,"i":"","n":"*","t":"*(x: Double): Double","d":"scala.Byte","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Byte.html#+-fffff2ca","e":false,"i":"","n":"+","t":"+(x: String): String","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte.html#+-857","e":false,"i":"","n":"+","t":"+(x: Byte): Int","d":"scala.Byte","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Byte.html#+-fffffbf3","e":false,"i":"","n":"+","t":"+(x: Short): Int","d":"scala.Byte","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Byte.html#+-dc9","e":false,"i":"","n":"+","t":"+(x: Char): Int","d":"scala.Byte","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Byte.html#+-fffffbe0","e":false,"i":"","n":"+","t":"+(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Byte.html#+-fffff788","e":false,"i":"","n":"+","t":"+(x: Long): Long","d":"scala.Byte","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Byte.html#+-fffffb80","e":false,"i":"","n":"+","t":"+(x: Float): Float","d":"scala.Byte","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Byte.html#+-5b2","e":false,"i":"","n":"+","t":"+(x: Double): Double","d":"scala.Byte","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Byte.html#--857","e":false,"i":"","n":"-","t":"-(x: Byte): Int","d":"scala.Byte","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Byte.html#--fffffbf3","e":false,"i":"","n":"-","t":"-(x: Short): Int","d":"scala.Byte","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Byte.html#--dc9","e":false,"i":"","n":"-","t":"-(x: Char): Int","d":"scala.Byte","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Byte.html#--fffffbe0","e":false,"i":"","n":"-","t":"-(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Byte.html#--fffff788","e":false,"i":"","n":"-","t":"-(x: Long): Long","d":"scala.Byte","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Byte.html#--fffffb80","e":false,"i":"","n":"-","t":"-(x: Float): Float","d":"scala.Byte","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Byte.html#--5b2","e":false,"i":"","n":"-","t":"-(x: Double): Double","d":"scala.Byte","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Byte.html#/-857","e":false,"i":"","n":"/","t":"/(x: Byte): Int","d":"scala.Byte","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Byte.html#/-fffffbf3","e":false,"i":"","n":"/","t":"/(x: Short): Int","d":"scala.Byte","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Byte.html#/-dc9","e":false,"i":"","n":"/","t":"/(x: Char): Int","d":"scala.Byte","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Byte.html#/-fffffbe0","e":false,"i":"","n":"/","t":"/(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Byte.html#/-fffff788","e":false,"i":"","n":"/","t":"/(x: Long): Long","d":"scala.Byte","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Byte.html#/-fffffb80","e":false,"i":"","n":"/","t":"/(x: Float): Float","d":"scala.Byte","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Byte.html#/-5b2","e":false,"i":"","n":"/","t":"/(x: Double): Double","d":"scala.Byte","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Byte.html#<-890","e":false,"i":"","n":"<","t":"<(x: Byte): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Byte.html#<-e2c","e":false,"i":"","n":"<","t":"<(x: Short): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Byte.html#<-502","e":false,"i":"","n":"<","t":"<(x: Char): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Byte.html#<-ffffff99","e":false,"i":"","n":"<","t":"<(x: Int): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Byte.html#<-f9c","e":false,"i":"","n":"<","t":"<(x: Long): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Byte.html#<-fffffc4c","e":false,"i":"","n":"<","t":"<(x: Float): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Byte.html#<-e67","e":false,"i":"","n":"<","t":"<(x: Double): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Byte.html#<<-fffffbe0","e":false,"i":"","n":"<<","t":"<<(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Byte.html#<<-fffff563","e":false,"i":"","n":"<<","t":"<<(x: Long): Int","d":"scala.Byte","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Byte.html#<=-890","e":false,"i":"","n":"<=","t":"<=(x: Byte): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#<=-e2c","e":false,"i":"","n":"<=","t":"<=(x: Short): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#<=-502","e":false,"i":"","n":"<=","t":"<=(x: Char): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#<=-ffffff99","e":false,"i":"","n":"<=","t":"<=(x: Int): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#<=-f9c","e":false,"i":"","n":"<=","t":"<=(x: Long): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#<=-fffffc4c","e":false,"i":"","n":"<=","t":"<=(x: Float): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#<=-e67","e":false,"i":"","n":"<=","t":"<=(x: Double): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#==-890","e":false,"i":"","n":"==","t":"==(x: Byte): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Byte.html#==-e2c","e":false,"i":"","n":"==","t":"==(x: Short): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Byte.html#==-502","e":false,"i":"","n":"==","t":"==(x: Char): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Byte.html#==-ffffff99","e":false,"i":"","n":"==","t":"==(x: Int): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Byte.html#==-f9c","e":false,"i":"","n":"==","t":"==(x: Long): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Byte.html#==-fffffc4c","e":false,"i":"","n":"==","t":"==(x: Float): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Byte.html#==-e67","e":false,"i":"","n":"==","t":"==(x: Double): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Byte.html#>-890","e":false,"i":"","n":">","t":">(x: Byte): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Byte.html#>-e2c","e":false,"i":"","n":">","t":">(x: Short): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Byte.html#>-502","e":false,"i":"","n":">","t":">(x: Char): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Byte.html#>-ffffff99","e":false,"i":"","n":">","t":">(x: Int): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Byte.html#>-f9c","e":false,"i":"","n":">","t":">(x: Long): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Byte.html#>-fffffc4c","e":false,"i":"","n":">","t":">(x: Float): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Byte.html#>-e67","e":false,"i":"","n":">","t":">(x: Double): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Byte.html#>=-890","e":false,"i":"","n":">=","t":">=(x: Byte): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#>=-e2c","e":false,"i":"","n":">=","t":">=(x: Short): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#>=-502","e":false,"i":"","n":">=","t":">=(x: Char): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#>=-ffffff99","e":false,"i":"","n":">=","t":">=(x: Int): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#>=-f9c","e":false,"i":"","n":">=","t":">=(x: Long): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#>=-fffffc4c","e":false,"i":"","n":">=","t":">=(x: Float): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#>=-e67","e":false,"i":"","n":">=","t":">=(x: Double): Boolean","d":"scala.Byte","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Byte.html#>>-fffffbe0","e":false,"i":"","n":">>","t":">>(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Byte.html#>>-fffff563","e":false,"i":"","n":">>","t":">>(x: Long): Int","d":"scala.Byte","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Byte.html#>>>-fffffbe0","e":false,"i":"","n":">>>","t":">>>(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Byte.html#>>>-fffff563","e":false,"i":"","n":">>>","t":">>>(x: Long): Int","d":"scala.Byte","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Byte.html#^-857","e":false,"i":"","n":"^","t":"^(x: Byte): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Byte.html#^-fffffbf3","e":false,"i":"","n":"^","t":"^(x: Short): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Byte.html#^-dc9","e":false,"i":"","n":"^","t":"^(x: Char): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Byte.html#^-fffffbe0","e":false,"i":"","n":"^","t":"^(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Byte.html#^-fffff788","e":false,"i":"","n":"^","t":"^(x: Long): Long","d":"scala.Byte","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Byte.html#toByte-0","e":false,"i":"","n":"toByte","t":"toByte: Byte","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte.html#toChar-0","e":false,"i":"","n":"toChar","t":"toChar: Char","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte.html#toShort-0","e":false,"i":"","n":"toShort","t":"toShort: Short","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte.html#unary_+-0","e":false,"i":"","n":"unary_+","t":"unary_+: Int","d":"scala.Byte","k":"def","x":"Returns this value, unmodified."},
{"l":"api/scala/Byte.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: Int","d":"scala.Byte","k":"def","x":"Returns the negation of this value."},
{"l":"api/scala/Byte.html#unary_~-0","e":false,"i":"","n":"unary_~","t":"unary_~: Int","d":"scala.Byte","k":"def","x":"Returns the bitwise negation of this value."},
{"l":"api/scala/Byte.html#|-857","e":false,"i":"","n":"|","t":"|(x: Byte): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Byte.html#|-fffffbf3","e":false,"i":"","n":"|","t":"|(x: Short): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Byte.html#|-dc9","e":false,"i":"","n":"|","t":"|(x: Char): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Byte.html#|-fffffbe0","e":false,"i":"","n":"|","t":"|(x: Int): Int","d":"scala.Byte","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Byte.html#|-fffff788","e":false,"i":"","n":"|","t":"|(x: Long): Long","d":"scala.Byte","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Byte$.html#","e":false,"i":"","n":"Byte","t":"Byte","d":"scala","k":"object","x":""},
{"l":"api/scala/Byte$.html#MaxValue-0","e":false,"i":"","n":"MaxValue","t":"MaxValue: 127","d":"scala.Byte","k":"val","x":"The largest value representable as a Byte."},
{"l":"api/scala/Byte$.html#MinValue-0","e":false,"i":"","n":"MinValue","t":"MinValue: -128","d":"scala.Byte","k":"val","x":"The smallest value representable as a Byte."},
{"l":"api/scala/Byte$.html#box-12c","e":false,"i":"","n":"box","t":"box(x: Byte): Byte","d":"scala.Byte","k":"def","x":"Transform a value type into a boxed reference type."},
{"l":"api/scala/Byte$.html#byte2double-269","e":false,"i":"","n":"byte2double","t":"byte2double(x: Byte): Double","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte$.html#byte2float-fffff8c4","e":false,"i":"","n":"byte2float","t":"byte2float(x: Byte): Float","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte$.html#byte2int-857","e":false,"i":"","n":"byte2int","t":"byte2int(x: Byte): Int","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte$.html#byte2long-314","e":false,"i":"","n":"byte2long","t":"byte2long(x: Byte): Long","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte$.html#byte2short-fffffae4","e":false,"i":"","n":"byte2short","t":"byte2short(x: Byte): Short","d":"scala.Byte","k":"def","x":""},
{"l":"api/scala/Byte$.html#unbox-fffffea3","e":false,"i":"","n":"unbox","t":"unbox(x: Object): Byte","d":"scala.Byte","k":"def","x":"Transform a boxed type into a value type.  Note that this\nmethod is not typesafe: it accepts any Object, but will throw\nan exception if the argument is not a java.lang.Byte."},
{"l":"api/scala/CanEqual.html#","e":false,"i":"","n":"CanEqual","t":"CanEqual[-L, -R]","d":"scala","k":"trait","x":""},
{"l":"api/scala/CanEqual$.html#","e":false,"i":"","n":"CanEqual","t":"CanEqual","d":"scala","k":"object","x":""},
{"l":"api/scala/CanEqual$.html#canEqualAny-5be","e":false,"i":"","n":"canEqualAny","t":"canEqualAny[L, R]: CanEqual[L, R]","d":"scala.CanEqual","k":"def","x":""},
{"l":"api/scala/CanEqual$.html#canEqualEither-ffffff58","e":false,"i":"","n":"canEqualEither","t":"canEqualEither[L1, R1, L2, R2](using eqL: CanEqual[L1, L2], eqR: CanEqual[R1, R2]): CanEqual[Either[L1, R1], Either[L2, R2]]","d":"scala.CanEqual","k":"given","x":""},
{"l":"api/scala/CanEqual$.html#canEqualMap-ffffff58","e":false,"i":"","n":"canEqualMap","t":"canEqualMap[K1, V1, K2, V2](using eqK: CanEqual[K1, K2], eqV: CanEqual[V1, V2]): CanEqual[Map[K1, V1], Map[K2, V2]]","d":"scala.CanEqual","k":"given","x":""},
{"l":"api/scala/CanEqual$.html#canEqualNumber-0","e":false,"i":"","n":"canEqualNumber","t":"canEqualNumber: CanEqual[Number, Number]","d":"scala.CanEqual","k":"given","x":""},
{"l":"api/scala/CanEqual$.html#canEqualOption-1c9","e":false,"i":"","n":"canEqualOption","t":"canEqualOption[T](using eq: CanEqual[T, T]): CanEqual[Option[T], Option[T]]","d":"scala.CanEqual","k":"given","x":""},
{"l":"api/scala/CanEqual$.html#canEqualOptions-64a","e":false,"i":"","n":"canEqualOptions","t":"canEqualOptions[T, U](using eq: CanEqual[T, U]): CanEqual[Option[T], Option[U]]","d":"scala.CanEqual","k":"given","x":""},
{"l":"api/scala/CanEqual$.html#canEqualSeq-1c9","e":false,"i":"","n":"canEqualSeq","t":"canEqualSeq[T](using eq: CanEqual[T, T]): CanEqual[Seq[T], Seq[T]]","d":"scala.CanEqual","k":"given","x":""},
{"l":"api/scala/CanEqual$.html#canEqualSeqs-64a","e":false,"i":"","n":"canEqualSeqs","t":"canEqualSeqs[T, U](using eq: CanEqual[T, U]): CanEqual[Seq[T], Seq[U]]","d":"scala.CanEqual","k":"given","x":""},
{"l":"api/scala/CanEqual$.html#canEqualSet-64a","e":false,"i":"","n":"canEqualSet","t":"canEqualSet[T, U](using eq: CanEqual[T, U]): CanEqual[Set[T], Set[U]]","d":"scala.CanEqual","k":"given","x":""},
{"l":"api/scala/CanEqual$.html#canEqualString-0","e":false,"i":"","n":"canEqualString","t":"canEqualString: CanEqual[String, String]","d":"scala.CanEqual","k":"given","x":""},
{"l":"api/scala/CanEqual$$derived$.html#","e":false,"i":"","n":"derived","t":"derived extends CanEqual[Any, Any]","d":"scala.CanEqual","k":"object","x":""},
{"l":"api/scala/CanThrow.html#","e":false,"i":"","n":"CanThrow","t":"CanThrow[-E <: Exception] extends Control, Erased","d":"scala","k":"class","x":""},
{"l":"api/scala/Char.html#","e":false,"i":"","n":"Char","t":"Char() extends AnyVal","d":"scala","k":"class","x":"Char, a 16-bit unsigned integer (equivalent to Java's char primitive type) is a\nsubtype of scala.AnyVal. Instances of Char are not\nrepresented by an object in the underlying runtime system."},
{"l":"api/scala/Char.html#!=-890","e":false,"i":"","n":"!=","t":"!=(x: Byte): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Char.html#!=-e2c","e":false,"i":"","n":"!=","t":"!=(x: Short): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Char.html#!=-502","e":false,"i":"","n":"!=","t":"!=(x: Char): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Char.html#!=-ffffff99","e":false,"i":"","n":"!=","t":"!=(x: Int): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Char.html#!=-f9c","e":false,"i":"","n":"!=","t":"!=(x: Long): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Char.html#!=-fffffc4c","e":false,"i":"","n":"!=","t":"!=(x: Float): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Char.html#!=-e67","e":false,"i":"","n":"!=","t":"!=(x: Double): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Char.html#%-857","e":false,"i":"","n":"%","t":"%(x: Byte): Int","d":"scala.Char","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Char.html#%-fffffbf3","e":false,"i":"","n":"%","t":"%(x: Short): Int","d":"scala.Char","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Char.html#%-dc9","e":false,"i":"","n":"%","t":"%(x: Char): Int","d":"scala.Char","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Char.html#%-fffffbe0","e":false,"i":"","n":"%","t":"%(x: Int): Int","d":"scala.Char","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Char.html#%-fffff788","e":false,"i":"","n":"%","t":"%(x: Long): Long","d":"scala.Char","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Char.html#%-fffffb80","e":false,"i":"","n":"%","t":"%(x: Float): Float","d":"scala.Char","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Char.html#%-5b2","e":false,"i":"","n":"%","t":"%(x: Double): Double","d":"scala.Char","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Char.html#&-857","e":false,"i":"","n":"&","t":"&(x: Byte): Int","d":"scala.Char","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Char.html#&-fffffbf3","e":false,"i":"","n":"&","t":"&(x: Short): Int","d":"scala.Char","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Char.html#&-dc9","e":false,"i":"","n":"&","t":"&(x: Char): Int","d":"scala.Char","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Char.html#&-fffffbe0","e":false,"i":"","n":"&","t":"&(x: Int): Int","d":"scala.Char","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Char.html#&-fffff788","e":false,"i":"","n":"&","t":"&(x: Long): Long","d":"scala.Char","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Char.html#*-857","e":false,"i":"","n":"*","t":"*(x: Byte): Int","d":"scala.Char","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Char.html#*-fffffbf3","e":false,"i":"","n":"*","t":"*(x: Short): Int","d":"scala.Char","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Char.html#*-dc9","e":false,"i":"","n":"*","t":"*(x: Char): Int","d":"scala.Char","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Char.html#*-fffffbe0","e":false,"i":"","n":"*","t":"*(x: Int): Int","d":"scala.Char","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Char.html#*-fffff788","e":false,"i":"","n":"*","t":"*(x: Long): Long","d":"scala.Char","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Char.html#*-fffffb80","e":false,"i":"","n":"*","t":"*(x: Float): Float","d":"scala.Char","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Char.html#*-5b2","e":false,"i":"","n":"*","t":"*(x: Double): Double","d":"scala.Char","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Char.html#+-fffff2ca","e":false,"i":"","n":"+","t":"+(x: String): String","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char.html#+-857","e":false,"i":"","n":"+","t":"+(x: Byte): Int","d":"scala.Char","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Char.html#+-fffffbf3","e":false,"i":"","n":"+","t":"+(x: Short): Int","d":"scala.Char","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Char.html#+-dc9","e":false,"i":"","n":"+","t":"+(x: Char): Int","d":"scala.Char","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Char.html#+-fffffbe0","e":false,"i":"","n":"+","t":"+(x: Int): Int","d":"scala.Char","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Char.html#+-fffff788","e":false,"i":"","n":"+","t":"+(x: Long): Long","d":"scala.Char","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Char.html#+-fffffb80","e":false,"i":"","n":"+","t":"+(x: Float): Float","d":"scala.Char","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Char.html#+-5b2","e":false,"i":"","n":"+","t":"+(x: Double): Double","d":"scala.Char","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Char.html#--857","e":false,"i":"","n":"-","t":"-(x: Byte): Int","d":"scala.Char","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Char.html#--fffffbf3","e":false,"i":"","n":"-","t":"-(x: Short): Int","d":"scala.Char","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Char.html#--dc9","e":false,"i":"","n":"-","t":"-(x: Char): Int","d":"scala.Char","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Char.html#--fffffbe0","e":false,"i":"","n":"-","t":"-(x: Int): Int","d":"scala.Char","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Char.html#--fffff788","e":false,"i":"","n":"-","t":"-(x: Long): Long","d":"scala.Char","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Char.html#--fffffb80","e":false,"i":"","n":"-","t":"-(x: Float): Float","d":"scala.Char","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Char.html#--5b2","e":false,"i":"","n":"-","t":"-(x: Double): Double","d":"scala.Char","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Char.html#/-857","e":false,"i":"","n":"/","t":"/(x: Byte): Int","d":"scala.Char","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Char.html#/-fffffbf3","e":false,"i":"","n":"/","t":"/(x: Short): Int","d":"scala.Char","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Char.html#/-dc9","e":false,"i":"","n":"/","t":"/(x: Char): Int","d":"scala.Char","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Char.html#/-fffffbe0","e":false,"i":"","n":"/","t":"/(x: Int): Int","d":"scala.Char","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Char.html#/-fffff788","e":false,"i":"","n":"/","t":"/(x: Long): Long","d":"scala.Char","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Char.html#/-fffffb80","e":false,"i":"","n":"/","t":"/(x: Float): Float","d":"scala.Char","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Char.html#/-5b2","e":false,"i":"","n":"/","t":"/(x: Double): Double","d":"scala.Char","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Char.html#<-890","e":false,"i":"","n":"<","t":"<(x: Byte): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Char.html#<-e2c","e":false,"i":"","n":"<","t":"<(x: Short): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Char.html#<-502","e":false,"i":"","n":"<","t":"<(x: Char): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Char.html#<-ffffff99","e":false,"i":"","n":"<","t":"<(x: Int): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Char.html#<-f9c","e":false,"i":"","n":"<","t":"<(x: Long): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Char.html#<-fffffc4c","e":false,"i":"","n":"<","t":"<(x: Float): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Char.html#<-e67","e":false,"i":"","n":"<","t":"<(x: Double): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Char.html#<<-fffffbe0","e":false,"i":"","n":"<<","t":"<<(x: Int): Int","d":"scala.Char","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Char.html#<<-fffff563","e":false,"i":"","n":"<<","t":"<<(x: Long): Int","d":"scala.Char","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Char.html#<=-890","e":false,"i":"","n":"<=","t":"<=(x: Byte): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#<=-e2c","e":false,"i":"","n":"<=","t":"<=(x: Short): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#<=-502","e":false,"i":"","n":"<=","t":"<=(x: Char): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#<=-ffffff99","e":false,"i":"","n":"<=","t":"<=(x: Int): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#<=-f9c","e":false,"i":"","n":"<=","t":"<=(x: Long): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#<=-fffffc4c","e":false,"i":"","n":"<=","t":"<=(x: Float): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#<=-e67","e":false,"i":"","n":"<=","t":"<=(x: Double): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#==-890","e":false,"i":"","n":"==","t":"==(x: Byte): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Char.html#==-e2c","e":false,"i":"","n":"==","t":"==(x: Short): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Char.html#==-502","e":false,"i":"","n":"==","t":"==(x: Char): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Char.html#==-ffffff99","e":false,"i":"","n":"==","t":"==(x: Int): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Char.html#==-f9c","e":false,"i":"","n":"==","t":"==(x: Long): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Char.html#==-fffffc4c","e":false,"i":"","n":"==","t":"==(x: Float): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Char.html#==-e67","e":false,"i":"","n":"==","t":"==(x: Double): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Char.html#>-890","e":false,"i":"","n":">","t":">(x: Byte): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Char.html#>-e2c","e":false,"i":"","n":">","t":">(x: Short): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Char.html#>-502","e":false,"i":"","n":">","t":">(x: Char): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Char.html#>-ffffff99","e":false,"i":"","n":">","t":">(x: Int): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Char.html#>-f9c","e":false,"i":"","n":">","t":">(x: Long): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Char.html#>-fffffc4c","e":false,"i":"","n":">","t":">(x: Float): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Char.html#>-e67","e":false,"i":"","n":">","t":">(x: Double): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Char.html#>=-890","e":false,"i":"","n":">=","t":">=(x: Byte): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#>=-e2c","e":false,"i":"","n":">=","t":">=(x: Short): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#>=-502","e":false,"i":"","n":">=","t":">=(x: Char): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#>=-ffffff99","e":false,"i":"","n":">=","t":">=(x: Int): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#>=-f9c","e":false,"i":"","n":">=","t":">=(x: Long): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#>=-fffffc4c","e":false,"i":"","n":">=","t":">=(x: Float): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#>=-e67","e":false,"i":"","n":">=","t":">=(x: Double): Boolean","d":"scala.Char","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Char.html#>>-fffffbe0","e":false,"i":"","n":">>","t":">>(x: Int): Int","d":"scala.Char","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Char.html#>>-fffff563","e":false,"i":"","n":">>","t":">>(x: Long): Int","d":"scala.Char","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Char.html#>>>-fffffbe0","e":false,"i":"","n":">>>","t":">>>(x: Int): Int","d":"scala.Char","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Char.html#>>>-fffff563","e":false,"i":"","n":">>>","t":">>>(x: Long): Int","d":"scala.Char","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Char.html#^-857","e":false,"i":"","n":"^","t":"^(x: Byte): Int","d":"scala.Char","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Char.html#^-fffffbf3","e":false,"i":"","n":"^","t":"^(x: Short): Int","d":"scala.Char","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Char.html#^-dc9","e":false,"i":"","n":"^","t":"^(x: Char): Int","d":"scala.Char","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Char.html#^-fffffbe0","e":false,"i":"","n":"^","t":"^(x: Int): Int","d":"scala.Char","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Char.html#^-fffff788","e":false,"i":"","n":"^","t":"^(x: Long): Long","d":"scala.Char","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Char.html#toByte-0","e":false,"i":"","n":"toByte","t":"toByte: Byte","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char.html#toChar-0","e":false,"i":"","n":"toChar","t":"toChar: Char","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char.html#toShort-0","e":false,"i":"","n":"toShort","t":"toShort: Short","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char.html#unary_+-0","e":false,"i":"","n":"unary_+","t":"unary_+: Int","d":"scala.Char","k":"def","x":"Returns this value, unmodified."},
{"l":"api/scala/Char.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: Int","d":"scala.Char","k":"def","x":"Returns the negation of this value."},
{"l":"api/scala/Char.html#unary_~-0","e":false,"i":"","n":"unary_~","t":"unary_~: Int","d":"scala.Char","k":"def","x":"Returns the bitwise negation of this value."},
{"l":"api/scala/Char.html#|-857","e":false,"i":"","n":"|","t":"|(x: Byte): Int","d":"scala.Char","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Char.html#|-fffffbf3","e":false,"i":"","n":"|","t":"|(x: Short): Int","d":"scala.Char","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Char.html#|-dc9","e":false,"i":"","n":"|","t":"|(x: Char): Int","d":"scala.Char","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Char.html#|-fffffbe0","e":false,"i":"","n":"|","t":"|(x: Int): Int","d":"scala.Char","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Char.html#|-fffff788","e":false,"i":"","n":"|","t":"|(x: Long): Long","d":"scala.Char","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Char$.html#","e":false,"i":"","n":"Char","t":"Char","d":"scala","k":"object","x":""},
{"l":"api/scala/Char$.html#MaxValue-0","e":false,"i":"","n":"MaxValue","t":"MaxValue: '￿'","d":"scala.Char","k":"val","x":"The largest value representable as a Char."},
{"l":"api/scala/Char$.html#MinValue-0","e":false,"i":"","n":"MinValue","t":"MinValue: '\\u0000'","d":"scala.Char","k":"val","x":"The smallest value representable as a Char."},
{"l":"api/scala/Char$.html#box-fffff077","e":false,"i":"","n":"box","t":"box(x: Char): Character","d":"scala.Char","k":"def","x":"Transform a value type into a boxed reference type."},
{"l":"api/scala/Char$.html#char2double-ffffffb7","e":false,"i":"","n":"char2double","t":"char2double(x: Char): Double","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char$.html#char2float-fffff9b6","e":false,"i":"","n":"char2float","t":"char2float(x: Char): Float","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char$.html#char2int-dc9","e":false,"i":"","n":"char2int","t":"char2int(x: Char): Int","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char$.html#char2long-be2","e":false,"i":"","n":"char2long","t":"char2long(x: Char): Long","d":"scala.Char","k":"def","x":""},
{"l":"api/scala/Char$.html#unbox-fffff0f1","e":false,"i":"","n":"unbox","t":"unbox(x: Object): Char","d":"scala.Char","k":"def","x":"Transform a boxed type into a value type.  Note that this\nmethod is not typesafe: it accepts any Object, but will throw\nan exception if the argument is not a java.lang.Character."},
{"l":"api/scala/Console$.html#","e":false,"i":"","n":"Console","t":"Console extends AnsiColor","d":"scala","k":"object","x":"Implements functionality for printing Scala values on the terminal. For reading values\nuse StdIn.\nAlso defines constants for marking up text on ANSI terminals."},
{"l":"api/scala/Console$.html#err-0","e":false,"i":"","n":"err","t":"err: PrintStream","d":"scala.Console","k":"def","x":"The default error, can be overridden by withErr"},
{"l":"api/scala/Console$.html#flush-94c","e":false,"i":"","n":"flush","t":"flush(): Unit","d":"scala.Console","k":"def","x":"Flushes the output stream. This function is required when partial\noutput (i.e. output not terminated by a newline character) has\nto be made visible on the terminal."},
{"l":"api/scala/Console$.html#in-0","e":false,"i":"","n":"in","t":"in: BufferedReader","d":"scala.Console","k":"def","x":"The default input, can be overridden by withIn"},
{"l":"api/scala/Console$.html#out-0","e":false,"i":"","n":"out","t":"out: PrintStream","d":"scala.Console","k":"def","x":"The default output, can be overridden by withOut"},
{"l":"api/scala/Console$.html#print-fffff71f","e":false,"i":"","n":"print","t":"print(obj: Any): Unit","d":"scala.Console","k":"def","x":"Prints an object to out using its toString method.\n"},
{"l":"api/scala/Console$.html#printf-fffff71c","e":false,"i":"","n":"printf","t":"printf(text: String, args: Any*): Unit","d":"scala.Console","k":"def","x":"Prints its arguments as a formatted string to the default output,\nbased on a string pattern (in a fashion similar to printf in C)."},
{"l":"api/scala/Console$.html#println-94c","e":false,"i":"","n":"println","t":"println(): Unit","d":"scala.Console","k":"def","x":"Prints a newline character on the default output."},
{"l":"api/scala/Console$.html#println-fffff71f","e":false,"i":"","n":"println","t":"println(x: Any): Unit","d":"scala.Console","k":"def","x":"Prints out an object to the default output, followed by a newline character.\n"},
{"l":"api/scala/Console$.html#withErr-103","e":false,"i":"","n":"withErr","t":"withErr[T](err: PrintStream)(thunk: => T): T","d":"scala.Console","k":"def","x":"Set the default error stream for the duration\nof execution of one thunk."},
{"l":"api/scala/Console$.html#withErr-fffff6b5","e":false,"i":"","n":"withErr","t":"withErr[T](err: OutputStream)(thunk: => T): T","d":"scala.Console","k":"def","x":"Sets the default error stream for the duration\nof execution of one thunk.\n"},
{"l":"api/scala/Console$.html#withIn-fffffbd3","e":false,"i":"","n":"withIn","t":"withIn[T](reader: Reader)(thunk: => T): T","d":"scala.Console","k":"def","x":"Sets the default input stream for the duration\nof execution of one thunk.\n"},
{"l":"api/scala/Console$.html#withIn-fffffa06","e":false,"i":"","n":"withIn","t":"withIn[T](in: InputStream)(thunk: => T): T","d":"scala.Console","k":"def","x":"Sets the default input stream for the duration\nof execution of one thunk.\n"},
{"l":"api/scala/Console$.html#withOut-103","e":false,"i":"","n":"withOut","t":"withOut[T](out: PrintStream)(thunk: => T): T","d":"scala.Console","k":"def","x":"Sets the default output stream for the duration\nof execution of one thunk.\n"},
{"l":"api/scala/Console$.html#withOut-fffff6b5","e":false,"i":"","n":"withOut","t":"withOut[T](out: OutputStream)(thunk: => T): T","d":"scala.Console","k":"def","x":"Sets the default output stream for the duration\nof execution of one thunk.\n"},
{"l":"api/scala/Conversion.html#","e":false,"i":"","n":"Conversion","t":"Conversion[-T, +U] extends T => U","d":"scala","k":"class","x":""},
{"l":"api/scala/Conversion.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(x: T): U","d":"scala.Conversion","k":"def","x":""},
{"l":"api/scala/Conversion.html#convert-d26","e":false,"i":"extension (x: T)","n":"convert","t":"convert: U","d":"scala.Conversion","k":"def","x":""},
{"l":"api/scala/Conversion$.html#","e":false,"i":"","n":"Conversion","t":"Conversion","d":"scala","k":"object","x":""},
{"l":"api/scala/Conversion$.html#into-0","e":false,"i":"","n":"into","t":"into[+T]","d":"scala.Conversion","k":"type","x":""},
{"l":"api/scala/Conversion$.html#underlying-957","e":false,"i":"extension [T](x: into[T])","n":"underlying","t":"underlying: T","d":"scala.Conversion","k":"def","x":""},
{"l":"api/scala/DelayedInit.html#","e":false,"i":"","n":"DelayedInit","t":"DelayedInit","d":"scala","k":"trait","x":"Classes and objects (but note, not traits) inheriting the DelayedInit\nmarker trait will have their initialization code rewritten as follows:\ncode becomes delayedInit(code)."},
{"l":"api/scala/DelayedInit.html#delayedInit-9dc","e":false,"i":"","n":"delayedInit","t":"delayedInit(x: => Unit): Unit","d":"scala.DelayedInit","k":"def","x":""},
{"l":"api/scala/Double.html#","e":false,"i":"","n":"Double","t":"Double() extends AnyVal","d":"scala","k":"class","x":"Double, a 64-bit IEEE-754 floating point number (equivalent to Java's double primitive type) is a\nsubtype of scala.AnyVal. Instances of Double are not\nrepresented by an object in the underlying runtime system."},
{"l":"api/scala/Double.html#!=-890","e":false,"i":"","n":"!=","t":"!=(x: Byte): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Double.html#!=-e2c","e":false,"i":"","n":"!=","t":"!=(x: Short): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Double.html#!=-502","e":false,"i":"","n":"!=","t":"!=(x: Char): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Double.html#!=-ffffff99","e":false,"i":"","n":"!=","t":"!=(x: Int): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Double.html#!=-f9c","e":false,"i":"","n":"!=","t":"!=(x: Long): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Double.html#!=-fffffc4c","e":false,"i":"","n":"!=","t":"!=(x: Float): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Double.html#!=-e67","e":false,"i":"","n":"!=","t":"!=(x: Double): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Double.html#%-269","e":false,"i":"","n":"%","t":"%(x: Byte): Double","d":"scala.Double","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Double.html#%-fffff94d","e":false,"i":"","n":"%","t":"%(x: Short): Double","d":"scala.Double","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Double.html#%-ffffffb7","e":false,"i":"","n":"%","t":"%(x: Char): Double","d":"scala.Double","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Double.html#%-640","e":false,"i":"","n":"%","t":"%(x: Int): Double","d":"scala.Double","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Double.html#%-9dd","e":false,"i":"","n":"%","t":"%(x: Long): Double","d":"scala.Double","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Double.html#%-72d","e":false,"i":"","n":"%","t":"%(x: Float): Double","d":"scala.Double","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Double.html#%-5b2","e":false,"i":"","n":"%","t":"%(x: Double): Double","d":"scala.Double","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Double.html#*-269","e":false,"i":"","n":"*","t":"*(x: Byte): Double","d":"scala.Double","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Double.html#*-fffff94d","e":false,"i":"","n":"*","t":"*(x: Short): Double","d":"scala.Double","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Double.html#*-ffffffb7","e":false,"i":"","n":"*","t":"*(x: Char): Double","d":"scala.Double","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Double.html#*-640","e":false,"i":"","n":"*","t":"*(x: Int): Double","d":"scala.Double","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Double.html#*-9dd","e":false,"i":"","n":"*","t":"*(x: Long): Double","d":"scala.Double","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Double.html#*-72d","e":false,"i":"","n":"*","t":"*(x: Float): Double","d":"scala.Double","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Double.html#*-5b2","e":false,"i":"","n":"*","t":"*(x: Double): Double","d":"scala.Double","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Double.html#+-fffff2ca","e":false,"i":"","n":"+","t":"+(x: String): String","d":"scala.Double","k":"def","x":""},
{"l":"api/scala/Double.html#+-269","e":false,"i":"","n":"+","t":"+(x: Byte): Double","d":"scala.Double","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Double.html#+-fffff94d","e":false,"i":"","n":"+","t":"+(x: Short): Double","d":"scala.Double","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Double.html#+-ffffffb7","e":false,"i":"","n":"+","t":"+(x: Char): Double","d":"scala.Double","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Double.html#+-640","e":false,"i":"","n":"+","t":"+(x: Int): Double","d":"scala.Double","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Double.html#+-9dd","e":false,"i":"","n":"+","t":"+(x: Long): Double","d":"scala.Double","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Double.html#+-72d","e":false,"i":"","n":"+","t":"+(x: Float): Double","d":"scala.Double","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Double.html#+-5b2","e":false,"i":"","n":"+","t":"+(x: Double): Double","d":"scala.Double","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Double.html#--269","e":false,"i":"","n":"-","t":"-(x: Byte): Double","d":"scala.Double","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Double.html#--fffff94d","e":false,"i":"","n":"-","t":"-(x: Short): Double","d":"scala.Double","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Double.html#--ffffffb7","e":false,"i":"","n":"-","t":"-(x: Char): Double","d":"scala.Double","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Double.html#--640","e":false,"i":"","n":"-","t":"-(x: Int): Double","d":"scala.Double","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Double.html#--9dd","e":false,"i":"","n":"-","t":"-(x: Long): Double","d":"scala.Double","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Double.html#--72d","e":false,"i":"","n":"-","t":"-(x: Float): Double","d":"scala.Double","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Double.html#--5b2","e":false,"i":"","n":"-","t":"-(x: Double): Double","d":"scala.Double","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Double.html#/-269","e":false,"i":"","n":"/","t":"/(x: Byte): Double","d":"scala.Double","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Double.html#/-fffff94d","e":false,"i":"","n":"/","t":"/(x: Short): Double","d":"scala.Double","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Double.html#/-ffffffb7","e":false,"i":"","n":"/","t":"/(x: Char): Double","d":"scala.Double","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Double.html#/-640","e":false,"i":"","n":"/","t":"/(x: Int): Double","d":"scala.Double","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Double.html#/-9dd","e":false,"i":"","n":"/","t":"/(x: Long): Double","d":"scala.Double","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Double.html#/-72d","e":false,"i":"","n":"/","t":"/(x: Float): Double","d":"scala.Double","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Double.html#/-5b2","e":false,"i":"","n":"/","t":"/(x: Double): Double","d":"scala.Double","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Double.html#<-890","e":false,"i":"","n":"<","t":"<(x: Byte): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Double.html#<-e2c","e":false,"i":"","n":"<","t":"<(x: Short): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Double.html#<-502","e":false,"i":"","n":"<","t":"<(x: Char): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Double.html#<-ffffff99","e":false,"i":"","n":"<","t":"<(x: Int): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Double.html#<-f9c","e":false,"i":"","n":"<","t":"<(x: Long): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Double.html#<-fffffc4c","e":false,"i":"","n":"<","t":"<(x: Float): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Double.html#<-e67","e":false,"i":"","n":"<","t":"<(x: Double): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Double.html#<=-890","e":false,"i":"","n":"<=","t":"<=(x: Byte): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#<=-e2c","e":false,"i":"","n":"<=","t":"<=(x: Short): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#<=-502","e":false,"i":"","n":"<=","t":"<=(x: Char): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#<=-ffffff99","e":false,"i":"","n":"<=","t":"<=(x: Int): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#<=-f9c","e":false,"i":"","n":"<=","t":"<=(x: Long): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#<=-fffffc4c","e":false,"i":"","n":"<=","t":"<=(x: Float): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#<=-e67","e":false,"i":"","n":"<=","t":"<=(x: Double): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#==-890","e":false,"i":"","n":"==","t":"==(x: Byte): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Double.html#==-e2c","e":false,"i":"","n":"==","t":"==(x: Short): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Double.html#==-502","e":false,"i":"","n":"==","t":"==(x: Char): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Double.html#==-ffffff99","e":false,"i":"","n":"==","t":"==(x: Int): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Double.html#==-f9c","e":false,"i":"","n":"==","t":"==(x: Long): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Double.html#==-fffffc4c","e":false,"i":"","n":"==","t":"==(x: Float): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Double.html#==-e67","e":false,"i":"","n":"==","t":"==(x: Double): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Double.html#>-890","e":false,"i":"","n":">","t":">(x: Byte): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Double.html#>-e2c","e":false,"i":"","n":">","t":">(x: Short): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Double.html#>-502","e":false,"i":"","n":">","t":">(x: Char): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Double.html#>-ffffff99","e":false,"i":"","n":">","t":">(x: Int): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Double.html#>-f9c","e":false,"i":"","n":">","t":">(x: Long): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Double.html#>-fffffc4c","e":false,"i":"","n":">","t":">(x: Float): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Double.html#>-e67","e":false,"i":"","n":">","t":">(x: Double): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Double.html#>=-890","e":false,"i":"","n":">=","t":">=(x: Byte): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#>=-e2c","e":false,"i":"","n":">=","t":">=(x: Short): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#>=-502","e":false,"i":"","n":">=","t":">=(x: Char): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#>=-ffffff99","e":false,"i":"","n":">=","t":">=(x: Int): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#>=-f9c","e":false,"i":"","n":">=","t":">=(x: Long): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#>=-fffffc4c","e":false,"i":"","n":">=","t":">=(x: Float): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#>=-e67","e":false,"i":"","n":">=","t":">=(x: Double): Boolean","d":"scala.Double","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Double.html#toByte-0","e":false,"i":"","n":"toByte","t":"toByte: Byte","d":"scala.Double","k":"def","x":""},
{"l":"api/scala/Double.html#toChar-0","e":false,"i":"","n":"toChar","t":"toChar: Char","d":"scala.Double","k":"def","x":""},
{"l":"api/scala/Double.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.Double","k":"def","x":""},
{"l":"api/scala/Double.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.Double","k":"def","x":""},
{"l":"api/scala/Double.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.Double","k":"def","x":""},
{"l":"api/scala/Double.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.Double","k":"def","x":""},
{"l":"api/scala/Double.html#toShort-0","e":false,"i":"","n":"toShort","t":"toShort: Short","d":"scala.Double","k":"def","x":""},
{"l":"api/scala/Double.html#unary_+-0","e":false,"i":"","n":"unary_+","t":"unary_+: Double","d":"scala.Double","k":"def","x":"Returns this value, unmodified."},
{"l":"api/scala/Double.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: Double","d":"scala.Double","k":"def","x":"Returns the negation of this value."},
{"l":"api/scala/Double$.html#","e":false,"i":"","n":"Double","t":"Double","d":"scala","k":"object","x":""},
{"l":"api/scala/Double$.html#MaxValue-0","e":false,"i":"","n":"MaxValue","t":"MaxValue: 1.7976931348623157E308d","d":"scala.Double","k":"val","x":"The largest finite positive number representable as a Double."},
{"l":"api/scala/Double$.html#MinPositiveValue-0","e":false,"i":"","n":"MinPositiveValue","t":"MinPositiveValue: 4.9E-324d","d":"scala.Double","k":"val","x":"The smallest positive value greater than 0.0d which is\nrepresentable as a Double.\n"},
{"l":"api/scala/Double$.html#MinValue-0","e":false,"i":"","n":"MinValue","t":"MinValue: -1.7976931348623157E308d","d":"scala.Double","k":"val","x":"The negative number with the greatest (finite) absolute value which is representable\nby a Double.  Note that it differs from java.lang.Double.MIN_VALUE, which\nis the smallest positive value representable by a Double.  In Scala that number\nis called Double.MinPositiveValue.\n"},
{"l":"api/scala/Double$.html#NaN-0","e":false,"i":"","n":"NaN","t":"NaN: NaNd","d":"scala.Double","k":"val","x":""},
{"l":"api/scala/Double$.html#NegativeInfinity-0","e":false,"i":"","n":"NegativeInfinity","t":"NegativeInfinity: -Infinityd","d":"scala.Double","k":"val","x":""},
{"l":"api/scala/Double$.html#PositiveInfinity-0","e":false,"i":"","n":"PositiveInfinity","t":"PositiveInfinity: Infinityd","d":"scala.Double","k":"val","x":""},
{"l":"api/scala/Double$.html#box-9be","e":false,"i":"","n":"box","t":"box(x: Double): Double","d":"scala.Double","k":"def","x":"Transform a value type into a boxed reference type."},
{"l":"api/scala/Double$.html#unbox-fffffeac","e":false,"i":"","n":"unbox","t":"unbox(x: Object): Double","d":"scala.Double","k":"def","x":"Transform a boxed type into a value type.  Note that this\nmethod is not typesafe: it accepts any Object, but will throw\nan exception if the argument is not a java.lang.Double."},
{"l":"api/scala/DummyImplicit.html#","e":false,"i":"","n":"DummyImplicit","t":"DummyImplicit","d":"scala","k":"class","x":"A type for which there is always an implicit value."},
{"l":"api/scala/DummyImplicit$.html#","e":false,"i":"","n":"DummyImplicit","t":"DummyImplicit","d":"scala","k":"object","x":""},
{"l":"api/scala/DummyImplicit$.html#dummyImplicit-0","e":false,"i":"","n":"dummyImplicit","t":"dummyImplicit: DummyImplicit","d":"scala.DummyImplicit","k":"val","x":"An implicit value yielding a DummyImplicit."},
{"l":"api/scala/Dynamic.html#","e":false,"i":"","n":"Dynamic","t":"Dynamic","d":"scala","k":"trait","x":"A marker trait that enables dynamic invocations. Instances x of this\ntrait allow method invocations x.meth(args) for arbitrary method\nnames meth and argument lists args as well as field accesses\nx.field for arbitrary field names field."},
{"l":"api/scala/EmptyTuple$.html#","e":false,"i":"","n":"EmptyTuple","t":"EmptyTuple extends Tuple","d":"scala","k":"object","x":""},
{"l":"api/scala/Enumeration.html#","e":false,"i":"","n":"Enumeration","t":"Enumeration(initial: Int) extends Serializable","d":"scala","k":"class","x":"Defines a finite set of values specific to the enumeration. Typically\nthese values enumerate all possible forms something can take and provide\na lightweight alternative to case classes."},
{"l":"api/scala/Enumeration.html#Value-0","e":false,"i":"","n":"Value","t":"Value: Value","d":"scala.Enumeration","k":"def","x":"Creates a fresh value, part of this enumeration."},
{"l":"api/scala/Enumeration.html#Value-fffff11b","e":false,"i":"","n":"Value","t":"Value(i: Int): Value","d":"scala.Enumeration","k":"def","x":"Creates a fresh value, part of this enumeration, identified by the\ninteger i.\n"},
{"l":"api/scala/Enumeration.html#Value-fffff41d","e":false,"i":"","n":"Value","t":"Value(name: String): Value","d":"scala.Enumeration","k":"def","x":"Creates a fresh value, part of this enumeration, called name.\n"},
{"l":"api/scala/Enumeration.html#Value-fffff716","e":false,"i":"","n":"Value","t":"Value(i: Int, name: String): Value","d":"scala.Enumeration","k":"def","x":"Creates a fresh value, part of this enumeration, called name\nand identified by the integer i.\n"},
{"l":"api/scala/Enumeration.html#apply-fffff11b","e":false,"i":"","n":"apply","t":"apply(x: Int): Value","d":"scala.Enumeration","k":"def","x":"The value of this enumeration with given id x\n"},
{"l":"api/scala/Enumeration.html#maxId-0","e":false,"i":"","n":"maxId","t":"maxId: Int","d":"scala.Enumeration","k":"def","x":"The one higher than the highest integer amongst those used to identify\nvalues in this enumeration."},
{"l":"api/scala/Enumeration.html#nextId-0","e":false,"i":"","n":"nextId","t":"nextId: Int","d":"scala.Enumeration","k":"var","x":"The integer to use to identify the next created value."},
{"l":"api/scala/Enumeration.html#nextName-0","e":false,"i":"","n":"nextName","t":"nextName: Iterator[String]","d":"scala.Enumeration","k":"var","x":"The string to use to name the next created value."},
{"l":"api/scala/Enumeration.html#readResolve-993","e":false,"i":"","n":"readResolve","t":"readResolve(): AnyRef","d":"scala.Enumeration","k":"def","x":""},
{"l":"api/scala/Enumeration.html#<init>-97f","e":false,"i":"","n":"this","t":"this()","d":"scala.Enumeration","k":"def","x":""},
{"l":"api/scala/Enumeration.html#values-0","e":false,"i":"","n":"values","t":"values: ValueSet","d":"scala.Enumeration","k":"def","x":"The values of this enumeration as a set.\n"},
{"l":"api/scala/Enumeration.html#withName-fffff41d","e":false,"i":"","n":"withName","t":"withName(s: String): Value","d":"scala.Enumeration","k":"def","x":"Return a Value from this Enumeration whose name matches\nthe argument s.  The names are determined automatically via reflection.\n"},
{"l":"api/scala/Enumeration$Val.html#","e":false,"i":"","n":"Val","t":"Val(i: Int, name: String) extends Value, Serializable","d":"scala.Enumeration","k":"class","x":"A class implementing the scala.Enumeration.Value type. This class\ncan be overridden to change the enumeration's naming and integer\nidentification behaviour.\n"},
{"l":"api/scala/Enumeration$Val.html#id-0","e":false,"i":"","n":"id","t":"id: Int","d":"scala.Enumeration.Val","k":"def","x":"the id and bit location of this enumeration value"},
{"l":"api/scala/Enumeration$Val.html#<init>-fffff94b","e":false,"i":"","n":"this","t":"this(i: Int)","d":"scala.Enumeration.Val","k":"def","x":""},
{"l":"api/scala/Enumeration$Val.html#<init>-fffff4cd","e":false,"i":"","n":"this","t":"this(name: String)","d":"scala.Enumeration.Val","k":"def","x":""},
{"l":"api/scala/Enumeration$Val.html#<init>-fffffa12","e":false,"i":"","n":"this","t":"this()","d":"scala.Enumeration.Val","k":"def","x":""},
{"l":"api/scala/Enumeration$Value.html#","e":false,"i":"","n":"Value","t":"Value extends Ordered[Value], Serializable","d":"scala.Enumeration","k":"class","x":"The type of the enumerated values."},
{"l":"api/scala/Enumeration$Value.html#+-fffff282","e":false,"i":"","n":"+","t":"+(v: Enumeration.this.Value): Enumeration.this.ValueSet","d":"scala.Enumeration.Value","k":"def","x":"Create a ValueSet which contains this value and another one"},
{"l":"api/scala/Enumeration$Value.html#id-0","e":false,"i":"","n":"id","t":"id: Int","d":"scala.Enumeration.Value","k":"def","x":"the id and bit location of this enumeration value"},
{"l":"api/scala/Enumeration$ValueOrdering$.html#","e":false,"i":"","n":"ValueOrdering","t":"ValueOrdering extends Ordering[Value]","d":"scala.Enumeration","k":"object","x":"An ordering by id for values of this set"},
{"l":"api/scala/Enumeration$ValueOrdering$.html#compare-d67","e":false,"i":"","n":"compare","t":"compare(x: Enumeration.this.Value, y: Enumeration.this.Value): Int","d":"scala.Enumeration.ValueOrdering","k":"def","x":"Returns an integer whose sign communicates how x compares to y."},
{"l":"api/scala/Enumeration$ValueSet.html#","e":false,"i":"","n":"ValueSet","t":"ValueSet extends AbstractSet[Value], SortedSet[Value], SortedSetOps[Value, SortedSet, ValueSet], StrictOptimizedIterableOps[Value, Set, ValueSet], Serializable","d":"scala.Enumeration","k":"class","x":"A class for sets of values.\nIterating through this set will yield values in increasing order of their ids.\n"},
{"l":"api/scala/Enumeration$ValueSet.html#contains-fffff27e","e":false,"i":"","n":"contains","t":"contains(v: Enumeration.this.Value): Boolean","d":"scala.Enumeration.ValueSet","k":"def","x":""},
{"l":"api/scala/Enumeration$ValueSet.html#excl-fffff282","e":false,"i":"","n":"excl","t":"excl(value: Enumeration.this.Value): Enumeration.this.ValueSet","d":"scala.Enumeration.ValueSet","k":"def","x":"Creates a new set with a given element removed from this set.\n"},
{"l":"api/scala/Enumeration$ValueSet.html#flatMap-fffffe31","e":false,"i":"","n":"flatMap","t":"flatMap(f: Enumeration.this.Value => IterableOnce[Enumeration.this.Value]): Enumeration.this.ValueSet","d":"scala.Enumeration.ValueSet","k":"def","x":""},
{"l":"api/scala/Enumeration$ValueSet.html#incl-fffff282","e":false,"i":"","n":"incl","t":"incl(value: Enumeration.this.Value): Enumeration.this.ValueSet","d":"scala.Enumeration.ValueSet","k":"def","x":"Creates a new set with an additional element, unless the element is\nalready present.\n"},
{"l":"api/scala/Enumeration$ValueSet.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[Enumeration.this.Value]","d":"scala.Enumeration.ValueSet","k":"def","x":"An scala.collection.Iterator over the elements of this collection."},
{"l":"api/scala/Enumeration$ValueSet.html#map-fffffe31","e":false,"i":"","n":"map","t":"map(f: Enumeration.this.Value => Enumeration.this.Value): Enumeration.this.ValueSet","d":"scala.Enumeration.ValueSet","k":"def","x":""},
{"l":"api/scala/Enumeration$ValueSet.html#ordering-0","e":false,"i":"","n":"ordering","t":"ordering: Ordering[Enumeration.this.Value]","d":"scala.Enumeration.ValueSet","k":"def","x":""},
{"l":"api/scala/Enumeration$ValueSet.html#rangeImpl-15a","e":false,"i":"","n":"rangeImpl","t":"rangeImpl(from: Option[Enumeration.this.Value], until: Option[Enumeration.this.Value]): Enumeration.this.ValueSet","d":"scala.Enumeration.ValueSet","k":"def","x":"Creates a ranged projection of this collection. Any mutations in the\nranged projection will update this collection and vice versa."},
{"l":"api/scala/Enumeration$ValueSet.html#toBitMask-0","e":false,"i":"","n":"toBitMask","t":"toBitMask: Array[Long]","d":"scala.Enumeration.ValueSet","k":"def","x":"Creates a bit mask for the zero-adjusted ids in this set as a\nnew array of longs"},
{"l":"api/scala/Enumeration$ValueSet$.html#","e":false,"i":"","n":"ValueSet","t":"ValueSet extends SpecificIterableFactory[Value, ValueSet]","d":"scala.Enumeration","k":"object","x":"A factory object for value sets"},
{"l":"api/scala/Enumeration$ValueSet$.html#empty-0","e":false,"i":"","n":"empty","t":"empty: Enumeration.this.ValueSet","d":"scala.Enumeration.ValueSet","k":"val","x":"The empty value set"},
{"l":"api/scala/Enumeration$ValueSet$.html#fromBitMask-fffffa06","e":false,"i":"","n":"fromBitMask","t":"fromBitMask(elems: Array[Long]): Enumeration.this.ValueSet","d":"scala.Enumeration.ValueSet","k":"def","x":"A value set containing all the values for the zero-adjusted ids\ncorresponding to the bits in an array"},
{"l":"api/scala/Enumeration$ValueSet$.html#fromSpecific-fffff3fb","e":false,"i":"","n":"fromSpecific","t":"fromSpecific(it: IterableOnce[Enumeration.this.Value]): Enumeration.this.ValueSet","d":"scala.Enumeration.ValueSet","k":"def","x":""},
{"l":"api/scala/Enumeration$ValueSet$.html#newBuilder-0","e":false,"i":"","n":"newBuilder","t":"newBuilder: Builder[Enumeration.this.Value, Enumeration.this.ValueSet]","d":"scala.Enumeration.ValueSet","k":"def","x":"A builder object for value sets"},
{"l":"api/scala/Equals.html#","e":false,"i":"","n":"Equals","t":"Equals","d":"scala","k":"trait","x":"An interface containing operations for equality.\nThe only method not already present in class AnyRef is canEqual.\n"},
{"l":"api/scala/Equals.html#canEqual-4ad","e":false,"i":"","n":"canEqual","t":"canEqual(that: Any): Boolean","d":"scala.Equals","k":"def","x":"Checks whether this instance can possibly equal that."},
{"l":"api/scala/Equals.html#equals-4ad","e":false,"i":"","n":"equals","t":"equals(that: Any): Boolean","d":"scala.Equals","k":"def","x":"Checks whether this instance is equal to that.\nThis universal equality method is defined in AnyRef.\n"},
{"l":"api/scala/Float.html#","e":false,"i":"","n":"Float","t":"Float() extends AnyVal","d":"scala","k":"class","x":"Float, a 32-bit IEEE-754 floating point number (equivalent to Java's float primitive type) is a\nsubtype of scala.AnyVal. Instances of Float are not\nrepresented by an object in the underlying runtime system."},
{"l":"api/scala/Float.html#!=-890","e":false,"i":"","n":"!=","t":"!=(x: Byte): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Float.html#!=-e2c","e":false,"i":"","n":"!=","t":"!=(x: Short): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Float.html#!=-502","e":false,"i":"","n":"!=","t":"!=(x: Char): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Float.html#!=-ffffff99","e":false,"i":"","n":"!=","t":"!=(x: Int): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Float.html#!=-f9c","e":false,"i":"","n":"!=","t":"!=(x: Long): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Float.html#!=-fffffc4c","e":false,"i":"","n":"!=","t":"!=(x: Float): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Float.html#!=-e67","e":false,"i":"","n":"!=","t":"!=(x: Double): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Float.html#%-fffff8c4","e":false,"i":"","n":"%","t":"%(x: Byte): Float","d":"scala.Float","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Float.html#%-fffff560","e":false,"i":"","n":"%","t":"%(x: Short): Float","d":"scala.Float","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Float.html#%-fffff9b6","e":false,"i":"","n":"%","t":"%(x: Char): Float","d":"scala.Float","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Float.html#%-fffffe0d","e":false,"i":"","n":"%","t":"%(x: Int): Float","d":"scala.Float","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Float.html#%-2d0","e":false,"i":"","n":"%","t":"%(x: Long): Float","d":"scala.Float","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Float.html#%-fffffb80","e":false,"i":"","n":"%","t":"%(x: Float): Float","d":"scala.Float","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Float.html#%-5b2","e":false,"i":"","n":"%","t":"%(x: Double): Double","d":"scala.Float","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Float.html#*-fffff8c4","e":false,"i":"","n":"*","t":"*(x: Byte): Float","d":"scala.Float","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Float.html#*-fffff560","e":false,"i":"","n":"*","t":"*(x: Short): Float","d":"scala.Float","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Float.html#*-fffff9b6","e":false,"i":"","n":"*","t":"*(x: Char): Float","d":"scala.Float","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Float.html#*-fffffe0d","e":false,"i":"","n":"*","t":"*(x: Int): Float","d":"scala.Float","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Float.html#*-2d0","e":false,"i":"","n":"*","t":"*(x: Long): Float","d":"scala.Float","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Float.html#*-fffffb80","e":false,"i":"","n":"*","t":"*(x: Float): Float","d":"scala.Float","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Float.html#*-5b2","e":false,"i":"","n":"*","t":"*(x: Double): Double","d":"scala.Float","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Float.html#+-fffff2ca","e":false,"i":"","n":"+","t":"+(x: String): String","d":"scala.Float","k":"def","x":""},
{"l":"api/scala/Float.html#+-fffff8c4","e":false,"i":"","n":"+","t":"+(x: Byte): Float","d":"scala.Float","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Float.html#+-fffff560","e":false,"i":"","n":"+","t":"+(x: Short): Float","d":"scala.Float","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Float.html#+-fffff9b6","e":false,"i":"","n":"+","t":"+(x: Char): Float","d":"scala.Float","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Float.html#+-fffffe0d","e":false,"i":"","n":"+","t":"+(x: Int): Float","d":"scala.Float","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Float.html#+-2d0","e":false,"i":"","n":"+","t":"+(x: Long): Float","d":"scala.Float","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Float.html#+-fffffb80","e":false,"i":"","n":"+","t":"+(x: Float): Float","d":"scala.Float","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Float.html#+-5b2","e":false,"i":"","n":"+","t":"+(x: Double): Double","d":"scala.Float","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Float.html#--fffff8c4","e":false,"i":"","n":"-","t":"-(x: Byte): Float","d":"scala.Float","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Float.html#--fffff560","e":false,"i":"","n":"-","t":"-(x: Short): Float","d":"scala.Float","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Float.html#--fffff9b6","e":false,"i":"","n":"-","t":"-(x: Char): Float","d":"scala.Float","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Float.html#--fffffe0d","e":false,"i":"","n":"-","t":"-(x: Int): Float","d":"scala.Float","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Float.html#--2d0","e":false,"i":"","n":"-","t":"-(x: Long): Float","d":"scala.Float","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Float.html#--fffffb80","e":false,"i":"","n":"-","t":"-(x: Float): Float","d":"scala.Float","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Float.html#--5b2","e":false,"i":"","n":"-","t":"-(x: Double): Double","d":"scala.Float","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Float.html#/-fffff8c4","e":false,"i":"","n":"/","t":"/(x: Byte): Float","d":"scala.Float","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Float.html#/-fffff560","e":false,"i":"","n":"/","t":"/(x: Short): Float","d":"scala.Float","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Float.html#/-fffff9b6","e":false,"i":"","n":"/","t":"/(x: Char): Float","d":"scala.Float","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Float.html#/-fffffe0d","e":false,"i":"","n":"/","t":"/(x: Int): Float","d":"scala.Float","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Float.html#/-2d0","e":false,"i":"","n":"/","t":"/(x: Long): Float","d":"scala.Float","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Float.html#/-fffffb80","e":false,"i":"","n":"/","t":"/(x: Float): Float","d":"scala.Float","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Float.html#/-5b2","e":false,"i":"","n":"/","t":"/(x: Double): Double","d":"scala.Float","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Float.html#<-890","e":false,"i":"","n":"<","t":"<(x: Byte): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Float.html#<-e2c","e":false,"i":"","n":"<","t":"<(x: Short): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Float.html#<-502","e":false,"i":"","n":"<","t":"<(x: Char): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Float.html#<-ffffff99","e":false,"i":"","n":"<","t":"<(x: Int): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Float.html#<-f9c","e":false,"i":"","n":"<","t":"<(x: Long): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Float.html#<-fffffc4c","e":false,"i":"","n":"<","t":"<(x: Float): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Float.html#<-e67","e":false,"i":"","n":"<","t":"<(x: Double): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Float.html#<=-890","e":false,"i":"","n":"<=","t":"<=(x: Byte): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#<=-e2c","e":false,"i":"","n":"<=","t":"<=(x: Short): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#<=-502","e":false,"i":"","n":"<=","t":"<=(x: Char): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#<=-ffffff99","e":false,"i":"","n":"<=","t":"<=(x: Int): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#<=-f9c","e":false,"i":"","n":"<=","t":"<=(x: Long): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#<=-fffffc4c","e":false,"i":"","n":"<=","t":"<=(x: Float): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#<=-e67","e":false,"i":"","n":"<=","t":"<=(x: Double): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#==-890","e":false,"i":"","n":"==","t":"==(x: Byte): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Float.html#==-e2c","e":false,"i":"","n":"==","t":"==(x: Short): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Float.html#==-502","e":false,"i":"","n":"==","t":"==(x: Char): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Float.html#==-ffffff99","e":false,"i":"","n":"==","t":"==(x: Int): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Float.html#==-f9c","e":false,"i":"","n":"==","t":"==(x: Long): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Float.html#==-fffffc4c","e":false,"i":"","n":"==","t":"==(x: Float): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Float.html#==-e67","e":false,"i":"","n":"==","t":"==(x: Double): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Float.html#>-890","e":false,"i":"","n":">","t":">(x: Byte): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Float.html#>-e2c","e":false,"i":"","n":">","t":">(x: Short): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Float.html#>-502","e":false,"i":"","n":">","t":">(x: Char): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Float.html#>-ffffff99","e":false,"i":"","n":">","t":">(x: Int): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Float.html#>-f9c","e":false,"i":"","n":">","t":">(x: Long): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Float.html#>-fffffc4c","e":false,"i":"","n":">","t":">(x: Float): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Float.html#>-e67","e":false,"i":"","n":">","t":">(x: Double): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Float.html#>=-890","e":false,"i":"","n":">=","t":">=(x: Byte): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#>=-e2c","e":false,"i":"","n":">=","t":">=(x: Short): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#>=-502","e":false,"i":"","n":">=","t":">=(x: Char): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#>=-ffffff99","e":false,"i":"","n":">=","t":">=(x: Int): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#>=-f9c","e":false,"i":"","n":">=","t":">=(x: Long): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#>=-fffffc4c","e":false,"i":"","n":">=","t":">=(x: Float): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#>=-e67","e":false,"i":"","n":">=","t":">=(x: Double): Boolean","d":"scala.Float","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Float.html#toByte-0","e":false,"i":"","n":"toByte","t":"toByte: Byte","d":"scala.Float","k":"def","x":""},
{"l":"api/scala/Float.html#toChar-0","e":false,"i":"","n":"toChar","t":"toChar: Char","d":"scala.Float","k":"def","x":""},
{"l":"api/scala/Float.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.Float","k":"def","x":""},
{"l":"api/scala/Float.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.Float","k":"def","x":""},
{"l":"api/scala/Float.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.Float","k":"def","x":""},
{"l":"api/scala/Float.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.Float","k":"def","x":""},
{"l":"api/scala/Float.html#toShort-0","e":false,"i":"","n":"toShort","t":"toShort: Short","d":"scala.Float","k":"def","x":""},
{"l":"api/scala/Float.html#unary_+-0","e":false,"i":"","n":"unary_+","t":"unary_+: Float","d":"scala.Float","k":"def","x":"Returns this value, unmodified."},
{"l":"api/scala/Float.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: Float","d":"scala.Float","k":"def","x":"Returns the negation of this value."},
{"l":"api/scala/Float$.html#","e":false,"i":"","n":"Float","t":"Float","d":"scala","k":"object","x":""},
{"l":"api/scala/Float$.html#MaxValue-0","e":false,"i":"","n":"MaxValue","t":"MaxValue: 3.4028235E38f","d":"scala.Float","k":"val","x":"The largest finite positive number representable as a Float."},
{"l":"api/scala/Float$.html#MinPositiveValue-0","e":false,"i":"","n":"MinPositiveValue","t":"MinPositiveValue: 1.4E-45f","d":"scala.Float","k":"val","x":"The smallest positive value greater than 0.0f which is\nrepresentable as a Float.\n"},
{"l":"api/scala/Float$.html#MinValue-0","e":false,"i":"","n":"MinValue","t":"MinValue: -3.4028235E38f","d":"scala.Float","k":"val","x":"The negative number with the greatest (finite) absolute value which is representable\nby a Float.  Note that it differs from java.lang.Float.MIN_VALUE, which\nis the smallest positive value representable by a Float.  In Scala that number\nis called Float.MinPositiveValue.\n"},
{"l":"api/scala/Float$.html#NaN-0","e":false,"i":"","n":"NaN","t":"NaN: NaNf","d":"scala.Float","k":"val","x":""},
{"l":"api/scala/Float$.html#NegativeInfinity-0","e":false,"i":"","n":"NegativeInfinity","t":"NegativeInfinity: -Infinityf","d":"scala.Float","k":"val","x":""},
{"l":"api/scala/Float$.html#PositiveInfinity-0","e":false,"i":"","n":"PositiveInfinity","t":"PositiveInfinity: Infinityf","d":"scala.Float","k":"val","x":""},
{"l":"api/scala/Float$.html#box-fffffb74","e":false,"i":"","n":"box","t":"box(x: Float): Float","d":"scala.Float","k":"def","x":"Transform a value type into a boxed reference type."},
{"l":"api/scala/Float$.html#float2double-72d","e":false,"i":"","n":"float2double","t":"float2double(x: Float): Double","d":"scala.Float","k":"def","x":""},
{"l":"api/scala/Float$.html#unbox-821","e":false,"i":"","n":"unbox","t":"unbox(x: Object): Float","d":"scala.Float","k":"def","x":"Transform a boxed type into a value type.  Note that this\nmethod is not typesafe: it accepts any Object, but will throw\nan exception if the argument is not a java.lang.Float."},
{"l":"api/scala/Function$.html#","e":false,"i":"","n":"Function","t":"Function","d":"scala","k":"object","x":"A module defining utility methods for higher-order functional programming.\n"},
{"l":"api/scala/Function$.html#chain-749","e":false,"i":"","n":"chain","t":"chain[T](fs: Seq[T => T]): T => T","d":"scala.Function","k":"def","x":"Given a sequence of functions f1, ..., fn, return the\nfunction f1 andThen ... andThen fn.\n"},
{"l":"api/scala/Function$.html#const-fffffeeb","e":false,"i":"","n":"const","t":"const[T, U](x: T)(y: U): T","d":"scala.Function","k":"def","x":"The constant function"},
{"l":"api/scala/Function$.html#tupled-eb2","e":false,"i":"","n":"tupled","t":"tupled[T1, T2, R](f: (T1, T2) => R): ((T1, T2)) => R","d":"scala.Function","k":"def","x":"Tupling for functions of arity 2. This transforms a function\nof arity 2 into a unary function that takes a pair of arguments.\n"},
{"l":"api/scala/Function$.html#tupled-4d2","e":false,"i":"","n":"tupled","t":"tupled[T1, T2, T3, R](f: (T1, T2, T3) => R): ((T1, T2, T3)) => R","d":"scala.Function","k":"def","x":"Tupling for functions of arity 3. This transforms a function\nof arity 3 into a unary function that takes a triple of arguments.\n"},
{"l":"api/scala/Function$.html#tupled-af2","e":false,"i":"","n":"tupled","t":"tupled[T1, T2, T3, T4, R](f: (T1, T2, T3, T4) => R): ((T1, T2, T3, T4)) => R","d":"scala.Function","k":"def","x":"Tupling for functions of arity 4. This transforms a function\nof arity 4 into a unary function that takes a 4-tuple of arguments.\n"},
{"l":"api/scala/Function$.html#tupled-112","e":false,"i":"","n":"tupled","t":"tupled[T1, T2, T3, T4, T5, R](f: (T1, T2, T3, T4, T5) => R): ((T1, T2, T3, T4, T5)) => R","d":"scala.Function","k":"def","x":"Tupling for functions of arity 5. This transforms a function\nof arity 5 into a unary function that takes a 5-tuple of arguments.\n"},
{"l":"api/scala/Function$.html#uncurried-d4","e":false,"i":"","n":"uncurried","t":"uncurried[T1, T2, R](f: T1 => T2 => R): (T1, T2) => R","d":"scala.Function","k":"def","x":"Uncurrying for functions of arity 2. This transforms a unary function\nreturning another unary function into a function of arity 2.\n"},
{"l":"api/scala/Function$.html#uncurried-916","e":false,"i":"","n":"uncurried","t":"uncurried[T1, T2, T3, R](f: T1 => T2 => T3 => R): (T1, T2, T3) => R","d":"scala.Function","k":"def","x":"Uncurrying for functions of arity 3.\n"},
{"l":"api/scala/Function$.html#uncurried-158","e":false,"i":"","n":"uncurried","t":"uncurried[T1, T2, T3, T4, R](f: T1 => T2 => T3 => T4 => R): (T1, T2, T3, T4) => R","d":"scala.Function","k":"def","x":"Uncurrying for functions of arity 4.\n"},
{"l":"api/scala/Function$.html#uncurried-fffff99a","e":false,"i":"","n":"uncurried","t":"uncurried[T1, T2, T3, T4, T5, R](f: T1 => T2 => T3 => T4 => T5 => R): (T1, T2, T3, T4, T5) => R","d":"scala.Function","k":"def","x":"Uncurrying for functions of arity 5.\n"},
{"l":"api/scala/Function$.html#unlift-2f2","e":false,"i":"","n":"unlift","t":"unlift[T, R](f: T => Option[R]): PartialFunction[T, R]","d":"scala.Function","k":"def","x":"Turns a function A => Option[B] into a PartialFunction[A, B]."},
{"l":"api/scala/Function$.html#untupled-d4","e":false,"i":"","n":"untupled","t":"untupled[T1, T2, R](f: ((T1, T2)) => R): (T1, T2) => R","d":"scala.Function","k":"def","x":"Un-tupling for functions of arity 2. This transforms a function taking\na pair of arguments into a binary function which takes each argument separately.\n"},
{"l":"api/scala/Function$.html#untupled-916","e":false,"i":"","n":"untupled","t":"untupled[T1, T2, T3, R](f: ((T1, T2, T3)) => R): (T1, T2, T3) => R","d":"scala.Function","k":"def","x":"Un-tupling for functions of arity 3. This transforms a function taking\na triple of arguments into a ternary function which takes each argument separately.\n"},
{"l":"api/scala/Function$.html#untupled-158","e":false,"i":"","n":"untupled","t":"untupled[T1, T2, T3, T4, R](f: ((T1, T2, T3, T4)) => R): (T1, T2, T3, T4) => R","d":"scala.Function","k":"def","x":"Un-tupling for functions of arity 4. This transforms a function taking\na 4-tuple of arguments into a function of arity 4 which takes each argument separately.\n"},
{"l":"api/scala/Function$.html#untupled-fffff99a","e":false,"i":"","n":"untupled","t":"untupled[T1, T2, T3, T4, T5, R](f: ((T1, T2, T3, T4, T5)) => R): (T1, T2, T3, T4, T5) => R","d":"scala.Function","k":"def","x":"Un-tupling for functions of arity 5. This transforms a function taking\na 5-tuple of arguments into a function of arity 5 which takes each argument separately.\n"},
{"l":"api/scala/Function0.html#","e":false,"i":"","n":"Function0","t":"Function0[+R] extends AnyRef","d":"scala","k":"trait","x":"A function of 0 parameters."},
{"l":"api/scala/Function0.html#apply-993","e":false,"i":"","n":"apply","t":"apply(): R","d":"scala.Function0","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function1$.html#","e":false,"i":"","n":"Function1","t":"Function1","d":"scala","k":"object","x":""},
{"l":"api/scala/Function1$.html#UnliftOps-892","e":false,"i":"","n":"UnliftOps","t":"UnliftOps[A, B](f: A => Option[B]): UnliftOps[A, B]","d":"scala.Function1","k":"def","x":""},
{"l":"api/scala/Function1$$UnliftOps.html#","e":false,"i":"","n":"UnliftOps","t":"UnliftOps[A, B] extends AnyVal","d":"scala.Function1","k":"class","x":""},
{"l":"api/scala/Function1$$UnliftOps.html#unlift-0","e":false,"i":"","n":"unlift","t":"unlift: PartialFunction[A, B]","d":"scala.Function1.UnliftOps","k":"def","x":"Converts an optional function to a partial function.\n"},
{"l":"api/scala/Function1.html#","e":false,"i":"","n":"Function1","t":"Function1[-T1, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 1 parameter."},
{"l":"api/scala/Function1.html#andThen-51","e":false,"i":"","n":"andThen","t":"andThen[A](g: R => A): T1 => A","d":"scala.Function1","k":"def","x":"Composes two instances of Function1 in a new Function1, with this function applied first.\n"},
{"l":"api/scala/Function1.html#apply-d26","e":false,"i":"","n":"apply","t":"apply(v1: T1): R","d":"scala.Function1","k":"def","x":"Apply the body of this function to the argument."},
{"l":"api/scala/Function1.html#compose-51","e":false,"i":"","n":"compose","t":"compose[A](g: A => T1): A => R","d":"scala.Function1","k":"def","x":"Composes two instances of Function1 in a new Function1, with this function applied last.\n"},
{"l":"api/scala/Function10.html#","e":false,"i":"","n":"Function10","t":"Function10[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 10 parameters."},
{"l":"api/scala/Function10.html#apply-ffffff51","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10): R","d":"scala.Function10","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function10.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => R","d":"scala.Function10","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function10.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)) => R","d":"scala.Function10","k":"def","x":"Creates a tupled version of this function: instead of 10 arguments,\nit accepts a single scala.Tuple10 argument.\n"},
{"l":"api/scala/Function11.html#","e":false,"i":"","n":"Function11","t":"Function11[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 11 parameters."},
{"l":"api/scala/Function11.html#apply-fffff6e4","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11): R","d":"scala.Function11","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function11.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => R","d":"scala.Function11","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function11.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)) => R","d":"scala.Function11","k":"def","x":"Creates a tupled version of this function: instead of 11 arguments,\nit accepts a single scala.Tuple11 argument.\n"},
{"l":"api/scala/Function12.html#","e":false,"i":"","n":"Function12","t":"Function12[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 12 parameters."},
{"l":"api/scala/Function12.html#apply-877","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12): R","d":"scala.Function12","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function12.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => R","d":"scala.Function12","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function12.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)) => R","d":"scala.Function12","k":"def","x":"Creates a tupled version of this function: instead of 12 arguments,\nit accepts a single scala.Tuple12 argument.\n"},
{"l":"api/scala/Function13.html#","e":false,"i":"","n":"Function13","t":"Function13[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 13 parameters."},
{"l":"api/scala/Function13.html#apply-40a","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13): R","d":"scala.Function13","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function13.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => R","d":"scala.Function13","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function13.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)) => R","d":"scala.Function13","k":"def","x":"Creates a tupled version of this function: instead of 13 arguments,\nit accepts a single scala.Tuple13 argument.\n"},
{"l":"api/scala/Function14.html#","e":false,"i":"","n":"Function14","t":"Function14[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 14 parameters."},
{"l":"api/scala/Function14.html#apply-99d","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14): R","d":"scala.Function14","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function14.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => R","d":"scala.Function14","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function14.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)) => R","d":"scala.Function14","k":"def","x":"Creates a tupled version of this function: instead of 14 arguments,\nit accepts a single scala.Tuple14 argument.\n"},
{"l":"api/scala/Function15.html#","e":false,"i":"","n":"Function15","t":"Function15[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 15 parameters."},
{"l":"api/scala/Function15.html#apply-930","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15): R","d":"scala.Function15","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function15.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => R","d":"scala.Function15","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function15.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)) => R","d":"scala.Function15","k":"def","x":"Creates a tupled version of this function: instead of 15 arguments,\nit accepts a single scala.Tuple15 argument.\n"},
{"l":"api/scala/Function16.html#","e":false,"i":"","n":"Function16","t":"Function16[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 16 parameters."},
{"l":"api/scala/Function16.html#apply-2c3","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16): R","d":"scala.Function16","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function16.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => R","d":"scala.Function16","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function16.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)) => R","d":"scala.Function16","k":"def","x":"Creates a tupled version of this function: instead of 16 arguments,\nit accepts a single scala.Tuple16 argument.\n"},
{"l":"api/scala/Function17.html#","e":false,"i":"","n":"Function17","t":"Function17[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 17 parameters."},
{"l":"api/scala/Function17.html#apply-fffff656","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17): R","d":"scala.Function17","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function17.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => R","d":"scala.Function17","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function17.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)) => R","d":"scala.Function17","k":"def","x":"Creates a tupled version of this function: instead of 17 arguments,\nit accepts a single scala.Tuple17 argument.\n"},
{"l":"api/scala/Function18.html#","e":false,"i":"","n":"Function18","t":"Function18[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 18 parameters."},
{"l":"api/scala/Function18.html#apply-fffff3e9","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18): R","d":"scala.Function18","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function18.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => R","d":"scala.Function18","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function18.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)) => R","d":"scala.Function18","k":"def","x":"Creates a tupled version of this function: instead of 18 arguments,\nit accepts a single scala.Tuple18 argument.\n"},
{"l":"api/scala/Function19.html#","e":false,"i":"","n":"Function19","t":"Function19[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 19 parameters."},
{"l":"api/scala/Function19.html#apply-b7c","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18, v19: T19): R","d":"scala.Function19","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function19.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => R","d":"scala.Function19","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function19.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)) => R","d":"scala.Function19","k":"def","x":"Creates a tupled version of this function: instead of 19 arguments,\nit accepts a single scala.Tuple19 argument.\n"},
{"l":"api/scala/Function2.html#","e":false,"i":"","n":"Function2","t":"Function2[-T1, -T2, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 2 parameters."},
{"l":"api/scala/Function2.html#apply-fffffab9","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2): R","d":"scala.Function2","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function2.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => R","d":"scala.Function2","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function2.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2)) => R","d":"scala.Function2","k":"def","x":"Creates a tupled version of this function: instead of 2 arguments,\nit accepts a single scala.Tuple2 argument.\n"},
{"l":"api/scala/Function20.html#","e":false,"i":"","n":"Function20","t":"Function20[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 20 parameters."},
{"l":"api/scala/Function20.html#apply-fffffd0f","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18, v19: T19, v20: T20): R","d":"scala.Function20","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function20.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => T20 => R","d":"scala.Function20","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function20.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)) => R","d":"scala.Function20","k":"def","x":"Creates a tupled version of this function: instead of 20 arguments,\nit accepts a single scala.Tuple20 argument.\n"},
{"l":"api/scala/Function21.html#","e":false,"i":"","n":"Function21","t":"Function21[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 21 parameters."},
{"l":"api/scala/Function21.html#apply-8a2","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18, v19: T19, v20: T20, v21: T21): R","d":"scala.Function21","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function21.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => T20 => T21 => R","d":"scala.Function21","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function21.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)) => R","d":"scala.Function21","k":"def","x":"Creates a tupled version of this function: instead of 21 arguments,\nit accepts a single scala.Tuple21 argument.\n"},
{"l":"api/scala/Function22.html#","e":false,"i":"","n":"Function22","t":"Function22[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, -T10, -T11, -T12, -T13, -T14, -T15, -T16, -T17, -T18, -T19, -T20, -T21, -T22, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 22 parameters."},
{"l":"api/scala/Function22.html#apply-e35","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9, v10: T10, v11: T11, v12: T12, v13: T13, v14: T14, v15: T15, v16: T16, v17: T17, v18: T18, v19: T19, v20: T20, v21: T21, v22: T22): R","d":"scala.Function22","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function22.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => T10 => T11 => T12 => T13 => T14 => T15 => T16 => T17 => T18 => T19 => T20 => T21 => T22 => R","d":"scala.Function22","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function22.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)) => R","d":"scala.Function22","k":"def","x":"Creates a tupled version of this function: instead of 22 arguments,\nit accepts a single scala.Tuple22 argument.\n"},
{"l":"api/scala/Function3.html#","e":false,"i":"","n":"Function3","t":"Function3[-T1, -T2, -T3, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 3 parameters."},
{"l":"api/scala/Function3.html#apply-fffff24c","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3): R","d":"scala.Function3","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function3.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => R","d":"scala.Function3","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function3.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3)) => R","d":"scala.Function3","k":"def","x":"Creates a tupled version of this function: instead of 3 arguments,\nit accepts a single scala.Tuple3 argument.\n"},
{"l":"api/scala/Function4.html#","e":false,"i":"","n":"Function4","t":"Function4[-T1, -T2, -T3, -T4, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 4 parameters."},
{"l":"api/scala/Function4.html#apply-fffff3df","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4): R","d":"scala.Function4","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function4.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => R","d":"scala.Function4","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function4.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4)) => R","d":"scala.Function4","k":"def","x":"Creates a tupled version of this function: instead of 4 arguments,\nit accepts a single scala.Tuple4 argument.\n"},
{"l":"api/scala/Function5.html#","e":false,"i":"","n":"Function5","t":"Function5[-T1, -T2, -T3, -T4, -T5, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 5 parameters."},
{"l":"api/scala/Function5.html#apply-f72","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5): R","d":"scala.Function5","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function5.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => R","d":"scala.Function5","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function5.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5)) => R","d":"scala.Function5","k":"def","x":"Creates a tupled version of this function: instead of 5 arguments,\nit accepts a single scala.Tuple5 argument.\n"},
{"l":"api/scala/Function6.html#","e":false,"i":"","n":"Function6","t":"Function6[-T1, -T2, -T3, -T4, -T5, -T6, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 6 parameters."},
{"l":"api/scala/Function6.html#apply-fffff505","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6): R","d":"scala.Function6","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function6.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => R","d":"scala.Function6","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function6.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6)) => R","d":"scala.Function6","k":"def","x":"Creates a tupled version of this function: instead of 6 arguments,\nit accepts a single scala.Tuple6 argument.\n"},
{"l":"api/scala/Function7.html#","e":false,"i":"","n":"Function7","t":"Function7[-T1, -T2, -T3, -T4, -T5, -T6, -T7, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 7 parameters."},
{"l":"api/scala/Function7.html#apply-fffff498","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7): R","d":"scala.Function7","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function7.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => R","d":"scala.Function7","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function7.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7)) => R","d":"scala.Function7","k":"def","x":"Creates a tupled version of this function: instead of 7 arguments,\nit accepts a single scala.Tuple7 argument.\n"},
{"l":"api/scala/Function8.html#","e":false,"i":"","n":"Function8","t":"Function8[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 8 parameters."},
{"l":"api/scala/Function8.html#apply-e2b","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8): R","d":"scala.Function8","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function8.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => R","d":"scala.Function8","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function8.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8)) => R","d":"scala.Function8","k":"def","x":"Creates a tupled version of this function: instead of 8 arguments,\nit accepts a single scala.Tuple8 argument.\n"},
{"l":"api/scala/Function9.html#","e":false,"i":"","n":"Function9","t":"Function9[-T1, -T2, -T3, -T4, -T5, -T6, -T7, -T8, -T9, +R] extends AnyRef","d":"scala","k":"trait","x":"A function of 9 parameters."},
{"l":"api/scala/Function9.html#apply-1be","e":false,"i":"","n":"apply","t":"apply(v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9): R","d":"scala.Function9","k":"def","x":"Apply the body of this function to the arguments."},
{"l":"api/scala/Function9.html#curried-0","e":false,"i":"","n":"curried","t":"curried: T1 => T2 => T3 => T4 => T5 => T6 => T7 => T8 => T9 => R","d":"scala.Function9","k":"def","x":"Creates a curried version of this function.\n"},
{"l":"api/scala/Function9.html#tupled-0","e":false,"i":"","n":"tupled","t":"tupled: ((T1, T2, T3, T4, T5, T6, T7, T8, T9)) => R","d":"scala.Function9","k":"def","x":"Creates a tupled version of this function: instead of 9 arguments,\nit accepts a single scala.Tuple9 argument.\n"},
{"l":"api/scala/IArray$.html#","e":false,"i":"","n":"IArray","t":"IArray","d":"scala","k":"object","x":""},
{"l":"api/scala/IArray$.html#++-fffff2ee","e":false,"i":"extension [T](arr: IArray[T])","n":"++","t":"++[U >: T : ClassTag](suffix: IArray[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#++-fffffcfc","e":false,"i":"extension [T](arr: IArray[T])","n":"++","t":"++[U >: T : ClassTag](suffix: IterableOnce[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#++:-924","e":false,"i":"extension [T, U >: T : ClassTag](prefix: IterableOnce[T])","n":"++:","t":"++:(arr: IArray[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#++:-fffff5c6","e":false,"i":"extension [T, U >: T : ClassTag](prefix: IArray[T])","n":"++:","t":"++:(arr: IArray[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#+:-fffff5c6","e":false,"i":"extension [T, U >: T : ClassTag](x: T)","n":"+:","t":"+:(arr: IArray[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#:+-fffff2ee","e":false,"i":"extension [T](arr: IArray[T])","n":":+","t":":+[U >: T : ClassTag](x: U): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#:++-fffff2ee","e":false,"i":"extension [T](arr: IArray[T])","n":":++","t":":++[U >: T : ClassTag](suffix: IArray[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#:++-fffffcfc","e":false,"i":"extension [T](arr: IArray[T])","n":":++","t":":++[U >: T : ClassTag](suffix: IterableOnce[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#appended-fffff2ee","e":false,"i":"extension [T](arr: IArray[T])","n":"appended","t":"appended[U >: T : ClassTag](x: U): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#appendedAll-fffff2ee","e":false,"i":"extension [T](arr: IArray[T])","n":"appendedAll","t":"appendedAll[U >: T : ClassTag](suffix: IArray[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#appendedAll-fffffcfc","e":false,"i":"extension [T](arr: IArray[T])","n":"appendedAll","t":"appendedAll[U >: T : ClassTag](suffix: IterableOnce[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-1c5","e":false,"i":"extension (arr: IArray[Byte])","n":"apply","t":"apply(n: Int): Byte","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-543","e":false,"i":"extension (arr: IArray[Short])","n":"apply","t":"apply(n: Int): Short","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-fffffe85","e":false,"i":"extension (arr: IArray[Char])","n":"apply","t":"apply(n: Int): Char","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-869","e":false,"i":"extension (arr: IArray[Int])","n":"apply","t":"apply(n: Int): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-245","e":false,"i":"extension (arr: IArray[Long])","n":"apply","t":"apply(n: Int): Long","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-903","e":false,"i":"extension (arr: IArray[Float])","n":"apply","t":"apply(n: Int): Float","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-665","e":false,"i":"extension (arr: IArray[Double])","n":"apply","t":"apply(n: Int): Double","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-ffffff54","e":false,"i":"extension [T <: Object](arr: IArray[T])","n":"apply","t":"apply(n: Int): T","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-fffff776","e":false,"i":"extension [T](arr: IArray[T])","n":"apply","t":"apply(n: Int): T","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-c0a","e":false,"i":"","n":"apply","t":"apply[T](xs: T*)(using ct: ClassTag[T]): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-9d7","e":false,"i":"","n":"apply","t":"apply(x: Boolean, xs: Boolean*): IArray[Boolean]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-fffff6ad","e":false,"i":"","n":"apply","t":"apply(x: Byte, xs: Byte*): IArray[Byte]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-997","e":false,"i":"","n":"apply","t":"apply(x: Short, xs: Short*): IArray[Short]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-e49","e":false,"i":"","n":"apply","t":"apply(x: Char, xs: Char*): IArray[Char]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-fffff277","e":false,"i":"","n":"apply","t":"apply(x: Int, xs: Int*): IArray[Int]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-395","e":false,"i":"","n":"apply","t":"apply(x: Long, xs: Long*): IArray[Long]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-597","e":false,"i":"","n":"apply","t":"apply(x: Float, xs: Float*): IArray[Float]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-fffffdbf","e":false,"i":"","n":"apply","t":"apply(x: Double, xs: Double*): IArray[Double]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#apply-d97","e":false,"i":"","n":"apply","t":"apply(x: Unit, xs: Unit*): IArray[Unit]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#collect-52","e":false,"i":"extension [T](arr: IArray[T])","n":"collect","t":"collect[U : ClassTag](pf: PartialFunction[T, U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#collectFirst-921","e":false,"i":"extension [T](arr: IArray[T])","n":"collectFirst","t":"collectFirst[U](f: PartialFunction[T, U]): Option[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#combinations-2b3","e":false,"i":"extension [T](arr: IArray[T])","n":"combinations","t":"combinations(n: Int): Iterator[IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#concat-fffff2ee","e":false,"i":"extension [T](arr: IArray[T])","n":"concat","t":"concat[U >: T : ClassTag](suffix: IArray[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#concat-fffffcfc","e":false,"i":"extension [T](arr: IArray[T])","n":"concat","t":"concat[U >: T : ClassTag](suffix: IterableOnce[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#concat-c0a","e":false,"i":"","n":"concat","t":"concat[T : ClassTag](xss: IArray[T]*): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#contains-369","e":false,"i":"extension [T](arr: IArray[T])","n":"contains","t":"contains(elem: T): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#copyToArray-ea7","e":false,"i":"extension [T](arr: IArray[T])","n":"copyToArray","t":"copyToArray[U >: T](xs: Array[U]): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#copyToArray-fffffc60","e":false,"i":"extension [T](arr: IArray[T])","n":"copyToArray","t":"copyToArray[U >: T](xs: Array[U], start: Int): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#copyToArray-fffffec7","e":false,"i":"extension [T](arr: IArray[T])","n":"copyToArray","t":"copyToArray[U >: T](xs: Array[U], start: Int, len: Int): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#count-97a","e":false,"i":"extension [T](arr: IArray[T])","n":"count","t":"count(p: T => Boolean): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#diff-fffffa13","e":false,"i":"extension [T](arr: IArray[T])","n":"diff","t":"diff[U >: T](that: IArray[U]): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#diff-fffff7eb","e":false,"i":"extension [T](arr: IArray[T])","n":"diff","t":"diff[U >: T](that: Seq[U]): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#distinct-957","e":false,"i":"extension [T](arr: IArray[T])","n":"distinct","t":"distinct: IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#distinctBy-fffffd97","e":false,"i":"extension [T](arr: IArray[T])","n":"distinctBy","t":"distinctBy[U](f: T => U): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#drop-fffff776","e":false,"i":"extension [T](arr: IArray[T])","n":"drop","t":"drop(n: Int): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#dropRight-fffff776","e":false,"i":"extension [T](arr: IArray[T])","n":"dropRight","t":"dropRight(n: Int): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#dropWhile-be0","e":false,"i":"extension [T](arr: IArray[T])","n":"dropWhile","t":"dropWhile(p: T => Boolean): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#empty-fffff5df","e":false,"i":"","n":"empty","t":"empty[T : ClassTag]: IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#emptyBooleanIArray-0","e":false,"i":"","n":"emptyBooleanIArray","t":"emptyBooleanIArray: IArray[Boolean]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#emptyByteIArray-0","e":false,"i":"","n":"emptyByteIArray","t":"emptyByteIArray: IArray[Byte]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#emptyCharIArray-0","e":false,"i":"","n":"emptyCharIArray","t":"emptyCharIArray: IArray[Char]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#emptyDoubleIArray-0","e":false,"i":"","n":"emptyDoubleIArray","t":"emptyDoubleIArray: IArray[Double]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#emptyFloatIArray-0","e":false,"i":"","n":"emptyFloatIArray","t":"emptyFloatIArray: IArray[Float]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#emptyIntIArray-0","e":false,"i":"","n":"emptyIntIArray","t":"emptyIntIArray: IArray[Int]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#emptyLongIArray-0","e":false,"i":"","n":"emptyLongIArray","t":"emptyLongIArray: IArray[Long]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#emptyObjectIArray-0","e":false,"i":"","n":"emptyObjectIArray","t":"emptyObjectIArray: IArray[Object]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#emptyShortIArray-0","e":false,"i":"","n":"emptyShortIArray","t":"emptyShortIArray: IArray[Short]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#endsWith-fffff6e0","e":false,"i":"extension [T](arr: IArray[T])","n":"endsWith","t":"endsWith[U >: T](that: IArray[U]): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#endsWith-f93","e":false,"i":"extension [T](arr: IArray[T])","n":"endsWith","t":"endsWith[U >: T](that: Iterable[U]): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#equals-fffff676","e":false,"i":"","n":"equals","t":"equals(xs: IArray[AnyRef], ys: IArray[AnyRef]): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#exists-33","e":false,"i":"extension [T](arr: IArray[T])","n":"exists","t":"exists(p: T => Boolean): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#fill-fffff6a8","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n: Int)(elem: => T): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#fill-5ef","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n1: Int, n2: Int)(elem: => T): IArray[IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#fill-28c","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n1: Int, n2: Int, n3: Int)(elem: => T): IArray[IArray[IArray[T]]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#fill-f13","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(elem: => T): IArray[IArray[IArray[IArray[T]]]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#fill-470","e":false,"i":"","n":"fill","t":"fill[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => T): IArray[IArray[IArray[IArray[IArray[T]]]]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#filter-be0","e":false,"i":"extension [T](arr: IArray[T])","n":"filter","t":"filter(p: T => Boolean): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#filterNot-be0","e":false,"i":"extension [T](arr: IArray[T])","n":"filterNot","t":"filterNot(p: T => Boolean): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#find-fffff70a","e":false,"i":"extension [T](arr: IArray[T])","n":"find","t":"find(p: T => Boolean): Option[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#flatMap-fffffb72","e":false,"i":"extension [T](arr: IArray[T])","n":"flatMap","t":"flatMap[U : ClassTag](f: T => IterableOnce[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#flatten-fffffb72","e":false,"i":"extension [T](arr: IArray[T])","n":"flatten","t":"flatten[U](using asIterable: T => Iterable[U], ct: ClassTag[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#fold-fffff9a5","e":false,"i":"extension [T](arr: IArray[T])","n":"fold","t":"fold[U >: T](z: U)(op: (U, U) => U): U","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#foldLeft-fffff9a5","e":false,"i":"extension [T](arr: IArray[T])","n":"foldLeft","t":"foldLeft[U](z: U)(op: (U, T) => U): U","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#foldRight-fffff9a5","e":false,"i":"extension [T](arr: IArray[T])","n":"foldRight","t":"foldRight[U](z: U)(op: (T, U) => U): U","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#forall-33","e":false,"i":"extension [T](arr: IArray[T])","n":"forall","t":"forall(p: T => Boolean): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#foreach-fffff050","e":false,"i":"extension [T](arr: IArray[T])","n":"foreach","t":"foreach[U](f: T => U): Unit","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#from-fffff738","e":false,"i":"","n":"from","t":"from[A : ClassTag](it: IterableOnce[A]): IArray[A]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#genericWrapArray-fffffab6","e":false,"i":"","n":"genericWrapArray","t":"genericWrapArray[T](arr: IArray[T]): ArraySeq[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#groupBy-fffff02c","e":false,"i":"extension [T](arr: IArray[T])","n":"groupBy","t":"groupBy[K](f: T => K): Map[K, IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#groupMap-e11","e":false,"i":"extension [T](arr: IArray[T])","n":"groupMap","t":"groupMap[K, U : ClassTag](key: T => K)(f: T => U): Map[K, IArray[U]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#grouped-2b3","e":false,"i":"extension [T](arr: IArray[T])","n":"grouped","t":"grouped(size: Int): Iterator[IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#head-957","e":false,"i":"extension [T](arr: IArray[T])","n":"head","t":"head: T","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#headOption-fffff801","e":false,"i":"extension [T](arr: IArray[T])","n":"headOption","t":"headOption: Option[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#indexOf-fffffd77","e":false,"i":"extension [T](arr: IArray[T])","n":"indexOf","t":"indexOf(elem: T, from: Int): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#indexWhere-eed","e":false,"i":"extension [T](arr: IArray[T])","n":"indexWhere","t":"indexWhere(p: T => Boolean, from: Int): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#indices-bcd","e":false,"i":"extension [T](arr: IArray[T])","n":"indices","t":"indices: Range","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#init-957","e":false,"i":"extension [T](arr: IArray[T])","n":"init","t":"init: IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#inits-df2","e":false,"i":"extension [T](arr: IArray[T])","n":"inits","t":"inits: Iterator[IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#intersect-fffffa13","e":false,"i":"extension [T](arr: IArray[T])","n":"intersect","t":"intersect[U >: T](that: IArray[U]): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#intersect-fffff7eb","e":false,"i":"extension [T](arr: IArray[T])","n":"intersect","t":"intersect[U >: T](that: Seq[U]): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#isEmpty-e1c","e":false,"i":"extension [T](arr: IArray[T])","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#iterate-63c","e":false,"i":"","n":"iterate","t":"iterate[T : ClassTag](start: T, len: Int)(f: T => T): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#iterator-df2","e":false,"i":"extension [T](arr: IArray[T])","n":"iterator","t":"iterator: Iterator[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#last-957","e":false,"i":"extension [T](arr: IArray[T])","n":"last","t":"last: T","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#lastIndexOf-fffffd77","e":false,"i":"extension [T](arr: IArray[T])","n":"lastIndexOf","t":"lastIndexOf(elem: T, end: Int): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#lastIndexWhere-eed","e":false,"i":"extension [T](arr: IArray[T])","n":"lastIndexWhere","t":"lastIndexWhere(p: T => Boolean, end: Int): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#lastOption-fffff801","e":false,"i":"extension [T](arr: IArray[T])","n":"lastOption","t":"lastOption: Option[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#lazyZip-fffff30d","e":false,"i":"extension [T](arr: IArray[T])","n":"lazyZip","t":"lazyZip[U](that: IArray[U]): LazyZip2[T, U, IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#lazyZip-740","e":false,"i":"extension [T](arr: IArray[T])","n":"lazyZip","t":"lazyZip[U](that: Iterable[U]): LazyZip2[T, U, IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#length-f35","e":false,"i":"extension (arr: IArray[Byte])","n":"length","t":"length: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#length-bd1","e":false,"i":"extension (arr: IArray[Short])","n":"length","t":"length: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#length-27","e":false,"i":"extension (arr: IArray[Char])","n":"length","t":"length: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#length-47e","e":false,"i":"extension (arr: IArray[Int])","n":"length","t":"length: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#length-fffff941","e":false,"i":"extension (arr: IArray[Long])","n":"length","t":"length: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#length-1f1","e":false,"i":"extension (arr: IArray[Float])","n":"length","t":"length: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#length-fffffecc","e":false,"i":"extension (arr: IArray[Double])","n":"length","t":"length: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#length-fffffe92","e":false,"i":"extension (arr: IArray[Object])","n":"length","t":"length: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#length-fffff3e3","e":false,"i":"extension [T](arr: IArray[T])","n":"length","t":"length: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#lengthCompare-fffffaa4","e":false,"i":"extension [T](arr: IArray[T])","n":"lengthCompare","t":"lengthCompare(len: Int): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#map-fffffb72","e":false,"i":"extension [T](arr: IArray[T])","n":"map","t":"map[U : ClassTag](f: T => U): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#newBuilder-b57","e":false,"i":"","n":"newBuilder","t":"newBuilder[T](using t: ClassTag[T]): Builder[T, IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#nonEmpty-e1c","e":false,"i":"extension [T](arr: IArray[T])","n":"nonEmpty","t":"nonEmpty: Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#padTo-71b","e":false,"i":"extension [T](arr: IArray[T])","n":"padTo","t":"padTo[U >: T : ClassTag](len: Int, elem: U): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#partition-ffffffff","e":false,"i":"extension [T](arr: IArray[T])","n":"partition","t":"partition(p: T => Boolean): (IArray[T], IArray[T])","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#partitionMap-fffffa8b","e":false,"i":"extension [T](arr: IArray[T])","n":"partitionMap","t":"partitionMap[T1 : ClassTag, T2 : ClassTag](f: T => Either[T1, T2]): (IArray[T1], IArray[T2])","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#patch-5f4","e":false,"i":"extension [T](arr: IArray[T])","n":"patch","t":"patch[U >: T : ClassTag](from: Int, other: IterableOnce[U], replaced: Int): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#permutations-df2","e":false,"i":"extension [T](arr: IArray[T])","n":"permutations","t":"permutations: Iterator[IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#prepended-fffff2ee","e":false,"i":"extension [T](arr: IArray[T])","n":"prepended","t":"prepended[U >: T : ClassTag](x: U): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#prependedAll-fffffcfc","e":false,"i":"extension [T](arr: IArray[T])","n":"prependedAll","t":"prependedAll[U >: T : ClassTag](prefix: IterableOnce[U]): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#range-4e9","e":false,"i":"","n":"range","t":"range(start: Int, end: Int): IArray[Int]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#range-fffffb22","e":false,"i":"","n":"range","t":"range(start: Int, end: Int, step: Int): IArray[Int]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#reverse-957","e":false,"i":"extension [T](arr: IArray[T])","n":"reverse","t":"reverse: IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#reverseIterator-df2","e":false,"i":"extension [T](arr: IArray[T])","n":"reverseIterator","t":"reverseIterator: Iterator[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#scan-900","e":false,"i":"extension [T](arr: IArray[T])","n":"scan","t":"scan[U >: T : ClassTag](z: U)(op: (U, U) => U): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#scanLeft-900","e":false,"i":"extension [T](arr: IArray[T])","n":"scanLeft","t":"scanLeft[U : ClassTag](z: U)(op: (U, T) => U): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#scanRight-900","e":false,"i":"extension [T](arr: IArray[T])","n":"scanRight","t":"scanRight[U : ClassTag](z: U)(op: (T, U) => U): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#search-fffffc73","e":false,"i":"extension [T](arr: IArray[T])","n":"search","t":"search[U >: T](elem: U)(using Ordering[U]): SearchResult","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#search-493","e":false,"i":"extension [T](arr: IArray[T])","n":"search","t":"search[U >: T](elem: U, from: Int, to: Int)(using Ordering[U]): SearchResult","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#size-fffff3e3","e":false,"i":"extension [T](arr: IArray[T])","n":"size","t":"size: Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#sizeCompare-7b0","e":false,"i":"extension [T](arr: IArray[T])","n":"sizeCompare","t":"sizeCompare(that: IArray[Any]): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#sizeCompare-9f1","e":false,"i":"extension [T](arr: IArray[T])","n":"sizeCompare","t":"sizeCompare(that: Iterable[_]): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#sizeCompare-fffffaa4","e":false,"i":"extension [T](arr: IArray[T])","n":"sizeCompare","t":"sizeCompare(otherSize: Int): Int","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#slice-fffffc37","e":false,"i":"extension [T](arr: IArray[T])","n":"slice","t":"slice(from: Int, until: Int): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#sliding-712","e":false,"i":"extension [T](arr: IArray[T])","n":"sliding","t":"sliding(size: Int, step: Int): Iterator[IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#sortBy-fffffa81","e":false,"i":"extension [T](arr: IArray[T])","n":"sortBy","t":"sortBy[U](f: T => U)(using Ordering[U]): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#sortWith-fffff9e1","e":false,"i":"extension [T](arr: IArray[T])","n":"sortWith","t":"sortWith(f: (T, T) => Boolean): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#sorted-6c1","e":false,"i":"extension [T](arr: IArray[T])","n":"sorted","t":"sorted(using Ordering[T]): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#span-ffffffff","e":false,"i":"extension [T](arr: IArray[T])","n":"span","t":"span(p: T => Boolean): (IArray[T], IArray[T])","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#splitAt-695","e":false,"i":"extension [T](arr: IArray[T])","n":"splitAt","t":"splitAt(n: Int): (IArray[T], IArray[T])","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#startsWith-fffff6e0","e":false,"i":"extension [T](arr: IArray[T])","n":"startsWith","t":"startsWith[U >: T](that: IArray[U]): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#startsWith-19","e":false,"i":"extension [T](arr: IArray[T])","n":"startsWith","t":"startsWith[U >: T](that: IArray[U], offset: Int): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#startsWith-912","e":false,"i":"extension [T](arr: IArray[T])","n":"startsWith","t":"startsWith[U >: T](that: IterableOnce[U]): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#startsWith-627","e":false,"i":"extension [T](arr: IArray[T])","n":"startsWith","t":"startsWith[U >: T](that: IterableOnce[U], offset: Int): Boolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#stepper-e54","e":false,"i":"extension [T](arr: IArray[T])","n":"stepper","t":"stepper[S <: Stepper[_]](using StepperShape[T, S]): S","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#tabulate-fffffde9","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n: Int)(f: Int => T): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#tabulate-bf1","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n1: Int, n2: Int)(f: (Int, Int) => T): IArray[IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#tabulate-fffffecf","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => T): IArray[IArray[IArray[T]]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#tabulate-fffff917","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => T): IArray[IArray[IArray[IArray[T]]]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#tabulate-3b5","e":false,"i":"","n":"tabulate","t":"tabulate[T : ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => T): IArray[IArray[IArray[IArray[IArray[T]]]]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#tail-957","e":false,"i":"extension [T](arr: IArray[T])","n":"tail","t":"tail: IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#tails-df2","e":false,"i":"extension [T](arr: IArray[T])","n":"tails","t":"tails: Iterator[IArray[T]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#take-fffff776","e":false,"i":"extension [T](arr: IArray[T])","n":"take","t":"take(n: Int): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#takeRight-fffff776","e":false,"i":"extension [T](arr: IArray[T])","n":"takeRight","t":"takeRight(n: Int): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#takeWhile-be0","e":false,"i":"extension [T](arr: IArray[T])","n":"takeWhile","t":"takeWhile(p: T => Boolean): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#tapEach-fffffd97","e":false,"i":"extension [T](arr: IArray[T])","n":"tapEach","t":"tapEach[U](f: T => U): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#toArray-957","e":false,"i":"extension [T](arr: IArray[T])","n":"toArray","t":"toArray: Array[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#transpose-ffffff39","e":false,"i":"extension [T](arr: IArray[T])","n":"transpose","t":"transpose[U](implicit asArray: T => IArray[U]): IArray[IArray[U]]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#unapplySeq-957","e":false,"i":"","n":"unapplySeq","t":"unapplySeq[T](x: IArray[T]): UnapplySeqWrapper[_ <: T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#unsafeFromArray-957","e":false,"i":"","n":"unsafeFromArray","t":"unsafeFromArray[T](s: Array[T]): IArray[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#unzip-fffffa8b","e":false,"i":"extension [T](arr: IArray[T])","n":"unzip","t":"unzip[T1, T2](using asPair: T => (T1, T2), ct1: ClassTag[T1], ct2: ClassTag[T2]): (IArray[T1], IArray[T2])","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#unzip3-fffff3c6","e":false,"i":"extension [T](arr: IArray[T])","n":"unzip3","t":"unzip3[T1, T2, T3](using asTriple: T => (T1, T2, T3), ct1: ClassTag[T1], ct2: ClassTag[T2], ct3: ClassTag[T3]): (IArray[T1], IArray[T2], IArray[T3])","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#updated-71b","e":false,"i":"extension [T](arr: IArray[T])","n":"updated","t":"updated[U >: T : ClassTag](index: Int, elem: U): IArray[U]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#view-da0","e":false,"i":"extension [T](arr: IArray[T])","n":"view","t":"view: SeqView[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#withFilter-cc9","e":false,"i":"extension [T](arr: IArray[T])","n":"withFilter","t":"withFilter(p: T => Boolean): WithFilter[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapBooleanIArray-b0f","e":false,"i":"","n":"wrapBooleanIArray","t":"wrapBooleanIArray(arr: IArray[Boolean]): ofBoolean","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapByteIArray-fffff011","e":false,"i":"","n":"wrapByteIArray","t":"wrapByteIArray(arr: IArray[Byte]): ofByte","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapCharIArray-fffff6d1","e":false,"i":"","n":"wrapCharIArray","t":"wrapCharIArray(arr: IArray[Char]): ofChar","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapDoubleIArray-cb1","e":false,"i":"","n":"wrapDoubleIArray","t":"wrapDoubleIArray(arr: IArray[Double]): ofDouble","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapFloatIArray-837","e":false,"i":"","n":"wrapFloatIArray","t":"wrapFloatIArray(arr: IArray[Float]): ofFloat","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapIntArray-fffffb9d","e":false,"i":"","n":"wrapIntArray","t":"wrapIntArray(arr: IArray[Int]): ofInt","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapLongIArray-c91","e":false,"i":"","n":"wrapLongIArray","t":"wrapLongIArray(arr: IArray[Long]): ofLong","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapRefArray-fffffd5e","e":false,"i":"","n":"wrapRefArray","t":"wrapRefArray[T <: AnyRef](arr: IArray[T]): ofRef[T]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapShortIArray-fffff477","e":false,"i":"","n":"wrapShortIArray","t":"wrapShortIArray(arr: IArray[Short]): ofShort","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#wrapUnitIArray-66d","e":false,"i":"","n":"wrapUnitIArray","t":"wrapUnitIArray(arr: IArray[Unit]): ofUnit","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#zip-fffff694","e":false,"i":"extension [T](arr: IArray[T])","n":"zip","t":"zip[U](that: IArray[U]): IArray[(T, U)]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#zip-fffffaa2","e":false,"i":"extension [T](arr: IArray[T])","n":"zip","t":"zip[U](that: IterableOnce[U]): IArray[(T, U)]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#zipAll-fffffd7b","e":false,"i":"extension [T](arr: IArray[T])","n":"zipAll","t":"zipAll[T1 >: T, U](that: IArray[U], thisElem: T1, thatElem: U): IArray[(T1, U)]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#zipAll-fffff7c6","e":false,"i":"extension [T](arr: IArray[T])","n":"zipAll","t":"zipAll[T1 >: T, U](that: Iterable[U], thisElem: T1, thatElem: U): IArray[(T1, U)]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$.html#zipWithIndex-fffff6d8","e":false,"i":"extension [T](arr: IArray[T])","n":"zipWithIndex","t":"zipWithIndex: IArray[(T, Int)]","d":"scala.IArray","k":"def","x":""},
{"l":"api/scala/IArray$$WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter[T](p: T => Boolean, xs: IArray[T])","d":"scala.IArray","k":"class","x":""},
{"l":"api/scala/IArray$$WithFilter.html#flatMap-fffffeae","e":false,"i":"","n":"flatMap","t":"flatMap[U : ClassTag](f: T => IterableOnce[U]): IArray[U]","d":"scala.IArray.WithFilter","k":"def","x":""},
{"l":"api/scala/IArray$$WithFilter.html#flatMap-d80","e":false,"i":"","n":"flatMap","t":"flatMap[BS, U](f: T => BS)(using asIterable: BS => Iterable[U], m: ClassTag[U]): IArray[U]","d":"scala.IArray.WithFilter","k":"def","x":""},
{"l":"api/scala/IArray$$WithFilter.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: T => U): Unit","d":"scala.IArray.WithFilter","k":"def","x":""},
{"l":"api/scala/IArray$$WithFilter.html#map-fffffeae","e":false,"i":"","n":"map","t":"map[U : ClassTag](f: T => U): IArray[U]","d":"scala.IArray.WithFilter","k":"def","x":""},
{"l":"api/scala/IArray$$WithFilter.html#withFilter-10d","e":false,"i":"","n":"withFilter","t":"withFilter(q: T => Boolean): WithFilter[T]","d":"scala.IArray.WithFilter","k":"def","x":""},
{"l":"api/scala/Int.html#","e":false,"i":"","n":"Int","t":"Int() extends AnyVal","d":"scala","k":"class","x":"Int, a 32-bit signed integer (equivalent to Java's int primitive type) is a\nsubtype of scala.AnyVal. Instances of Int are not\nrepresented by an object in the underlying runtime system."},
{"l":"api/scala/Int.html#!=-890","e":false,"i":"","n":"!=","t":"!=(x: Byte): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Int.html#!=-e2c","e":false,"i":"","n":"!=","t":"!=(x: Short): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Int.html#!=-502","e":false,"i":"","n":"!=","t":"!=(x: Char): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Int.html#!=-ffffff99","e":false,"i":"","n":"!=","t":"!=(x: Int): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Int.html#!=-f9c","e":false,"i":"","n":"!=","t":"!=(x: Long): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Int.html#!=-fffffc4c","e":false,"i":"","n":"!=","t":"!=(x: Float): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Int.html#!=-e67","e":false,"i":"","n":"!=","t":"!=(x: Double): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Int.html#%-857","e":false,"i":"","n":"%","t":"%(x: Byte): Int","d":"scala.Int","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Int.html#%-fffffbf3","e":false,"i":"","n":"%","t":"%(x: Short): Int","d":"scala.Int","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Int.html#%-dc9","e":false,"i":"","n":"%","t":"%(x: Char): Int","d":"scala.Int","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Int.html#%-fffffbe0","e":false,"i":"","n":"%","t":"%(x: Int): Int","d":"scala.Int","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Int.html#%-fffff788","e":false,"i":"","n":"%","t":"%(x: Long): Long","d":"scala.Int","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Int.html#%-fffffb80","e":false,"i":"","n":"%","t":"%(x: Float): Float","d":"scala.Int","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Int.html#%-5b2","e":false,"i":"","n":"%","t":"%(x: Double): Double","d":"scala.Int","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Int.html#&-857","e":false,"i":"","n":"&","t":"&(x: Byte): Int","d":"scala.Int","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Int.html#&-fffffbf3","e":false,"i":"","n":"&","t":"&(x: Short): Int","d":"scala.Int","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Int.html#&-dc9","e":false,"i":"","n":"&","t":"&(x: Char): Int","d":"scala.Int","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Int.html#&-fffffbe0","e":false,"i":"","n":"&","t":"&(x: Int): Int","d":"scala.Int","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Int.html#&-fffff788","e":false,"i":"","n":"&","t":"&(x: Long): Long","d":"scala.Int","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Int.html#*-857","e":false,"i":"","n":"*","t":"*(x: Byte): Int","d":"scala.Int","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Int.html#*-fffffbf3","e":false,"i":"","n":"*","t":"*(x: Short): Int","d":"scala.Int","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Int.html#*-dc9","e":false,"i":"","n":"*","t":"*(x: Char): Int","d":"scala.Int","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Int.html#*-fffffbe0","e":false,"i":"","n":"*","t":"*(x: Int): Int","d":"scala.Int","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Int.html#*-fffff788","e":false,"i":"","n":"*","t":"*(x: Long): Long","d":"scala.Int","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Int.html#*-fffffb80","e":false,"i":"","n":"*","t":"*(x: Float): Float","d":"scala.Int","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Int.html#*-5b2","e":false,"i":"","n":"*","t":"*(x: Double): Double","d":"scala.Int","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Int.html#+-fffff2ca","e":false,"i":"","n":"+","t":"+(x: String): String","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int.html#+-857","e":false,"i":"","n":"+","t":"+(x: Byte): Int","d":"scala.Int","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Int.html#+-fffffbf3","e":false,"i":"","n":"+","t":"+(x: Short): Int","d":"scala.Int","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Int.html#+-dc9","e":false,"i":"","n":"+","t":"+(x: Char): Int","d":"scala.Int","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Int.html#+-fffffbe0","e":false,"i":"","n":"+","t":"+(x: Int): Int","d":"scala.Int","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Int.html#+-fffff788","e":false,"i":"","n":"+","t":"+(x: Long): Long","d":"scala.Int","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Int.html#+-fffffb80","e":false,"i":"","n":"+","t":"+(x: Float): Float","d":"scala.Int","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Int.html#+-5b2","e":false,"i":"","n":"+","t":"+(x: Double): Double","d":"scala.Int","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Int.html#--857","e":false,"i":"","n":"-","t":"-(x: Byte): Int","d":"scala.Int","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Int.html#--fffffbf3","e":false,"i":"","n":"-","t":"-(x: Short): Int","d":"scala.Int","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Int.html#--dc9","e":false,"i":"","n":"-","t":"-(x: Char): Int","d":"scala.Int","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Int.html#--fffffbe0","e":false,"i":"","n":"-","t":"-(x: Int): Int","d":"scala.Int","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Int.html#--fffff788","e":false,"i":"","n":"-","t":"-(x: Long): Long","d":"scala.Int","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Int.html#--fffffb80","e":false,"i":"","n":"-","t":"-(x: Float): Float","d":"scala.Int","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Int.html#--5b2","e":false,"i":"","n":"-","t":"-(x: Double): Double","d":"scala.Int","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Int.html#/-857","e":false,"i":"","n":"/","t":"/(x: Byte): Int","d":"scala.Int","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Int.html#/-fffffbf3","e":false,"i":"","n":"/","t":"/(x: Short): Int","d":"scala.Int","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Int.html#/-dc9","e":false,"i":"","n":"/","t":"/(x: Char): Int","d":"scala.Int","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Int.html#/-fffffbe0","e":false,"i":"","n":"/","t":"/(x: Int): Int","d":"scala.Int","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Int.html#/-fffff788","e":false,"i":"","n":"/","t":"/(x: Long): Long","d":"scala.Int","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Int.html#/-fffffb80","e":false,"i":"","n":"/","t":"/(x: Float): Float","d":"scala.Int","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Int.html#/-5b2","e":false,"i":"","n":"/","t":"/(x: Double): Double","d":"scala.Int","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Int.html#<-890","e":false,"i":"","n":"<","t":"<(x: Byte): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Int.html#<-e2c","e":false,"i":"","n":"<","t":"<(x: Short): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Int.html#<-502","e":false,"i":"","n":"<","t":"<(x: Char): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Int.html#<-ffffff99","e":false,"i":"","n":"<","t":"<(x: Int): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Int.html#<-f9c","e":false,"i":"","n":"<","t":"<(x: Long): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Int.html#<-fffffc4c","e":false,"i":"","n":"<","t":"<(x: Float): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Int.html#<-e67","e":false,"i":"","n":"<","t":"<(x: Double): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Int.html#<<-fffffbe0","e":false,"i":"","n":"<<","t":"<<(x: Int): Int","d":"scala.Int","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Int.html#<<-fffff563","e":false,"i":"","n":"<<","t":"<<(x: Long): Int","d":"scala.Int","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Int.html#<=-890","e":false,"i":"","n":"<=","t":"<=(x: Byte): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#<=-e2c","e":false,"i":"","n":"<=","t":"<=(x: Short): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#<=-502","e":false,"i":"","n":"<=","t":"<=(x: Char): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#<=-ffffff99","e":false,"i":"","n":"<=","t":"<=(x: Int): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#<=-f9c","e":false,"i":"","n":"<=","t":"<=(x: Long): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#<=-fffffc4c","e":false,"i":"","n":"<=","t":"<=(x: Float): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#<=-e67","e":false,"i":"","n":"<=","t":"<=(x: Double): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#==-890","e":false,"i":"","n":"==","t":"==(x: Byte): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Int.html#==-e2c","e":false,"i":"","n":"==","t":"==(x: Short): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Int.html#==-502","e":false,"i":"","n":"==","t":"==(x: Char): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Int.html#==-ffffff99","e":false,"i":"","n":"==","t":"==(x: Int): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Int.html#==-f9c","e":false,"i":"","n":"==","t":"==(x: Long): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Int.html#==-fffffc4c","e":false,"i":"","n":"==","t":"==(x: Float): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Int.html#==-e67","e":false,"i":"","n":"==","t":"==(x: Double): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Int.html#>-890","e":false,"i":"","n":">","t":">(x: Byte): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Int.html#>-e2c","e":false,"i":"","n":">","t":">(x: Short): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Int.html#>-502","e":false,"i":"","n":">","t":">(x: Char): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Int.html#>-ffffff99","e":false,"i":"","n":">","t":">(x: Int): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Int.html#>-f9c","e":false,"i":"","n":">","t":">(x: Long): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Int.html#>-fffffc4c","e":false,"i":"","n":">","t":">(x: Float): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Int.html#>-e67","e":false,"i":"","n":">","t":">(x: Double): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Int.html#>=-890","e":false,"i":"","n":">=","t":">=(x: Byte): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#>=-e2c","e":false,"i":"","n":">=","t":">=(x: Short): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#>=-502","e":false,"i":"","n":">=","t":">=(x: Char): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#>=-ffffff99","e":false,"i":"","n":">=","t":">=(x: Int): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#>=-f9c","e":false,"i":"","n":">=","t":">=(x: Long): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#>=-fffffc4c","e":false,"i":"","n":">=","t":">=(x: Float): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#>=-e67","e":false,"i":"","n":">=","t":">=(x: Double): Boolean","d":"scala.Int","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Int.html#>>-fffffbe0","e":false,"i":"","n":">>","t":">>(x: Int): Int","d":"scala.Int","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Int.html#>>-fffff563","e":false,"i":"","n":">>","t":">>(x: Long): Int","d":"scala.Int","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Int.html#>>>-fffffbe0","e":false,"i":"","n":">>>","t":">>>(x: Int): Int","d":"scala.Int","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Int.html#>>>-fffff563","e":false,"i":"","n":">>>","t":">>>(x: Long): Int","d":"scala.Int","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Int.html#^-857","e":false,"i":"","n":"^","t":"^(x: Byte): Int","d":"scala.Int","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Int.html#^-fffffbf3","e":false,"i":"","n":"^","t":"^(x: Short): Int","d":"scala.Int","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Int.html#^-dc9","e":false,"i":"","n":"^","t":"^(x: Char): Int","d":"scala.Int","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Int.html#^-fffffbe0","e":false,"i":"","n":"^","t":"^(x: Int): Int","d":"scala.Int","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Int.html#^-fffff788","e":false,"i":"","n":"^","t":"^(x: Long): Long","d":"scala.Int","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Int.html#toByte-0","e":false,"i":"","n":"toByte","t":"toByte: Byte","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int.html#toChar-0","e":false,"i":"","n":"toChar","t":"toChar: Char","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int.html#toShort-0","e":false,"i":"","n":"toShort","t":"toShort: Short","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int.html#unary_+-0","e":false,"i":"","n":"unary_+","t":"unary_+: Int","d":"scala.Int","k":"def","x":"Returns this value, unmodified."},
{"l":"api/scala/Int.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: Int","d":"scala.Int","k":"def","x":"Returns the negation of this value."},
{"l":"api/scala/Int.html#unary_~-0","e":false,"i":"","n":"unary_~","t":"unary_~: Int","d":"scala.Int","k":"def","x":"Returns the bitwise negation of this value."},
{"l":"api/scala/Int.html#|-857","e":false,"i":"","n":"|","t":"|(x: Byte): Int","d":"scala.Int","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Int.html#|-fffffbf3","e":false,"i":"","n":"|","t":"|(x: Short): Int","d":"scala.Int","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Int.html#|-dc9","e":false,"i":"","n":"|","t":"|(x: Char): Int","d":"scala.Int","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Int.html#|-fffffbe0","e":false,"i":"","n":"|","t":"|(x: Int): Int","d":"scala.Int","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Int.html#|-fffff788","e":false,"i":"","n":"|","t":"|(x: Long): Long","d":"scala.Int","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Int$.html#","e":false,"i":"","n":"Int","t":"Int","d":"scala","k":"object","x":""},
{"l":"api/scala/Int$.html#MaxValue-0","e":false,"i":"","n":"MaxValue","t":"MaxValue: 2147483647","d":"scala.Int","k":"val","x":"The largest value representable as an Int."},
{"l":"api/scala/Int$.html#MinValue-0","e":false,"i":"","n":"MinValue","t":"MinValue: -2147483648","d":"scala.Int","k":"val","x":"The smallest value representable as an Int."},
{"l":"api/scala/Int$.html#box-fffff923","e":false,"i":"","n":"box","t":"box(x: Int): Integer","d":"scala.Int","k":"def","x":"Transform a value type into a boxed reference type."},
{"l":"api/scala/Int$.html#int2double-640","e":false,"i":"","n":"int2double","t":"int2double(x: Int): Double","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int$.html#int2float-fffffe0d","e":false,"i":"","n":"int2float","t":"int2float(x: Int): Float","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int$.html#int2long-fffff0ab","e":false,"i":"","n":"int2long","t":"int2long(x: Int): Long","d":"scala.Int","k":"def","x":""},
{"l":"api/scala/Int$.html#unbox-fffffaf4","e":false,"i":"","n":"unbox","t":"unbox(x: Object): Int","d":"scala.Int","k":"def","x":"Transform a boxed type into a value type.  Note that this\nmethod is not typesafe: it accepts any Object, but will throw\nan exception if the argument is not a java.lang.Integer."},
{"l":"api/scala/Long.html#","e":false,"i":"","n":"Long","t":"Long() extends AnyVal","d":"scala","k":"class","x":"Long, a 64-bit signed integer (equivalent to Java's long primitive type) is a\nsubtype of scala.AnyVal. Instances of Long are not\nrepresented by an object in the underlying runtime system."},
{"l":"api/scala/Long.html#!=-890","e":false,"i":"","n":"!=","t":"!=(x: Byte): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Long.html#!=-e2c","e":false,"i":"","n":"!=","t":"!=(x: Short): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Long.html#!=-502","e":false,"i":"","n":"!=","t":"!=(x: Char): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Long.html#!=-ffffff99","e":false,"i":"","n":"!=","t":"!=(x: Int): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Long.html#!=-f9c","e":false,"i":"","n":"!=","t":"!=(x: Long): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Long.html#!=-fffffc4c","e":false,"i":"","n":"!=","t":"!=(x: Float): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Long.html#!=-e67","e":false,"i":"","n":"!=","t":"!=(x: Double): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Long.html#%-314","e":false,"i":"","n":"%","t":"%(x: Byte): Long","d":"scala.Long","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Long.html#%-fffff2f8","e":false,"i":"","n":"%","t":"%(x: Short): Long","d":"scala.Long","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Long.html#%-be2","e":false,"i":"","n":"%","t":"%(x: Char): Long","d":"scala.Long","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Long.html#%-fffff0ab","e":false,"i":"","n":"%","t":"%(x: Int): Long","d":"scala.Long","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Long.html#%-fffff788","e":false,"i":"","n":"%","t":"%(x: Long): Long","d":"scala.Long","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Long.html#%-fffffb80","e":false,"i":"","n":"%","t":"%(x: Float): Float","d":"scala.Long","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Long.html#%-5b2","e":false,"i":"","n":"%","t":"%(x: Double): Double","d":"scala.Long","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Long.html#&-314","e":false,"i":"","n":"&","t":"&(x: Byte): Long","d":"scala.Long","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Long.html#&-fffff2f8","e":false,"i":"","n":"&","t":"&(x: Short): Long","d":"scala.Long","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Long.html#&-be2","e":false,"i":"","n":"&","t":"&(x: Char): Long","d":"scala.Long","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Long.html#&-fffff0ab","e":false,"i":"","n":"&","t":"&(x: Int): Long","d":"scala.Long","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Long.html#&-fffff788","e":false,"i":"","n":"&","t":"&(x: Long): Long","d":"scala.Long","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Long.html#*-314","e":false,"i":"","n":"*","t":"*(x: Byte): Long","d":"scala.Long","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Long.html#*-fffff2f8","e":false,"i":"","n":"*","t":"*(x: Short): Long","d":"scala.Long","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Long.html#*-be2","e":false,"i":"","n":"*","t":"*(x: Char): Long","d":"scala.Long","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Long.html#*-fffff0ab","e":false,"i":"","n":"*","t":"*(x: Int): Long","d":"scala.Long","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Long.html#*-fffff788","e":false,"i":"","n":"*","t":"*(x: Long): Long","d":"scala.Long","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Long.html#*-fffffb80","e":false,"i":"","n":"*","t":"*(x: Float): Float","d":"scala.Long","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Long.html#*-5b2","e":false,"i":"","n":"*","t":"*(x: Double): Double","d":"scala.Long","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Long.html#+-fffff2ca","e":false,"i":"","n":"+","t":"+(x: String): String","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long.html#+-314","e":false,"i":"","n":"+","t":"+(x: Byte): Long","d":"scala.Long","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Long.html#+-fffff2f8","e":false,"i":"","n":"+","t":"+(x: Short): Long","d":"scala.Long","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Long.html#+-be2","e":false,"i":"","n":"+","t":"+(x: Char): Long","d":"scala.Long","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Long.html#+-fffff0ab","e":false,"i":"","n":"+","t":"+(x: Int): Long","d":"scala.Long","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Long.html#+-fffff788","e":false,"i":"","n":"+","t":"+(x: Long): Long","d":"scala.Long","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Long.html#+-fffffb80","e":false,"i":"","n":"+","t":"+(x: Float): Float","d":"scala.Long","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Long.html#+-5b2","e":false,"i":"","n":"+","t":"+(x: Double): Double","d":"scala.Long","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Long.html#--314","e":false,"i":"","n":"-","t":"-(x: Byte): Long","d":"scala.Long","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Long.html#--fffff2f8","e":false,"i":"","n":"-","t":"-(x: Short): Long","d":"scala.Long","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Long.html#--be2","e":false,"i":"","n":"-","t":"-(x: Char): Long","d":"scala.Long","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Long.html#--fffff0ab","e":false,"i":"","n":"-","t":"-(x: Int): Long","d":"scala.Long","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Long.html#--fffff788","e":false,"i":"","n":"-","t":"-(x: Long): Long","d":"scala.Long","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Long.html#--fffffb80","e":false,"i":"","n":"-","t":"-(x: Float): Float","d":"scala.Long","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Long.html#--5b2","e":false,"i":"","n":"-","t":"-(x: Double): Double","d":"scala.Long","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Long.html#/-314","e":false,"i":"","n":"/","t":"/(x: Byte): Long","d":"scala.Long","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Long.html#/-fffff2f8","e":false,"i":"","n":"/","t":"/(x: Short): Long","d":"scala.Long","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Long.html#/-be2","e":false,"i":"","n":"/","t":"/(x: Char): Long","d":"scala.Long","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Long.html#/-fffff0ab","e":false,"i":"","n":"/","t":"/(x: Int): Long","d":"scala.Long","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Long.html#/-fffff788","e":false,"i":"","n":"/","t":"/(x: Long): Long","d":"scala.Long","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Long.html#/-fffffb80","e":false,"i":"","n":"/","t":"/(x: Float): Float","d":"scala.Long","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Long.html#/-5b2","e":false,"i":"","n":"/","t":"/(x: Double): Double","d":"scala.Long","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Long.html#<-890","e":false,"i":"","n":"<","t":"<(x: Byte): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Long.html#<-e2c","e":false,"i":"","n":"<","t":"<(x: Short): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Long.html#<-502","e":false,"i":"","n":"<","t":"<(x: Char): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Long.html#<-ffffff99","e":false,"i":"","n":"<","t":"<(x: Int): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Long.html#<-f9c","e":false,"i":"","n":"<","t":"<(x: Long): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Long.html#<-fffffc4c","e":false,"i":"","n":"<","t":"<(x: Float): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Long.html#<-e67","e":false,"i":"","n":"<","t":"<(x: Double): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Long.html#<<-fffff0ab","e":false,"i":"","n":"<<","t":"<<(x: Int): Long","d":"scala.Long","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Long.html#<<-fffff788","e":false,"i":"","n":"<<","t":"<<(x: Long): Long","d":"scala.Long","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Long.html#<=-890","e":false,"i":"","n":"<=","t":"<=(x: Byte): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#<=-e2c","e":false,"i":"","n":"<=","t":"<=(x: Short): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#<=-502","e":false,"i":"","n":"<=","t":"<=(x: Char): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#<=-ffffff99","e":false,"i":"","n":"<=","t":"<=(x: Int): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#<=-f9c","e":false,"i":"","n":"<=","t":"<=(x: Long): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#<=-fffffc4c","e":false,"i":"","n":"<=","t":"<=(x: Float): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#<=-e67","e":false,"i":"","n":"<=","t":"<=(x: Double): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#==-890","e":false,"i":"","n":"==","t":"==(x: Byte): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Long.html#==-e2c","e":false,"i":"","n":"==","t":"==(x: Short): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Long.html#==-502","e":false,"i":"","n":"==","t":"==(x: Char): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Long.html#==-ffffff99","e":false,"i":"","n":"==","t":"==(x: Int): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Long.html#==-f9c","e":false,"i":"","n":"==","t":"==(x: Long): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Long.html#==-fffffc4c","e":false,"i":"","n":"==","t":"==(x: Float): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Long.html#==-e67","e":false,"i":"","n":"==","t":"==(x: Double): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Long.html#>-890","e":false,"i":"","n":">","t":">(x: Byte): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Long.html#>-e2c","e":false,"i":"","n":">","t":">(x: Short): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Long.html#>-502","e":false,"i":"","n":">","t":">(x: Char): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Long.html#>-ffffff99","e":false,"i":"","n":">","t":">(x: Int): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Long.html#>-f9c","e":false,"i":"","n":">","t":">(x: Long): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Long.html#>-fffffc4c","e":false,"i":"","n":">","t":">(x: Float): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Long.html#>-e67","e":false,"i":"","n":">","t":">(x: Double): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Long.html#>=-890","e":false,"i":"","n":">=","t":">=(x: Byte): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#>=-e2c","e":false,"i":"","n":">=","t":">=(x: Short): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#>=-502","e":false,"i":"","n":">=","t":">=(x: Char): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#>=-ffffff99","e":false,"i":"","n":">=","t":">=(x: Int): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#>=-f9c","e":false,"i":"","n":">=","t":">=(x: Long): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#>=-fffffc4c","e":false,"i":"","n":">=","t":">=(x: Float): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#>=-e67","e":false,"i":"","n":">=","t":">=(x: Double): Boolean","d":"scala.Long","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Long.html#>>-fffff0ab","e":false,"i":"","n":">>","t":">>(x: Int): Long","d":"scala.Long","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Long.html#>>-fffff788","e":false,"i":"","n":">>","t":">>(x: Long): Long","d":"scala.Long","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Long.html#>>>-fffff0ab","e":false,"i":"","n":">>>","t":">>>(x: Int): Long","d":"scala.Long","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Long.html#>>>-fffff788","e":false,"i":"","n":">>>","t":">>>(x: Long): Long","d":"scala.Long","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Long.html#^-314","e":false,"i":"","n":"^","t":"^(x: Byte): Long","d":"scala.Long","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Long.html#^-fffff2f8","e":false,"i":"","n":"^","t":"^(x: Short): Long","d":"scala.Long","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Long.html#^-be2","e":false,"i":"","n":"^","t":"^(x: Char): Long","d":"scala.Long","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Long.html#^-fffff0ab","e":false,"i":"","n":"^","t":"^(x: Int): Long","d":"scala.Long","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Long.html#^-fffff788","e":false,"i":"","n":"^","t":"^(x: Long): Long","d":"scala.Long","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Long.html#toByte-0","e":false,"i":"","n":"toByte","t":"toByte: Byte","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long.html#toChar-0","e":false,"i":"","n":"toChar","t":"toChar: Char","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long.html#toShort-0","e":false,"i":"","n":"toShort","t":"toShort: Short","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long.html#unary_+-0","e":false,"i":"","n":"unary_+","t":"unary_+: Long","d":"scala.Long","k":"def","x":"Returns this value, unmodified."},
{"l":"api/scala/Long.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: Long","d":"scala.Long","k":"def","x":"Returns the negation of this value."},
{"l":"api/scala/Long.html#unary_~-0","e":false,"i":"","n":"unary_~","t":"unary_~: Long","d":"scala.Long","k":"def","x":"Returns the bitwise negation of this value."},
{"l":"api/scala/Long.html#|-314","e":false,"i":"","n":"|","t":"|(x: Byte): Long","d":"scala.Long","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Long.html#|-fffff2f8","e":false,"i":"","n":"|","t":"|(x: Short): Long","d":"scala.Long","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Long.html#|-be2","e":false,"i":"","n":"|","t":"|(x: Char): Long","d":"scala.Long","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Long.html#|-fffff0ab","e":false,"i":"","n":"|","t":"|(x: Int): Long","d":"scala.Long","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Long.html#|-fffff788","e":false,"i":"","n":"|","t":"|(x: Long): Long","d":"scala.Long","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Long$.html#","e":false,"i":"","n":"Long","t":"Long","d":"scala","k":"object","x":""},
{"l":"api/scala/Long$.html#MaxValue-0","e":false,"i":"","n":"MaxValue","t":"MaxValue: 9223372036854775807L","d":"scala.Long","k":"val","x":"The largest value representable as a Long."},
{"l":"api/scala/Long$.html#MinValue-0","e":false,"i":"","n":"MinValue","t":"MinValue: -9223372036854775808L","d":"scala.Long","k":"val","x":"The smallest value representable as a Long."},
{"l":"api/scala/Long$.html#box-114","e":false,"i":"","n":"box","t":"box(x: Long): Long","d":"scala.Long","k":"def","x":"Transform a value type into a boxed reference type."},
{"l":"api/scala/Long$.html#long2double-9dd","e":false,"i":"","n":"long2double","t":"long2double(x: Long): Double","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long$.html#long2float-2d0","e":false,"i":"","n":"long2float","t":"long2float(x: Long): Float","d":"scala.Long","k":"def","x":""},
{"l":"api/scala/Long$.html#unbox-fffff417","e":false,"i":"","n":"unbox","t":"unbox(x: Object): Long","d":"scala.Long","k":"def","x":"Transform a boxed type into a value type.  Note that this\nmethod is not typesafe: it accepts any Object, but will throw\nan exception if the argument is not a java.lang.Long."},
{"l":"api/scala/MatchError.html#","e":false,"i":"","n":"MatchError","t":"MatchError(obj: Any) extends RuntimeException","d":"scala","k":"class","x":"This class implements errors which are thrown whenever an\nobject doesn't match any pattern of a pattern matching\nexpression.\n"},
{"l":"api/scala/Matchable.html#","e":false,"i":"","n":"Matchable","t":"Matchable","d":"scala","k":"class","x":"The base trait of types that can be safely pattern matched against."},
{"l":"api/scala/NamedTuple$.html#","e":false,"i":"","n":"NamedTuple","t":"NamedTuple","d":"scala","k":"object","x":""},
{"l":"api/scala/NamedTuple$.html#AnyNamedTuple-0","e":false,"i":"","n":"AnyNamedTuple","t":"AnyNamedTuple","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Concat-0","e":false,"i":"","n":"Concat","t":"Concat[X <: AnyNamedTuple, Y <: AnyNamedTuple] = NamedTuple[Concat[Names[X], Names[Y]], Concat[DropNames[X], DropNames[Y]]]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Drop-0","e":false,"i":"","n":"Drop","t":"Drop[X <: AnyNamedTuple, N <: Int] = NamedTuple[Drop[Names[X], N], Drop[DropNames[X], N]]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Elem-0","e":false,"i":"","n":"Elem","t":"Elem[X <: AnyNamedTuple, N <: Int] = Elem[DropNames[X], N]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Empty-0","e":false,"i":"","n":"Empty","t":"Empty = NamedTuple[EmptyTuple, EmptyTuple]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Empty-0","e":false,"i":"","n":"Empty","t":"Empty: Empty","d":"scala.NamedTuple","k":"val","x":""},
{"l":"api/scala/NamedTuple$.html#From-0","e":false,"i":"","n":"From","t":"From[T] <: AnyNamedTuple","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Head-0","e":false,"i":"","n":"Head","t":"Head[X <: AnyNamedTuple] = Elem[X, 0]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Init-0","e":false,"i":"","n":"Init","t":"Init[X <: AnyNamedTuple] = NamedTuple[Init[Names[X]], Init[DropNames[X]]]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Last-0","e":false,"i":"","n":"Last","t":"Last[X <: AnyNamedTuple] = Last[DropNames[X]]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Map-0","e":false,"i":"","n":"Map","t":"Map[X <: AnyNamedTuple, F[_ <: Union[DropNames[X]]]] = NamedTuple[Names[X], Map[DropNames[X], F]]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#NamedTuple-0","e":false,"i":"","n":"NamedTuple","t":"NamedTuple[N <: Tuple, +V <: Tuple]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Reverse-0","e":false,"i":"","n":"Reverse","t":"Reverse[X <: AnyNamedTuple] = NamedTuple[Reverse[Names[X]], Reverse[DropNames[X]]]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Size-0","e":false,"i":"","n":"Size","t":"Size[X <: AnyNamedTuple] = Size[DropNames[X]]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Split-0","e":false,"i":"","n":"Split","t":"Split[X <: AnyNamedTuple, N <: Int] = (Take[X, N], Drop[X, N])","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Tail-0","e":false,"i":"","n":"Tail","t":"Tail[X <: AnyNamedTuple] = Drop[X, 1]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Take-0","e":false,"i":"","n":"Take","t":"Take[X <: AnyNamedTuple, N <: Int] = NamedTuple[Take[Names[X], N], Take[DropNames[X], N]]","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#Zip-0","e":false,"i":"","n":"Zip","t":"Zip[X <: AnyNamedTuple, Y <: AnyNamedTuple] = Names[X] match {\n  case Names[Y] => NamedTuple[Names[X], Zip[DropNames[X], DropNames[Y]]]\n}","d":"scala.NamedTuple","k":"type","x":""},
{"l":"api/scala/NamedTuple$.html#apply-fffffd12","e":false,"i":"","n":"apply","t":"apply[N <: Tuple, V <: Tuple](x: V): NamedTuple[N, V]","d":"scala.NamedTuple","k":"def","x":""},
{"l":"api/scala/NamedTuple$.html#build-fffff580","e":false,"i":"","n":"build","t":"build[N <: Tuple]()[V <: Tuple](x: V): NamedTuple[N, V]","d":"scala.NamedTuple","k":"def","x":""},
{"l":"api/scala/NamedTuple$.html#toTuple-fffffd12","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"toTuple","t":"toTuple: V","d":"scala.NamedTuple","k":"def","x":""},
{"l":"api/scala/NamedTuple$.html#unapply-fb1","e":false,"i":"","n":"unapply","t":"unapply[N <: Tuple, V <: Tuple](x: NamedTuple[N, V]): Some[V]","d":"scala.NamedTuple","k":"def","x":""},
{"l":"api/scala/NamedTuple$.html#withNames-ac","e":false,"i":"extension [V <: Tuple](x: V)","n":"withNames","t":"withNames[N <: Tuple]: NamedTuple[N, V]","d":"scala.NamedTuple","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#","e":false,"i":"","n":"NamedTupleDecomposition","t":"NamedTupleDecomposition","d":"scala","k":"object","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#++-9b9","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"++","t":"++[N2 <: Tuple, V2 <: Tuple](that: NamedTuple[N2, V2])(using Disjoint[N, N2] =:= true): Concat[NamedTuple[N, V], NamedTuple[N2, V2]]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#DropNames-0","e":false,"i":"","n":"DropNames","t":"DropNames[NT <: AnyNamedTuple] = NT match {\n  case NamedTuple[_$4, x] => x\n}","d":"scala.NamedTupleDecomposition","k":"type","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#Names-0","e":false,"i":"","n":"Names","t":"Names[X <: AnyNamedTuple] = X match {\n  case NamedTuple[n, _$3] => n\n}","d":"scala.NamedTupleDecomposition","k":"type","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#apply-725","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"apply","t":"apply(n: Int): Elem[NamedTuple[N, V], n.type]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#drop-fffff3d5","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"drop","t":"drop(n: Int): Drop[NamedTuple[N, V], n.type]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#head-fffff8c8","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"head","t":"head: Head[NamedTuple[N, V]]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#init-fffffd12","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"init","t":"init: Init[NamedTuple[N, V]]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#last-fffff8c8","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"last","t":"last: Last[NamedTuple[N, V]]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#map-fffff2d2","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"map","t":"map[F[_]](f: [t] => t => F[t]): Map[NamedTuple[N, V], F]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#reverse-fffffd12","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"reverse","t":"reverse: Reverse[NamedTuple[N, V]]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#size-192","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"size","t":"size: Size[NamedTuple[N, V]]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#splitAt-fffff5c4","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"splitAt","t":"splitAt(n: Int): Split[NamedTuple[N, V], n.type]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#tail-fffffd12","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"tail","t":"tail: Tail[NamedTuple[N, V]]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#take-fffff3d5","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"take","t":"take(n: Int): Take[NamedTuple[N, V], n.type]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#toArray-22a","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"toArray","t":"toArray: Array[Object]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#toIArray-22a","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"toIArray","t":"toIArray: IArray[Object]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#toList-fffffc7d","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"toList","t":"toList: List[Union[V]]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NamedTupleDecomposition$.html#zip-9fc","e":false,"i":"extension [N <: Tuple, V <: Tuple](x: NamedTuple[N, V])","n":"zip","t":"zip[V2 <: Tuple](that: NamedTuple[N, V2]): Zip[NamedTuple[N, V], NamedTuple[N, V2]]","d":"scala.NamedTupleDecomposition","k":"def","x":""},
{"l":"api/scala/NonEmptyTuple.html#","e":false,"i":"","n":"NonEmptyTuple","t":"NonEmptyTuple extends Tuple","d":"scala","k":"trait","x":""},
{"l":"api/scala/None$.html#","e":false,"i":"","n":"None","t":"None extends Option[Nothing]","d":"scala","k":"object","x":"This case object represents non-existent values.\n"},
{"l":"api/scala/None$.html#get-0","e":false,"i":"","n":"get","t":"get: Nothing","d":"scala.None","k":"def","x":"Returns the option's value."},
{"l":"api/scala/NotImplementedError.html#","e":false,"i":"","n":"NotImplementedError","t":"NotImplementedError(msg: String) extends Error","d":"scala","k":"class","x":"Throwing this exception can be a temporary replacement for a method\nbody that remains to be implemented. For instance, the exception is thrown by\nPredef.???.\n"},
{"l":"api/scala/NotImplementedError.html#<init>-fffff651","e":false,"i":"","n":"this","t":"this()","d":"scala.NotImplementedError","k":"def","x":""},
{"l":"api/scala/Nothing.html#","e":false,"i":"","n":"Nothing","t":"Nothing","d":"scala","k":"class","x":"Nothing is - together with scala.Null - at the bottom of Scala's type hierarchy."},
{"l":"api/scala/Null.html#","e":false,"i":"","n":"Null","t":"Null","d":"scala","k":"class","x":"Null is - together with scala.Nothing - at the bottom of the Scala type hierarchy."},
{"l":"api/scala/Option$.html#","e":false,"i":"","n":"Option","t":"Option","d":"scala","k":"object","x":""},
{"l":"api/scala/Option$.html#apply-fffff801","e":false,"i":"","n":"apply","t":"apply[A](x: A): Option[A]","d":"scala.Option","k":"def","x":"An Option factory which creates Some(x) if the argument is not null,\nand None if it is null.\n"},
{"l":"api/scala/Option$.html#empty-4ee","e":false,"i":"","n":"empty","t":"empty[A]: Option[A]","d":"scala.Option","k":"def","x":"An Option factory which returns None in a manner consistent with\nthe collections hierarchy.\n"},
{"l":"api/scala/Option$.html#option2Iterable-fffff00c","e":false,"i":"","n":"option2Iterable","t":"option2Iterable[A](xo: Option[A]): Iterable[A]","d":"scala.Option","k":"def","x":"An implicit conversion that converts an option to an iterable value"},
{"l":"api/scala/Option$.html#unless-a9e","e":false,"i":"","n":"unless","t":"unless[A](cond: Boolean)(a: => A): Option[A]","d":"scala.Option","k":"def","x":"Unless a given condition is true, this will evaluate the a argument and\nreturn Some(a). Otherwise, a is not evaluated and None is returned.\n"},
{"l":"api/scala/Option$.html#when-a9e","e":false,"i":"","n":"when","t":"when[A](cond: Boolean)(a: => A): Option[A]","d":"scala.Option","k":"def","x":"When a given condition is true, evaluates the a argument and returns\nSome(a). When the condition is false, a is not evaluated and None is\nreturned.\n"},
{"l":"api/scala/Option.html#","e":false,"i":"","n":"Option","t":"Option[+A] extends IterableOnce[A], Product, Serializable","d":"scala","k":"class","x":"Represents optional values. Instances of Option\nare either an instance of $some or the object $none."},
{"l":"api/scala/Option.html#collect-25d","e":false,"i":"","n":"collect","t":"collect[B](pf: PartialFunction[A, B]): Option[B]","d":"scala.Option","k":"def","x":"Returns a scala.Some containing the result of\napplying pf to this scala.Option's contained\nvalue, if this option is\nnonempty and pf is defined for that value.\nReturns None otherwise.\n"},
{"l":"api/scala/Option.html#contains-e1c","e":false,"i":"","n":"contains","t":"contains[A1 >: A](elem: A1): Boolean","d":"scala.Option","k":"def","x":"Tests whether the option contains a given value as an element."},
{"l":"api/scala/Option.html#exists-fffff66f","e":false,"i":"","n":"exists","t":"exists(p: A => Boolean): Boolean","d":"scala.Option","k":"def","x":"Returns true if this option is nonempty and the predicate\np returns true when applied to this scala.Option's value.\nOtherwise, returns false."},
{"l":"api/scala/Option.html#filter-94e","e":false,"i":"","n":"filter","t":"filter(p: A => Boolean): Option[A]","d":"scala.Option","k":"def","x":"Returns this scala.Option if it is nonempty and applying the predicate p to\nthis scala.Option's value returns true. Otherwise, return None."},
{"l":"api/scala/Option.html#filterNot-94e","e":false,"i":"","n":"filterNot","t":"filterNot(p: A => Boolean): Option[A]","d":"scala.Option","k":"def","x":"Returns this scala.Option if it is nonempty and applying the predicate p to\nthis scala.Option's value returns false. Otherwise, return None."},
{"l":"api/scala/Option.html#flatMap-27d","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: A => Option[B]): Option[B]","d":"scala.Option","k":"def","x":"Returns the result of applying f to this scala.Option's value if\nthis scala.Option is nonempty.\nReturns None if this scala.Option is empty.\nSlightly different from map in that f is expected to\nreturn an scala.Option (which could be None)."},
{"l":"api/scala/Option.html#flatten-fffff582","e":false,"i":"","n":"flatten","t":"flatten[B](implicit ev: A <:< Option[B]): Option[B]","d":"scala.Option","k":"def","x":"Returns the nested scala.Option value if it is nonempty.  Otherwise,\nreturn None."},
{"l":"api/scala/Option.html#fold-fffff805","e":false,"i":"","n":"fold","t":"fold[B](ifEmpty: => B)(f: A => B): B","d":"scala.Option","k":"def","x":"Returns the result of applying f to this scala.Option's\nvalue if the scala.Option is nonempty.  Otherwise, evaluates\nexpression ifEmpty."},
{"l":"api/scala/Option.html#forall-fffff66f","e":false,"i":"","n":"forall","t":"forall(p: A => Boolean): Boolean","d":"scala.Option","k":"def","x":"Returns true if this option is empty or the predicate\np returns true when applied to this scala.Option's value."},
{"l":"api/scala/Option.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: A => U): Unit","d":"scala.Option","k":"def","x":"Apply the given procedure f to the option's value,\nif it is nonempty. Otherwise, do nothing."},
{"l":"api/scala/Option.html#get-0","e":false,"i":"","n":"get","t":"get: A","d":"scala.Option","k":"def","x":"Returns the option's value."},
{"l":"api/scala/Option.html#getOrElse-fffff7d2","e":false,"i":"","n":"getOrElse","t":"getOrElse[B >: A](default: => B): B","d":"scala.Option","k":"def","x":"Returns the option's value if the option is nonempty, otherwise\nreturn the result of evaluating default."},
{"l":"api/scala/Option.html#isDefined-0","e":false,"i":"","n":"isDefined","t":"isDefined: Boolean","d":"scala.Option","k":"def","x":"Returns true if the option is an instance of scala.Some, false otherwise."},
{"l":"api/scala/Option.html#isEmpty-0","e":false,"i":"","n":"isEmpty","t":"isEmpty: Boolean","d":"scala.Option","k":"def","x":"Returns true if the option is None, false otherwise."},
{"l":"api/scala/Option.html#iterator-0","e":false,"i":"","n":"iterator","t":"iterator: Iterator[A]","d":"scala.Option","k":"def","x":"Returns a singleton iterator returning the scala.Option's value\nif it is nonempty, or an empty iterator if the option is empty.\n"},
{"l":"api/scala/Option.html#map-27d","e":false,"i":"","n":"map","t":"map[B](f: A => B): Option[B]","d":"scala.Option","k":"def","x":"Returns a scala.Some containing the result of applying f to this scala.Option's\nvalue if this scala.Option is nonempty.\nOtherwise return None."},
{"l":"api/scala/Option.html#nonEmpty-0","e":false,"i":"","n":"nonEmpty","t":"nonEmpty: Boolean","d":"scala.Option","k":"def","x":"Returns false if the option is None, true otherwise."},
{"l":"api/scala/Option.html#orElse-bfc","e":false,"i":"","n":"orElse","t":"orElse[B >: A](alternative: => Option[B]): Option[B]","d":"scala.Option","k":"def","x":"Returns this scala.Option if it is nonempty,\notherwise return the result of evaluating alternative."},
{"l":"api/scala/Option.html#orNull-e58","e":false,"i":"","n":"orNull","t":"orNull[A1 >: A](implicit ev: Null <:< A1): A1","d":"scala.Option","k":"def","x":"Returns the option's value if it is nonempty,\nor null if it is empty."},
{"l":"api/scala/Option.html#toLeft-54a","e":false,"i":"","n":"toLeft","t":"toLeft[X](right: => X): Either[A, X]","d":"scala.Option","k":"def","x":"Returns a scala.util.Right containing the given\nargument right if this is empty, or\na scala.util.Left containing this scala.Option's value\nif this scala.Option is nonempty."},
{"l":"api/scala/Option.html#toList-0","e":false,"i":"","n":"toList","t":"toList: List[A]","d":"scala.Option","k":"def","x":"Returns a singleton list containing the scala.Option's value\nif it is nonempty, or the empty list if the scala.Option is empty."},
{"l":"api/scala/Option.html#toRight-54a","e":false,"i":"","n":"toRight","t":"toRight[X](left: => X): Either[X, A]","d":"scala.Option","k":"def","x":"Returns a scala.util.Left containing the given\nargument left if this scala.Option is empty, or\na scala.util.Right containing this scala.Option's value if\nthis is nonempty."},
{"l":"api/scala/Option.html#unzip-916","e":false,"i":"","n":"unzip","t":"unzip[A1, A2](implicit asPair: A <:< (A1, A2)): (Option[A1], Option[A2])","d":"scala.Option","k":"def","x":"Converts an Option of a pair into an Option of the first element and an Option of the second element."},
{"l":"api/scala/Option.html#unzip3-fffff3b6","e":false,"i":"","n":"unzip3","t":"unzip3[A1, A2, A3](implicit asTriple: A <:< (A1, A2, A3)): (Option[A1], Option[A2], Option[A3])","d":"scala.Option","k":"def","x":"Converts an Option of a triple into three Options, one containing the element from each position of the triple."},
{"l":"api/scala/Option.html#withFilter-9e","e":false,"i":"","n":"withFilter","t":"withFilter(p: A => Boolean): WithFilter","d":"scala.Option","k":"def","x":"Necessary to keep scala.Option from being implicitly converted to\nscala.collection.Iterable in for comprehensions.\n"},
{"l":"api/scala/Option.html#zip-fffff32c","e":false,"i":"","n":"zip","t":"zip[A1 >: A, B](that: Option[B]): Option[(A1, B)]","d":"scala.Option","k":"def","x":"Returns a scala.Some formed from this option and another option\nby combining the corresponding elements in a pair.\nIf either of the two options is empty, None is returned."},
{"l":"api/scala/Option$WithFilter.html#","e":false,"i":"","n":"WithFilter","t":"WithFilter(p: Option.this.A => Boolean)","d":"scala.Option","k":"class","x":"We need a whole WithFilter class to honor the \"doesn't create a new\ncollection\" contract even though it seems unlikely to matter much in a\ncollection with max size 1.\n"},
{"l":"api/scala/Option$WithFilter.html#flatMap-27d","e":false,"i":"","n":"flatMap","t":"flatMap[B](f: Option.this.A => Option[B]): Option[B]","d":"scala.Option.WithFilter","k":"def","x":""},
{"l":"api/scala/Option$WithFilter.html#foreach-58c","e":false,"i":"","n":"foreach","t":"foreach[U](f: Option.this.A => U): Unit","d":"scala.Option.WithFilter","k":"def","x":""},
{"l":"api/scala/Option$WithFilter.html#map-27d","e":false,"i":"","n":"map","t":"map[B](f: Option.this.A => B): Option[B]","d":"scala.Option.WithFilter","k":"def","x":""},
{"l":"api/scala/Option$WithFilter.html#withFilter-9e","e":false,"i":"","n":"withFilter","t":"withFilter(q: Option.this.A => Boolean): Option.this.WithFilter","d":"scala.Option.WithFilter","k":"def","x":""},
{"l":"api/scala/PartialFunction.html#","e":false,"i":"","n":"PartialFunction","t":"PartialFunction[-A, +B] extends A => B","d":"scala","k":"trait","x":"A partial function of type PartialFunction[A, B] is a unary function\nwhere the domain does not necessarily include all values of type A.\nThe function isDefinedAt allows to test dynamically if a value is in\nthe domain of the function."},
{"l":"api/scala/PartialFunction.html#andThen-b91","e":false,"i":"","n":"andThen","t":"andThen[C](k: PartialFunction[B, C]): PartialFunction[A, C]","d":"scala.PartialFunction","k":"def","x":"Composes this partial function with another partial function that\ngets applied to results of this partial function."},
{"l":"api/scala/PartialFunction.html#applyOrElse-fffffdbf","e":false,"i":"","n":"applyOrElse","t":"applyOrElse[A1 <: A, B1 >: B](x: A1, default: A1 => B1): B1","d":"scala.PartialFunction","k":"def","x":"Applies this partial function to the given argument when it is contained in the function domain.\nApplies fallback function where this partial function is not defined."},
{"l":"api/scala/PartialFunction.html#compose-b91","e":false,"i":"","n":"compose","t":"compose[R](k: PartialFunction[R, A]): PartialFunction[R, B]","d":"scala.PartialFunction","k":"def","x":"Composes another partial function k with this partial function so that this\npartial function gets applied to results of k."},
{"l":"api/scala/PartialFunction.html#elementWise-0","e":false,"i":"","n":"elementWise","t":"elementWise: ElementWiseExtractor[A, B]","d":"scala.PartialFunction","k":"def","x":"Returns an extractor object with a unapplySeq method, which extracts each element of a sequence data.\n"},
{"l":"api/scala/PartialFunction.html#isDefinedAt-4ad","e":false,"i":"","n":"isDefinedAt","t":"isDefinedAt(x: A): Boolean","d":"scala.PartialFunction","k":"def","x":"Checks if a value is contained in the function's domain.\n"},
{"l":"api/scala/PartialFunction.html#lift-0","e":false,"i":"","n":"lift","t":"lift: A => Option[B]","d":"scala.PartialFunction","k":"def","x":"Turns this partial function into a plain function returning an Option result."},
{"l":"api/scala/PartialFunction.html#orElse-a52","e":false,"i":"","n":"orElse","t":"orElse[A1 <: A, B1 >: B](that: PartialFunction[A1, B1]): PartialFunction[A1, B1]","d":"scala.PartialFunction","k":"def","x":"Composes this partial function with a fallback partial function which\ngets applied where this partial function is not defined.\n"},
{"l":"api/scala/PartialFunction.html#runWith-51","e":false,"i":"","n":"runWith","t":"runWith[U](action: B => U): A => Boolean","d":"scala.PartialFunction","k":"def","x":"Composes this partial function with an action function which\ngets applied to results of this partial function.\nThe action function is invoked only for its side effects; its result is ignored."},
{"l":"api/scala/PartialFunction.html#unapply-fffffb50","e":false,"i":"","n":"unapply","t":"unapply(a: A): Option[B]","d":"scala.PartialFunction","k":"def","x":"Tries to extract a B from an A in a pattern matching expression."},
{"l":"api/scala/PartialFunction$.html#","e":false,"i":"","n":"PartialFunction","t":"PartialFunction","d":"scala","k":"object","x":"A few handy operations which leverage the extra bit of information\navailable in partial functions.  Examples:"},
{"l":"api/scala/PartialFunction$.html#cond-213","e":false,"i":"","n":"cond","t":"cond[A](x: A)(pf: PartialFunction[A, Boolean]): Boolean","d":"scala.PartialFunction","k":"def","x":"A Boolean test that is the result of the given function where defined,\nand false otherwise."},
{"l":"api/scala/PartialFunction$.html#condOpt-f49","e":false,"i":"","n":"condOpt","t":"condOpt[A, B](x: A)(pf: PartialFunction[A, B]): Option[B]","d":"scala.PartialFunction","k":"def","x":"Apply the function to the given value if defined, and return the result\nin a Some; otherwise, return None.\n"},
{"l":"api/scala/PartialFunction$.html#empty-6bf","e":false,"i":"","n":"empty","t":"empty[A, B]: PartialFunction[A, B]","d":"scala.PartialFunction","k":"def","x":"The partial function with empty domain.\nAny attempt to invoke empty partial function leads to throwing scala.MatchError exception.\n"},
{"l":"api/scala/PartialFunction$.html#fromFunction-2f2","e":false,"i":"","n":"fromFunction","t":"fromFunction[A, B](f: A => B): PartialFunction[A, B]","d":"scala.PartialFunction","k":"def","x":"Converts an ordinary function to a partial function. Note that calling isDefinedAt(x) on\n this partial function will return true for every x."},
{"l":"api/scala/PartialFunction$$ElementWiseExtractor.html#","e":false,"i":"","n":"ElementWiseExtractor","t":"ElementWiseExtractor[-A, +B] extends AnyVal","d":"scala.PartialFunction","k":"class","x":""},
{"l":"api/scala/PartialFunction$$ElementWiseExtractor.html#unapplySeq-fffff7e8","e":false,"i":"","n":"unapplySeq","t":"unapplySeq(seq: Seq[A]): Option[Seq[B]]","d":"scala.PartialFunction.ElementWiseExtractor","k":"def","x":""},
{"l":"api/scala/PolyFunction.html#","e":false,"i":"","n":"PolyFunction","t":"PolyFunction","d":"scala","k":"trait","x":""},
{"l":"api/scala/Precise.html#","e":false,"i":"","n":"Precise","t":"Precise extends Erased","d":"scala","k":"trait","x":""},
{"l":"api/scala/Precise.html#Self-0","e":false,"i":"","n":"Self","t":"Self","d":"scala.Precise","k":"type","x":""},
{"l":"api/scala/Predef$.html#","e":false,"i":"","n":"Predef","t":"Predef","d":"scala","k":"object","x":"The Predef object provides definitions that are accessible in all Scala\ncompilation units without explicit qualification."},
{"l":"api/scala/Predef$.html#$conforms-c40","e":false,"i":"","n":"$conforms","t":"$conforms[A]: A => A","d":"scala.Predef","k":"def","x":"An implicit of type A => A is available for all A because it can always\nbe implemented using the identity function. This also means that an\nimplicit of type A => B is always available when A <: B, because\n(A => A) <: (A => B).\n"},
{"l":"api/scala/Predef$.html#->-0","e":false,"i":"","n":"->","t":"->: Tuple2.type","d":"scala.Predef","k":"val","x":"Allows destructuring tuples with the same syntax as constructing them.\n"},
{"l":"api/scala/Predef$.html#???-0","e":false,"i":"","n":"???","t":"???: Nothing","d":"scala.Predef","k":"def","x":"??? can be used for marking methods that remain to be implemented."},
{"l":"api/scala/Predef$.html#ArrayCharSequence-fffff33c","e":false,"i":"","n":"ArrayCharSequence","t":"ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#ArrowAssoc-957","e":false,"i":"","n":"ArrowAssoc","t":"ArrowAssoc[A](self: A): ArrowAssoc[A]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Boolean2boolean-ffffff8c","e":false,"i":"","n":"Boolean2boolean","t":"Boolean2boolean(x: Boolean): Boolean","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Byte2byte-a2c","e":false,"i":"","n":"Byte2byte","t":"Byte2byte(x: Byte): Byte","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Character2char-133","e":false,"i":"","n":"Character2char","t":"Character2char(x: Character): Char","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Class-0","e":false,"i":"","n":"Class","t":"Class[T] = Class[T]","d":"scala.Predef","k":"type","x":""},
{"l":"api/scala/Predef$.html#Double2double-c3e","e":false,"i":"","n":"Double2double","t":"Double2double(x: Double): Double","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Ensuring-957","e":false,"i":"","n":"Ensuring","t":"Ensuring[A](self: A): Ensuring[A]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Float2float-50c","e":false,"i":"","n":"Float2float","t":"Float2float(x: Float): Float","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Function-0","e":false,"i":"","n":"Function","t":"Function[-A, +B] = A => B","d":"scala.Predef","k":"type","x":""},
{"l":"api/scala/Predef$.html#Integer2int-fffff0fd","e":false,"i":"","n":"Integer2int","t":"Integer2int(x: Integer): Int","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Long2long-fffff414","e":false,"i":"","n":"Long2long","t":"Long2long(x: Long): Long","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Manifest-0","e":false,"i":"","n":"Manifest","t":"Manifest[T] = Manifest[T]","d":"scala.Predef","k":"type","x":""},
{"l":"api/scala/Predef$.html#Manifest-0","e":false,"i":"","n":"Manifest","t":"Manifest: Manifest.type","d":"scala.Predef","k":"val","x":""},
{"l":"api/scala/Predef$.html#Map-0","e":false,"i":"","n":"Map","t":"Map[K, +V] = Map[K, V]","d":"scala.Predef","k":"type","x":""},
{"l":"api/scala/Predef$.html#Map-0","e":false,"i":"","n":"Map","t":"Map: Map.type","d":"scala.Predef","k":"val","x":""},
{"l":"api/scala/Predef$.html#NoManifest-0","e":false,"i":"","n":"NoManifest","t":"NoManifest: NoManifest.type","d":"scala.Predef","k":"val","x":""},
{"l":"api/scala/Predef$.html#OptManifest-0","e":false,"i":"","n":"OptManifest","t":"OptManifest[T] = OptManifest[T]","d":"scala.Predef","k":"type","x":""},
{"l":"api/scala/Predef$.html#SeqCharSequence-fffff18c","e":false,"i":"","n":"SeqCharSequence","t":"SeqCharSequence(sequenceOfChars: IndexedSeq[Char]): SeqCharSequence","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#Set-0","e":false,"i":"","n":"Set","t":"Set[A] = Set[A]","d":"scala.Predef","k":"type","x":""},
{"l":"api/scala/Predef$.html#Set-0","e":false,"i":"","n":"Set","t":"Set: Set.type","d":"scala.Predef","k":"val","x":""},
{"l":"api/scala/Predef$.html#Short2short-10c","e":false,"i":"","n":"Short2short","t":"Short2short(x: Short): Short","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#String-0","e":false,"i":"","n":"String","t":"String = String","d":"scala.Predef","k":"type","x":"The String type in Scala has all the methods of the underlying\njava.lang.String, of which it is just an alias."},
{"l":"api/scala/Predef$.html#StringFormat-957","e":false,"i":"","n":"StringFormat","t":"StringFormat[A](self: A): StringFormat[A]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#any2stringadd-957","e":false,"i":"","n":"any2stringadd","t":"any2stringadd[A](self: A): any2stringadd[A]","d":"scala.Predef","k":"def","x":"Injects String concatenation operator + to any classes."},
{"l":"api/scala/Predef$.html#assert-8ac","e":false,"i":"","n":"assert","t":"assert(assertion: Boolean): Unit","d":"scala.Predef","k":"def","x":"Tests an expression, throwing an AssertionError if false.\nCalls to this method will not be generated if -Xelide-below\nis greater than ASSERTION.\n"},
{"l":"api/scala/Predef$.html#assert-e7c","e":false,"i":"","n":"assert","t":"assert(assertion: Boolean, message: => Any): Unit","d":"scala.Predef","k":"def","x":"Tests an expression, throwing an AssertionError if false.\nCalls to this method will not be generated if -Xelide-below\nis greater than ASSERTION.\n"},
{"l":"api/scala/Predef$.html#assume-8ac","e":false,"i":"","n":"assume","t":"assume(assumption: Boolean): Unit","d":"scala.Predef","k":"def","x":"Tests an expression, throwing an AssertionError if false.\nThis method differs from assert only in the intent expressed:\nassert contains a predicate which needs to be proven, while\nassume contains an axiom for a static checker.  Calls to this method\nwill not be generated if -Xelide-below is greater than ASSERTION.\n"},
{"l":"api/scala/Predef$.html#assume-e7c","e":false,"i":"","n":"assume","t":"assume(assumption: Boolean, message: => Any): Unit","d":"scala.Predef","k":"def","x":"Tests an expression, throwing an AssertionError if false.\nThis method differs from assert only in the intent expressed:\nassert contains a predicate which needs to be proven, while\nassume contains an axiom for a static checker.  Calls to this method\nwill not be generated if -Xelide-below is greater than ASSERTION.\n"},
{"l":"api/scala/Predef$.html#augmentString-fffff2ca","e":false,"i":"","n":"augmentString","t":"augmentString(x: String): StringOps","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#boolean2Boolean-fffff4f4","e":false,"i":"","n":"boolean2Boolean","t":"boolean2Boolean(x: Boolean): Boolean","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#booleanArrayOps-fffff055","e":false,"i":"","n":"booleanArrayOps","t":"booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#booleanWrapper-c00","e":false,"i":"","n":"booleanWrapper","t":"booleanWrapper(x: Boolean): RichBoolean","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#byte2Byte-12c","e":false,"i":"","n":"byte2Byte","t":"byte2Byte(x: Byte): Byte","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#byteArrayOps-fffffdc5","e":false,"i":"","n":"byteArrayOps","t":"byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#byteWrapper-da0","e":false,"i":"","n":"byteWrapper","t":"byteWrapper(x: Byte): RichByte","d":"scala.Predef","k":"def","x":"We prefer the java.lang.* boxed types to these wrappers in\nany potential conflicts.  Conflicts do exist because the wrappers\nneed to implement ScalaNumber in order to have a symmetric equals\nmethod, but that implies implementing java.lang.Number as well."},
{"l":"api/scala/Predef$.html#char2Character-fffff077","e":false,"i":"","n":"char2Character","t":"char2Character(x: Char): Character","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#charArrayOps-fffff893","e":false,"i":"","n":"charArrayOps","t":"charArrayOps(xs: Array[Char]): ArrayOps[Char]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#charWrapper-8bc","e":false,"i":"","n":"charWrapper","t":"charWrapper(c: Char): RichChar","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#classOf-53","e":false,"i":"","n":"classOf","t":"classOf[T]: Class[T]","d":"scala.Predef","k":"def","x":"Retrieve the runtime representation of a class type. classOf[T] is equivalent to\nthe class literal T.class in Java.\n"},
{"l":"api/scala/Predef$.html#copyArrayToImmutableIndexedSeq-11e","e":false,"i":"","n":"copyArrayToImmutableIndexedSeq","t":"copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#double2Double-9be","e":false,"i":"","n":"double2Double","t":"double2Double(x: Double): Double","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#doubleArrayOps-fffff64e","e":false,"i":"","n":"doubleArrayOps","t":"doubleArrayOps(xs: Array[Double]): ArrayOps[Double]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#doubleWrapper-5b2","e":false,"i":"","n":"doubleWrapper","t":"doubleWrapper(x: Double): RichDouble","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#eq-fffff7fa","e":false,"i":"extension (inline x: AnyRef | Null)","n":"eq","t":"eq(inline y: AnyRef | Null): Boolean","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#float2Float-fffffb74","e":false,"i":"","n":"float2Float","t":"float2Float(x: Float): Float","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#floatArrayOps-f89","e":false,"i":"","n":"floatArrayOps","t":"floatArrayOps(xs: Array[Float]): ArrayOps[Float]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#floatWrapper-fffffb80","e":false,"i":"","n":"floatWrapper","t":"floatWrapper(x: Float): RichFloat","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#fromNullable-7da","e":false,"i":"extension (opt: Option.type)","n":"fromNullable","t":"fromNullable[T](t: T | Null): Option[T]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#genericArrayOps-957","e":false,"i":"","n":"genericArrayOps","t":"genericArrayOps[T](xs: Array[T]): ArrayOps[T]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#genericWrapArray-e92","e":false,"i":"","n":"genericWrapArray","t":"genericWrapArray[T](xs: Array[T]): ArraySeq[T]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#identity-957","e":false,"i":"","n":"identity","t":"identity[A](x: A): A","d":"scala.Predef","k":"def","x":"A method that returns its input value."},
{"l":"api/scala/Predef$.html#implicitly-957","e":false,"i":"","n":"implicitly","t":"implicitly[T](implicit e: T): T","d":"scala.Predef","k":"def","x":"Summon an implicit value of type T. Usually, the argument is not passed explicitly.\n"},
{"l":"api/scala/Predef$.html#int2Integer-fffff923","e":false,"i":"","n":"int2Integer","t":"int2Integer(x: Int): Integer","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#intArrayOps-fffff45c","e":false,"i":"","n":"intArrayOps","t":"intArrayOps(xs: Array[Int]): ArrayOps[Int]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#intWrapper-fffffbe0","e":false,"i":"","n":"intWrapper","t":"intWrapper(x: Int): RichInt","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/runtime/stdLibPatches/Predef$.html#is-0","e":false,"i":"","n":"is","t":"is[A <: AnyKind, B] = B { type Self = A;  }","d":"scala.Predef","k":"type","x":""},
{"l":"api/scala/Predef$.html#locally-957","e":false,"i":"","n":"locally","t":"locally[T](x: T): T","d":"scala.Predef","k":"def","x":"Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\nThis is just a different name for identity.\n"},
{"l":"api/scala/Predef$.html#long2Long-114","e":false,"i":"","n":"long2Long","t":"long2Long(x: Long): Long","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#longArrayOps-fffffe39","e":false,"i":"","n":"longArrayOps","t":"longArrayOps(xs: Array[Long]): ArrayOps[Long]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#longWrapper-fffff788","e":false,"i":"","n":"longWrapper","t":"longWrapper(x: Long): RichLong","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#manifest-fffff8c1","e":false,"i":"","n":"manifest","t":"manifest[T](implicit m: Manifest[T]): Manifest[T]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#ne-fffff7fa","e":false,"i":"extension (inline x: AnyRef | Null)","n":"ne","t":"ne(inline y: AnyRef | Null): Boolean","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#nn-957","e":false,"i":"extension [T](x: T | Null)","n":"nn","t":"nn: x.type & T","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#optManifest-e11","e":false,"i":"","n":"optManifest","t":"optManifest[T](implicit m: OptManifest[T]): OptManifest[T]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#print-fffff71f","e":false,"i":"","n":"print","t":"print(x: Any): Unit","d":"scala.Predef","k":"def","x":"Prints an object to out using its toString method.\n"},
{"l":"api/scala/Predef$.html#printf-fffff71c","e":false,"i":"","n":"printf","t":"printf(text: String, xs: Any*): Unit","d":"scala.Predef","k":"def","x":"Prints its arguments as a formatted string to the default output,\nbased on a string pattern (in a fashion similar to printf in C)."},
{"l":"api/scala/Predef$.html#println-94c","e":false,"i":"","n":"println","t":"println(): Unit","d":"scala.Predef","k":"def","x":"Prints a newline character on the default output."},
{"l":"api/scala/Predef$.html#println-fffff71f","e":false,"i":"","n":"println","t":"println(x: Any): Unit","d":"scala.Predef","k":"def","x":"Prints out an object to the default output, followed by a newline character.\n"},
{"l":"api/scala/Predef$.html#refArrayOps-fb9","e":false,"i":"","n":"refArrayOps","t":"refArrayOps[T <: AnyRef](xs: Array[T]): ArrayOps[T]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#require-8ac","e":false,"i":"","n":"require","t":"require(requirement: Boolean): Unit","d":"scala.Predef","k":"def","x":"Tests an expression, throwing an IllegalArgumentException if false.\nThis method is similar to assert, but blames the caller of the method\nfor violating the condition.\n"},
{"l":"api/scala/Predef$.html#require-e7c","e":false,"i":"","n":"require","t":"require(requirement: Boolean, message: => Any): Unit","d":"scala.Predef","k":"def","x":"Tests an expression, throwing an IllegalArgumentException if false.\nThis method is similar to assert, but blames the caller of the method\nfor violating the condition.\n"},
{"l":"api/scala/Predef$.html#runtimeChecked-957","e":false,"i":"extension [T](x: T)","n":"runtimeChecked","t":"runtimeChecked: x.type","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#short2Short-fffff774","e":false,"i":"","n":"short2Short","t":"short2Short(x: Short): Short","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#shortArrayOps-9a9","e":false,"i":"","n":"shortArrayOps","t":"shortArrayOps(xs: Array[Short]): ArrayOps[Short]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#shortWrapper-fffff780","e":false,"i":"","n":"shortWrapper","t":"shortWrapper(x: Short): RichShort","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#summon-957","e":false,"i":"","n":"summon","t":"summon[T](using x: T): x.type","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#tuple2ToZippedOps-fffffd96","e":false,"i":"","n":"tuple2ToZippedOps","t":"tuple2ToZippedOps[T1, T2](x: (T1, T2)): Ops[T1, T2]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#tuple3ToZippedOps-119","e":false,"i":"","n":"tuple3ToZippedOps","t":"tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): Ops[T1, T2, T3]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#unitArrayOps-be5","e":false,"i":"","n":"unitArrayOps","t":"unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#valueOf-957","e":false,"i":"","n":"valueOf","t":"valueOf[T](implicit vt: ValueOf[T]): T","d":"scala.Predef","k":"def","x":"Retrieve the single value of a type with a unique inhabitant.\n"},
{"l":"api/scala/Predef$.html#wrapBooleanArray-d33","e":false,"i":"","n":"wrapBooleanArray","t":"wrapBooleanArray(xs: Array[Boolean]): ofBoolean","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapByteArray-fffff46d","e":false,"i":"","n":"wrapByteArray","t":"wrapByteArray(xs: Array[Byte]): ofByte","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapCharArray-ffffffad","e":false,"i":"","n":"wrapCharArray","t":"wrapCharArray(xs: Array[Char]): ofChar","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapDoubleArray-fffff3cd","e":false,"i":"","n":"wrapDoubleArray","t":"wrapDoubleArray(xs: Array[Double]): ofDouble","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapFloatArray-fffff05b","e":false,"i":"","n":"wrapFloatArray","t":"wrapFloatArray(xs: Array[Float]): ofFloat","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapIntArray-fffff581","e":false,"i":"","n":"wrapIntArray","t":"wrapIntArray(xs: Array[Int]): ofInt","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapLongArray-3ed","e":false,"i":"","n":"wrapLongArray","t":"wrapLongArray(xs: Array[Long]): ofLong","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapRefArray-fffffa82","e":false,"i":"","n":"wrapRefArray","t":"wrapRefArray[T <: AnyRef](xs: Array[T]): ofRef[T]","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapShortArray-49b","e":false,"i":"","n":"wrapShortArray","t":"wrapShortArray(xs: Array[Short]): ofShort","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapString-527","e":false,"i":"","n":"wrapString","t":"wrapString(s: String): WrappedString","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$.html#wrapUnitArray-2c9","e":false,"i":"","n":"wrapUnitArray","t":"wrapUnitArray(xs: Array[Unit]): ofUnit","d":"scala.Predef","k":"def","x":""},
{"l":"api/scala/Predef$$ArrayCharSequence.html#","e":false,"i":"","n":"ArrayCharSequence","t":"ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence","d":"scala.Predef","k":"class","x":""},
{"l":"api/scala/Predef$$ArrayCharSequence.html#charAt-fffffd85","e":false,"i":"","n":"charAt","t":"charAt(index: Int): Char","d":"scala.Predef.ArrayCharSequence","k":"def","x":""},
{"l":"api/scala/Predef$$ArrayCharSequence.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.Predef.ArrayCharSequence","k":"def","x":""},
{"l":"api/scala/Predef$$ArrayCharSequence.html#subSequence-46b","e":false,"i":"","n":"subSequence","t":"subSequence(start: Int, end: Int): CharSequence","d":"scala.Predef.ArrayCharSequence","k":"def","x":""},
{"l":"api/scala/Predef$$ArrowAssoc.html#","e":false,"i":"","n":"ArrowAssoc","t":"ArrowAssoc[A](self: A) extends AnyVal","d":"scala.Predef","k":"class","x":""},
{"l":"api/scala/Predef$$ArrowAssoc.html#->-fffff0f6","e":false,"i":"","n":"->","t":"->[B](y: B): (A, B)","d":"scala.Predef.ArrowAssoc","k":"def","x":""},
{"l":"api/scala/Predef$$ArrowAssoc.html#→-fffff0f6","e":false,"i":"","n":"→","t":"→[B](y: B): (A, B)","d":"scala.Predef.ArrowAssoc","k":"def","x":""},
{"l":"api/scala/Predef$$Ensuring.html#","e":false,"i":"","n":"Ensuring","t":"Ensuring[A](self: A) extends AnyVal","d":"scala.Predef","k":"class","x":""},
{"l":"api/scala/Predef$$Ensuring.html#ensuring-fffff0f3","e":false,"i":"","n":"ensuring","t":"ensuring(cond: Boolean): A","d":"scala.Predef.Ensuring","k":"def","x":""},
{"l":"api/scala/Predef$$Ensuring.html#ensuring-ac3","e":false,"i":"","n":"ensuring","t":"ensuring(cond: Boolean, msg: => Any): A","d":"scala.Predef.Ensuring","k":"def","x":""},
{"l":"api/scala/Predef$$Ensuring.html#ensuring-c24","e":false,"i":"","n":"ensuring","t":"ensuring(cond: A => Boolean): A","d":"scala.Predef.Ensuring","k":"def","x":""},
{"l":"api/scala/Predef$$Ensuring.html#ensuring-772","e":false,"i":"","n":"ensuring","t":"ensuring(cond: A => Boolean, msg: => Any): A","d":"scala.Predef.Ensuring","k":"def","x":""},
{"l":"api/scala/Predef$$SeqCharSequence.html#","e":false,"i":"","n":"SeqCharSequence","t":"SeqCharSequence(sequenceOfChars: IndexedSeq[Char]) extends CharSequence","d":"scala.Predef","k":"class","x":""},
{"l":"api/scala/Predef$$SeqCharSequence.html#charAt-fffffd85","e":false,"i":"","n":"charAt","t":"charAt(index: Int): Char","d":"scala.Predef.SeqCharSequence","k":"def","x":""},
{"l":"api/scala/Predef$$SeqCharSequence.html#length-0","e":false,"i":"","n":"length","t":"length: Int","d":"scala.Predef.SeqCharSequence","k":"def","x":""},
{"l":"api/scala/Predef$$SeqCharSequence.html#subSequence-46b","e":false,"i":"","n":"subSequence","t":"subSequence(start: Int, end: Int): CharSequence","d":"scala.Predef.SeqCharSequence","k":"def","x":""},
{"l":"api/scala/Predef$$StringFormat.html#","e":false,"i":"","n":"StringFormat","t":"StringFormat[A](self: A) extends AnyVal","d":"scala.Predef","k":"class","x":""},
{"l":"api/scala/Predef$$StringFormat.html#formatted-fffff2ca","e":false,"i":"","n":"formatted","t":"formatted(fmtstr: String): String","d":"scala.Predef.StringFormat","k":"def","x":"Returns string formatted according to given format string.\nFormat strings are as for String.format\n(@see java.lang.String.format).\n"},
{"l":"api/scala/Predef$$any2stringadd.html#","e":false,"i":"","n":"any2stringadd","t":"any2stringadd[A](self: A) extends AnyVal","d":"scala.Predef","k":"class","x":"Injects String concatenation operator + to any classes."},
{"l":"api/scala/Predef$$any2stringadd.html#+-fffff2ca","e":false,"i":"","n":"+","t":"+(other: String): String","d":"scala.Predef.any2stringadd","k":"def","x":""},
{"l":"api/scala/Product.html#","e":false,"i":"","n":"Product","t":"Product extends Equals","d":"scala","k":"trait","x":"Base trait for all products, which in the standard library include at\nleast scala.Product1 through scala.Product22 and therefore also\ntheir subclasses scala.Tuple1 through scala.Tuple22.  In addition,\nall case classes implement Product with synthetically generated methods.\n"},
{"l":"api/scala/Product.html#productArity-0","e":false,"i":"","n":"productArity","t":"productArity: Int","d":"scala.Product","k":"def","x":"The size of this product."},
{"l":"api/scala/Product.html#productElement-aba","e":false,"i":"","n":"productElement","t":"productElement(n: Int): Any","d":"scala.Product","k":"def","x":"The nth element of this product, 0-based.  In other words, for a\nproduct A(x1, ..., xk), returns x(n+1) where 0 <= n < k.\n"},
{"l":"api/scala/Product.html#productElementName-78c","e":false,"i":"","n":"productElementName","t":"productElementName(n: Int): String","d":"scala.Product","k":"def","x":"The name of the nth element of this product, 0-based.\nIn the default implementation, an empty string.\n"},
{"l":"api/scala/Product.html#productElementNames-0","e":false,"i":"","n":"productElementNames","t":"productElementNames: Iterator[String]","d":"scala.Product","k":"def","x":"An iterator over the names of all the elements of this product.\n"},
{"l":"api/scala/Product.html#productIterator-0","e":false,"i":"","n":"productIterator","t":"productIterator: Iterator[Any]","d":"scala.Product","k":"def","x":"An iterator over all the elements of this product."},
{"l":"api/scala/Product.html#productPrefix-0","e":false,"i":"","n":"productPrefix","t":"productPrefix: String","d":"scala.Product","k":"def","x":"A string used in the toString methods of derived classes.\nImplementations may override this method to prepend a string prefix\nto the result of toString methods.\n"},
{"l":"api/scala/Product1$.html#","e":false,"i":"","n":"Product1","t":"Product1","d":"scala","k":"object","x":""},
{"l":"api/scala/Product1$.html#unapply-918","e":false,"i":"","n":"unapply","t":"unapply[T1](x: Product1[T1]): Option[Product1[T1]]","d":"scala.Product1","k":"def","x":""},
{"l":"api/scala/Product1.html#","e":false,"i":"","n":"Product1","t":"Product1[+T1] extends Product","d":"scala","k":"trait","x":"Product1 is a Cartesian product of 1 component.\n"},
{"l":"api/scala/Product1.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product1","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product10$.html#","e":false,"i":"","n":"Product10","t":"Product10","d":"scala","k":"object","x":""},
{"l":"api/scala/Product10$.html#unapply-fffffc44","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10](x: Product10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]): Option[Product10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]]","d":"scala.Product10","k":"def","x":""},
{"l":"api/scala/Product10.html#","e":false,"i":"","n":"Product10","t":"Product10[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10] extends Product","d":"scala","k":"trait","x":"Product10 is a Cartesian product of 10 components.\n"},
{"l":"api/scala/Product10.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product10","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product10.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product10","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product10.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product10","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product10.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product10","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product10.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product10","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product10.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product10","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product10.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product10","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product10.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product10","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product10.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product10","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product10.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product10","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product11$.html#","e":false,"i":"","n":"Product11","t":"Product11","d":"scala","k":"object","x":""},
{"l":"api/scala/Product11$.html#unapply-a24","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11](x: Product11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]): Option[Product11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]]","d":"scala.Product11","k":"def","x":""},
{"l":"api/scala/Product11.html#","e":false,"i":"","n":"Product11","t":"Product11[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11] extends Product","d":"scala","k":"trait","x":"Product11 is a Cartesian product of 11 components.\n"},
{"l":"api/scala/Product11.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product11","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product11.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product11","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product11.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product11","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product11.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product11","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product11.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product11","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product11.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product11","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product11.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product11","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product11.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product11","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product11.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product11","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product11.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product11","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product11.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product11","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product12$.html#","e":false,"i":"","n":"Product12","t":"Product12","d":"scala","k":"object","x":""},
{"l":"api/scala/Product12$.html#unapply-804","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12](x: Product12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]): Option[Product12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]]","d":"scala.Product12","k":"def","x":""},
{"l":"api/scala/Product12.html#","e":false,"i":"","n":"Product12","t":"Product12[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12] extends Product","d":"scala","k":"trait","x":"Product12 is a Cartesian product of 12 components.\n"},
{"l":"api/scala/Product12.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product12","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product12.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product12","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product12.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product12","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product12.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product12","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product12.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product12","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product12.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product12","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product12.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product12","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product12.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product12","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product12.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product12","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product12.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product12","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product12.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product12","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product12.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product12","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product13$.html#","e":false,"i":"","n":"Product13","t":"Product13","d":"scala","k":"object","x":""},
{"l":"api/scala/Product13$.html#unapply-5e4","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13](x: Product13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]): Option[Product13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]]","d":"scala.Product13","k":"def","x":""},
{"l":"api/scala/Product13.html#","e":false,"i":"","n":"Product13","t":"Product13[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13] extends Product","d":"scala","k":"trait","x":"Product13 is a Cartesian product of 13 components.\n"},
{"l":"api/scala/Product13.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product13","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product13.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product13","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product13.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product13","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product13.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product13","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product13.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product13","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product13.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product13","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product13.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product13","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product13.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product13","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product13.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product13","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product13.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product13","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product13.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product13","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product13.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product13","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product13.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product13","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product14$.html#","e":false,"i":"","n":"Product14","t":"Product14","d":"scala","k":"object","x":""},
{"l":"api/scala/Product14$.html#unapply-3c4","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14](x: Product14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]): Option[Product14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]]","d":"scala.Product14","k":"def","x":""},
{"l":"api/scala/Product14.html#","e":false,"i":"","n":"Product14","t":"Product14[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14] extends Product","d":"scala","k":"trait","x":"Product14 is a Cartesian product of 14 components.\n"},
{"l":"api/scala/Product14.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product14","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product14.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product14","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product14.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product14","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product14.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product14","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product14.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product14","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product14.html#_14-0","e":false,"i":"","n":"_14","t":"_14: T14","d":"scala.Product14","k":"def","x":"A projection of element 14 of this Product."},
{"l":"api/scala/Product14.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product14","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product14.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product14","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product14.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product14","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product14.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product14","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product14.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product14","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product14.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product14","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product14.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product14","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product14.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product14","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product15$.html#","e":false,"i":"","n":"Product15","t":"Product15","d":"scala","k":"object","x":""},
{"l":"api/scala/Product15$.html#unapply-fffff1a4","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15](x: Product15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]): Option[Product15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]]","d":"scala.Product15","k":"def","x":""},
{"l":"api/scala/Product15.html#","e":false,"i":"","n":"Product15","t":"Product15[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15] extends Product","d":"scala","k":"trait","x":"Product15 is a Cartesian product of 15 components.\n"},
{"l":"api/scala/Product15.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product15","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product15.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product15","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product15.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product15","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product15.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product15","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product15.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product15","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product15.html#_14-0","e":false,"i":"","n":"_14","t":"_14: T14","d":"scala.Product15","k":"def","x":"A projection of element 14 of this Product."},
{"l":"api/scala/Product15.html#_15-0","e":false,"i":"","n":"_15","t":"_15: T15","d":"scala.Product15","k":"def","x":"A projection of element 15 of this Product."},
{"l":"api/scala/Product15.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product15","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product15.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product15","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product15.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product15","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product15.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product15","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product15.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product15","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product15.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product15","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product15.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product15","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product15.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product15","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product16$.html#","e":false,"i":"","n":"Product16","t":"Product16","d":"scala","k":"object","x":""},
{"l":"api/scala/Product16$.html#unapply-ffffff84","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16](x: Product16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): Option[Product16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]]","d":"scala.Product16","k":"def","x":""},
{"l":"api/scala/Product16.html#","e":false,"i":"","n":"Product16","t":"Product16[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16] extends Product","d":"scala","k":"trait","x":"Product16 is a Cartesian product of 16 components.\n"},
{"l":"api/scala/Product16.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product16","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product16.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product16","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product16.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product16","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product16.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product16","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product16.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product16","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product16.html#_14-0","e":false,"i":"","n":"_14","t":"_14: T14","d":"scala.Product16","k":"def","x":"A projection of element 14 of this Product."},
{"l":"api/scala/Product16.html#_15-0","e":false,"i":"","n":"_15","t":"_15: T15","d":"scala.Product16","k":"def","x":"A projection of element 15 of this Product."},
{"l":"api/scala/Product16.html#_16-0","e":false,"i":"","n":"_16","t":"_16: T16","d":"scala.Product16","k":"def","x":"A projection of element 16 of this Product."},
{"l":"api/scala/Product16.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product16","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product16.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product16","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product16.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product16","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product16.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product16","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product16.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product16","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product16.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product16","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product16.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product16","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product16.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product16","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product17$.html#","e":false,"i":"","n":"Product17","t":"Product17","d":"scala","k":"object","x":""},
{"l":"api/scala/Product17$.html#unapply-fffffd64","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17](x: Product17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]): Option[Product17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]]","d":"scala.Product17","k":"def","x":""},
{"l":"api/scala/Product17.html#","e":false,"i":"","n":"Product17","t":"Product17[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17] extends Product","d":"scala","k":"trait","x":"Product17 is a Cartesian product of 17 components.\n"},
{"l":"api/scala/Product17.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product17","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product17.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product17","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product17.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product17","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product17.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product17","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product17.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product17","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product17.html#_14-0","e":false,"i":"","n":"_14","t":"_14: T14","d":"scala.Product17","k":"def","x":"A projection of element 14 of this Product."},
{"l":"api/scala/Product17.html#_15-0","e":false,"i":"","n":"_15","t":"_15: T15","d":"scala.Product17","k":"def","x":"A projection of element 15 of this Product."},
{"l":"api/scala/Product17.html#_16-0","e":false,"i":"","n":"_16","t":"_16: T16","d":"scala.Product17","k":"def","x":"A projection of element 16 of this Product."},
{"l":"api/scala/Product17.html#_17-0","e":false,"i":"","n":"_17","t":"_17: T17","d":"scala.Product17","k":"def","x":"A projection of element 17 of this Product."},
{"l":"api/scala/Product17.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product17","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product17.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product17","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product17.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product17","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product17.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product17","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product17.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product17","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product17.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product17","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product17.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product17","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product17.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product17","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product18$.html#","e":false,"i":"","n":"Product18","t":"Product18","d":"scala","k":"object","x":""},
{"l":"api/scala/Product18$.html#unapply-fffffb44","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18](x: Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]): Option[Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]]","d":"scala.Product18","k":"def","x":""},
{"l":"api/scala/Product18.html#","e":false,"i":"","n":"Product18","t":"Product18[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18] extends Product","d":"scala","k":"trait","x":"Product18 is a Cartesian product of 18 components.\n"},
{"l":"api/scala/Product18.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product18","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product18.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product18","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product18.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product18","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product18.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product18","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product18.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product18","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product18.html#_14-0","e":false,"i":"","n":"_14","t":"_14: T14","d":"scala.Product18","k":"def","x":"A projection of element 14 of this Product."},
{"l":"api/scala/Product18.html#_15-0","e":false,"i":"","n":"_15","t":"_15: T15","d":"scala.Product18","k":"def","x":"A projection of element 15 of this Product."},
{"l":"api/scala/Product18.html#_16-0","e":false,"i":"","n":"_16","t":"_16: T16","d":"scala.Product18","k":"def","x":"A projection of element 16 of this Product."},
{"l":"api/scala/Product18.html#_17-0","e":false,"i":"","n":"_17","t":"_17: T17","d":"scala.Product18","k":"def","x":"A projection of element 17 of this Product."},
{"l":"api/scala/Product18.html#_18-0","e":false,"i":"","n":"_18","t":"_18: T18","d":"scala.Product18","k":"def","x":"A projection of element 18 of this Product."},
{"l":"api/scala/Product18.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product18","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product18.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product18","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product18.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product18","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product18.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product18","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product18.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product18","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product18.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product18","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product18.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product18","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product18.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product18","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product19$.html#","e":false,"i":"","n":"Product19","t":"Product19","d":"scala","k":"object","x":""},
{"l":"api/scala/Product19$.html#unapply-924","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19](x: Product19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]): Option[Product19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]]","d":"scala.Product19","k":"def","x":""},
{"l":"api/scala/Product19.html#","e":false,"i":"","n":"Product19","t":"Product19[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19] extends Product","d":"scala","k":"trait","x":"Product19 is a Cartesian product of 19 components.\n"},
{"l":"api/scala/Product19.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product19","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product19.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product19","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product19.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product19","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product19.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product19","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product19.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product19","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product19.html#_14-0","e":false,"i":"","n":"_14","t":"_14: T14","d":"scala.Product19","k":"def","x":"A projection of element 14 of this Product."},
{"l":"api/scala/Product19.html#_15-0","e":false,"i":"","n":"_15","t":"_15: T15","d":"scala.Product19","k":"def","x":"A projection of element 15 of this Product."},
{"l":"api/scala/Product19.html#_16-0","e":false,"i":"","n":"_16","t":"_16: T16","d":"scala.Product19","k":"def","x":"A projection of element 16 of this Product."},
{"l":"api/scala/Product19.html#_17-0","e":false,"i":"","n":"_17","t":"_17: T17","d":"scala.Product19","k":"def","x":"A projection of element 17 of this Product."},
{"l":"api/scala/Product19.html#_18-0","e":false,"i":"","n":"_18","t":"_18: T18","d":"scala.Product19","k":"def","x":"A projection of element 18 of this Product."},
{"l":"api/scala/Product19.html#_19-0","e":false,"i":"","n":"_19","t":"_19: T19","d":"scala.Product19","k":"def","x":"A projection of element 19 of this Product."},
{"l":"api/scala/Product19.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product19","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product19.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product19","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product19.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product19","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product19.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product19","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product19.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product19","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product19.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product19","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product19.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product19","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product19.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product19","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product2$.html#","e":false,"i":"","n":"Product2","t":"Product2","d":"scala","k":"object","x":""},
{"l":"api/scala/Product2$.html#unapply-5a","e":false,"i":"","n":"unapply","t":"unapply[T1, T2](x: Product2[T1, T2]): Option[Product2[T1, T2]]","d":"scala.Product2","k":"def","x":""},
{"l":"api/scala/Product2.html#","e":false,"i":"","n":"Product2","t":"Product2[+T1, +T2] extends Product","d":"scala","k":"trait","x":"Product2 is a Cartesian product of 2 components.\n"},
{"l":"api/scala/Product2.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product2","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product2.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product2","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product20$.html#","e":false,"i":"","n":"Product20","t":"Product20","d":"scala","k":"object","x":""},
{"l":"api/scala/Product20$.html#unapply-fffffa64","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20](x: Product20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]): Option[Product20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]]","d":"scala.Product20","k":"def","x":""},
{"l":"api/scala/Product20.html#","e":false,"i":"","n":"Product20","t":"Product20[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20] extends Product","d":"scala","k":"trait","x":"Product20 is a Cartesian product of 20 components.\n"},
{"l":"api/scala/Product20.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product20","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product20.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product20","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product20.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product20","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product20.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product20","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product20.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product20","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product20.html#_14-0","e":false,"i":"","n":"_14","t":"_14: T14","d":"scala.Product20","k":"def","x":"A projection of element 14 of this Product."},
{"l":"api/scala/Product20.html#_15-0","e":false,"i":"","n":"_15","t":"_15: T15","d":"scala.Product20","k":"def","x":"A projection of element 15 of this Product."},
{"l":"api/scala/Product20.html#_16-0","e":false,"i":"","n":"_16","t":"_16: T16","d":"scala.Product20","k":"def","x":"A projection of element 16 of this Product."},
{"l":"api/scala/Product20.html#_17-0","e":false,"i":"","n":"_17","t":"_17: T17","d":"scala.Product20","k":"def","x":"A projection of element 17 of this Product."},
{"l":"api/scala/Product20.html#_18-0","e":false,"i":"","n":"_18","t":"_18: T18","d":"scala.Product20","k":"def","x":"A projection of element 18 of this Product."},
{"l":"api/scala/Product20.html#_19-0","e":false,"i":"","n":"_19","t":"_19: T19","d":"scala.Product20","k":"def","x":"A projection of element 19 of this Product."},
{"l":"api/scala/Product20.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product20","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product20.html#_20-0","e":false,"i":"","n":"_20","t":"_20: T20","d":"scala.Product20","k":"def","x":"A projection of element 20 of this Product."},
{"l":"api/scala/Product20.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product20","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product20.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product20","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product20.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product20","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product20.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product20","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product20.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product20","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product20.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product20","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product20.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product20","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product21$.html#","e":false,"i":"","n":"Product21","t":"Product21","d":"scala","k":"object","x":""},
{"l":"api/scala/Product21$.html#unapply-fffff844","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21](x: Product21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]): Option[Product21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]]","d":"scala.Product21","k":"def","x":""},
{"l":"api/scala/Product21.html#","e":false,"i":"","n":"Product21","t":"Product21[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21] extends Product","d":"scala","k":"trait","x":"Product21 is a Cartesian product of 21 components.\n"},
{"l":"api/scala/Product21.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product21","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product21.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product21","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product21.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product21","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product21.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product21","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product21.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product21","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product21.html#_14-0","e":false,"i":"","n":"_14","t":"_14: T14","d":"scala.Product21","k":"def","x":"A projection of element 14 of this Product."},
{"l":"api/scala/Product21.html#_15-0","e":false,"i":"","n":"_15","t":"_15: T15","d":"scala.Product21","k":"def","x":"A projection of element 15 of this Product."},
{"l":"api/scala/Product21.html#_16-0","e":false,"i":"","n":"_16","t":"_16: T16","d":"scala.Product21","k":"def","x":"A projection of element 16 of this Product."},
{"l":"api/scala/Product21.html#_17-0","e":false,"i":"","n":"_17","t":"_17: T17","d":"scala.Product21","k":"def","x":"A projection of element 17 of this Product."},
{"l":"api/scala/Product21.html#_18-0","e":false,"i":"","n":"_18","t":"_18: T18","d":"scala.Product21","k":"def","x":"A projection of element 18 of this Product."},
{"l":"api/scala/Product21.html#_19-0","e":false,"i":"","n":"_19","t":"_19: T19","d":"scala.Product21","k":"def","x":"A projection of element 19 of this Product."},
{"l":"api/scala/Product21.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product21","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product21.html#_20-0","e":false,"i":"","n":"_20","t":"_20: T20","d":"scala.Product21","k":"def","x":"A projection of element 20 of this Product."},
{"l":"api/scala/Product21.html#_21-0","e":false,"i":"","n":"_21","t":"_21: T21","d":"scala.Product21","k":"def","x":"A projection of element 21 of this Product."},
{"l":"api/scala/Product21.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product21","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product21.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product21","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product21.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product21","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product21.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product21","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product21.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product21","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product21.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product21","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product21.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product21","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product22$.html#","e":false,"i":"","n":"Product22","t":"Product22","d":"scala","k":"object","x":""},
{"l":"api/scala/Product22$.html#unapply-624","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22](x: Product22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]): Option[Product22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]]","d":"scala.Product22","k":"def","x":""},
{"l":"api/scala/Product22.html#","e":false,"i":"","n":"Product22","t":"Product22[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21, +T22] extends Product","d":"scala","k":"trait","x":"Product22 is a Cartesian product of 22 components.\n"},
{"l":"api/scala/Product22.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product22","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product22.html#_10-0","e":false,"i":"","n":"_10","t":"_10: T10","d":"scala.Product22","k":"def","x":"A projection of element 10 of this Product."},
{"l":"api/scala/Product22.html#_11-0","e":false,"i":"","n":"_11","t":"_11: T11","d":"scala.Product22","k":"def","x":"A projection of element 11 of this Product."},
{"l":"api/scala/Product22.html#_12-0","e":false,"i":"","n":"_12","t":"_12: T12","d":"scala.Product22","k":"def","x":"A projection of element 12 of this Product."},
{"l":"api/scala/Product22.html#_13-0","e":false,"i":"","n":"_13","t":"_13: T13","d":"scala.Product22","k":"def","x":"A projection of element 13 of this Product."},
{"l":"api/scala/Product22.html#_14-0","e":false,"i":"","n":"_14","t":"_14: T14","d":"scala.Product22","k":"def","x":"A projection of element 14 of this Product."},
{"l":"api/scala/Product22.html#_15-0","e":false,"i":"","n":"_15","t":"_15: T15","d":"scala.Product22","k":"def","x":"A projection of element 15 of this Product."},
{"l":"api/scala/Product22.html#_16-0","e":false,"i":"","n":"_16","t":"_16: T16","d":"scala.Product22","k":"def","x":"A projection of element 16 of this Product."},
{"l":"api/scala/Product22.html#_17-0","e":false,"i":"","n":"_17","t":"_17: T17","d":"scala.Product22","k":"def","x":"A projection of element 17 of this Product."},
{"l":"api/scala/Product22.html#_18-0","e":false,"i":"","n":"_18","t":"_18: T18","d":"scala.Product22","k":"def","x":"A projection of element 18 of this Product."},
{"l":"api/scala/Product22.html#_19-0","e":false,"i":"","n":"_19","t":"_19: T19","d":"scala.Product22","k":"def","x":"A projection of element 19 of this Product."},
{"l":"api/scala/Product22.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product22","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product22.html#_20-0","e":false,"i":"","n":"_20","t":"_20: T20","d":"scala.Product22","k":"def","x":"A projection of element 20 of this Product."},
{"l":"api/scala/Product22.html#_21-0","e":false,"i":"","n":"_21","t":"_21: T21","d":"scala.Product22","k":"def","x":"A projection of element 21 of this Product."},
{"l":"api/scala/Product22.html#_22-0","e":false,"i":"","n":"_22","t":"_22: T22","d":"scala.Product22","k":"def","x":"A projection of element 22 of this Product."},
{"l":"api/scala/Product22.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product22","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product22.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product22","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product22.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product22","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product22.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product22","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product22.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product22","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product22.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product22","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product22.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product22","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Product3$.html#","e":false,"i":"","n":"Product3","t":"Product3","d":"scala","k":"object","x":""},
{"l":"api/scala/Product3$.html#unapply-79c","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3](x: Product3[T1, T2, T3]): Option[Product3[T1, T2, T3]]","d":"scala.Product3","k":"def","x":""},
{"l":"api/scala/Product3.html#","e":false,"i":"","n":"Product3","t":"Product3[+T1, +T2, +T3] extends Product","d":"scala","k":"trait","x":"Product3 is a Cartesian product of 3 components.\n"},
{"l":"api/scala/Product3.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product3","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product3.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product3","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product3.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product3","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product4$.html#","e":false,"i":"","n":"Product4","t":"Product4","d":"scala","k":"object","x":""},
{"l":"api/scala/Product4$.html#unapply-fffffede","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4](x: Product4[T1, T2, T3, T4]): Option[Product4[T1, T2, T3, T4]]","d":"scala.Product4","k":"def","x":""},
{"l":"api/scala/Product4.html#","e":false,"i":"","n":"Product4","t":"Product4[+T1, +T2, +T3, +T4] extends Product","d":"scala","k":"trait","x":"Product4 is a Cartesian product of 4 components.\n"},
{"l":"api/scala/Product4.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product4","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product4.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product4","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product4.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product4","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product4.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product4","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product5$.html#","e":false,"i":"","n":"Product5","t":"Product5","d":"scala","k":"object","x":""},
{"l":"api/scala/Product5$.html#unapply-fffff620","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5](x: Product5[T1, T2, T3, T4, T5]): Option[Product5[T1, T2, T3, T4, T5]]","d":"scala.Product5","k":"def","x":""},
{"l":"api/scala/Product5.html#","e":false,"i":"","n":"Product5","t":"Product5[+T1, +T2, +T3, +T4, +T5] extends Product","d":"scala","k":"trait","x":"Product5 is a Cartesian product of 5 components.\n"},
{"l":"api/scala/Product5.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product5","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product5.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product5","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product5.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product5","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product5.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product5","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product5.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product5","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product6$.html#","e":false,"i":"","n":"Product6","t":"Product6","d":"scala","k":"object","x":""},
{"l":"api/scala/Product6$.html#unapply-fffffd62","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6](x: Product6[T1, T2, T3, T4, T5, T6]): Option[Product6[T1, T2, T3, T4, T5, T6]]","d":"scala.Product6","k":"def","x":""},
{"l":"api/scala/Product6.html#","e":false,"i":"","n":"Product6","t":"Product6[+T1, +T2, +T3, +T4, +T5, +T6] extends Product","d":"scala","k":"trait","x":"Product6 is a Cartesian product of 6 components.\n"},
{"l":"api/scala/Product6.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product6","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product6.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product6","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product6.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product6","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product6.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product6","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product6.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product6","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product6.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product6","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product7$.html#","e":false,"i":"","n":"Product7","t":"Product7","d":"scala","k":"object","x":""},
{"l":"api/scala/Product7$.html#unapply-fffff4a4","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7](x: Product7[T1, T2, T3, T4, T5, T6, T7]): Option[Product7[T1, T2, T3, T4, T5, T6, T7]]","d":"scala.Product7","k":"def","x":""},
{"l":"api/scala/Product7.html#","e":false,"i":"","n":"Product7","t":"Product7[+T1, +T2, +T3, +T4, +T5, +T6, +T7] extends Product","d":"scala","k":"trait","x":"Product7 is a Cartesian product of 7 components.\n"},
{"l":"api/scala/Product7.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product7","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product7.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product7","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product7.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product7","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product7.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product7","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product7.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product7","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product7.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product7","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product7.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product7","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product8$.html#","e":false,"i":"","n":"Product8","t":"Product8","d":"scala","k":"object","x":""},
{"l":"api/scala/Product8$.html#unapply-be6","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8](x: Product8[T1, T2, T3, T4, T5, T6, T7, T8]): Option[Product8[T1, T2, T3, T4, T5, T6, T7, T8]]","d":"scala.Product8","k":"def","x":""},
{"l":"api/scala/Product8.html#","e":false,"i":"","n":"Product8","t":"Product8[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8] extends Product","d":"scala","k":"trait","x":"Product8 is a Cartesian product of 8 components.\n"},
{"l":"api/scala/Product8.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product8","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product8.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product8","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product8.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product8","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product8.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product8","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product8.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product8","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product8.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product8","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product8.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product8","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product8.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product8","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product9$.html#","e":false,"i":"","n":"Product9","t":"Product9","d":"scala","k":"object","x":""},
{"l":"api/scala/Product9$.html#unapply-328","e":false,"i":"","n":"unapply","t":"unapply[T1, T2, T3, T4, T5, T6, T7, T8, T9](x: Product9[T1, T2, T3, T4, T5, T6, T7, T8, T9]): Option[Product9[T1, T2, T3, T4, T5, T6, T7, T8, T9]]","d":"scala.Product9","k":"def","x":""},
{"l":"api/scala/Product9.html#","e":false,"i":"","n":"Product9","t":"Product9[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9] extends Product","d":"scala","k":"trait","x":"Product9 is a Cartesian product of 9 components.\n"},
{"l":"api/scala/Product9.html#_1-0","e":false,"i":"","n":"_1","t":"_1: T1","d":"scala.Product9","k":"def","x":"A projection of element 1 of this Product."},
{"l":"api/scala/Product9.html#_2-0","e":false,"i":"","n":"_2","t":"_2: T2","d":"scala.Product9","k":"def","x":"A projection of element 2 of this Product."},
{"l":"api/scala/Product9.html#_3-0","e":false,"i":"","n":"_3","t":"_3: T3","d":"scala.Product9","k":"def","x":"A projection of element 3 of this Product."},
{"l":"api/scala/Product9.html#_4-0","e":false,"i":"","n":"_4","t":"_4: T4","d":"scala.Product9","k":"def","x":"A projection of element 4 of this Product."},
{"l":"api/scala/Product9.html#_5-0","e":false,"i":"","n":"_5","t":"_5: T5","d":"scala.Product9","k":"def","x":"A projection of element 5 of this Product."},
{"l":"api/scala/Product9.html#_6-0","e":false,"i":"","n":"_6","t":"_6: T6","d":"scala.Product9","k":"def","x":"A projection of element 6 of this Product."},
{"l":"api/scala/Product9.html#_7-0","e":false,"i":"","n":"_7","t":"_7: T7","d":"scala.Product9","k":"def","x":"A projection of element 7 of this Product."},
{"l":"api/scala/Product9.html#_8-0","e":false,"i":"","n":"_8","t":"_8: T8","d":"scala.Product9","k":"def","x":"A projection of element 8 of this Product."},
{"l":"api/scala/Product9.html#_9-0","e":false,"i":"","n":"_9","t":"_9: T9","d":"scala.Product9","k":"def","x":"A projection of element 9 of this Product."},
{"l":"api/scala/Proxy.html#","e":false,"i":"","n":"Proxy","t":"Proxy","d":"scala","k":"trait","x":"This class implements a simple proxy that forwards all calls to\nthe public, non-final methods defined in class Any to another\nobject self.  Those methods are:"},
{"l":"api/scala/Proxy.html#self-0","e":false,"i":"","n":"self","t":"self: Any","d":"scala.Proxy","k":"def","x":""},
{"l":"api/scala/Proxy$.html#","e":false,"i":"","n":"Proxy","t":"Proxy","d":"scala","k":"object","x":""},
{"l":"api/scala/Proxy$$Typed.html#","e":false,"i":"","n":"Typed","t":"Typed[T] extends Proxy","d":"scala.Proxy","k":"trait","x":"A proxy which exposes the type it is proxying for via a type parameter.\n"},
{"l":"api/scala/Proxy$$Typed.html#self-0","e":false,"i":"","n":"self","t":"self: T","d":"scala.Proxy.Typed","k":"def","x":""},
{"l":"api/scala/Pure.html#","e":false,"i":"","n":"Pure","t":"Pure","d":"scala","k":"trait","x":""},
{"l":"api/scala/ScalaReflectionException.html#","e":false,"i":"","n":"ScalaReflectionException","t":"ScalaReflectionException(msg: String) extends Exception","d":"scala","k":"class","x":"An exception that indicates an error during Scala reflection"},
{"l":"api/scala/Selectable.html#","e":false,"i":"","n":"Selectable","t":"Selectable","d":"scala","k":"trait","x":""},
{"l":"api/scala/Selectable$.html#","e":false,"i":"","n":"Selectable","t":"Selectable","d":"scala","k":"object","x":""},
{"l":"api/scala/Selectable$.html#reflectiveSelectableFromLangReflectiveCalls-fffff8fc","e":false,"i":"","n":"reflectiveSelectableFromLangReflectiveCalls","t":"reflectiveSelectableFromLangReflectiveCalls(x: Any)(using reflectiveCalls): Selectable","d":"scala.Selectable","k":"def","x":""},
{"l":"api/scala/Selectable$$WithoutPreciseParameterTypes.html#","e":false,"i":"","n":"WithoutPreciseParameterTypes","t":"WithoutPreciseParameterTypes extends Selectable","d":"scala.Selectable","k":"trait","x":""},
{"l":"api/scala/SerialVersionUID.html#","e":false,"i":"","n":"SerialVersionUID","t":"SerialVersionUID(value: Long) extends ConstantAnnotation","d":"scala","k":"class","x":"Annotation for specifying the serialVersionUID field of a (serializable) class."},
{"l":"api/scala/Short.html#","e":false,"i":"","n":"Short","t":"Short() extends AnyVal","d":"scala","k":"class","x":"Short, a 16-bit signed integer (equivalent to Java's short primitive type) is a\nsubtype of scala.AnyVal. Instances of Short are not\nrepresented by an object in the underlying runtime system."},
{"l":"api/scala/Short.html#!=-890","e":false,"i":"","n":"!=","t":"!=(x: Byte): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Short.html#!=-e2c","e":false,"i":"","n":"!=","t":"!=(x: Short): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Short.html#!=-502","e":false,"i":"","n":"!=","t":"!=(x: Char): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Short.html#!=-ffffff99","e":false,"i":"","n":"!=","t":"!=(x: Int): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Short.html#!=-f9c","e":false,"i":"","n":"!=","t":"!=(x: Long): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Short.html#!=-fffffc4c","e":false,"i":"","n":"!=","t":"!=(x: Float): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Short.html#!=-e67","e":false,"i":"","n":"!=","t":"!=(x: Double): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is not equal to x, false otherwise."},
{"l":"api/scala/Short.html#%-857","e":false,"i":"","n":"%","t":"%(x: Byte): Int","d":"scala.Short","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Short.html#%-fffffbf3","e":false,"i":"","n":"%","t":"%(x: Short): Int","d":"scala.Short","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Short.html#%-dc9","e":false,"i":"","n":"%","t":"%(x: Char): Int","d":"scala.Short","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Short.html#%-fffffbe0","e":false,"i":"","n":"%","t":"%(x: Int): Int","d":"scala.Short","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Short.html#%-fffff788","e":false,"i":"","n":"%","t":"%(x: Long): Long","d":"scala.Short","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Short.html#%-fffffb80","e":false,"i":"","n":"%","t":"%(x: Float): Float","d":"scala.Short","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Short.html#%-5b2","e":false,"i":"","n":"%","t":"%(x: Double): Double","d":"scala.Short","k":"def","x":"Returns the remainder of the division of this value by x."},
{"l":"api/scala/Short.html#&-857","e":false,"i":"","n":"&","t":"&(x: Byte): Int","d":"scala.Short","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Short.html#&-fffffbf3","e":false,"i":"","n":"&","t":"&(x: Short): Int","d":"scala.Short","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Short.html#&-dc9","e":false,"i":"","n":"&","t":"&(x: Char): Int","d":"scala.Short","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Short.html#&-fffffbe0","e":false,"i":"","n":"&","t":"&(x: Int): Int","d":"scala.Short","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Short.html#&-fffff788","e":false,"i":"","n":"&","t":"&(x: Long): Long","d":"scala.Short","k":"def","x":"Returns the bitwise AND of this value and x."},
{"l":"api/scala/Short.html#*-857","e":false,"i":"","n":"*","t":"*(x: Byte): Int","d":"scala.Short","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Short.html#*-fffffbf3","e":false,"i":"","n":"*","t":"*(x: Short): Int","d":"scala.Short","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Short.html#*-dc9","e":false,"i":"","n":"*","t":"*(x: Char): Int","d":"scala.Short","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Short.html#*-fffffbe0","e":false,"i":"","n":"*","t":"*(x: Int): Int","d":"scala.Short","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Short.html#*-fffff788","e":false,"i":"","n":"*","t":"*(x: Long): Long","d":"scala.Short","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Short.html#*-fffffb80","e":false,"i":"","n":"*","t":"*(x: Float): Float","d":"scala.Short","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Short.html#*-5b2","e":false,"i":"","n":"*","t":"*(x: Double): Double","d":"scala.Short","k":"def","x":"Returns the product of this value and x."},
{"l":"api/scala/Short.html#+-fffff2ca","e":false,"i":"","n":"+","t":"+(x: String): String","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short.html#+-857","e":false,"i":"","n":"+","t":"+(x: Byte): Int","d":"scala.Short","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Short.html#+-fffffbf3","e":false,"i":"","n":"+","t":"+(x: Short): Int","d":"scala.Short","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Short.html#+-dc9","e":false,"i":"","n":"+","t":"+(x: Char): Int","d":"scala.Short","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Short.html#+-fffffbe0","e":false,"i":"","n":"+","t":"+(x: Int): Int","d":"scala.Short","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Short.html#+-fffff788","e":false,"i":"","n":"+","t":"+(x: Long): Long","d":"scala.Short","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Short.html#+-fffffb80","e":false,"i":"","n":"+","t":"+(x: Float): Float","d":"scala.Short","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Short.html#+-5b2","e":false,"i":"","n":"+","t":"+(x: Double): Double","d":"scala.Short","k":"def","x":"Returns the sum of this value and x."},
{"l":"api/scala/Short.html#--857","e":false,"i":"","n":"-","t":"-(x: Byte): Int","d":"scala.Short","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Short.html#--fffffbf3","e":false,"i":"","n":"-","t":"-(x: Short): Int","d":"scala.Short","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Short.html#--dc9","e":false,"i":"","n":"-","t":"-(x: Char): Int","d":"scala.Short","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Short.html#--fffffbe0","e":false,"i":"","n":"-","t":"-(x: Int): Int","d":"scala.Short","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Short.html#--fffff788","e":false,"i":"","n":"-","t":"-(x: Long): Long","d":"scala.Short","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Short.html#--fffffb80","e":false,"i":"","n":"-","t":"-(x: Float): Float","d":"scala.Short","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Short.html#--5b2","e":false,"i":"","n":"-","t":"-(x: Double): Double","d":"scala.Short","k":"def","x":"Returns the difference of this value and x."},
{"l":"api/scala/Short.html#/-857","e":false,"i":"","n":"/","t":"/(x: Byte): Int","d":"scala.Short","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Short.html#/-fffffbf3","e":false,"i":"","n":"/","t":"/(x: Short): Int","d":"scala.Short","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Short.html#/-dc9","e":false,"i":"","n":"/","t":"/(x: Char): Int","d":"scala.Short","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Short.html#/-fffffbe0","e":false,"i":"","n":"/","t":"/(x: Int): Int","d":"scala.Short","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Short.html#/-fffff788","e":false,"i":"","n":"/","t":"/(x: Long): Long","d":"scala.Short","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Short.html#/-fffffb80","e":false,"i":"","n":"/","t":"/(x: Float): Float","d":"scala.Short","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Short.html#/-5b2","e":false,"i":"","n":"/","t":"/(x: Double): Double","d":"scala.Short","k":"def","x":"Returns the quotient of this value and x."},
{"l":"api/scala/Short.html#<-890","e":false,"i":"","n":"<","t":"<(x: Byte): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Short.html#<-e2c","e":false,"i":"","n":"<","t":"<(x: Short): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Short.html#<-502","e":false,"i":"","n":"<","t":"<(x: Char): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Short.html#<-ffffff99","e":false,"i":"","n":"<","t":"<(x: Int): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Short.html#<-f9c","e":false,"i":"","n":"<","t":"<(x: Long): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Short.html#<-fffffc4c","e":false,"i":"","n":"<","t":"<(x: Float): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Short.html#<-e67","e":false,"i":"","n":"<","t":"<(x: Double): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than x, false otherwise."},
{"l":"api/scala/Short.html#<<-fffffbe0","e":false,"i":"","n":"<<","t":"<<(x: Int): Int","d":"scala.Short","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Short.html#<<-fffff563","e":false,"i":"","n":"<<","t":"<<(x: Long): Int","d":"scala.Short","k":"def","x":"Returns this value bit-shifted left by the specified number of bits,\n       filling in the new right bits with zeroes."},
{"l":"api/scala/Short.html#<=-890","e":false,"i":"","n":"<=","t":"<=(x: Byte): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#<=-e2c","e":false,"i":"","n":"<=","t":"<=(x: Short): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#<=-502","e":false,"i":"","n":"<=","t":"<=(x: Char): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#<=-ffffff99","e":false,"i":"","n":"<=","t":"<=(x: Int): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#<=-f9c","e":false,"i":"","n":"<=","t":"<=(x: Long): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#<=-fffffc4c","e":false,"i":"","n":"<=","t":"<=(x: Float): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#<=-e67","e":false,"i":"","n":"<=","t":"<=(x: Double): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is less than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#==-890","e":false,"i":"","n":"==","t":"==(x: Byte): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Short.html#==-e2c","e":false,"i":"","n":"==","t":"==(x: Short): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Short.html#==-502","e":false,"i":"","n":"==","t":"==(x: Char): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Short.html#==-ffffff99","e":false,"i":"","n":"==","t":"==(x: Int): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Short.html#==-f9c","e":false,"i":"","n":"==","t":"==(x: Long): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Short.html#==-fffffc4c","e":false,"i":"","n":"==","t":"==(x: Float): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Short.html#==-e67","e":false,"i":"","n":"==","t":"==(x: Double): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is equal to x, false otherwise."},
{"l":"api/scala/Short.html#>-890","e":false,"i":"","n":">","t":">(x: Byte): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Short.html#>-e2c","e":false,"i":"","n":">","t":">(x: Short): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Short.html#>-502","e":false,"i":"","n":">","t":">(x: Char): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Short.html#>-ffffff99","e":false,"i":"","n":">","t":">(x: Int): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Short.html#>-f9c","e":false,"i":"","n":">","t":">(x: Long): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Short.html#>-fffffc4c","e":false,"i":"","n":">","t":">(x: Float): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Short.html#>-e67","e":false,"i":"","n":">","t":">(x: Double): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than x, false otherwise."},
{"l":"api/scala/Short.html#>=-890","e":false,"i":"","n":">=","t":">=(x: Byte): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#>=-e2c","e":false,"i":"","n":">=","t":">=(x: Short): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#>=-502","e":false,"i":"","n":">=","t":">=(x: Char): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#>=-ffffff99","e":false,"i":"","n":">=","t":">=(x: Int): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#>=-f9c","e":false,"i":"","n":">=","t":">=(x: Long): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#>=-fffffc4c","e":false,"i":"","n":">=","t":">=(x: Float): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#>=-e67","e":false,"i":"","n":">=","t":">=(x: Double): Boolean","d":"scala.Short","k":"def","x":"Returns true if this value is greater than or equal to x, false otherwise."},
{"l":"api/scala/Short.html#>>-fffffbe0","e":false,"i":"","n":">>","t":">>(x: Int): Int","d":"scala.Short","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Short.html#>>-fffff563","e":false,"i":"","n":">>","t":">>(x: Long): Int","d":"scala.Short","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling in the left bits with the same value as the left-most bit of this.\n       The effect of this is to retain the sign of the value."},
{"l":"api/scala/Short.html#>>>-fffffbe0","e":false,"i":"","n":">>>","t":">>>(x: Int): Int","d":"scala.Short","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Short.html#>>>-fffff563","e":false,"i":"","n":">>>","t":">>>(x: Long): Int","d":"scala.Short","k":"def","x":"Returns this value bit-shifted right by the specified number of bits,\n       filling the new left bits with zeroes."},
{"l":"api/scala/Short.html#^-857","e":false,"i":"","n":"^","t":"^(x: Byte): Int","d":"scala.Short","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Short.html#^-fffffbf3","e":false,"i":"","n":"^","t":"^(x: Short): Int","d":"scala.Short","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Short.html#^-dc9","e":false,"i":"","n":"^","t":"^(x: Char): Int","d":"scala.Short","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Short.html#^-fffffbe0","e":false,"i":"","n":"^","t":"^(x: Int): Int","d":"scala.Short","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Short.html#^-fffff788","e":false,"i":"","n":"^","t":"^(x: Long): Long","d":"scala.Short","k":"def","x":"Returns the bitwise XOR of this value and x."},
{"l":"api/scala/Short.html#toByte-0","e":false,"i":"","n":"toByte","t":"toByte: Byte","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short.html#toChar-0","e":false,"i":"","n":"toChar","t":"toChar: Char","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short.html#toDouble-0","e":false,"i":"","n":"toDouble","t":"toDouble: Double","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short.html#toFloat-0","e":false,"i":"","n":"toFloat","t":"toFloat: Float","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short.html#toInt-0","e":false,"i":"","n":"toInt","t":"toInt: Int","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short.html#toLong-0","e":false,"i":"","n":"toLong","t":"toLong: Long","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short.html#toShort-0","e":false,"i":"","n":"toShort","t":"toShort: Short","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short.html#unary_+-0","e":false,"i":"","n":"unary_+","t":"unary_+: Int","d":"scala.Short","k":"def","x":"Returns this value, unmodified."},
{"l":"api/scala/Short.html#unary_--0","e":false,"i":"","n":"unary_-","t":"unary_-: Int","d":"scala.Short","k":"def","x":"Returns the negation of this value."},
{"l":"api/scala/Short.html#unary_~-0","e":false,"i":"","n":"unary_~","t":"unary_~: Int","d":"scala.Short","k":"def","x":"Returns the bitwise negation of this value."},
{"l":"api/scala/Short.html#|-857","e":false,"i":"","n":"|","t":"|(x: Byte): Int","d":"scala.Short","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Short.html#|-fffffbf3","e":false,"i":"","n":"|","t":"|(x: Short): Int","d":"scala.Short","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Short.html#|-dc9","e":false,"i":"","n":"|","t":"|(x: Char): Int","d":"scala.Short","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Short.html#|-fffffbe0","e":false,"i":"","n":"|","t":"|(x: Int): Int","d":"scala.Short","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Short.html#|-fffff788","e":false,"i":"","n":"|","t":"|(x: Long): Long","d":"scala.Short","k":"def","x":"Returns the bitwise OR of this value and x."},
{"l":"api/scala/Short$.html#","e":false,"i":"","n":"Short","t":"Short","d":"scala","k":"object","x":""},
{"l":"api/scala/Short$.html#MaxValue-0","e":false,"i":"","n":"MaxValue","t":"MaxValue: 32767","d":"scala.Short","k":"val","x":"The largest value representable as a Short."},
{"l":"api/scala/Short$.html#MinValue-0","e":false,"i":"","n":"MinValue","t":"MinValue: -32768","d":"scala.Short","k":"val","x":"The smallest value representable as a Short."},
{"l":"api/scala/Short$.html#box-fffff774","e":false,"i":"","n":"box","t":"box(x: Short): Short","d":"scala.Short","k":"def","x":"Transform a value type into a boxed reference type."},
{"l":"api/scala/Short$.html#short2double-fffff94d","e":false,"i":"","n":"short2double","t":"short2double(x: Short): Double","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short$.html#short2float-fffff560","e":false,"i":"","n":"short2float","t":"short2float(x: Short): Float","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short$.html#short2int-fffffbf3","e":false,"i":"","n":"short2int","t":"short2int(x: Short): Int","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short$.html#short2long-fffff2f8","e":false,"i":"","n":"short2long","t":"short2long(x: Short): Long","d":"scala.Short","k":"def","x":""},
{"l":"api/scala/Short$.html#unbox-a41","e":false,"i":"","n":"unbox","t":"unbox(x: Object): Short","d":"scala.Short","k":"def","x":"Transform a boxed type into a value type.  Note that this\nmethod is not typesafe: it accepts any Object, but will throw\nan exception if the argument is not a java.lang.Short."},
{"l":"api/scala/Singleton.html#","e":false,"i":"","n":"Singleton","t":"Singleton","d":"scala","k":"class","x":"Singleton is used by the compiler as a supertype for singleton types. This includes literal types,\nas they are also singleton types."},
{"l":"api/scala/Singleton.html#Self-0","e":false,"i":"","n":"Self","t":"Self","d":"scala.Singleton","k":"type","x":""},
{"l":"api/scala/Some.html#","e":false,"i":"","n":"Some","t":"Some[+A](value: A) extends Option[A]","d":"scala","k":"class","x":"Class Some[A] represents existing values of type\nA.\n"},
{"l":"api/scala/Some.html#get-0","e":false,"i":"","n":"get","t":"get: A","d":"scala.Some","k":"def","x":"Returns the option's value."},
{"l":"api/scala/Specializable.html#","e":false,"i":"","n":"Specializable","t":"Specializable","d":"scala","k":"trait","x":"A common supertype for companions of specializable types.\nShould not be extended in user code.\n"},
{"l":"api/scala/Specializable$.html#","e":false,"i":"","n":"Specializable","t":"Specializable","d":"scala","k":"object","x":""},
{"l":"api/scala/Specializable$.html#AllNumeric-0","e":false,"i":"","n":"AllNumeric","t":"AllNumeric: Group[(Byte, Short, Int, Long, Char, Float, Double)]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$.html#Arg-0","e":false,"i":"","n":"Arg","t":"Arg: Group[(Int, Long, Float, Double)]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$.html#Args-0","e":false,"i":"","n":"Args","t":"Args: Group[(Int, Long, Double)]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$.html#BestOfBreed-0","e":false,"i":"","n":"BestOfBreed","t":"BestOfBreed: Group[(Int, Double, Boolean, Unit, AnyRef)]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$.html#Bits32AndUp-0","e":false,"i":"","n":"Bits32AndUp","t":"Bits32AndUp: Group[(Int, Long, Float, Double)]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$.html#Everything-0","e":false,"i":"","n":"Everything","t":"Everything: Group[(Byte, Short, Int, Long, Char, Float, Double, Boolean, Unit, AnyRef)]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$.html#Integral-0","e":false,"i":"","n":"Integral","t":"Integral: Group[(Byte, Short, Int, Long, Char)]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$.html#Primitives-0","e":false,"i":"","n":"Primitives","t":"Primitives: Group[(Byte, Short, Int, Long, Char, Float, Double, Boolean, Unit)]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$.html#Return-0","e":false,"i":"","n":"Return","t":"Return: Group[(Int, Long, Float, Double, Boolean, Unit)]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$.html#Unit-0","e":false,"i":"","n":"Unit","t":"Unit: Group[Tuple1[Unit]]","d":"scala.Specializable","k":"val","x":""},
{"l":"api/scala/Specializable$$Group.html#","e":false,"i":"","n":"Group","t":"Group[T >: Null](value: T) extends SpecializedGroup","d":"scala.Specializable","k":"class","x":""},
{"l":"api/scala/Specializable$$SpecializedGroup.html#","e":false,"i":"","n":"SpecializedGroup","t":"SpecializedGroup","d":"scala.Specializable","k":"trait","x":""},
{"l":"api/scala/StringContext.html#","e":false,"i":"","n":"StringContext","t":"StringContext(parts: String*)","d":"scala","k":"class","x":"This class provides the basic mechanism to do String Interpolation.\nString Interpolation allows users\nto embed variable references directly in *processed* string literals.\nHere's an example:"},
{"l":"api/scala/StringContext.html#checkLengths-f23","e":false,"i":"","n":"checkLengths","t":"checkLengths(args: Seq[Any]): Unit","d":"scala.StringContext","k":"def","x":""},
{"l":"api/scala/StringContext.html#f-fffffd01","e":false,"i":"","n":"f","t":"f[A = Any](args: A*): String","d":"scala.StringContext","k":"def","x":"The formatted string interpolator."},
{"l":"api/scala/StringContext.html#raw-a90","e":false,"i":"","n":"raw","t":"raw(args: Any*): String","d":"scala.StringContext","k":"def","x":"The raw string interpolator."},
{"l":"api/scala/StringContext.html#s-a90","e":false,"i":"","n":"s","t":"s(args: Any*): String","d":"scala.StringContext","k":"def","x":"The simple string interpolator."},
{"l":"api/scala/StringContext.html#standardInterpolator-fffff961","e":false,"i":"","n":"standardInterpolator","t":"standardInterpolator(process: String => String, args: Seq[Any]): String","d":"scala.StringContext","k":"def","x":""},
{"l":"api/scala/StringContext$s$.html#","e":false,"i":"","n":"s","t":"s","d":"scala.StringContext","k":"object","x":""},
{"l":"api/scala/StringContext$s$.html#unapplySeq-fffffd22","e":false,"i":"","n":"unapplySeq","t":"unapplySeq(s: String): Option[Seq[String]]","d":"scala.StringContext.s","k":"def","x":"The simple string matcher."},
{"l":"api/scala/StringContext$.html#","e":false,"i":"","n":"StringContext","t":"StringContext","d":"scala","k":"object","x":""},
{"l":"api/scala/StringContext$.html#checkLengths-d4e","e":false,"i":"","n":"checkLengths","t":"checkLengths(args: Seq[Any], parts: Seq[String]): Unit","d":"scala.StringContext","k":"def","x":"Checks that the length of the given argument args is one less than the number\nof parts supplied to the StringContext.\n"},
{"l":"api/scala/StringContext$.html#glob-fffff8cd","e":false,"i":"","n":"glob","t":"glob(patternChunks: Seq[String], input: String): Option[Seq[String]]","d":"scala.StringContext","k":"def","x":"Linear time glob-matching implementation.\nAdapted from https://research.swtch.com/glob\n"},
{"l":"api/scala/StringContext$.html#processEscapes-fffff2ca","e":false,"i":"","n":"processEscapes","t":"processEscapes(str: String): String","d":"scala.StringContext","k":"def","x":"Expands standard Scala escape sequences in a string.\nEscape sequences are:\n control: \\b, \\t, \\n, \\f, \\r\n escape:  \\\\, \\\", \\'\n"},
{"l":"api/scala/StringContext$.html#standardInterpolator-d38","e":false,"i":"","n":"standardInterpolator","t":"standardInterpolator(process: String => String, args: Seq[Any], parts: Seq[String]): String","d":"scala.StringContext","k":"def","x":""},
{"l":"api/scala/StringContext$.html#treatEscapes-fffff2ca","e":false,"i":"","n":"treatEscapes","t":"treatEscapes(str: String): String","d":"scala.StringContext","k":"def","x":"Expands standard Scala escape sequences in a string.\nEscape sequences are:\n control: \\b, \\t, \\n, \\f, \\r\n escape:  \\\\, \\\", \\'\n"},
{"l":"api/scala/StringContext$$InvalidEscapeException.html#","e":false,"i":"","n":"InvalidEscapeException","t":"InvalidEscapeException(str: String, val index: Int) extends IllegalArgumentException","d":"scala.StringContext","k":"class","x":"An exception that is thrown if a string contains a backslash (\\) character\nthat does not start a valid escape sequence."},
{"l":"api/scala/StringContext$$InvalidEscapeException.html#index-0","e":false,"i":"","n":"index","t":"index: Int","d":"scala.StringContext.InvalidEscapeException","k":"val","x":""},
{"l":"api/scala/Symbol.html#","e":false,"i":"","n":"Symbol","t":"Symbol extends Serializable","d":"scala","k":"class","x":"This class provides a simple way to get unique objects for equal strings.\nSince symbols are interned, they can be compared using reference equality.\n"},
{"l":"api/scala/Symbol.html#name-0","e":false,"i":"","n":"name","t":"name: String","d":"scala.Symbol","k":"val","x":""},
{"l":"api/scala/Symbol$.html#","e":false,"i":"","n":"Symbol","t":"Symbol","d":"scala","k":"object","x":""},
{"l":"api/scala/Symbol$.html#unapply-fffffb50","e":false,"i":"","n":"unapply","t":"unapply(other: Symbol): Option[String]","d":"scala.Symbol","k":"def","x":""},
{"l":"api/scala/Tuple.html#","e":false,"i":"","n":"Tuple","t":"Tuple extends Product","d":"scala","k":"trait","x":""},
{"l":"api/scala/Tuple.html#*:-a82","e":false,"i":"","n":"*:","t":"*:[H, This >: this.type <: Tuple](x: H): H *: This","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#++-fffffc51","e":false,"i":"","n":"++","t":"++[This >: this.type <: Tuple](that: Tuple): Concat[This, that.type]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#:*-a82","e":false,"i":"","n":":*","t":":*[This >: this.type <: Tuple, L](x: L): Append[This, L]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#apply-3a9","e":false,"i":"","n":"apply","t":"apply[This >: this.type <: Tuple](n: Int): Elem[This, n.type]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#drop-5d1","e":false,"i":"","n":"drop","t":"drop[This >: this.type <: Tuple](n: Int): Drop[This, n.type]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#head-fffff7c4","e":false,"i":"","n":"head","t":"head[This >: this.type <: Tuple]: Head[This]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#init-ffffff96","e":false,"i":"","n":"init","t":"init[This >: this.type <: Tuple]: Init[This]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#last-fffff7c4","e":false,"i":"","n":"last","t":"last[This >: this.type <: Tuple]: Last[This]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#map-fffff3e7","e":false,"i":"","n":"map","t":"map[F[_]](f: [t] => t => F[t]): Map[this.type, F]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#reverse-ffffff96","e":false,"i":"","n":"reverse","t":"reverse[This >: this.type <: Tuple]: Reverse[This]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#size-616","e":false,"i":"","n":"size","t":"size[This >: this.type <: Tuple]: Size[This]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#splitAt-448","e":false,"i":"","n":"splitAt","t":"splitAt[This >: this.type <: Tuple](n: Int): Split[This, n.type]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#tail-ffffff96","e":false,"i":"","n":"tail","t":"tail[This >: this.type <: Tuple]: Tail[This]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#take-5d1","e":false,"i":"","n":"take","t":"take[This >: this.type <: Tuple](n: Int): Take[This, n.type]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#toArray-0","e":false,"i":"","n":"toArray","t":"toArray: Array[Object]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#toIArray-0","e":false,"i":"","n":"toIArray","t":"toIArray: IArray[Object]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#toList-0","e":false,"i":"","n":"toList","t":"toList: List[Union[this.type]]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple.html#zip-fffffd12","e":false,"i":"","n":"zip","t":"zip[This >: this.type <: Tuple, T2 <: Tuple](t2: T2): Zip[This, T2]","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple$.html#","e":false,"i":"","n":"Tuple","t":"Tuple","d":"scala","k":"object","x":""},
{"l":"api/scala/Tuple$.html#++-0","e":false,"i":"","n":"++","t":"++[X <: Tuple, +Y <: Tuple] = Concat[X, Y]","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#:*-0","e":false,"i":"","n":":*","t":":*[X <: Tuple, Y] = Append[X, Y]","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Append-0","e":false,"i":"","n":"Append","t":"Append[X <: Tuple, Y] = X match {\n  case EmptyTuple => Y *: EmptyTuple\n  case x *: xs => x *: Append[xs, Y]\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Concat-0","e":false,"i":"","n":"Concat","t":"Concat[X <: Tuple, +Y <: Tuple] = X match {\n  case EmptyTuple => Y\n  case x1 *: xs1 => x1 *: Concat[xs1, Y]\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Contains-0","e":false,"i":"","n":"Contains","t":"Contains[X <: Tuple, Y] = X match {\n  case Y *: _$13 => true\n  case _$14 *: xs => Contains[xs, Y]\n  case EmptyTuple => false\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Disjoint-0","e":false,"i":"","n":"Disjoint","t":"Disjoint[X <: Tuple, Y <: Tuple] = X match {\n  case x *: xs => Contains[Y, x] match {\n    case true => false\n    case false => Disjoint[xs, Y]\n  }\n  case EmptyTuple => true\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Drop-0","e":false,"i":"","n":"Drop","t":"Drop[T <: Tuple, N <: Int] = N match {\n  case 0 => T\n  case S[n1] => T match {\n    case EmptyTuple => EmptyTuple\n    case x *: xs => Drop[xs, n1]\n  }\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Elem-0","e":false,"i":"","n":"Elem","t":"Elem[X <: Tuple, N <: Int] = X match {\n  case x *: xs => N match {\n    case 0 => x\n    case S[n1] => Elem[xs, n1]\n  }\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Filter-0","e":false,"i":"","n":"Filter","t":"Filter[Tup <: Tuple, P <: ([_ <: Union[Tup]] =>> Boolean)] = Tup match {\n  case EmptyTuple => EmptyTuple\n  case h *: t => P[h] match {\n    case true => h *: Filter[t, P]\n    case false => Filter[t, P]\n  }\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#FlatMap-0","e":false,"i":"","n":"FlatMap","t":"FlatMap[Tup <: Tuple, F <: ([_ <: Union[Tup]] =>> Tuple)] = Tup match {\n  case EmptyTuple => EmptyTuple\n  case h *: t => Concat[F[h], FlatMap[t, F]]\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Fold-0","e":false,"i":"","n":"Fold","t":"Fold[Tup <: Tuple, Z, F[_, _]] = Tup match {\n  case EmptyTuple => Z\n  case h *: t => F[h, Fold[t, Z, F]]\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Head-0","e":false,"i":"","n":"Head","t":"Head[X <: Tuple] = X match {\n  case x *: _$15 => x\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Init-0","e":false,"i":"","n":"Init","t":"Init[X <: Tuple] = X match {\n  case _$11 *: EmptyTuple => EmptyTuple\n  case x *: xs => x *: Init[xs]\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#InverseMap-0","e":false,"i":"","n":"InverseMap","t":"InverseMap[X <: Tuple, F[_]] = X match {\n  case F[x] *: t => x *: InverseMap[t, F]\n  case EmptyTuple => EmptyTuple\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#IsMappedBy-0","e":false,"i":"","n":"IsMappedBy","t":"IsMappedBy[F[_]] = [X <: Tuple] =>> X =:= Map[InverseMap[X, F], F]","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Last-0","e":false,"i":"","n":"Last","t":"Last[X <: Tuple] = X match {\n  case x *: EmptyTuple => x\n  case _$12 *: xs => Last[xs]\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Map-0","e":false,"i":"","n":"Map","t":"Map[Tup <: Tuple, F[_ <: Union[Tup]]] = Tup match {\n  case EmptyTuple => EmptyTuple\n  case h *: t => F[h] *: Map[t, F]\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Reverse-0","e":false,"i":"","n":"Reverse","t":"Reverse[X <: Tuple] = ReverseOnto[X, EmptyTuple]","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#ReverseOnto-0","e":false,"i":"","n":"ReverseOnto","t":"ReverseOnto[From <: Tuple, +To <: Tuple] = From match {\n  case x *: xs => ReverseOnto[xs, x *: To]\n  case EmptyTuple => To\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Size-0","e":false,"i":"","n":"Size","t":"Size[X <: Tuple] = X match {\n  case EmptyTuple => 0\n  case x *: xs => S[Size[xs]]\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Split-0","e":false,"i":"","n":"Split","t":"Split[T <: Tuple, N <: Int] = (Take[T, N], Drop[T, N])","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Tail-0","e":false,"i":"","n":"Tail","t":"Tail[X <: Tuple] = X match {\n  case _$16 *: xs => xs\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Take-0","e":false,"i":"","n":"Take","t":"Take[T <: Tuple, N <: Int] = N match {\n  case 0 => EmptyTuple\n  case S[n1] => T match {\n    case EmptyTuple => EmptyTuple\n    case x *: xs => x *: Take[xs, n1]\n  }\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Union-0","e":false,"i":"","n":"Union","t":"Union[T <: Tuple] = Fold[T, Nothing, [x, y] =>> x | y]","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#Zip-0","e":false,"i":"","n":"Zip","t":"Zip[T1 <: Tuple, T2 <: Tuple] = (T1, T2) match {\n  case (h1 *: t1, h2 *: t2) => (h1, h2) *: Zip[t1, t2]\n  case Any => EmptyTuple\n}","d":"scala.Tuple","k":"type","x":""},
{"l":"api/scala/Tuple$.html#apply-bd","e":false,"i":"","n":"apply","t":"apply(): EmptyTuple","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple$.html#apply-ee3","e":false,"i":"","n":"apply","t":"apply[T](x: T): T *: EmptyTuple","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple$.html#canEqualEmptyTuple-0","e":false,"i":"","n":"canEqualEmptyTuple","t":"canEqualEmptyTuple: CanEqual[EmptyTuple, EmptyTuple]","d":"scala.Tuple","k":"given","x":""},
{"l":"api/scala/Tuple$.html#canEqualTuple-ffffff58","e":false,"i":"","n":"canEqualTuple","t":"canEqualTuple[H1, T1 <: Tuple, H2, T2 <: Tuple](using eqHead: CanEqual[H1, H2], eqTail: CanEqual[T1, T2]): CanEqual[H1 *: T1, H2 *: T2]","d":"scala.Tuple","k":"given","x":""},
{"l":"api/scala/Tuple$.html#fromArray-ee3","e":false,"i":"","n":"fromArray","t":"fromArray[T](xs: Array[T]): Tuple","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple$.html#fromIArray-ee3","e":false,"i":"","n":"fromIArray","t":"fromIArray[T](xs: IArray[T]): Tuple","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple$.html#fromProduct-fffff760","e":false,"i":"","n":"fromProduct","t":"fromProduct(product: Product): Tuple","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple$.html#fromProductTyped-96d","e":false,"i":"","n":"fromProductTyped","t":"fromProductTyped[P <: Product](p: P)(using m: ProductOf[P]): m.MirroredElemTypes","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple$.html#unapply-fffff1c3","e":false,"i":"","n":"unapply","t":"unapply(x: EmptyTuple): true","d":"scala.Tuple","k":"def","x":""},
{"l":"api/scala/Tuple1.html#","e":false,"i":"","n":"Tuple1","t":"Tuple1[+T1](_1: T1) extends Product1[T1]","d":"scala","k":"class","x":"A tuple of 1 elements; the canonical representation of a scala.Product1.\n"},
{"l":"api/scala/Tuple10.html#","e":false,"i":"","n":"Tuple10","t":"Tuple10[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10) extends Product10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]","d":"scala","k":"class","x":"A tuple of 10 elements; the canonical representation of a scala.Product10.\n"},
{"l":"api/scala/Tuple11.html#","e":false,"i":"","n":"Tuple11","t":"Tuple11[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11) extends Product11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]","d":"scala","k":"class","x":"A tuple of 11 elements; the canonical representation of a scala.Product11.\n"},
{"l":"api/scala/Tuple12.html#","e":false,"i":"","n":"Tuple12","t":"Tuple12[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12) extends Product12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]","d":"scala","k":"class","x":"A tuple of 12 elements; the canonical representation of a scala.Product12.\n"},
{"l":"api/scala/Tuple13.html#","e":false,"i":"","n":"Tuple13","t":"Tuple13[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13) extends Product13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]","d":"scala","k":"class","x":"A tuple of 13 elements; the canonical representation of a scala.Product13.\n"},
{"l":"api/scala/Tuple14.html#","e":false,"i":"","n":"Tuple14","t":"Tuple14[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14) extends Product14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]","d":"scala","k":"class","x":"A tuple of 14 elements; the canonical representation of a scala.Product14.\n"},
{"l":"api/scala/Tuple15.html#","e":false,"i":"","n":"Tuple15","t":"Tuple15[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15) extends Product15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]","d":"scala","k":"class","x":"A tuple of 15 elements; the canonical representation of a scala.Product15.\n"},
{"l":"api/scala/Tuple16.html#","e":false,"i":"","n":"Tuple16","t":"Tuple16[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16) extends Product16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]","d":"scala","k":"class","x":"A tuple of 16 elements; the canonical representation of a scala.Product16.\n"},
{"l":"api/scala/Tuple17.html#","e":false,"i":"","n":"Tuple17","t":"Tuple17[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17) extends Product17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]","d":"scala","k":"class","x":"A tuple of 17 elements; the canonical representation of a scala.Product17.\n"},
{"l":"api/scala/Tuple18.html#","e":false,"i":"","n":"Tuple18","t":"Tuple18[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18) extends Product18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]","d":"scala","k":"class","x":"A tuple of 18 elements; the canonical representation of a scala.Product18.\n"},
{"l":"api/scala/Tuple19.html#","e":false,"i":"","n":"Tuple19","t":"Tuple19[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18, _19: T19) extends Product19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]","d":"scala","k":"class","x":"A tuple of 19 elements; the canonical representation of a scala.Product19.\n"},
{"l":"api/scala/Tuple2.html#","e":false,"i":"","n":"Tuple2","t":"Tuple2[+T1, +T2](_1: T1, _2: T2) extends Product2[T1, T2]","d":"scala","k":"class","x":"A tuple of 2 elements; the canonical representation of a scala.Product2.\n"},
{"l":"api/scala/Tuple2.html#swap-0","e":false,"i":"","n":"swap","t":"swap: (T2, T1)","d":"scala.Tuple2","k":"def","x":"Swaps the elements of this Tuple."},
{"l":"api/scala/Tuple20.html#","e":false,"i":"","n":"Tuple20","t":"Tuple20[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18, _19: T19, _20: T20) extends Product20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]","d":"scala","k":"class","x":"A tuple of 20 elements; the canonical representation of a scala.Product20.\n"},
{"l":"api/scala/Tuple21.html#","e":false,"i":"","n":"Tuple21","t":"Tuple21[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18, _19: T19, _20: T20, _21: T21) extends Product21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]","d":"scala","k":"class","x":"A tuple of 21 elements; the canonical representation of a scala.Product21.\n"},
{"l":"api/scala/Tuple22.html#","e":false,"i":"","n":"Tuple22","t":"Tuple22[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9, +T10, +T11, +T12, +T13, +T14, +T15, +T16, +T17, +T18, +T19, +T20, +T21, +T22](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9, _10: T10, _11: T11, _12: T12, _13: T13, _14: T14, _15: T15, _16: T16, _17: T17, _18: T18, _19: T19, _20: T20, _21: T21, _22: T22) extends Product22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22]","d":"scala","k":"class","x":"A tuple of 22 elements; the canonical representation of a scala.Product22.\n"},
{"l":"api/scala/Tuple3.html#","e":false,"i":"","n":"Tuple3","t":"Tuple3[+T1, +T2, +T3](_1: T1, _2: T2, _3: T3) extends Product3[T1, T2, T3]","d":"scala","k":"class","x":"A tuple of 3 elements; the canonical representation of a scala.Product3.\n"},
{"l":"api/scala/Tuple4.html#","e":false,"i":"","n":"Tuple4","t":"Tuple4[+T1, +T2, +T3, +T4](_1: T1, _2: T2, _3: T3, _4: T4) extends Product4[T1, T2, T3, T4]","d":"scala","k":"class","x":"A tuple of 4 elements; the canonical representation of a scala.Product4.\n"},
{"l":"api/scala/Tuple5.html#","e":false,"i":"","n":"Tuple5","t":"Tuple5[+T1, +T2, +T3, +T4, +T5](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5) extends Product5[T1, T2, T3, T4, T5]","d":"scala","k":"class","x":"A tuple of 5 elements; the canonical representation of a scala.Product5.\n"},
{"l":"api/scala/Tuple6.html#","e":false,"i":"","n":"Tuple6","t":"Tuple6[+T1, +T2, +T3, +T4, +T5, +T6](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6) extends Product6[T1, T2, T3, T4, T5, T6]","d":"scala","k":"class","x":"A tuple of 6 elements; the canonical representation of a scala.Product6.\n"},
{"l":"api/scala/Tuple7.html#","e":false,"i":"","n":"Tuple7","t":"Tuple7[+T1, +T2, +T3, +T4, +T5, +T6, +T7](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7) extends Product7[T1, T2, T3, T4, T5, T6, T7]","d":"scala","k":"class","x":"A tuple of 7 elements; the canonical representation of a scala.Product7.\n"},
{"l":"api/scala/Tuple8.html#","e":false,"i":"","n":"Tuple8","t":"Tuple8[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8) extends Product8[T1, T2, T3, T4, T5, T6, T7, T8]","d":"scala","k":"class","x":"A tuple of 8 elements; the canonical representation of a scala.Product8.\n"},
{"l":"api/scala/Tuple9.html#","e":false,"i":"","n":"Tuple9","t":"Tuple9[+T1, +T2, +T3, +T4, +T5, +T6, +T7, +T8, +T9](_1: T1, _2: T2, _3: T3, _4: T4, _5: T5, _6: T6, _7: T7, _8: T8, _9: T9) extends Product9[T1, T2, T3, T4, T5, T6, T7, T8, T9]","d":"scala","k":"class","x":"A tuple of 9 elements; the canonical representation of a scala.Product9.\n"},
{"l":"api/scala/UninitializedError.html#","e":false,"i":"","n":"UninitializedError","t":"UninitializedError extends RuntimeException","d":"scala","k":"class","x":"This class represents uninitialized variable/value errors.\n"},
{"l":"api/scala/UninitializedFieldError.html#","e":false,"i":"","n":"UninitializedFieldError","t":"UninitializedFieldError(msg: String) extends RuntimeException","d":"scala","k":"class","x":"This class implements errors which are thrown whenever a\nfield is used before it has been initialized."},
{"l":"api/scala/UninitializedFieldError.html#<init>-ae","e":false,"i":"","n":"this","t":"this(obj: Any)","d":"scala.UninitializedFieldError","k":"def","x":""},
{"l":"api/scala/Unit.html#","e":false,"i":"","n":"Unit","t":"Unit() extends AnyVal","d":"scala","k":"class","x":"Unit is a subtype of scala.AnyVal. There is only one value of type\nUnit, (), and it is not represented by any object in the underlying\nruntime system. A method with return type Unit is analogous to a Java\nmethod which is declared void.\n"},
{"l":"api/scala/Unit$.html#","e":false,"i":"","n":"Unit","t":"Unit","d":"scala","k":"object","x":""},
{"l":"api/scala/Unit$.html#box-fffff200","e":false,"i":"","n":"box","t":"box(x: Unit): BoxedUnit","d":"scala.Unit","k":"def","x":"Transform a value type into a boxed reference type."},
{"l":"api/scala/Unit$.html#unbox-fffff71f","e":false,"i":"","n":"unbox","t":"unbox(x: Object): Unit","d":"scala.Unit","k":"def","x":"Transform a boxed type into a value type.  Note that this\nmethod is not typesafe: it accepts any Object, but will throw\nan exception if the argument is not a scala.runtime.BoxedUnit."},
{"l":"api/scala/ValueOf.html#","e":false,"i":"","n":"ValueOf","t":"ValueOf[T](val value: T) extends AnyVal","d":"scala","k":"class","x":"ValueOf[T] provides the unique value of the type T where T is a type which has a\nsingle inhabitant. Eligible types are singleton types of the form stablePath.type,\nUnit and singleton types corresponding to value literals."},
{"l":"api/scala/ValueOf.html#value-0","e":false,"i":"","n":"value","t":"value: T","d":"scala.ValueOf","k":"val","x":""},
{"l":"api/scala/deprecated.html#","e":false,"i":"","n":"deprecated","t":"deprecated(message: String, since: String) extends ConstantAnnotation","d":"scala","k":"class","x":"An annotation that designates that a definition is deprecated.\nA deprecation warning is issued upon usage of the annotated definition."},
{"l":"api/scala/deprecatedInheritance.html#","e":false,"i":"","n":"deprecatedInheritance","t":"deprecatedInheritance(message: String, since: String) extends ConstantAnnotation","d":"scala","k":"class","x":"An annotation that designates that inheriting from a class is deprecated."},
{"l":"api/scala/deprecatedName.html#","e":false,"i":"","n":"deprecatedName","t":"deprecatedName(name: String, since: String) extends StaticAnnotation","d":"scala","k":"class","x":"An annotation that designates that the name of a parameter is deprecated."},
{"l":"api/scala/deprecatedName.html#<init>-1cb","e":false,"i":"","n":"this","t":"this(name: Symbol, since: String)","d":"scala.deprecatedName","k":"def","x":""},
{"l":"api/scala/deprecatedName.html#<init>-fe6","e":false,"i":"","n":"this","t":"this(name: Symbol)","d":"scala.deprecatedName","k":"def","x":""},
{"l":"api/scala/deprecatedOverriding.html#","e":false,"i":"","n":"deprecatedOverriding","t":"deprecatedOverriding(message: String, since: String) extends ConstantAnnotation","d":"scala","k":"class","x":"An annotation that designates that overriding a member is deprecated."},
{"l":"api/scala/inline.html#","e":false,"i":"","n":"inline","t":"inline extends StaticAnnotation","d":"scala","k":"class","x":"An annotation for methods that the optimizer should inline."},
{"l":"api/scala/language$.html#","e":false,"i":"","n":"language","t":"language","d":"scala","k":"object","x":"The scala.language object controls the language features available to the programmer, as proposed in the\nSIP-18 document."},
{"l":"api/scala/language$.html#dynamics-0","e":false,"i":"","n":"dynamics","t":"dynamics: dynamics","d":"scala.language","k":"val","x":"Only where this feature is enabled, can direct or indirect subclasses of trait scala.Dynamic\nbe defined. If dynamics is not enabled, a definition of a class, trait,\nor object that has Dynamic as a base trait is rejected by the compiler."},
{"l":"api/scala/language$.html#existentials-0","e":false,"i":"","n":"existentials","t":"existentials: existentials","d":"scala.language","k":"val","x":"Where this feature is enabled, existential types that cannot be expressed as wildcard\ntypes can be written and are allowed in inferred types of values or return\ntypes of methods. If existentials is not enabled, those cases will trigger\na warning from the compiler."},
{"l":"api/scala/language$.html#higherKinds-0","e":false,"i":"","n":"higherKinds","t":"higherKinds: higherKinds","d":"scala.language","k":"val","x":"Where this feature is enabled, higher-kinded types can be written.\nIf higherKinds is not enabled, a higher-kinded type such as F[A]\nwill trigger a warning from the compiler."},
{"l":"api/scala/language$.html#implicitConversions-0","e":false,"i":"","n":"implicitConversions","t":"implicitConversions: implicitConversions","d":"scala.language","k":"val","x":"Where this feature is enabled, definitions of implicit conversion methods are allowed.\nIf implicitConversions is not enabled, the definition of an implicit\nconversion method will trigger a warning from the compiler."},
{"l":"api/scala/language$.html#postfixOps-0","e":false,"i":"","n":"postfixOps","t":"postfixOps: postfixOps","d":"scala.language","k":"val","x":"Only where this feature is enabled, is postfix operator notation (expr op) permitted.\nIf postfixOps is not enabled, an expression using postfix notation is rejected by the compiler."},
{"l":"api/scala/language$.html#reflectiveCalls-0","e":false,"i":"","n":"reflectiveCalls","t":"reflectiveCalls: reflectiveCalls","d":"scala.language","k":"val","x":"Where this feature is enabled, accesses to members of structural types that need\nreflection are supported. If reflectiveCalls is not enabled, an expression\nrequiring reflection will trigger a warning from the compiler."},
{"l":"api/scala/runtime/stdLibPatches/language$$3/0$.html#","e":false,"i":"","n":"3.0","t":"3.0","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/0$minusmigration$$.html#","e":false,"i":"","n":"3.0-migration","t":"3.0-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/1$.html#","e":false,"i":"","n":"3.1","t":"3.1","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/1$minusmigration$$.html#","e":false,"i":"","n":"3.1-migration","t":"3.1-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/2$.html#","e":false,"i":"","n":"3.2","t":"3.2","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/2$minusmigration$$.html#","e":false,"i":"","n":"3.2-migration","t":"3.2-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/3$.html#","e":false,"i":"","n":"3.3","t":"3.3","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/3$minusmigration$$.html#","e":false,"i":"","n":"3.3-migration","t":"3.3-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/4$.html#","e":false,"i":"","n":"3.4","t":"3.4","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/4$minusmigration$$.html#","e":false,"i":"","n":"3.4-migration","t":"3.4-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/5$.html#","e":false,"i":"","n":"3.5","t":"3.5","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/5$minusmigration$$.html#","e":false,"i":"","n":"3.5-migration","t":"3.5-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/6$.html#","e":false,"i":"","n":"3.6","t":"3.6","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/6$minusmigration$$.html#","e":false,"i":"","n":"3.6-migration","t":"3.6-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/7$.html#","e":false,"i":"","n":"3.7","t":"3.7","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/7$minusmigration$$.html#","e":false,"i":"","n":"3.7-migration","t":"3.7-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/8$.html#","e":false,"i":"","n":"3.8","t":"3.8","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/8$minusmigration$$.html#","e":false,"i":"","n":"3.8-migration","t":"3.8-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/9$.html#","e":false,"i":"","n":"3.9","t":"3.9","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$3/9$minusmigration$$.html#","e":false,"i":"","n":"3.9-migration","t":"3.9-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$adhocExtensions$.html#","e":false,"i":"","n":"adhocExtensions","t":"adhocExtensions","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$deprecated$.html#","e":false,"i":"","n":"deprecated","t":"deprecated","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$deprecated$$symbolLiterals$.html#","e":false,"i":"","n":"symbolLiterals","t":"symbolLiterals","d":"scala.language.deprecated","k":"object","x":""},
{"l":"api/scala/language$$experimental$.html#","e":false,"i":"","n":"experimental","t":"experimental","d":"scala.language","k":"object","x":"The experimental object contains features that are known to have unstable API or\nbehavior that may change in future releases."},
{"l":"api/scala/language$$experimental$.html#macros-0","e":false,"i":"","n":"macros","t":"macros: macros","d":"scala.language.experimental","k":"val","x":"Only where this feature is enabled, are macro definitions allowed.\nIf macros is not enabled, macro definitions are rejected by the compiler."},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$betterFors$.html#","e":false,"i":"","n":"betterFors","t":"betterFors","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$betterMatchTypeExtractors$.html#","e":false,"i":"","n":"betterMatchTypeExtractors","t":"betterMatchTypeExtractors","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$captureChecking$.html#","e":false,"i":"","n":"captureChecking","t":"captureChecking","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$clauseInterleaving$.html#","e":false,"i":"","n":"clauseInterleaving","t":"clauseInterleaving","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$erasedDefinitions$.html#","e":false,"i":"","n":"erasedDefinitions","t":"erasedDefinitions","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$fewerBraces$.html#","e":false,"i":"","n":"fewerBraces","t":"fewerBraces","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$genericNumberLiterals$.html#","e":false,"i":"","n":"genericNumberLiterals","t":"genericNumberLiterals","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$into$.html#","e":false,"i":"","n":"into","t":"into","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$modularity$.html#","e":false,"i":"","n":"modularity","t":"modularity","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$namedTuples$.html#","e":false,"i":"","n":"namedTuples","t":"namedTuples","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$namedTypeArguments$.html#","e":false,"i":"","n":"namedTypeArguments","t":"namedTypeArguments","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$packageObjectValues$.html#","e":false,"i":"","n":"packageObjectValues","t":"packageObjectValues","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$pureFunctions$.html#","e":false,"i":"","n":"pureFunctions","t":"pureFunctions","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$quotedPatternsWithPolymorphicFunctions$.html#","e":false,"i":"","n":"quotedPatternsWithPolymorphicFunctions","t":"quotedPatternsWithPolymorphicFunctions","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$relaxedExtensionImports$.html#","e":false,"i":"","n":"relaxedExtensionImports","t":"relaxedExtensionImports","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$saferExceptions$.html#","e":false,"i":"","n":"saferExceptions","t":"saferExceptions","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$experimental$$separationChecking$.html#","e":false,"i":"","n":"separationChecking","t":"separationChecking","d":"scala.language.experimental","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$future$.html#","e":false,"i":"","n":"future","t":"future","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$future$minusmigration$$.html#","e":false,"i":"","n":"future-migration","t":"future-migration","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$noAutoTupling$.html#","e":false,"i":"","n":"noAutoTupling","t":"noAutoTupling","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$strictEquality$.html#","e":false,"i":"","n":"strictEquality","t":"strictEquality","d":"scala.language","k":"object","x":""},
{"l":"api/scala/runtime/stdLibPatches/language$$unsafeNulls$.html#","e":false,"i":"","n":"unsafeNulls","t":"unsafeNulls","d":"scala.language","k":"object","x":""},
{"l":"api/scala/languageFeature$.html#","e":false,"i":"","n":"languageFeature","t":"languageFeature","d":"scala","k":"object","x":""},
{"l":"api/scala/languageFeature$$dynamics$.html#","e":false,"i":"","n":"dynamics","t":"dynamics extends dynamics","d":"scala.languageFeature","k":"object","x":""},
{"l":"api/scala/languageFeature$$dynamics.html#","e":false,"i":"","n":"dynamics","t":"dynamics","d":"scala.languageFeature","k":"trait","x":""},
{"l":"api/scala/languageFeature$$existentials$.html#","e":false,"i":"","n":"existentials","t":"existentials extends existentials","d":"scala.languageFeature","k":"object","x":""},
{"l":"api/scala/languageFeature$$existentials.html#","e":false,"i":"","n":"existentials","t":"existentials","d":"scala.languageFeature","k":"trait","x":""},
{"l":"api/scala/languageFeature$$experimental$.html#","e":false,"i":"","n":"experimental","t":"experimental","d":"scala.languageFeature","k":"object","x":""},
{"l":"api/scala/languageFeature$$experimental$$macros$.html#","e":false,"i":"","n":"macros","t":"macros extends macros","d":"scala.languageFeature.experimental","k":"object","x":""},
{"l":"api/scala/languageFeature$$experimental$$macros.html#","e":false,"i":"","n":"macros","t":"macros","d":"scala.languageFeature.experimental","k":"trait","x":""},
{"l":"api/scala/languageFeature$$higherKinds$.html#","e":false,"i":"","n":"higherKinds","t":"higherKinds extends higherKinds","d":"scala.languageFeature","k":"object","x":""},
{"l":"api/scala/languageFeature$$higherKinds.html#","e":false,"i":"","n":"higherKinds","t":"higherKinds","d":"scala.languageFeature","k":"trait","x":""},
{"l":"api/scala/languageFeature$$implicitConversions$.html#","e":false,"i":"","n":"implicitConversions","t":"implicitConversions extends implicitConversions","d":"scala.languageFeature","k":"object","x":""},
{"l":"api/scala/languageFeature$$implicitConversions.html#","e":false,"i":"","n":"implicitConversions","t":"implicitConversions","d":"scala.languageFeature","k":"trait","x":""},
{"l":"api/scala/languageFeature$$postfixOps$.html#","e":false,"i":"","n":"postfixOps","t":"postfixOps extends postfixOps","d":"scala.languageFeature","k":"object","x":""},
{"l":"api/scala/languageFeature$$postfixOps.html#","e":false,"i":"","n":"postfixOps","t":"postfixOps","d":"scala.languageFeature","k":"trait","x":""},
{"l":"api/scala/languageFeature$$reflectiveCalls$.html#","e":false,"i":"","n":"reflectiveCalls","t":"reflectiveCalls extends reflectiveCalls","d":"scala.languageFeature","k":"object","x":""},
{"l":"api/scala/languageFeature$$reflectiveCalls.html#","e":false,"i":"","n":"reflectiveCalls","t":"reflectiveCalls","d":"scala.languageFeature","k":"trait","x":""},
{"l":"api/scala/main.html#","e":false,"i":"","n":"main","t":"main extends Annotation","d":"scala","k":"class","x":""},
{"l":"api/scala/native.html#","e":false,"i":"","n":"native","t":"native extends StaticAnnotation","d":"scala","k":"class","x":"Marker for native methods."},
{"l":"api/scala/noinline.html#","e":false,"i":"","n":"noinline","t":"noinline extends StaticAnnotation","d":"scala","k":"class","x":"An annotation for methods that the optimizer should not inline."},
{"l":"api/scala/specialized.html#","e":false,"i":"","n":"specialized","t":"specialized(group: SpecializedGroup) extends StaticAnnotation","d":"scala","k":"class","x":"Annotate type parameters on which code should be automatically\nspecialized. For example:"},
{"l":"api/scala/specialized.html#<init>-fffff656","e":false,"i":"","n":"this","t":"this(types: Specializable*)","d":"scala.specialized","k":"def","x":""},
{"l":"api/scala/specialized.html#<init>-521","e":false,"i":"","n":"this","t":"this()","d":"scala.specialized","k":"def","x":""},
{"l":"api/scala/throws.html#","e":false,"i":"","n":"throws","t":"throws[T <: Throwable](cause: String) extends StaticAnnotation","d":"scala","k":"class","x":"Annotation for specifying the exceptions thrown by a method.\nFor example:"},
{"l":"api/scala/throws.html#<init>-3c8","e":false,"i":"","n":"this","t":"this(clazz: Class[T])","d":"scala.throws","k":"def","x":""},
{"l":"api/scala/transient.html#","e":false,"i":"","n":"transient","t":"transient extends StaticAnnotation","d":"scala","k":"class","x":""},
{"l":"api/scala/unchecked.html#","e":false,"i":"","n":"unchecked","t":"unchecked extends Annotation","d":"scala","k":"class","x":"An annotation to designate that the annotated entity\nshould not be considered for additional compiler checks.\nSpecific applications include annotating the subject of\na match expression to suppress exhaustiveness and reachability warnings, and\nannotating a type argument in a match case to suppress\nunchecked warnings."},
{"l":"api/scala/unsafeExceptions$.html#","e":false,"i":"","n":"unsafeExceptions","t":"unsafeExceptions","d":"scala","k":"object","x":""},
{"l":"api/scala/unsafeExceptions$.html#canThrowAny-0","e":false,"i":"","n":"canThrowAny","t":"canThrowAny: CanThrow[Exception]","d":"scala.unsafeExceptions","k":"given","x":""},
{"l":"api/scala/volatile.html#","e":false,"i":"","n":"volatile","t":"volatile extends StaticAnnotation","d":"scala","k":"class","x":""},
{"l":"index.html#","e":false,"i":"","n":"Scala 3","t":"Scala 3","d":"","k":"static","x":""},
{"l":"docs/reference/index.html#","e":false,"i":"","n":"Reference","t":"Reference","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/index.html#","e":false,"i":"","n":"New Types","t":"New Types","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/intersection-types.html#","e":false,"i":"","n":"Intersection Types","t":"Intersection Types","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/intersection-types-spec.html#","e":false,"i":"","n":"Intersection Types - More Details","t":"Intersection Types - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/union-types.html#","e":false,"i":"","n":"Union Types","t":"Union Types","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/union-types-spec.html#","e":false,"i":"","n":"Union Types - More Details","t":"Union Types - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/type-lambdas.html#","e":false,"i":"","n":"Type Lambdas","t":"Type Lambdas","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/type-lambdas-spec.html#","e":false,"i":"","n":"Type Lambdas - More Details","t":"Type Lambdas - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/match-types.html#","e":false,"i":"","n":"Match Types","t":"Match Types","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/dependent-function-types.html#","e":false,"i":"","n":"Dependent Function Types","t":"Dependent Function Types","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/dependent-function-types-spec.html#","e":false,"i":"","n":"Dependent Function Types - More Details","t":"Dependent Function Types - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/new-types/polymorphic-function-types.html#","e":false,"i":"","n":"Polymorphic Function Types","t":"Polymorphic Function Types","d":"","k":"static","x":""},
{"l":"docs/reference/enums/index.html#","e":false,"i":"","n":"Enums","t":"Enums","d":"","k":"static","x":""},
{"l":"docs/reference/enums/enums.html#","e":false,"i":"","n":"Enumerations","t":"Enumerations","d":"","k":"static","x":""},
{"l":"docs/reference/enums/adts.html#","e":false,"i":"","n":"Algebraic Data Types","t":"Algebraic Data Types","d":"","k":"static","x":""},
{"l":"docs/reference/enums/desugarEnums.html#","e":false,"i":"","n":"Translation of Enums and ADTs","t":"Translation of Enums and ADTs","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/index.html#","e":false,"i":"","n":"Contextual Abstractions","t":"Contextual Abstractions","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/givens.html#","e":false,"i":"","n":"Given Instances","t":"Given Instances","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/using-clauses.html#","e":false,"i":"","n":"Using Clauses","t":"Using Clauses","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/context-bounds.html#","e":false,"i":"","n":"Context Bounds","t":"Context Bounds","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/deferred-givens.html#","e":false,"i":"","n":"Deferred Givens","t":"Deferred Givens","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/given-imports.html#","e":false,"i":"","n":"Importing Givens","t":"Importing Givens","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/more-givens.html#","e":false,"i":"","n":"Other Forms Of Givens","t":"Other Forms Of Givens","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/previous-givens.html#","e":false,"i":"","n":"Previous Given Syntax","t":"Previous Given Syntax","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/extension-methods.html#","e":false,"i":"","n":"Extension Methods","t":"Extension Methods","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/right-associative-extension-methods.html#","e":false,"i":"","n":"Right-Associative Extension Methods: Details","t":"Right-Associative Extension Methods: Details","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/type-classes.html#","e":false,"i":"","n":"Implementing Type classes","t":"Implementing Type classes","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/derivation.html#","e":false,"i":"","n":"Type Class Derivation","t":"Type Class Derivation","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/derivation-macro.html#","e":false,"i":"","n":"How to write a type class `derived` method using macros","t":"How to write a type class `derived` method using macros","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/multiversal-equality.html#","e":false,"i":"","n":"Multiversal Equality","t":"Multiversal Equality","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/context-functions.html#","e":false,"i":"","n":"Context Functions","t":"Context Functions","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/context-functions-spec.html#","e":false,"i":"","n":"Context Functions - More Details","t":"Context Functions - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/conversions.html#","e":false,"i":"","n":"Implicit Conversions","t":"Implicit Conversions","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/by-name-context-parameters.html#","e":false,"i":"","n":"By-Name Context Parameters","t":"By-Name Context Parameters","d":"","k":"static","x":""},
{"l":"docs/reference/contextual/relationship-implicits.html#","e":false,"i":"","n":"Relationship with Scala 2 Implicits","t":"Relationship with Scala 2 Implicits","d":"","k":"static","x":""},
{"l":"docs/reference/metaprogramming/index.html#","e":false,"i":"","n":"Metaprogramming","t":"Metaprogramming","d":"","k":"static","x":""},
{"l":"docs/reference/metaprogramming/inline.html#","e":false,"i":"","n":"Inline","t":"Inline","d":"","k":"static","x":""},
{"l":"docs/reference/metaprogramming/compiletime-ops.html#","e":false,"i":"","n":"Compile-time operations","t":"Compile-time operations","d":"","k":"static","x":""},
{"l":"docs/reference/metaprogramming/macros.html#","e":false,"i":"","n":"Macros","t":"Macros","d":"","k":"static","x":""},
{"l":"docs/reference/metaprogramming/macros-spec.html#","e":false,"i":"","n":"Macros Spec","t":"Macros Spec","d":"","k":"static","x":""},
{"l":"docs/reference/metaprogramming/simple-smp.html#","e":false,"i":"","n":"The Meta-theory of Symmetric Metaprogramming","t":"The Meta-theory of Symmetric Metaprogramming","d":"","k":"static","x":""},
{"l":"docs/reference/metaprogramming/staging.html#","e":false,"i":"","n":"Run-Time Multi-Stage Programming","t":"Run-Time Multi-Stage Programming","d":"","k":"static","x":""},
{"l":"docs/reference/metaprogramming/reflection.html#","e":false,"i":"","n":"Reflection","t":"Reflection","d":"","k":"static","x":""},
{"l":"docs/reference/metaprogramming/tasty-inspect.html#","e":false,"i":"","n":"TASTy Inspection","t":"TASTy Inspection","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/index.html#","e":false,"i":"","n":"Other New Features","t":"Other New Features","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/trait-parameters.html#","e":false,"i":"","n":"Trait Parameters","t":"Trait Parameters","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/transparent-traits.html#","e":false,"i":"","n":"Transparent Traits and Classes","t":"Transparent Traits and Classes","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/creator-applications.html#","e":false,"i":"","n":"Universal Apply Methods","t":"Universal Apply Methods","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/export.html#","e":false,"i":"","n":"Export Clauses","t":"Export Clauses","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/opaques.html#","e":false,"i":"","n":"Opaque Type Aliases","t":"Opaque Type Aliases","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/opaques-details.html#","e":false,"i":"","n":"Opaque Type Aliases: More Details","t":"Opaque Type Aliases: More Details","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/named-tuples.html#","e":false,"i":"","n":"Named Tuples","t":"Named Tuples","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/open-classes.html#","e":false,"i":"","n":"Open Classes","t":"Open Classes","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/parameter-untupling.html#","e":false,"i":"","n":"Parameter Untupling","t":"Parameter Untupling","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/parameter-untupling-spec.html#","e":false,"i":"","n":"Parameter Untupling - More Details","t":"Parameter Untupling - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/kind-polymorphism.html#","e":false,"i":"","n":"Kind Polymorphism","t":"Kind Polymorphism","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/matchable.html#","e":false,"i":"","n":"The Matchable Trait","t":"The Matchable Trait","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/threadUnsafe-annotation.html#","e":false,"i":"","n":"The @threadUnsafe annotation","t":"The @threadUnsafe annotation","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/targetName.html#","e":false,"i":"","n":"The @targetName annotation","t":"The @targetName annotation","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/control-syntax.html#","e":false,"i":"","n":"New Control Syntax","t":"New Control Syntax","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/indentation.html#","e":false,"i":"","n":"Optional Braces","t":"Optional Braces","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/safe-initialization.html#","e":false,"i":"","n":"Safe Initialization","t":"Safe Initialization","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/type-test.html#","e":false,"i":"","n":"TypeTest","t":"TypeTest","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/experimental-defs.html#","e":false,"i":"","n":"Experimental Definitions","t":"Experimental Definitions","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/preview-defs.html#","e":false,"i":"","n":"Preview Definitions","t":"Preview Definitions","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/binary-literals.html#","e":false,"i":"","n":"Binary Integer Literals","t":"Binary Integer Literals","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/toplevel-definitions.html#","e":false,"i":"","n":"Toplevel Definitions","t":"Toplevel Definitions","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/better-fors.html#","e":false,"i":"","n":"Better fors","t":"Better fors","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/runtimeChecked.html#","e":false,"i":"","n":"The runtimeChecked method","t":"The runtimeChecked method","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/index.html#","e":false,"i":"","n":"Other Changed Features","t":"Other Changed Features","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/numeric-literals.html#","e":false,"i":"","n":"Numeric Literals","t":"Numeric Literals","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/structural-types.html#","e":false,"i":"","n":"Programmatic Structural Types","t":"Programmatic Structural Types","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/structural-types-spec.html#","e":false,"i":"","n":"Programmatic Structural Types - More Details","t":"Programmatic Structural Types - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/operators.html#","e":false,"i":"","n":"Rules for Operators","t":"Rules for Operators","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/wildcards.html#","e":false,"i":"","n":"Wildcard Arguments in Types","t":"Wildcard Arguments in Types","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/imports.html#","e":false,"i":"","n":"Imports","t":"Imports","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/type-inference.html#","e":false,"i":"","n":"Changes in Type Inference","t":"Changes in Type Inference","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/implicit-resolution.html#","e":false,"i":"","n":"Changes in Implicit Resolution","t":"Changes in Implicit Resolution","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/implicit-conversions.html#","e":false,"i":"","n":"Implicit Conversions","t":"Implicit Conversions","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/implicit-conversions-spec.html#","e":false,"i":"","n":"Implicit Conversions - More Details","t":"Implicit Conversions - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/overload-resolution.html#","e":false,"i":"","n":"Changes in Overload Resolution","t":"Changes in Overload Resolution","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/match-syntax.html#","e":false,"i":"","n":"Match Expressions","t":"Match Expressions","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/vararg-splices.html#","e":false,"i":"","n":"Vararg Splices","t":"Vararg Splices","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/pattern-bindings.html#","e":false,"i":"","n":"Pattern Bindings","t":"Pattern Bindings","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/pattern-matching.html#","e":false,"i":"","n":"Option-less pattern matching","t":"Option-less pattern matching","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/eta-expansion.html#","e":false,"i":"","n":"Automatic Eta Expansion","t":"Automatic Eta Expansion","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/eta-expansion-spec.html#","e":false,"i":"","n":"Automatic Eta Expansion - More Details","t":"Automatic Eta Expansion - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/compiler-plugins.html#","e":false,"i":"","n":"Changes in Compiler Plugins","t":"Changes in Compiler Plugins","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/lazy-vals-init.html#","e":false,"i":"","n":"Lazy Vals Initialization","t":"Lazy Vals Initialization","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/main-functions.html#","e":false,"i":"","n":"Main Methods","t":"Main Methods","d":"","k":"static","x":""},
{"l":"docs/reference/changed-features/interpolation-escapes.html#","e":false,"i":"","n":"Escapes in interpolations","t":"Escapes in interpolations","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/index.html#","e":false,"i":"","n":"Dropped Features","t":"Dropped Features","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/delayed-init.html#","e":false,"i":"","n":"Dropped: DelayedInit","t":"Dropped: DelayedInit","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/macros.html#","e":false,"i":"","n":"Dropped: Scala 2 Macros","t":"Dropped: Scala 2 Macros","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/existential-types.html#","e":false,"i":"","n":"Dropped: Existential Types","t":"Dropped: Existential Types","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/type-projection.html#","e":false,"i":"","n":"Dropped: General Type Projection","t":"Dropped: General Type Projection","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/do-while.html#","e":false,"i":"","n":"Dropped: Do-While","t":"Dropped: Do-While","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/procedure-syntax.html#","e":false,"i":"","n":"Dropped: Procedure Syntax","t":"Dropped: Procedure Syntax","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/early-initializers.html#","e":false,"i":"","n":"Dropped: Early Initializers","t":"Dropped: Early Initializers","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/class-shadowing.html#","e":false,"i":"","n":"Dropped: Class Shadowing","t":"Dropped: Class Shadowing","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/class-shadowing-spec.html#","e":false,"i":"","n":"Dropped: Class Shadowing - More Details","t":"Dropped: Class Shadowing - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/limit22.html#","e":false,"i":"","n":"Dropped: Limit 22","t":"Dropped: Limit 22","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/xml.html#","e":false,"i":"","n":"Dropped: XML Literals","t":"Dropped: XML Literals","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/symlits.html#","e":false,"i":"","n":"Dropped: Symbol Literals","t":"Dropped: Symbol Literals","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/auto-apply.html#","e":false,"i":"","n":"Dropped: Auto-Application","t":"Dropped: Auto-Application","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/weak-conformance.html#","e":false,"i":"","n":"Dropped: Weak Conformance","t":"Dropped: Weak Conformance","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/weak-conformance-spec.html#","e":false,"i":"","n":"Dropped: Weak Conformance - More Details","t":"Dropped: Weak Conformance - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/nonlocal-returns.html#","e":false,"i":"","n":"Deprecated: Nonlocal Returns","t":"Deprecated: Nonlocal Returns","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/this-qualifier.html#","e":false,"i":"","n":"Dropped: private[this] and protected[this]","t":"Dropped: private[this] and protected[this]","d":"","k":"static","x":""},
{"l":"docs/reference/dropped-features/wildcard-init.html#","e":false,"i":"","n":"Dropped: Wildcard Initializer","t":"Dropped: Wildcard Initializer","d":"","k":"static","x":""},
{"l":"docs/reference/preview/index.html#","e":false,"i":"","n":"Preview","t":"Preview","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/index.html#","e":false,"i":"","n":"Experimental","t":"Experimental","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/fewer-braces.html#","e":false,"i":"","n":"Fewer Braces","t":"Fewer Braces","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/canthrow.html#","e":false,"i":"","n":"CanThrow Capabilities","t":"CanThrow Capabilities","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/erased-defs.html#","e":false,"i":"","n":"Erased Definitions","t":"Erased Definitions","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/erased-defs-spec.html#","e":false,"i":"","n":"Erased Definitions - More Details","t":"Erased Definitions - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/named-typeargs.html#","e":false,"i":"","n":"Named Type Arguments","t":"Named Type Arguments","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/named-typeargs-spec.html#","e":false,"i":"","n":"Named Type Arguments - More Details","t":"Named Type Arguments - More Details","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/numeric-literals.html#","e":false,"i":"","n":"Numeric Literals","t":"Numeric Literals","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/explicit-nulls.html#","e":false,"i":"","n":"Explicit Nulls","t":"Explicit Nulls","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/main-annotation.html#","e":false,"i":"","n":"MainAnnotation","t":"MainAnnotation","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/into.html#","e":false,"i":"","n":"The `into` Type and Modifier","t":"The `into` Type and Modifier","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/cc.html#","e":false,"i":"","n":"Capture Checking","t":"Capture Checking","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/cc-advanced.html#","e":false,"i":"","n":"Capture Checking -- Advanced Use Cases","t":"Capture Checking -- Advanced Use Cases","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/purefuns.html#","e":false,"i":"","n":"Pure Function Syntax","t":"Pure Function Syntax","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/tupled-function.html#","e":false,"i":"","n":"Tupled Function","t":"Tupled Function","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/modularity.html#","e":false,"i":"","n":"Modularity Improvements","t":"Modularity Improvements","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/typeclasses.html#","e":false,"i":"","n":"Better Support for Type Classes","t":"Better Support for Type Classes","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/unrolled-defs.html#","e":false,"i":"","n":"Automatic Parameter Unrolling","t":"Automatic Parameter Unrolling","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/package-object-values.html#","e":false,"i":"","n":"Reference-able Package Objects","t":"Reference-able Package Objects","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/quoted-patterns-with-polymorphic-functions.html#","e":false,"i":"","n":"Quoted Patterns with Polymorphic Functions","t":"Quoted Patterns with Polymorphic Functions","d":"","k":"static","x":""},
{"l":"docs/reference/syntax.html#","e":false,"i":"","n":"Scala 3 Syntax Summary","t":"Scala 3 Syntax Summary","d":"","k":"static","x":""},
{"l":"docs/reference/language-versions/index.html#","e":false,"i":"","n":"Language Versions","t":"Language Versions","d":"","k":"static","x":""},
{"l":"docs/reference/language-versions/source-compatibility.html#","e":false,"i":"","n":"Source Compatibility","t":"Source Compatibility","d":"","k":"static","x":""},
{"l":"docs/reference/language-versions/binary-compatibility.html#","e":false,"i":"","n":"Binary Compatibility","t":"Binary Compatibility","d":"","k":"static","x":""},
{"l":"docs/reference/soft-modifier.html#","e":false,"i":"","n":"Soft Keywords","t":"Soft Keywords","d":"","k":"static","x":""},
{"l":"docs/reference/features-classification.html#","e":false,"i":"","n":"A Classification of Proposed Language Features","t":"A Classification of Proposed Language Features","d":"","k":"static","x":""},
{"l":"docs/contributing/index.html#","e":false,"i":"","n":"Contributing","t":"Contributing","d":"","k":"static","x":""},
{"l":"docs/contributing/getting-started.html#","e":false,"i":"","n":"Getting Started","t":"Getting Started","d":"","k":"static","x":""},
{"l":"docs/contributing/setting-up-your-ide.html#","e":false,"i":"","n":"Setting up your IDE","t":"Setting up your IDE","d":"","k":"static","x":""},
{"l":"docs/contributing/diagnosing-your-issue/index.html#","e":false,"i":"","n":"Diagnosing your issue","t":"Diagnosing your issue","d":"","k":"static","x":""},
{"l":"docs/contributing/diagnosing-your-issue/reproduce.html#","e":false,"i":"","n":"Reproducing an Issue","t":"Reproducing an Issue","d":"","k":"static","x":""},
{"l":"docs/contributing/diagnosing-your-issue/cause.html#","e":false,"i":"","n":"Finding the Cause of an Issue","t":"Finding the Cause of an Issue","d":"","k":"static","x":""},
{"l":"docs/contributing/diagnosing-your-issue/areas.html#","e":false,"i":"","n":"Common Issue Locations","t":"Common Issue Locations","d":"","k":"static","x":""},
{"l":"docs/contributing/debugging-the-compiler/index.html#","e":false,"i":"","n":"Debugging the Compiler","t":"Debugging the Compiler","d":"","k":"static","x":""},
{"l":"docs/contributing/debugging-the-compiler/ide-debugging.html#","e":false,"i":"","n":"Debugging with your IDE","t":"Debugging with your IDE","d":"","k":"static","x":""},
{"l":"docs/contributing/debugging-the-compiler/inspection.html#","e":false,"i":"","n":"How to Inspect Values","t":"How to Inspect Values","d":"","k":"static","x":""},
{"l":"docs/contributing/debugging-the-compiler/other-debugging.html#","e":false,"i":"","n":"Other Debugging Techniques","t":"Other Debugging Techniques","d":"","k":"static","x":""},
{"l":"docs/contributing/testing.html#","e":false,"i":"","n":"Testing Your Changes","t":"Testing Your Changes","d":"","k":"static","x":""},
{"l":"docs/contributing/scaladoc.html#","e":false,"i":"","n":"Scaladoc","t":"Scaladoc","d":"","k":"static","x":""},
{"l":"docs/contributing/community-build.html#","e":false,"i":"","n":"Community Build","t":"Community Build","d":"","k":"static","x":""},
{"l":"docs/contributing/sending-in-a-pr.html#","e":false,"i":"","n":"Sending in a pull request","t":"Sending in a pull request","d":"","k":"static","x":""},
{"l":"docs/contributing/cheatsheet.html#","e":false,"i":"","n":"Command Cheatsheet","t":"Command Cheatsheet","d":"","k":"static","x":""},
{"l":"docs/contributing/procedures/index.html#","e":false,"i":"","n":"Procedures","t":"Procedures","d":"","k":"static","x":""},
{"l":"docs/contributing/procedures/release.html#","e":false,"i":"","n":"Release Procedure","t":"Release Procedure","d":"","k":"static","x":""},
{"l":"docs/contributing/procedures/vulpix.html#","e":false,"i":"","n":"Test Vulpix Framework","t":"Test Vulpix Framework","d":"","k":"static","x":""},
{"l":"docs/contributing/architecture/index.html#","e":false,"i":"","n":"High Level Architecture","t":"High Level Architecture","d":"","k":"static","x":""},
{"l":"docs/contributing/architecture/lifecycle.html#","e":false,"i":"","n":"Compiler Overview","t":"Compiler Overview","d":"","k":"static","x":""},
{"l":"docs/contributing/architecture/context.html#","e":false,"i":"","n":"Contexts","t":"Contexts","d":"","k":"static","x":""},
{"l":"docs/contributing/architecture/phases.html#","e":false,"i":"","n":"Compiler Phases","t":"Compiler Phases","d":"","k":"static","x":""},
{"l":"docs/contributing/architecture/types.html#","e":false,"i":"","n":"Compiler Types","t":"Compiler Types","d":"","k":"static","x":""},
{"l":"docs/contributing/architecture/time.html#","e":false,"i":"","n":"Time in the Compiler","t":"Time in the Compiler","d":"","k":"static","x":""},
{"l":"docs/contributing/architecture/symbols.html#","e":false,"i":"","n":"Symbols","t":"Symbols","d":"","k":"static","x":""},
{"l":"docs/internals/index.html#","e":false,"i":"","n":"Internals","t":"Internals","d":"","k":"static","x":""},
{"l":"docs/internals/backend.html#","e":false,"i":"","n":"Backend Internals","t":"Backend Internals","d":"","k":"static","x":""},
{"l":"docs/internals/classpaths.html#","e":false,"i":"","n":"Classpaths","t":"Classpaths","d":"","k":"static","x":""},
{"l":"docs/internals/contexts.html#","e":false,"i":"","n":"Contexts","t":"Contexts","d":"","k":"static","x":""},
{"l":"docs/internals/dotc-scalac.html#","e":false,"i":"","n":"Differences between Scalac and Dotty","t":"Differences between Scalac and Dotty","d":"","k":"static","x":""},
{"l":"docs/internals/higher-kinded-v2.html#","e":false,"i":"","n":"Higher-Kinded Types in Dotty","t":"Higher-Kinded Types in Dotty","d":"","k":"static","x":""},
{"l":"docs/internals/overall-structure.html#","e":false,"i":"","n":"Dotty Overall Structure","t":"Dotty Overall Structure","d":"","k":"static","x":""},
{"l":"docs/internals/explicit-nulls.html#","e":false,"i":"","n":"Explicit Nulls","t":"Explicit Nulls","d":"","k":"static","x":""},
{"l":"docs/internals/periods.html#","e":false,"i":"","n":"Dotc's concept of time","t":"Dotc's concept of time","d":"","k":"static","x":""},
{"l":"docs/internals/syntax.html#","e":false,"i":"","n":"Scala 3 Syntax Summary","t":"Scala 3 Syntax Summary","d":"","k":"static","x":""},
{"l":"docs/internals/type-system.html#","e":false,"i":"","n":"Type System","t":"Type System","d":"","k":"static","x":""},
{"l":"docs/internals/dotty-internals-1-notes.html#","e":false,"i":"","n":"Dotty Internals 1: Trees & Symbols (Meeting Notes)","t":"Dotty Internals 1: Trees & Symbols (Meeting Notes)","d":"","k":"static","x":""},
{"l":"docs/internals/debug-macros.html#","e":false,"i":"","n":"Debug Macros","t":"Debug Macros","d":"","k":"static","x":""},
{"l":"docs/internals/gadts.html#","e":false,"i":"","n":"GADTs - Broad overview","t":"GADTs - Broad overview","d":"","k":"static","x":""},
{"l":"docs/internals/coverage.html#","e":false,"i":"","n":"Code Coverage for Scala 3","t":"Code Coverage for Scala 3","d":"","k":"static","x":""},
{"l":"docs/internals/best-effort-compilation.html#","e":false,"i":"","n":"Best Effort Compilation","t":"Best Effort Compilation","d":"","k":"static","x":""},
{"l":"release-notes-0.1.2.html#","e":false,"i":"","n":"0.1.2 release notes","t":"0.1.2 release notes","d":"","k":"static","x":""},
{"l":"blog/index.html#","e":false,"i":"","n":"Blog (archive)","t":"Blog (archive)","d":"","k":"static","x":""},
{"l":"blog/2021/06/25/scala301-rc2.html#","e":false,"i":"","n":"Scala 3.0.1-RC2 – backports of critical bugfixes","t":"Scala 3.0.1-RC2 – backports of critical bugfixes","d":"","k":"static","x":""},
{"l":"blog/2021/06/07/scala3.0.1-rc1-release.html#","e":false,"i":"","n":"Scala 3.0.1-RC1 – further stabilising the compiler","t":"Scala 3.0.1-RC1 – further stabilising the compiler","d":"","k":"static","x":""},
{"l":"blog/2021/04/21/scala3-rc3.html#","e":false,"i":"","n":"Scala 3.0.0-RC3 – bug fixes for 3.0.0 stable","t":"Scala 3.0.0-RC3 – bug fixes for 3.0.0 stable","d":"","k":"static","x":""},
{"l":"blog/2021/03/31/scala3-rc2.html#","e":false,"i":"","n":"Scala 3.0.0-RC2 – getting ready for 3.0.0","t":"Scala 3.0.0-RC2 – getting ready for 3.0.0","d":"","k":"static","x":""},
{"l":"blog/2021/02/17/scala3-rc1.html#","e":false,"i":"","n":"Scala 3.0.0-RC1 – first release candidate is here","t":"Scala 3.0.0-RC1 – first release candidate is here","d":"","k":"static","x":""},
{"l":"blog/2020/12/18/scala3-m3.html#","e":false,"i":"","n":"Scala 3.0.0-M3: developer's preview before RC1","t":"Scala 3.0.0-M3: developer's preview before RC1","d":"","k":"static","x":""},
{"l":"blog/2020/11/09/scala3-m1.html#","e":false,"i":"","n":"Scala 3.0.0-M1 is here","t":"Scala 3.0.0-M1 is here","d":"","k":"static","x":""},
{"l":"blog/2020/09/21/naming-schema-change.html#","e":false,"i":"","n":"Dotty becomes Scala 3","t":"Dotty becomes Scala 3","d":"","k":"static","x":""},
{"l":"blog/2020/08/31/27th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.27.0-RC1 - ScalaJS, performance, stability","t":"Announcing Dotty 0.27.0-RC1 - ScalaJS, performance, stability","d":"","k":"static","x":""},
{"l":"blog/2020/07/27/26th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.26.0-RC1 - unified extension methods and more","t":"Announcing Dotty 0.26.0-RC1 - unified extension methods and more","d":"","k":"static","x":""},
{"l":"blog/2020/06/22/25th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.25.0-RC2 - speed-up of givens and change in the tuple API","t":"Announcing Dotty 0.25.0-RC2 - speed-up of givens and change in the tuple API","d":"","k":"static","x":""},
{"l":"blog/2020/04/29/24th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.24.0-RC1 - 2.13.2 standard library, better error messages and more","t":"Announcing Dotty 0.24.0-RC1 - 2.13.2 standard library, better error messages and more","d":"","k":"static","x":""},
{"l":"blog/2020/03/18/23rd-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.23.0-RC1 - safe initialization checks, type-level bitwise operations and more","t":"Announcing Dotty 0.23.0-RC1 - safe initialization checks, type-level bitwise operations and more","d":"","k":"static","x":""},
{"l":"blog/2020/02/05/22nd-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.22.0-RC1 - syntactic enhancements, type-level arithmetic and more","t":"Announcing Dotty 0.22.0-RC1 - syntactic enhancements, type-level arithmetic and more","d":"","k":"static","x":""},
{"l":"blog/2019/12/20/21th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.21.0-RC1 - explicit nulls, new syntax for `match` and conditional givens, and more","t":"Announcing Dotty 0.21.0-RC1 - explicit nulls, new syntax for `match` and conditional givens, and more","d":"","k":"static","x":""},
{"l":"blog/2019/11/04/20th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.20.0-RC1 – `with` starting indentation blocks, inline given specializations and more","t":"Announcing Dotty 0.20.0-RC1 – `with` starting indentation blocks, inline given specializations and more","d":"","k":"static","x":""},
{"l":"blog/2019/09/23/19th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.19.0-RC1 – further refinements of the syntax and the migration to 2.13.1 standard library","t":"Announcing Dotty 0.19.0-RC1 – further refinements of the syntax and the migration to 2.13.1 standard library","d":"","k":"static","x":""},
{"l":"blog/2019/08/30/18th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.18.1-RC1 – switch to the 2.13 standard library, indentation-based syntax and other experiments","t":"Announcing Dotty 0.18.1-RC1 – switch to the 2.13 standard library, indentation-based syntax and other experiments","d":"","k":"static","x":""},
{"l":"blog/2019/07/25/17th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.17.0-RC1 – new implicit scoping rules and more","t":"Announcing Dotty 0.17.0-RC1 – new implicit scoping rules and more","d":"","k":"static","x":""},
{"l":"blog/2019/06/11/16th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.16.0-RC3 – the Scala Days 2019 Release","t":"Announcing Dotty 0.16.0-RC3 – the Scala Days 2019 Release","d":"","k":"static","x":""},
{"l":"blog/2019/05/23/15th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.15.0-RC1 – the fully bootstrapped compiler","t":"Announcing Dotty 0.15.0-RC1 – the fully bootstrapped compiler","d":"","k":"static","x":""},
{"l":"blog/2019/04/15/14th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.14.0-RC1 with export, immutable arrays, creator applications and more","t":"Announcing Dotty 0.14.0-RC1 with export, immutable arrays, creator applications and more","d":"","k":"static","x":""},
{"l":"blog/2019/03/05/13th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.13.0-RC1 with Spark support, top level definitions and redesigned implicits","t":"Announcing Dotty 0.13.0-RC1 with Spark support, top level definitions and redesigned implicits","d":"","k":"static","x":""},
{"l":"blog/2019/01/21/12th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.12.0-RC1","t":"Announcing Dotty 0.12.0-RC1","d":"","k":"static","x":""},
{"l":"blog/2018/11/30/11th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.11.0-RC1","t":"Announcing Dotty 0.11.0-RC1","d":"","k":"static","x":""},
{"l":"blog/2018/10/10/10th-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.10.0-RC1","t":"Announcing Dotty 0.10.0-RC1","d":"","k":"static","x":""},
{"l":"blog/2018/07/06/ninth-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.9.0-RC1","t":"Announcing Dotty 0.9.0-RC1","d":"","k":"static","x":""},
{"l":"blog/2018/04/27/eighth-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.7.0 and 0.8.0-RC1","t":"Announcing Dotty 0.7.0 and 0.8.0-RC1","d":"","k":"static","x":""},
{"l":"blog/2018/03/05/seventh-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.6.0 and 0.7.0-RC1","t":"Announcing Dotty 0.6.0 and 0.7.0-RC1","d":"","k":"static","x":""},
{"l":"blog/2017/12/01/fifth-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.5.0-RC1","t":"Announcing Dotty 0.5.0-RC1","d":"","k":"static","x":""},
{"l":"blog/2017/10/16/fourth-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.4.0-RC1","t":"Announcing Dotty 0.4.0-RC1","d":"","k":"static","x":""},
{"l":"blog/2017/09/07/third-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.3.0-RC2","t":"Announcing Dotty 0.3.0-RC2","d":"","k":"static","x":""},
{"l":"blog/2017/07/12/second-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.2.0-RC1, with new optimizations, improved stability and IDE support","t":"Announcing Dotty 0.2.0-RC1, with new optimizations, improved stability and IDE support","d":"","k":"static","x":""},
{"l":"blog/2017/05/31/first-dotty-milestone-release.html#","e":false,"i":"","n":"Announcing Dotty 0.1.2-RC1, a major step towards Scala 3","t":"Announcing Dotty 0.1.2-RC1, a major step towards Scala 3","d":"","k":"static","x":""},
{"l":"blog/2016/12/05/implicit-function-types.html#","e":false,"i":"","n":"Implicit Function Types","t":"Implicit Function Types","d":"","k":"static","x":""},
{"l":"blog/2016/05/05/multiversal-equality.html#","e":false,"i":"","n":"Multiversal Equality for Scala","t":"Multiversal Equality for Scala","d":"","k":"static","x":""},
{"l":"blog/2016/02/17/scaling-dot-soundness.html#","e":false,"i":"","n":"Scaling DOT to Scala - Soundness","t":"Scaling DOT to Scala - Soundness","d":"","k":"static","x":""},
{"l":"blog/2016/02/03/essence-of-scala.html#","e":false,"i":"","n":"The Essence of Scala","t":"The Essence of Scala","d":"","k":"static","x":""},
{"l":"blog/2016/01/02/new-year-resolutions.html#","e":false,"i":"","n":"New Year Resolutions","t":"New Year Resolutions","d":"","k":"static","x":""},
{"l":"blog/2015/10/23/dotty-compiler-bootstraps.html#","e":false,"i":"","n":"We got liftoff!","t":"We got liftoff!","d":"","k":"static","x":""},
{"l":"docs/index.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/reference/overview.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/reference/preview/overview.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/overview.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/named-typeargs.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/reference/other-new-features/into.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/reference/experimental/package-object-values.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/contributing/workflow.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/contributing/workflow/reproduce.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/contributing/workflow/cause.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/contributing/workflow/areas.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/contributing/workflow/debugging.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/contributing/workflow/inspection.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/contributing/issues/debugging.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/contributing/workflow/testing.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/contributing/workflow/checklist.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""},
{"l":"docs/release-notes/0.1.2.html#","e":false,"i":"","n":"redirect","t":"redirect","d":"","k":"static","x":""}];